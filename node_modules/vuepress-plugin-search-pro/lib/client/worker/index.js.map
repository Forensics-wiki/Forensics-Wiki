{"version":3,"file":"index.js","sources":["../../../src/client/worker/matchContent.ts","../../../src/client/worker/utils.ts","../../../src/client/worker/result.ts","../../../src/client/worker/suggestion.ts","../../../src/client/worker/index.ts"],"sourcesContent":["import type { Word } from \"../typings/index.js\";\n\nconst MAX_LENGTH = 100;\nconst SUFFIX_LENGTH = 20;\n\nexport const getMatchedContent = (\n  content: string,\n  queryString: string,\n): Word[] | null => {\n  const contentLowerCase = content.toLowerCase();\n  const queryStringLowerCase = queryString.toLowerCase();\n  const result: Word[] = [];\n\n  let startIndex = 0;\n  let contentLength = 0;\n\n  const addResult = (content: string, isEnd = false): void => {\n    let text = \"\";\n\n    // a beginning of a long string\n    if (contentLength === 0)\n      text =\n        content.length > SUFFIX_LENGTH\n          ? `… ${content.slice(-SUFFIX_LENGTH)}`\n          : content;\n    // already the last text\n    else if (isEnd)\n      text =\n        // if the string will be longer than maxLength\n        content.length + contentLength > MAX_LENGTH\n          ? `${content.slice(0, MAX_LENGTH - contentLength)}… `\n          : content;\n    // text is at the middle\n    else\n      text =\n        content.length > SUFFIX_LENGTH\n          ? `${content.slice(0, SUFFIX_LENGTH)} … ${content.slice(\n              -SUFFIX_LENGTH,\n            )}`\n          : content;\n\n    if (text) result.push(text);\n    contentLength += text.length;\n\n    if (!isEnd) {\n      result.push([\"mark\", queryString]);\n      contentLength += queryString.length;\n\n      if (contentLength >= MAX_LENGTH) result.push(\" …\");\n    }\n  };\n\n  let matchIndex = contentLowerCase.indexOf(queryStringLowerCase, startIndex);\n\n  if (matchIndex === -1) return null;\n\n  while (matchIndex >= 0) {\n    const endIndex = matchIndex + queryStringLowerCase.length;\n\n    // append content before\n    addResult(content.slice(startIndex, matchIndex));\n\n    startIndex = endIndex;\n\n    if (contentLength > MAX_LENGTH) break;\n\n    matchIndex = contentLowerCase.indexOf(queryStringLowerCase, startIndex);\n  }\n\n  if (contentLength < MAX_LENGTH) addResult(content.slice(startIndex), true);\n\n  return result;\n};\n","import type { SearchOptions } from \"../typings/index.js\";\n\nconst CHINESE_CHARACTERS = /[\\u4e00-\\u9fa5]/g;\n\nexport const getSearchOptions = (\n  searchOptions: SearchOptions = {},\n): SearchOptions => ({\n  fuzzy: 0.2,\n  prefix: true,\n  processTerm: (term): string[] => {\n    const chineseCharacters = term.match(CHINESE_CHARACTERS) || [];\n    const englishTerm = term.replace(CHINESE_CHARACTERS, \"\").toLowerCase();\n\n    return englishTerm\n      ? [englishTerm, ...chineseCharacters]\n      : [...chineseCharacters];\n  },\n  ...searchOptions,\n});\n","import type { MatchInfo, SearchIndex } from \"slimsearch\";\nimport { getStoredFields, search } from \"slimsearch\";\nimport { entries } from \"vuepress-shared/client\";\n\nimport { getMatchedContent } from \"./matchContent.js\";\nimport { getSearchOptions } from \"./utils.js\";\nimport type {\n  CustomFieldIndexItem,\n  IndexItem,\n  PageIndexItem,\n} from \"../../shared/index.js\";\nimport type {\n  HeadingMatchedItem,\n  MatchedItem,\n  SearchOptions,\n  SearchResult,\n  TitleMatchedItem,\n  Word,\n} from \"../typings/index.js\";\n\ndeclare const SEARCH_PRO_SORT_STRATEGY: \"max\" | \"total\";\n\nexport type MiniSearchResult = IndexItem & {\n  terms: string[];\n  score: number;\n  match: MatchInfo;\n};\n\ninterface PageResult {\n  title: string;\n  contents: [result: MatchedItem, score: number][];\n}\n\ninterface ResultMap {\n  [key: string]: PageResult;\n}\n\nconst sortWithTotal = (valueA: PageResult, valueB: PageResult): number =>\n  valueB.contents.reduce((total, [, score]) => total + score, 0) -\n  valueA.contents.reduce((total, [, score]) => total + score, 0);\n\nconst sortWithMax = (valueA: PageResult, valueB: PageResult): number =>\n  Math.max(...valueB.contents.map(([, score]) => score)) -\n  Math.max(...valueA.contents.map(([, score]) => score));\n\nexport const getResults = (\n  query: string,\n  localeIndex: SearchIndex<IndexItem, string>,\n  searchOptions: SearchOptions = {},\n): SearchResult[] => {\n  const resultMap: ResultMap = {};\n\n  const results = search<IndexItem, string, IndexItem>(\n    localeIndex,\n    query,\n    getSearchOptions({\n      boost: {\n        [/** heading */ \"h\"]: 2,\n        [/** text */ \"t\"]: 1,\n        [/** customFields */ \"c\"]: 4,\n      },\n      ...searchOptions,\n    }),\n  );\n\n  results.forEach((result) => {\n    const { id, terms, score } = result;\n    const isCustomField = id.includes(\"@\");\n    const isSection = id.includes(\"#\");\n    const [key, info] = id.split(/[#@]/);\n\n    const { contents } = (resultMap[key] ??= {\n      title: \"\",\n      contents: [],\n    });\n\n    // CustomFieldIndexItem\n    if (isCustomField) {\n      contents.push([\n        {\n          type: \"customField\",\n          key: key,\n          index: info,\n          display: terms\n            .map((term) =>\n              (<CustomFieldIndexItem>result).c.map((field) =>\n                getMatchedContent(field, term),\n              ),\n            )\n            .flat()\n            .filter((item): item is Word[] => item !== null),\n        },\n        score,\n      ]);\n    } else {\n      const headerContent = terms\n        .map((term) => getMatchedContent((<PageIndexItem>result).h, term))\n        .filter((item): item is Word[] => item !== null);\n\n      if (headerContent.length)\n        contents.push([\n          <TitleMatchedItem | HeadingMatchedItem>{\n            type: isSection ? \"heading\" : \"title\",\n            key: key,\n            ...(isSection && { anchor: info }),\n            display: headerContent,\n          },\n          score,\n        ]);\n\n      if (/** text */ \"t\" in result)\n        for (const text of result.t) {\n          const matchedContent = terms\n            .map((term) => getMatchedContent(text, term))\n            .filter((item): item is Word[] => item !== null);\n\n          if (matchedContent.length)\n            contents.push([\n              {\n                type: \"text\",\n                key,\n                ...(isSection && { anchor: info }),\n                display: matchedContent,\n              },\n              score,\n            ]);\n        }\n    }\n  });\n\n  return entries(resultMap)\n    .sort(([, valueA], [, valueB]) =>\n      SEARCH_PRO_SORT_STRATEGY === \"total\"\n        ? sortWithTotal(valueA, valueB)\n        : sortWithMax(valueA, valueB),\n    )\n    .map(([id, { title, contents }]) => {\n      // search to get title\n      if (!title) {\n        const pageIndex = getStoredFields(\n          localeIndex,\n          id,\n        ) as unknown as PageIndexItem;\n\n        if (pageIndex) title = pageIndex.h;\n      }\n\n      return {\n        title,\n        contents: contents.map(([result]) => result),\n      };\n    });\n};\n","import type { SearchIndex } from \"slimsearch\";\nimport { autoSuggest } from \"slimsearch\";\n\nimport { getSearchOptions } from \"./utils.js\";\nimport type { IndexItem } from \"../../shared/index.js\";\nimport type { SearchOptions } from \"../typings/index.js\";\n\nexport const getSuggestions = (\n  query: string,\n  localeIndex: SearchIndex<IndexItem, string>,\n  searchOptions: SearchOptions = {},\n): string[] => {\n  const suggestions = autoSuggest<IndexItem, string>(\n    localeIndex,\n    query,\n    getSearchOptions(searchOptions),\n  );\n\n  return suggestions.map(({ suggestion }) => suggestion);\n};\n","import { loadJSONIndex } from \"slimsearch\";\n\nimport database from \"@temp/search-pro/index\";\n\nimport { getResults } from \"./result.js\";\nimport { getSuggestions } from \"./suggestion.js\";\nimport type { IndexItem } from \"../../shared/index.js\";\nimport type { MessageData } from \"../typings/index.js\";\n\nself.onmessage = async ({\n  data: { type = \"all\", query, locale, options },\n}: MessageEvent<MessageData>): Promise<void> => {\n  const { default: localeIndex } = await database[locale]();\n\n  const searchLocaleIndex = loadJSONIndex<IndexItem, string>(localeIndex, {\n    fields: [/** heading */ \"h\", /** text */ \"t\", /** customFields */ \"c\"],\n    storeFields: [/** heading */ \"h\", /** text */ \"t\", /** customFields */ \"c\"],\n  });\n\n  if (type === \"suggest\")\n    self.postMessage(getSuggestions(query, searchLocaleIndex, options));\n  else if (type === \"search\")\n    self.postMessage(getResults(query, searchLocaleIndex, options));\n  else\n    self.postMessage({\n      suggestions: getSuggestions(query, searchLocaleIndex, options),\n      results: getResults(query, searchLocaleIndex, options),\n    });\n};\n"],"names":["getMatchedContent","content","queryString","contentLowerCase","queryStringLowerCase","result","startIndex","contentLength","addResult","isEnd","text","matchIndex","endIndex","CHINESE_CHARACTERS","getSearchOptions","searchOptions","term","chineseCharacters","englishTerm","sortWithTotal","valueA","valueB","total","score","sortWithMax","getResults","query","localeIndex","resultMap","search","id","terms","isCustomField","isSection","key","info","contents","field","item","headerContent","matchedContent","entries","title","pageIndex","getStoredFields","getSuggestions","autoSuggest","suggestion","type","locale","options","database","searchLocaleIndex","loadJSONIndex"],"mappings":"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"}