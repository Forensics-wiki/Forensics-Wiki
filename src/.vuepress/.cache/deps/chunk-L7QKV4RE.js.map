{
  "version": 3,
  "sources": ["../../../../node_modules/mermaid/dist/edges-66ea8538.js"],
  "sourcesContent": ["import { l as log, n as evaluate, c as getConfig, H as decodeEntities, d as sanitizeText, u as utils } from \"./mermaid-aad43469.js\";\r\nimport { select, curveBasis, line } from \"d3\";\r\nimport { c as createText } from \"./createText-a49d2d2a.js\";\r\nimport { p as parseMember } from \"./svgDraw-95adee0a.js\";\r\nconst insertMarkers = (elem, markerArray, type, id) => {\r\n  markerArray.forEach((markerName) => {\r\n    markers[markerName](elem, type, id);\r\n  });\r\n};\r\nconst extension = (elem, type, id) => {\r\n  log.trace(\"Making markers for \", id);\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-extensionStart\").attr(\"class\", \"marker extension \" + type).attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,7 L18,13 V 1 Z\");\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-extensionEnd\").attr(\"class\", \"marker extension \" + type).attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 V 13 L18,7 Z\");\r\n};\r\nconst composition = (elem, type) => {\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-compositionStart\").attr(\"class\", \"marker composition \" + type).attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-compositionEnd\").attr(\"class\", \"marker composition \" + type).attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\r\n};\r\nconst aggregation = (elem, type) => {\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-aggregationStart\").attr(\"class\", \"marker aggregation \" + type).attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-aggregationEnd\").attr(\"class\", \"marker aggregation \" + type).attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\r\n};\r\nconst dependency = (elem, type) => {\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-dependencyStart\").attr(\"class\", \"marker dependency \" + type).attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 5,7 L9,13 L1,7 L9,1 Z\");\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-dependencyEnd\").attr(\"class\", \"marker dependency \" + type).attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L14,7 L9,1 Z\");\r\n};\r\nconst lollipop = (elem, type) => {\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-lollipopStart\").attr(\"class\", \"marker lollipop \" + type).attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"circle\").attr(\"stroke\", \"black\").attr(\"fill\", \"white\").attr(\"cx\", 6).attr(\"cy\", 7).attr(\"r\", 6);\r\n};\r\nconst point = (elem, type) => {\r\n  elem.append(\"marker\").attr(\"id\", type + \"-pointEnd\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 10).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 12).attr(\"markerHeight\", 12).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\r\n  elem.append(\"marker\").attr(\"id\", type + \"-pointStart\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 0).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 12).attr(\"markerHeight\", 12).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0 5 L 10 10 L 10 0 z\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\r\n};\r\nconst circle$1 = (elem, type) => {\r\n  elem.append(\"marker\").attr(\"id\", type + \"-circleEnd\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 11).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"circle\").attr(\"cx\", \"5\").attr(\"cy\", \"5\").attr(\"r\", \"5\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\r\n  elem.append(\"marker\").attr(\"id\", type + \"-circleStart\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", -1).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"circle\").attr(\"cx\", \"5\").attr(\"cy\", \"5\").attr(\"r\", \"5\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\r\n};\r\nconst cross = (elem, type) => {\r\n  elem.append(\"marker\").attr(\"id\", type + \"-crossEnd\").attr(\"class\", \"marker cross \" + type).attr(\"viewBox\", \"0 0 11 11\").attr(\"refX\", 12).attr(\"refY\", 5.2).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 l 9,9 M 10,1 l -9,9\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 2).style(\"stroke-dasharray\", \"1,0\");\r\n  elem.append(\"marker\").attr(\"id\", type + \"-crossStart\").attr(\"class\", \"marker cross \" + type).attr(\"viewBox\", \"0 0 11 11\").attr(\"refX\", -1).attr(\"refY\", 5.2).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 l 9,9 M 10,1 l -9,9\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 2).style(\"stroke-dasharray\", \"1,0\");\r\n};\r\nconst barb = (elem, type) => {\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", type + \"-barbEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 14).attr(\"markerUnits\", \"strokeWidth\").attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\r\n};\r\nconst markers = {\r\n  extension,\r\n  composition,\r\n  aggregation,\r\n  dependency,\r\n  lollipop,\r\n  point,\r\n  circle: circle$1,\r\n  cross,\r\n  barb\r\n};\r\nconst insertMarkers$1 = insertMarkers;\r\nfunction applyStyle(dom, styleFn) {\r\n  if (styleFn) {\r\n    dom.attr(\"style\", styleFn);\r\n  }\r\n}\r\nfunction addHtmlLabel(node) {\r\n  const fo = select(document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\"));\r\n  const div = fo.append(\"xhtml:div\");\r\n  const label = node.label;\r\n  const labelClass = node.isNode ? \"nodeLabel\" : \"edgeLabel\";\r\n  div.html(\r\n    '<span class=\"' + labelClass + '\" ' + (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : \"\") + \">\" + label + \"</span>\"\r\n  );\r\n  applyStyle(div, node.labelStyle);\r\n  div.style(\"display\", \"inline-block\");\r\n  div.style(\"white-space\", \"nowrap\");\r\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\r\n  return fo.node();\r\n}\r\nconst createLabel = (_vertexText, style, isTitle, isNode) => {\r\n  let vertexText = _vertexText || \"\";\r\n  if (typeof vertexText === \"object\") {\r\n    vertexText = vertexText[0];\r\n  }\r\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n    vertexText = vertexText.replace(/\\\\n|\\n/g, \"<br />\");\r\n    log.info(\"vertexText\" + vertexText);\r\n    const node = {\r\n      isNode,\r\n      label: decodeEntities(vertexText).replace(\r\n        /fa[blrs]?:fa-[\\w-]+/g,\r\n        (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\r\n      ),\r\n      labelStyle: style.replace(\"fill:\", \"color:\")\r\n    };\r\n    let vertexNode = addHtmlLabel(node);\r\n    return vertexNode;\r\n  } else {\r\n    const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\r\n    svgLabel.setAttribute(\"style\", style.replace(\"color:\", \"fill:\"));\r\n    let rows = [];\r\n    if (typeof vertexText === \"string\") {\r\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\r\n    } else if (Array.isArray(vertexText)) {\r\n      rows = vertexText;\r\n    } else {\r\n      rows = [];\r\n    }\r\n    for (const row of rows) {\r\n      const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\r\n      tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\r\n      tspan.setAttribute(\"dy\", \"1em\");\r\n      tspan.setAttribute(\"x\", \"0\");\r\n      if (isTitle) {\r\n        tspan.setAttribute(\"class\", \"title-row\");\r\n      } else {\r\n        tspan.setAttribute(\"class\", \"row\");\r\n      }\r\n      tspan.textContent = row.trim();\r\n      svgLabel.appendChild(tspan);\r\n    }\r\n    return svgLabel;\r\n  }\r\n};\r\nconst createLabel$1 = createLabel;\r\nconst labelHelper = async (parent, node, _classes, isNode) => {\r\n  let classes;\r\n  const useHtmlLabels = node.useHtmlLabels || evaluate(getConfig().flowchart.htmlLabels);\r\n  if (!_classes) {\r\n    classes = \"node default\";\r\n  } else {\r\n    classes = _classes;\r\n  }\r\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\r\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"label\").attr(\"style\", node.labelStyle);\r\n  let labelText;\r\n  if (node.labelText === void 0) {\r\n    labelText = \"\";\r\n  } else {\r\n    labelText = typeof node.labelText === \"string\" ? node.labelText : node.labelText[0];\r\n  }\r\n  const textNode = label.node();\r\n  let text;\r\n  if (node.labelType === \"markdown\") {\r\n    text = createText(label, sanitizeText(decodeEntities(labelText), getConfig()), {\r\n      useHtmlLabels,\r\n      width: node.width || getConfig().flowchart.wrappingWidth,\r\n      classes: \"markdown-node-label\"\r\n    });\r\n  } else {\r\n    text = textNode.appendChild(\r\n      createLabel$1(\r\n        sanitizeText(decodeEntities(labelText), getConfig()),\r\n        node.labelStyle,\r\n        false,\r\n        isNode\r\n      )\r\n    );\r\n  }\r\n  let bbox = text.getBBox();\r\n  const halfPadding = node.padding / 2;\r\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n    const div = text.children[0];\r\n    const dv = select(text);\r\n    const images = div.getElementsByTagName(\"img\");\r\n    if (images) {\r\n      const noImgText = labelText.replace(/<img[^>]*>/g, \"\").trim() === \"\";\r\n      await Promise.all(\r\n        [...images].map(\r\n          (img) => new Promise(\r\n            (res) => img.addEventListener(\"load\", function() {\r\n              img.style.display = \"flex\";\r\n              img.style.flexDirection = \"column\";\r\n              if (noImgText) {\r\n                const bodyFontSize = getConfig().fontSize ? getConfig().fontSize : window.getComputedStyle(document.body).fontSize;\r\n                const enlargingFactor = 5;\r\n                img.style.width = parseInt(bodyFontSize, 10) * enlargingFactor + \"px\";\r\n              } else {\r\n                img.style.width = \"100%\";\r\n              }\r\n              res(img);\r\n            })\r\n          )\r\n        )\r\n      );\r\n    }\r\n    bbox = div.getBoundingClientRect();\r\n    dv.attr(\"width\", bbox.width);\r\n    dv.attr(\"height\", bbox.height);\r\n  }\r\n  if (useHtmlLabels) {\r\n    label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\r\n  } else {\r\n    label.attr(\"transform\", \"translate(0, \" + -bbox.height / 2 + \")\");\r\n  }\r\n  if (node.centerLabel) {\r\n    label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\r\n  }\r\n  label.insert(\"rect\", \":first-child\");\r\n  return { shapeSvg, bbox, halfPadding, label };\r\n};\r\nconst updateNodeBounds = (node, element) => {\r\n  const bbox = element.node().getBBox();\r\n  node.width = bbox.width;\r\n  node.height = bbox.height;\r\n};\r\nfunction insertPolygonShape(parent, w, h, points) {\r\n  return parent.insert(\"polygon\", \":first-child\").attr(\r\n    \"points\",\r\n    points.map(function(d) {\r\n      return d.x + \",\" + d.y;\r\n    }).join(\" \")\r\n  ).attr(\"class\", \"label-container\").attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\r\n}\r\nfunction intersectNode(node, point2) {\r\n  return node.intersect(point2);\r\n}\r\nfunction intersectEllipse(node, rx, ry, point2) {\r\n  var cx = node.x;\r\n  var cy = node.y;\r\n  var px = cx - point2.x;\r\n  var py = cy - point2.y;\r\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\r\n  var dx = Math.abs(rx * ry * px / det);\r\n  if (point2.x < cx) {\r\n    dx = -dx;\r\n  }\r\n  var dy = Math.abs(rx * ry * py / det);\r\n  if (point2.y < cy) {\r\n    dy = -dy;\r\n  }\r\n  return { x: cx + dx, y: cy + dy };\r\n}\r\nfunction intersectCircle(node, rx, point2) {\r\n  return intersectEllipse(node, rx, rx, point2);\r\n}\r\nfunction intersectLine(p1, p2, q1, q2) {\r\n  var a1, a2, b1, b2, c1, c2;\r\n  var r1, r2, r3, r4;\r\n  var denom, offset, num;\r\n  var x, y;\r\n  a1 = p2.y - p1.y;\r\n  b1 = p1.x - p2.x;\r\n  c1 = p2.x * p1.y - p1.x * p2.y;\r\n  r3 = a1 * q1.x + b1 * q1.y + c1;\r\n  r4 = a1 * q2.x + b1 * q2.y + c1;\r\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\r\n    return;\r\n  }\r\n  a2 = q2.y - q1.y;\r\n  b2 = q1.x - q2.x;\r\n  c2 = q2.x * q1.y - q1.x * q2.y;\r\n  r1 = a2 * p1.x + b2 * p1.y + c2;\r\n  r2 = a2 * p2.x + b2 * p2.y + c2;\r\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\r\n    return;\r\n  }\r\n  denom = a1 * b2 - a2 * b1;\r\n  if (denom === 0) {\r\n    return;\r\n  }\r\n  offset = Math.abs(denom / 2);\r\n  num = b1 * c2 - b2 * c1;\r\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\r\n  num = a2 * c1 - a1 * c2;\r\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\r\n  return { x, y };\r\n}\r\nfunction sameSign(r1, r2) {\r\n  return r1 * r2 > 0;\r\n}\r\nfunction intersectPolygon(node, polyPoints, point2) {\r\n  var x1 = node.x;\r\n  var y1 = node.y;\r\n  var intersections = [];\r\n  var minX = Number.POSITIVE_INFINITY;\r\n  var minY = Number.POSITIVE_INFINITY;\r\n  if (typeof polyPoints.forEach === \"function\") {\r\n    polyPoints.forEach(function(entry) {\r\n      minX = Math.min(minX, entry.x);\r\n      minY = Math.min(minY, entry.y);\r\n    });\r\n  } else {\r\n    minX = Math.min(minX, polyPoints.x);\r\n    minY = Math.min(minY, polyPoints.y);\r\n  }\r\n  var left = x1 - node.width / 2 - minX;\r\n  var top = y1 - node.height / 2 - minY;\r\n  for (var i = 0; i < polyPoints.length; i++) {\r\n    var p1 = polyPoints[i];\r\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\r\n    var intersect2 = intersectLine(\r\n      node,\r\n      point2,\r\n      { x: left + p1.x, y: top + p1.y },\r\n      { x: left + p2.x, y: top + p2.y }\r\n    );\r\n    if (intersect2) {\r\n      intersections.push(intersect2);\r\n    }\r\n  }\r\n  if (!intersections.length) {\r\n    return node;\r\n  }\r\n  if (intersections.length > 1) {\r\n    intersections.sort(function(p, q) {\r\n      var pdx = p.x - point2.x;\r\n      var pdy = p.y - point2.y;\r\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\r\n      var qdx = q.x - point2.x;\r\n      var qdy = q.y - point2.y;\r\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\r\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\r\n    });\r\n  }\r\n  return intersections[0];\r\n}\r\nconst intersectRect = (node, point2) => {\r\n  var x = node.x;\r\n  var y = node.y;\r\n  var dx = point2.x - x;\r\n  var dy = point2.y - y;\r\n  var w = node.width / 2;\r\n  var h = node.height / 2;\r\n  var sx, sy;\r\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\r\n    if (dy < 0) {\r\n      h = -h;\r\n    }\r\n    sx = dy === 0 ? 0 : h * dx / dy;\r\n    sy = h;\r\n  } else {\r\n    if (dx < 0) {\r\n      w = -w;\r\n    }\r\n    sx = w;\r\n    sy = dx === 0 ? 0 : w * dy / dx;\r\n  }\r\n  return { x: x + sx, y: y + sy };\r\n};\r\nconst intersectRect$1 = intersectRect;\r\nconst intersect = {\r\n  node: intersectNode,\r\n  circle: intersectCircle,\r\n  ellipse: intersectEllipse,\r\n  polygon: intersectPolygon,\r\n  rect: intersectRect$1\r\n};\r\nconst note = async (parent, node) => {\r\n  const useHtmlLabels = node.useHtmlLabels || getConfig().flowchart.htmlLabels;\r\n  if (!useHtmlLabels) {\r\n    node.centerLabel = true;\r\n  }\r\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\r\n    parent,\r\n    node,\r\n    \"node \" + node.classes,\r\n    true\r\n  );\r\n  log.info(\"Classes = \", node.classes);\r\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\r\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\r\n  updateNodeBounds(node, rect2);\r\n  node.intersect = function(point2) {\r\n    return intersect.rect(node, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst note$1 = note;\r\nconst question = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const w = bbox.width + node.padding;\r\n  const h = bbox.height + node.padding;\r\n  const s = w + h;\r\n  const points = [\r\n    { x: s / 2, y: 0 },\r\n    { x: s, y: -s / 2 },\r\n    { x: s / 2, y: -s },\r\n    { x: 0, y: -s / 2 }\r\n  ];\r\n  log.info(\"Question main (Circle)\");\r\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\r\n  questionElem.attr(\"style\", node.style);\r\n  updateNodeBounds(node, questionElem);\r\n  node.intersect = function(point2) {\r\n    log.warn(\"Intersect called\");\r\n    return intersect.polygon(node, points, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst choice = (parent, node) => {\r\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\r\n  const s = 28;\r\n  const points = [\r\n    { x: 0, y: s / 2 },\r\n    { x: s / 2, y: 0 },\r\n    { x: 0, y: -s / 2 },\r\n    { x: -s / 2, y: 0 }\r\n  ];\r\n  const choice2 = shapeSvg.insert(\"polygon\", \":first-child\").attr(\r\n    \"points\",\r\n    points.map(function(d) {\r\n      return d.x + \",\" + d.y;\r\n    }).join(\" \")\r\n  );\r\n  choice2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 28).attr(\"height\", 28);\r\n  node.width = 28;\r\n  node.height = 28;\r\n  node.intersect = function(point2) {\r\n    return intersect.circle(node, 14, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst hexagon = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const f = 4;\r\n  const h = bbox.height + node.padding;\r\n  const m = h / f;\r\n  const w = bbox.width + 2 * m + node.padding;\r\n  const points = [\r\n    { x: m, y: 0 },\r\n    { x: w - m, y: 0 },\r\n    { x: w, y: -h / 2 },\r\n    { x: w - m, y: -h },\r\n    { x: m, y: -h },\r\n    { x: 0, y: -h / 2 }\r\n  ];\r\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\r\n  hex.attr(\"style\", node.style);\r\n  updateNodeBounds(node, hex);\r\n  node.intersect = function(point2) {\r\n    return intersect.polygon(node, points, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst rect_left_inv_arrow = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const w = bbox.width + node.padding;\r\n  const h = bbox.height + node.padding;\r\n  const points = [\r\n    { x: -h / 2, y: 0 },\r\n    { x: w, y: 0 },\r\n    { x: w, y: -h },\r\n    { x: -h / 2, y: -h },\r\n    { x: 0, y: -h / 2 }\r\n  ];\r\n  const el = insertPolygonShape(shapeSvg, w, h, points);\r\n  el.attr(\"style\", node.style);\r\n  node.width = w + h;\r\n  node.height = h;\r\n  node.intersect = function(point2) {\r\n    return intersect.polygon(node, points, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst lean_right = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const w = bbox.width + node.padding;\r\n  const h = bbox.height + node.padding;\r\n  const points = [\r\n    { x: -2 * h / 6, y: 0 },\r\n    { x: w - h / 6, y: 0 },\r\n    { x: w + 2 * h / 6, y: -h },\r\n    { x: h / 6, y: -h }\r\n  ];\r\n  const el = insertPolygonShape(shapeSvg, w, h, points);\r\n  el.attr(\"style\", node.style);\r\n  updateNodeBounds(node, el);\r\n  node.intersect = function(point2) {\r\n    return intersect.polygon(node, points, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst lean_left = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const w = bbox.width + node.padding;\r\n  const h = bbox.height + node.padding;\r\n  const points = [\r\n    { x: 2 * h / 6, y: 0 },\r\n    { x: w + h / 6, y: 0 },\r\n    { x: w - 2 * h / 6, y: -h },\r\n    { x: -h / 6, y: -h }\r\n  ];\r\n  const el = insertPolygonShape(shapeSvg, w, h, points);\r\n  el.attr(\"style\", node.style);\r\n  updateNodeBounds(node, el);\r\n  node.intersect = function(point2) {\r\n    return intersect.polygon(node, points, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst trapezoid = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const w = bbox.width + node.padding;\r\n  const h = bbox.height + node.padding;\r\n  const points = [\r\n    { x: -2 * h / 6, y: 0 },\r\n    { x: w + 2 * h / 6, y: 0 },\r\n    { x: w - h / 6, y: -h },\r\n    { x: h / 6, y: -h }\r\n  ];\r\n  const el = insertPolygonShape(shapeSvg, w, h, points);\r\n  el.attr(\"style\", node.style);\r\n  updateNodeBounds(node, el);\r\n  node.intersect = function(point2) {\r\n    return intersect.polygon(node, points, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst inv_trapezoid = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const w = bbox.width + node.padding;\r\n  const h = bbox.height + node.padding;\r\n  const points = [\r\n    { x: h / 6, y: 0 },\r\n    { x: w - h / 6, y: 0 },\r\n    { x: w + 2 * h / 6, y: -h },\r\n    { x: -2 * h / 6, y: -h }\r\n  ];\r\n  const el = insertPolygonShape(shapeSvg, w, h, points);\r\n  el.attr(\"style\", node.style);\r\n  updateNodeBounds(node, el);\r\n  node.intersect = function(point2) {\r\n    return intersect.polygon(node, points, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst rect_right_inv_arrow = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const w = bbox.width + node.padding;\r\n  const h = bbox.height + node.padding;\r\n  const points = [\r\n    { x: 0, y: 0 },\r\n    { x: w + h / 2, y: 0 },\r\n    { x: w, y: -h / 2 },\r\n    { x: w + h / 2, y: -h },\r\n    { x: 0, y: -h }\r\n  ];\r\n  const el = insertPolygonShape(shapeSvg, w, h, points);\r\n  el.attr(\"style\", node.style);\r\n  updateNodeBounds(node, el);\r\n  node.intersect = function(point2) {\r\n    return intersect.polygon(node, points, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst cylinder = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const w = bbox.width + node.padding;\r\n  const rx = w / 2;\r\n  const ry = rx / (2.5 + w / 50);\r\n  const h = bbox.height + ry + node.padding;\r\n  const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\r\n  const el = shapeSvg.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"style\", node.style).attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\r\n  updateNodeBounds(node, el);\r\n  node.intersect = function(point2) {\r\n    const pos = intersect.rect(node, point2);\r\n    const x = pos.x - node.x;\r\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\r\n      let y = ry * ry * (1 - x * x / (rx * rx));\r\n      if (y != 0) {\r\n        y = Math.sqrt(y);\r\n      }\r\n      y = ry - y;\r\n      if (point2.y - node.y > 0) {\r\n        y = -y;\r\n      }\r\n      pos.y += y;\r\n    }\r\n    return pos;\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst rect = async (parent, node) => {\r\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\r\n    parent,\r\n    node,\r\n    \"node \" + node.classes,\r\n    true\r\n  );\r\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\r\n  const totalWidth = bbox.width + node.padding;\r\n  const totalHeight = bbox.height + node.padding;\r\n  rect2.attr(\"class\", \"basic label-container\").attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\r\n  if (node.props) {\r\n    const propKeys = new Set(Object.keys(node.props));\r\n    if (node.props.borders) {\r\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\r\n      propKeys.delete(\"borders\");\r\n    }\r\n    propKeys.forEach((propKey) => {\r\n      log.warn(`Unknown node property ${propKey}`);\r\n    });\r\n  }\r\n  updateNodeBounds(node, rect2);\r\n  node.intersect = function(point2) {\r\n    return intersect.rect(node, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst labelRect = async (parent, node) => {\r\n  const { shapeSvg } = await labelHelper(parent, node, \"label\", true);\r\n  log.trace(\"Classes = \", node.classes);\r\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\r\n  const totalWidth = 0;\r\n  const totalHeight = 0;\r\n  rect2.attr(\"width\", totalWidth).attr(\"height\", totalHeight);\r\n  shapeSvg.attr(\"class\", \"label edgeLabel\");\r\n  if (node.props) {\r\n    const propKeys = new Set(Object.keys(node.props));\r\n    if (node.props.borders) {\r\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\r\n      propKeys.delete(\"borders\");\r\n    }\r\n    propKeys.forEach((propKey) => {\r\n      log.warn(`Unknown node property ${propKey}`);\r\n    });\r\n  }\r\n  updateNodeBounds(node, rect2);\r\n  node.intersect = function(point2) {\r\n    return intersect.rect(node, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nfunction applyNodePropertyBorders(rect2, borders, totalWidth, totalHeight) {\r\n  const strokeDashArray = [];\r\n  const addBorder = (length) => {\r\n    strokeDashArray.push(length, 0);\r\n  };\r\n  const skipBorder = (length) => {\r\n    strokeDashArray.push(0, length);\r\n  };\r\n  if (borders.includes(\"t\")) {\r\n    log.debug(\"add top border\");\r\n    addBorder(totalWidth);\r\n  } else {\r\n    skipBorder(totalWidth);\r\n  }\r\n  if (borders.includes(\"r\")) {\r\n    log.debug(\"add right border\");\r\n    addBorder(totalHeight);\r\n  } else {\r\n    skipBorder(totalHeight);\r\n  }\r\n  if (borders.includes(\"b\")) {\r\n    log.debug(\"add bottom border\");\r\n    addBorder(totalWidth);\r\n  } else {\r\n    skipBorder(totalWidth);\r\n  }\r\n  if (borders.includes(\"l\")) {\r\n    log.debug(\"add left border\");\r\n    addBorder(totalHeight);\r\n  } else {\r\n    skipBorder(totalHeight);\r\n  }\r\n  rect2.attr(\"stroke-dasharray\", strokeDashArray.join(\" \"));\r\n}\r\nconst rectWithTitle = (parent, node) => {\r\n  let classes;\r\n  if (!node.classes) {\r\n    classes = \"node default\";\r\n  } else {\r\n    classes = \"node \" + node.classes;\r\n  }\r\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\r\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\r\n  const innerLine = shapeSvg.insert(\"line\");\r\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"label\");\r\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\r\n  let title = \"\";\r\n  if (typeof text2 === \"object\") {\r\n    title = text2[0];\r\n  } else {\r\n    title = text2;\r\n  }\r\n  log.info(\"Label text abc79\", title, text2, typeof text2 === \"object\");\r\n  const text = label.node().appendChild(createLabel$1(title, node.labelStyle, true, true));\r\n  let bbox = { width: 0, height: 0 };\r\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n    const div = text.children[0];\r\n    const dv = select(text);\r\n    bbox = div.getBoundingClientRect();\r\n    dv.attr(\"width\", bbox.width);\r\n    dv.attr(\"height\", bbox.height);\r\n  }\r\n  log.info(\"Text 2\", text2);\r\n  const textRows = text2.slice(1, text2.length);\r\n  let titleBox = text.getBBox();\r\n  const descr = label.node().appendChild(\r\n    createLabel$1(textRows.join ? textRows.join(\"<br/>\") : textRows, node.labelStyle, true, true)\r\n  );\r\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n    const div = descr.children[0];\r\n    const dv = select(descr);\r\n    bbox = div.getBoundingClientRect();\r\n    dv.attr(\"width\", bbox.width);\r\n    dv.attr(\"height\", bbox.height);\r\n  }\r\n  const halfPadding = node.padding / 2;\r\n  select(descr).attr(\r\n    \"transform\",\r\n    \"translate( \" + // (titleBox.width - bbox.width) / 2 +\r\n    (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) + \", \" + (titleBox.height + halfPadding + 5) + \")\"\r\n  );\r\n  select(text).attr(\r\n    \"transform\",\r\n    \"translate( \" + // (titleBox.width - bbox.width) / 2 +\r\n    (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) + \", 0)\"\r\n  );\r\n  bbox = label.node().getBBox();\r\n  label.attr(\r\n    \"transform\",\r\n    \"translate(\" + -bbox.width / 2 + \", \" + (-bbox.height / 2 - halfPadding + 3) + \")\"\r\n  );\r\n  rect2.attr(\"class\", \"outer title-state\").attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\r\n  innerLine.attr(\"class\", \"divider\").attr(\"x1\", -bbox.width / 2 - halfPadding).attr(\"x2\", bbox.width / 2 + halfPadding).attr(\"y1\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding).attr(\"y2\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\r\n  updateNodeBounds(node, rect2);\r\n  node.intersect = function(point2) {\r\n    return intersect.rect(node, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst stadium = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const h = bbox.height + node.padding;\r\n  const w = bbox.width + h / 4 + node.padding;\r\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\").attr(\"style\", node.style).attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\r\n  updateNodeBounds(node, rect2);\r\n  node.intersect = function(point2) {\r\n    return intersect.rect(node, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst circle = async (parent, node) => {\r\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(parent, node, void 0, true);\r\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\r\n  circle2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\r\n  log.info(\"Circle main\");\r\n  updateNodeBounds(node, circle2);\r\n  node.intersect = function(point2) {\r\n    log.info(\"Circle intersect\", node, bbox.width / 2 + halfPadding, point2);\r\n    return intersect.circle(node, bbox.width / 2 + halfPadding, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst doublecircle = async (parent, node) => {\r\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(parent, node, void 0, true);\r\n  const gap = 5;\r\n  const circleGroup = shapeSvg.insert(\"g\", \":first-child\");\r\n  const outerCircle = circleGroup.insert(\"circle\");\r\n  const innerCircle = circleGroup.insert(\"circle\");\r\n  circleGroup.attr(\"class\", node.class);\r\n  outerCircle.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding + gap).attr(\"width\", bbox.width + node.padding + gap * 2).attr(\"height\", bbox.height + node.padding + gap * 2);\r\n  innerCircle.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\r\n  log.info(\"DoubleCircle main\");\r\n  updateNodeBounds(node, outerCircle);\r\n  node.intersect = function(point2) {\r\n    log.info(\"DoubleCircle intersect\", node, bbox.width / 2 + halfPadding + gap, point2);\r\n    return intersect.circle(node, bbox.width / 2 + halfPadding + gap, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst subroutine = async (parent, node) => {\r\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\r\n  const w = bbox.width + node.padding;\r\n  const h = bbox.height + node.padding;\r\n  const points = [\r\n    { x: 0, y: 0 },\r\n    { x: w, y: 0 },\r\n    { x: w, y: -h },\r\n    { x: 0, y: -h },\r\n    { x: 0, y: 0 },\r\n    { x: -8, y: 0 },\r\n    { x: w + 8, y: 0 },\r\n    { x: w + 8, y: -h },\r\n    { x: -8, y: -h },\r\n    { x: -8, y: 0 }\r\n  ];\r\n  const el = insertPolygonShape(shapeSvg, w, h, points);\r\n  el.attr(\"style\", node.style);\r\n  updateNodeBounds(node, el);\r\n  node.intersect = function(point2) {\r\n    return intersect.polygon(node, points, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst start = (parent, node) => {\r\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\r\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\r\n  circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\r\n  updateNodeBounds(node, circle2);\r\n  node.intersect = function(point2) {\r\n    return intersect.circle(node, 7, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst forkJoin = (parent, node, dir) => {\r\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\r\n  let width = 70;\r\n  let height = 10;\r\n  if (dir === \"LR\") {\r\n    width = 10;\r\n    height = 70;\r\n  }\r\n  const shape = shapeSvg.append(\"rect\").attr(\"x\", -1 * width / 2).attr(\"y\", -1 * height / 2).attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"fork-join\");\r\n  updateNodeBounds(node, shape);\r\n  node.height = node.height + node.padding / 2;\r\n  node.width = node.width + node.padding / 2;\r\n  node.intersect = function(point2) {\r\n    return intersect.rect(node, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst end = (parent, node) => {\r\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\r\n  const innerCircle = shapeSvg.insert(\"circle\", \":first-child\");\r\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\r\n  circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\r\n  innerCircle.attr(\"class\", \"state-end\").attr(\"r\", 5).attr(\"width\", 10).attr(\"height\", 10);\r\n  updateNodeBounds(node, circle2);\r\n  node.intersect = function(point2) {\r\n    return intersect.circle(node, 7, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst class_box = (parent, node) => {\r\n  const halfPadding = node.padding / 2;\r\n  const rowPadding = 4;\r\n  const lineHeight = 8;\r\n  let classes;\r\n  if (!node.classes) {\r\n    classes = \"node default\";\r\n  } else {\r\n    classes = \"node \" + node.classes;\r\n  }\r\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\r\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\r\n  const topLine = shapeSvg.insert(\"line\");\r\n  const bottomLine = shapeSvg.insert(\"line\");\r\n  let maxWidth = 0;\r\n  let maxHeight = rowPadding;\r\n  const labelContainer = shapeSvg.insert(\"g\").attr(\"class\", \"label\");\r\n  let verticalPos = 0;\r\n  const hasInterface = node.classData.annotations && node.classData.annotations[0];\r\n  const interfaceLabelText = node.classData.annotations[0] ? \"«\" + node.classData.annotations[0] + \"»\" : \"\";\r\n  const interfaceLabel = labelContainer.node().appendChild(createLabel$1(interfaceLabelText, node.labelStyle, true, true));\r\n  let interfaceBBox = interfaceLabel.getBBox();\r\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n    const div = interfaceLabel.children[0];\r\n    const dv = select(interfaceLabel);\r\n    interfaceBBox = div.getBoundingClientRect();\r\n    dv.attr(\"width\", interfaceBBox.width);\r\n    dv.attr(\"height\", interfaceBBox.height);\r\n  }\r\n  if (node.classData.annotations[0]) {\r\n    maxHeight += interfaceBBox.height + rowPadding;\r\n    maxWidth += interfaceBBox.width;\r\n  }\r\n  let classTitleString = node.classData.label;\r\n  if (node.classData.type !== void 0 && node.classData.type !== \"\") {\r\n    if (getConfig().flowchart.htmlLabels) {\r\n      classTitleString += \"&lt;\" + node.classData.type + \"&gt;\";\r\n    } else {\r\n      classTitleString += \"<\" + node.classData.type + \">\";\r\n    }\r\n  }\r\n  const classTitleLabel = labelContainer.node().appendChild(createLabel$1(classTitleString, node.labelStyle, true, true));\r\n  select(classTitleLabel).attr(\"class\", \"classTitle\");\r\n  let classTitleBBox = classTitleLabel.getBBox();\r\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n    const div = classTitleLabel.children[0];\r\n    const dv = select(classTitleLabel);\r\n    classTitleBBox = div.getBoundingClientRect();\r\n    dv.attr(\"width\", classTitleBBox.width);\r\n    dv.attr(\"height\", classTitleBBox.height);\r\n  }\r\n  maxHeight += classTitleBBox.height + rowPadding;\r\n  if (classTitleBBox.width > maxWidth) {\r\n    maxWidth = classTitleBBox.width;\r\n  }\r\n  const classAttributes = [];\r\n  node.classData.members.forEach((str) => {\r\n    const parsedInfo = parseMember(str);\r\n    let parsedText = parsedInfo.displayText;\r\n    if (getConfig().flowchart.htmlLabels) {\r\n      parsedText = parsedText.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n    }\r\n    const lbl = labelContainer.node().appendChild(\r\n      createLabel$1(\r\n        parsedText,\r\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\r\n        true,\r\n        true\r\n      )\r\n    );\r\n    let bbox = lbl.getBBox();\r\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n      const div = lbl.children[0];\r\n      const dv = select(lbl);\r\n      bbox = div.getBoundingClientRect();\r\n      dv.attr(\"width\", bbox.width);\r\n      dv.attr(\"height\", bbox.height);\r\n    }\r\n    if (bbox.width > maxWidth) {\r\n      maxWidth = bbox.width;\r\n    }\r\n    maxHeight += bbox.height + rowPadding;\r\n    classAttributes.push(lbl);\r\n  });\r\n  maxHeight += lineHeight;\r\n  const classMethods = [];\r\n  node.classData.methods.forEach((str) => {\r\n    const parsedInfo = parseMember(str);\r\n    let displayText = parsedInfo.displayText;\r\n    if (getConfig().flowchart.htmlLabels) {\r\n      displayText = displayText.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n    }\r\n    const lbl = labelContainer.node().appendChild(\r\n      createLabel$1(\r\n        displayText,\r\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\r\n        true,\r\n        true\r\n      )\r\n    );\r\n    let bbox = lbl.getBBox();\r\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n      const div = lbl.children[0];\r\n      const dv = select(lbl);\r\n      bbox = div.getBoundingClientRect();\r\n      dv.attr(\"width\", bbox.width);\r\n      dv.attr(\"height\", bbox.height);\r\n    }\r\n    if (bbox.width > maxWidth) {\r\n      maxWidth = bbox.width;\r\n    }\r\n    maxHeight += bbox.height + rowPadding;\r\n    classMethods.push(lbl);\r\n  });\r\n  maxHeight += lineHeight;\r\n  if (hasInterface) {\r\n    let diffX2 = (maxWidth - interfaceBBox.width) / 2;\r\n    select(interfaceLabel).attr(\r\n      \"transform\",\r\n      \"translate( \" + (-1 * maxWidth / 2 + diffX2) + \", \" + -1 * maxHeight / 2 + \")\"\r\n    );\r\n    verticalPos = interfaceBBox.height + rowPadding;\r\n  }\r\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\r\n  select(classTitleLabel).attr(\r\n    \"transform\",\r\n    \"translate( \" + (-1 * maxWidth / 2 + diffX) + \", \" + (-1 * maxHeight / 2 + verticalPos) + \")\"\r\n  );\r\n  verticalPos += classTitleBBox.height + rowPadding;\r\n  topLine.attr(\"class\", \"divider\").attr(\"x1\", -maxWidth / 2 - halfPadding).attr(\"x2\", maxWidth / 2 + halfPadding).attr(\"y1\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr(\"y2\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\r\n  verticalPos += lineHeight;\r\n  classAttributes.forEach((lbl) => {\r\n    select(lbl).attr(\r\n      \"transform\",\r\n      \"translate( \" + -maxWidth / 2 + \", \" + (-1 * maxHeight / 2 + verticalPos + lineHeight / 2) + \")\"\r\n    );\r\n    verticalPos += classTitleBBox.height + rowPadding;\r\n  });\r\n  verticalPos += lineHeight;\r\n  bottomLine.attr(\"class\", \"divider\").attr(\"x1\", -maxWidth / 2 - halfPadding).attr(\"x2\", maxWidth / 2 + halfPadding).attr(\"y1\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr(\"y2\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\r\n  verticalPos += lineHeight;\r\n  classMethods.forEach((lbl) => {\r\n    select(lbl).attr(\r\n      \"transform\",\r\n      \"translate( \" + -maxWidth / 2 + \", \" + (-1 * maxHeight / 2 + verticalPos) + \")\"\r\n    );\r\n    verticalPos += classTitleBBox.height + rowPadding;\r\n  });\r\n  rect2.attr(\"class\", \"outer title-state\").attr(\"x\", -maxWidth / 2 - halfPadding).attr(\"y\", -(maxHeight / 2) - halfPadding).attr(\"width\", maxWidth + node.padding).attr(\"height\", maxHeight + node.padding);\r\n  updateNodeBounds(node, rect2);\r\n  node.intersect = function(point2) {\r\n    return intersect.rect(node, point2);\r\n  };\r\n  return shapeSvg;\r\n};\r\nconst shapes = {\r\n  rhombus: question,\r\n  question,\r\n  rect,\r\n  labelRect,\r\n  rectWithTitle,\r\n  choice,\r\n  circle,\r\n  doublecircle,\r\n  stadium,\r\n  hexagon,\r\n  rect_left_inv_arrow,\r\n  lean_right,\r\n  lean_left,\r\n  trapezoid,\r\n  inv_trapezoid,\r\n  rect_right_inv_arrow,\r\n  cylinder,\r\n  start,\r\n  end,\r\n  note: note$1,\r\n  subroutine,\r\n  fork: forkJoin,\r\n  join: forkJoin,\r\n  class_box\r\n};\r\nlet nodeElems = {};\r\nconst insertNode = async (elem, node, dir) => {\r\n  let newEl;\r\n  let el;\r\n  if (node.link) {\r\n    let target;\r\n    if (getConfig().securityLevel === \"sandbox\") {\r\n      target = \"_top\";\r\n    } else if (node.linkTarget) {\r\n      target = node.linkTarget || \"_blank\";\r\n    }\r\n    newEl = elem.insert(\"svg:a\").attr(\"xlink:href\", node.link).attr(\"target\", target);\r\n    el = await shapes[node.shape](newEl, node, dir);\r\n  } else {\r\n    el = await shapes[node.shape](elem, node, dir);\r\n    newEl = el;\r\n  }\r\n  if (node.tooltip) {\r\n    el.attr(\"title\", node.tooltip);\r\n  }\r\n  if (node.class) {\r\n    el.attr(\"class\", \"node default \" + node.class);\r\n  }\r\n  nodeElems[node.id] = newEl;\r\n  if (node.haveCallback) {\r\n    nodeElems[node.id].attr(\"class\", nodeElems[node.id].attr(\"class\") + \" clickable\");\r\n  }\r\n  return newEl;\r\n};\r\nconst setNodeElem = (elem, node) => {\r\n  nodeElems[node.id] = elem;\r\n};\r\nconst clear$1 = () => {\r\n  nodeElems = {};\r\n};\r\nconst positionNode = (node) => {\r\n  const el = nodeElems[node.id];\r\n  log.trace(\r\n    \"Transforming node\",\r\n    node.diff,\r\n    node,\r\n    \"translate(\" + (node.x - node.width / 2 - 5) + \", \" + node.width / 2 + \")\"\r\n  );\r\n  const padding = 8;\r\n  const diff = node.diff || 0;\r\n  if (node.clusterNode) {\r\n    el.attr(\r\n      \"transform\",\r\n      \"translate(\" + (node.x + diff - node.width / 2) + \", \" + (node.y - node.height / 2 - padding) + \")\"\r\n    );\r\n  } else {\r\n    el.attr(\"transform\", \"translate(\" + node.x + \", \" + node.y + \")\");\r\n  }\r\n  return diff;\r\n};\r\nlet edgeLabels = {};\r\nlet terminalLabels = {};\r\nconst clear = () => {\r\n  edgeLabels = {};\r\n  terminalLabels = {};\r\n};\r\nconst insertEdgeLabel = (elem, edge) => {\r\n  const useHtmlLabels = evaluate(getConfig().flowchart.htmlLabels);\r\n  const labelElement = edge.labelType === \"markdown\" ? createText(elem, edge.label, {\r\n    style: edge.labelStyle,\r\n    useHtmlLabels,\r\n    addSvgBackground: true\r\n  }) : createLabel$1(edge.label, edge.labelStyle);\r\n  log.info(\"abc82\", edge, edge.labelType);\r\n  const edgeLabel = elem.insert(\"g\").attr(\"class\", \"edgeLabel\");\r\n  const label = edgeLabel.insert(\"g\").attr(\"class\", \"label\");\r\n  label.node().appendChild(labelElement);\r\n  let bbox = labelElement.getBBox();\r\n  if (useHtmlLabels) {\r\n    const div = labelElement.children[0];\r\n    const dv = select(labelElement);\r\n    bbox = div.getBoundingClientRect();\r\n    dv.attr(\"width\", bbox.width);\r\n    dv.attr(\"height\", bbox.height);\r\n  }\r\n  label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\r\n  edgeLabels[edge.id] = edgeLabel;\r\n  edge.width = bbox.width;\r\n  edge.height = bbox.height;\r\n  let fo;\r\n  if (edge.startLabelLeft) {\r\n    const startLabelElement = createLabel$1(edge.startLabelLeft, edge.labelStyle);\r\n    const startEdgeLabelLeft = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\r\n    const inner = startEdgeLabelLeft.insert(\"g\").attr(\"class\", \"inner\");\r\n    fo = inner.node().appendChild(startLabelElement);\r\n    const slBox = startLabelElement.getBBox();\r\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\r\n    if (!terminalLabels[edge.id]) {\r\n      terminalLabels[edge.id] = {};\r\n    }\r\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\r\n    setTerminalWidth(fo, edge.startLabelLeft);\r\n  }\r\n  if (edge.startLabelRight) {\r\n    const startLabelElement = createLabel$1(edge.startLabelRight, edge.labelStyle);\r\n    const startEdgeLabelRight = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\r\n    const inner = startEdgeLabelRight.insert(\"g\").attr(\"class\", \"inner\");\r\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\r\n    inner.node().appendChild(startLabelElement);\r\n    const slBox = startLabelElement.getBBox();\r\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\r\n    if (!terminalLabels[edge.id]) {\r\n      terminalLabels[edge.id] = {};\r\n    }\r\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\r\n    setTerminalWidth(fo, edge.startLabelRight);\r\n  }\r\n  if (edge.endLabelLeft) {\r\n    const endLabelElement = createLabel$1(edge.endLabelLeft, edge.labelStyle);\r\n    const endEdgeLabelLeft = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\r\n    const inner = endEdgeLabelLeft.insert(\"g\").attr(\"class\", \"inner\");\r\n    fo = inner.node().appendChild(endLabelElement);\r\n    const slBox = endLabelElement.getBBox();\r\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\r\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\r\n    if (!terminalLabels[edge.id]) {\r\n      terminalLabels[edge.id] = {};\r\n    }\r\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\r\n    setTerminalWidth(fo, edge.endLabelLeft);\r\n  }\r\n  if (edge.endLabelRight) {\r\n    const endLabelElement = createLabel$1(edge.endLabelRight, edge.labelStyle);\r\n    const endEdgeLabelRight = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\r\n    const inner = endEdgeLabelRight.insert(\"g\").attr(\"class\", \"inner\");\r\n    fo = inner.node().appendChild(endLabelElement);\r\n    const slBox = endLabelElement.getBBox();\r\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\r\n    endEdgeLabelRight.node().appendChild(endLabelElement);\r\n    if (!terminalLabels[edge.id]) {\r\n      terminalLabels[edge.id] = {};\r\n    }\r\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\r\n    setTerminalWidth(fo, edge.endLabelRight);\r\n  }\r\n  return labelElement;\r\n};\r\nfunction setTerminalWidth(fo, value) {\r\n  if (getConfig().flowchart.htmlLabels && fo) {\r\n    fo.style.width = value.length * 9 + \"px\";\r\n    fo.style.height = \"12px\";\r\n  }\r\n}\r\nconst positionEdgeLabel = (edge, paths) => {\r\n  log.info(\"Moving label abc78 \", edge.id, edge.label, edgeLabels[edge.id]);\r\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\r\n  if (edge.label) {\r\n    const el = edgeLabels[edge.id];\r\n    let x = edge.x;\r\n    let y = edge.y;\r\n    if (path) {\r\n      const pos = utils.calcLabelPosition(path);\r\n      log.info(\r\n        \"Moving label \" + edge.label + \" from (\",\r\n        x,\r\n        \",\",\r\n        y,\r\n        \") to (\",\r\n        pos.x,\r\n        \",\",\r\n        pos.y,\r\n        \") abc78\"\r\n      );\r\n      if (paths.updatedPath) {\r\n        x = pos.x;\r\n        y = pos.y;\r\n      }\r\n    }\r\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\r\n  }\r\n  if (edge.startLabelLeft) {\r\n    const el = terminalLabels[edge.id].startLeft;\r\n    let x = edge.x;\r\n    let y = edge.y;\r\n    if (path) {\r\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, \"start_left\", path);\r\n      x = pos.x;\r\n      y = pos.y;\r\n    }\r\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\r\n  }\r\n  if (edge.startLabelRight) {\r\n    const el = terminalLabels[edge.id].startRight;\r\n    let x = edge.x;\r\n    let y = edge.y;\r\n    if (path) {\r\n      const pos = utils.calcTerminalLabelPosition(\r\n        edge.arrowTypeStart ? 10 : 0,\r\n        \"start_right\",\r\n        path\r\n      );\r\n      x = pos.x;\r\n      y = pos.y;\r\n    }\r\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\r\n  }\r\n  if (edge.endLabelLeft) {\r\n    const el = terminalLabels[edge.id].endLeft;\r\n    let x = edge.x;\r\n    let y = edge.y;\r\n    if (path) {\r\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, \"end_left\", path);\r\n      x = pos.x;\r\n      y = pos.y;\r\n    }\r\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\r\n  }\r\n  if (edge.endLabelRight) {\r\n    const el = terminalLabels[edge.id].endRight;\r\n    let x = edge.x;\r\n    let y = edge.y;\r\n    if (path) {\r\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, \"end_right\", path);\r\n      x = pos.x;\r\n      y = pos.y;\r\n    }\r\n    el.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\r\n  }\r\n};\r\nconst outsideNode = (node, point2) => {\r\n  const x = node.x;\r\n  const y = node.y;\r\n  const dx = Math.abs(point2.x - x);\r\n  const dy = Math.abs(point2.y - y);\r\n  const w = node.width / 2;\r\n  const h = node.height / 2;\r\n  if (dx >= w || dy >= h) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\nconst intersection = (node, outsidePoint, insidePoint) => {\r\n  log.warn(`intersection calc abc89:\r\n  outsidePoint: ${JSON.stringify(outsidePoint)}\r\n  insidePoint : ${JSON.stringify(insidePoint)}\r\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\r\n  const x = node.x;\r\n  const y = node.y;\r\n  const dx = Math.abs(x - insidePoint.x);\r\n  const w = node.width / 2;\r\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\r\n  const h = node.height / 2;\r\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\r\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\r\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) {\r\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\r\n    r = R * q / Q;\r\n    const res = {\r\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\r\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q\r\n    };\r\n    if (r === 0) {\r\n      res.x = outsidePoint.x;\r\n      res.y = outsidePoint.y;\r\n    }\r\n    if (R === 0) {\r\n      res.x = outsidePoint.x;\r\n    }\r\n    if (Q === 0) {\r\n      res.y = outsidePoint.y;\r\n    }\r\n    log.warn(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\r\n    return res;\r\n  } else {\r\n    if (insidePoint.x < outsidePoint.x) {\r\n      r = outsidePoint.x - w - x;\r\n    } else {\r\n      r = x - w - outsidePoint.x;\r\n    }\r\n    let q = Q * r / R;\r\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\r\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\r\n    log.warn(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\r\n    if (r === 0) {\r\n      _x = outsidePoint.x;\r\n      _y = outsidePoint.y;\r\n    }\r\n    if (R === 0) {\r\n      _x = outsidePoint.x;\r\n    }\r\n    if (Q === 0) {\r\n      _y = outsidePoint.y;\r\n    }\r\n    return { x: _x, y: _y };\r\n  }\r\n};\r\nconst cutPathAtIntersect = (_points, boundryNode) => {\r\n  log.warn(\"abc88 cutPathAtIntersect\", _points, boundryNode);\r\n  let points = [];\r\n  let lastPointOutside = _points[0];\r\n  let isInside = false;\r\n  _points.forEach((point2) => {\r\n    log.info(\"abc88 checking point\", point2, boundryNode);\r\n    if (!outsideNode(boundryNode, point2) && !isInside) {\r\n      const inter = intersection(boundryNode, lastPointOutside, point2);\r\n      log.warn(\"abc88 inside\", point2, lastPointOutside, inter);\r\n      log.warn(\"abc88 intersection\", inter);\r\n      let pointPresent = false;\r\n      points.forEach((p) => {\r\n        pointPresent = pointPresent || p.x === inter.x && p.y === inter.y;\r\n      });\r\n      if (!points.some((e) => e.x === inter.x && e.y === inter.y)) {\r\n        points.push(inter);\r\n      } else {\r\n        log.warn(\"abc88 no intersect\", inter, points);\r\n      }\r\n      isInside = true;\r\n    } else {\r\n      log.warn(\"abc88 outside\", point2, lastPointOutside);\r\n      lastPointOutside = point2;\r\n      if (!isInside) {\r\n        points.push(point2);\r\n      }\r\n    }\r\n  });\r\n  log.warn(\"abc88 returning points\", points);\r\n  return points;\r\n};\r\nconst insertEdge = function(elem, e, edge, clusterDb, diagramType, graph) {\r\n  let points = edge.points;\r\n  let pointsHasChanged = false;\r\n  const tail = graph.node(e.v);\r\n  var head = graph.node(e.w);\r\n  log.info(\"abc88 InsertEdge: \", edge);\r\n  if (head.intersect && tail.intersect) {\r\n    points = points.slice(1, edge.points.length - 1);\r\n    points.unshift(tail.intersect(points[0]));\r\n    log.info(\r\n      \"Last point\",\r\n      points[points.length - 1],\r\n      head,\r\n      head.intersect(points[points.length - 1])\r\n    );\r\n    points.push(head.intersect(points[points.length - 1]));\r\n  }\r\n  if (edge.toCluster) {\r\n    log.info(\"to cluster abc88\", clusterDb[edge.toCluster]);\r\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\r\n    pointsHasChanged = true;\r\n  }\r\n  if (edge.fromCluster) {\r\n    log.info(\"from cluster abc88\", clusterDb[edge.fromCluster]);\r\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\r\n    pointsHasChanged = true;\r\n  }\r\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\r\n  let curve;\r\n  if (diagramType === \"graph\" || diagramType === \"flowchart\") {\r\n    curve = edge.curve || curveBasis;\r\n  } else {\r\n    curve = curveBasis;\r\n  }\r\n  const lineFunction = line().x(function(d) {\r\n    return d.x;\r\n  }).y(function(d) {\r\n    return d.y;\r\n  }).curve(curve);\r\n  let strokeClasses;\r\n  switch (edge.thickness) {\r\n    case \"normal\":\r\n      strokeClasses = \"edge-thickness-normal\";\r\n      break;\r\n    case \"thick\":\r\n      strokeClasses = \"edge-thickness-thick\";\r\n      break;\r\n    case \"invisible\":\r\n      strokeClasses = \"edge-thickness-thick\";\r\n      break;\r\n    default:\r\n      strokeClasses = \"\";\r\n  }\r\n  switch (edge.pattern) {\r\n    case \"solid\":\r\n      strokeClasses += \" edge-pattern-solid\";\r\n      break;\r\n    case \"dotted\":\r\n      strokeClasses += \" edge-pattern-dotted\";\r\n      break;\r\n    case \"dashed\":\r\n      strokeClasses += \" edge-pattern-dashed\";\r\n      break;\r\n  }\r\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", edge.id).attr(\"class\", \" \" + strokeClasses + (edge.classes ? \" \" + edge.classes : \"\")).attr(\"style\", edge.style);\r\n  let url = \"\";\r\n  if (getConfig().flowchart.arrowMarkerAbsolute || getConfig().state.arrowMarkerAbsolute) {\r\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\r\n    url = url.replace(/\\(/g, \"\\\\(\");\r\n    url = url.replace(/\\)/g, \"\\\\)\");\r\n  }\r\n  log.info(\"arrowTypeStart\", edge.arrowTypeStart);\r\n  log.info(\"arrowTypeEnd\", edge.arrowTypeEnd);\r\n  switch (edge.arrowTypeStart) {\r\n    case \"arrow_cross\":\r\n      svgPath.attr(\"marker-start\", \"url(\" + url + \"#\" + diagramType + \"-crossStart)\");\r\n      break;\r\n    case \"arrow_point\":\r\n      svgPath.attr(\"marker-start\", \"url(\" + url + \"#\" + diagramType + \"-pointStart)\");\r\n      break;\r\n    case \"arrow_barb\":\r\n      svgPath.attr(\"marker-start\", \"url(\" + url + \"#\" + diagramType + \"-barbStart)\");\r\n      break;\r\n    case \"arrow_circle\":\r\n      svgPath.attr(\"marker-start\", \"url(\" + url + \"#\" + diagramType + \"-circleStart)\");\r\n      break;\r\n    case \"aggregation\":\r\n      svgPath.attr(\"marker-start\", \"url(\" + url + \"#\" + diagramType + \"-aggregationStart)\");\r\n      break;\r\n    case \"extension\":\r\n      svgPath.attr(\"marker-start\", \"url(\" + url + \"#\" + diagramType + \"-extensionStart)\");\r\n      break;\r\n    case \"composition\":\r\n      svgPath.attr(\"marker-start\", \"url(\" + url + \"#\" + diagramType + \"-compositionStart)\");\r\n      break;\r\n    case \"dependency\":\r\n      svgPath.attr(\"marker-start\", \"url(\" + url + \"#\" + diagramType + \"-dependencyStart)\");\r\n      break;\r\n    case \"lollipop\":\r\n      svgPath.attr(\"marker-start\", \"url(\" + url + \"#\" + diagramType + \"-lollipopStart)\");\r\n      break;\r\n  }\r\n  switch (edge.arrowTypeEnd) {\r\n    case \"arrow_cross\":\r\n      svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + diagramType + \"-crossEnd)\");\r\n      break;\r\n    case \"arrow_point\":\r\n      svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + diagramType + \"-pointEnd)\");\r\n      break;\r\n    case \"arrow_barb\":\r\n      svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + diagramType + \"-barbEnd)\");\r\n      break;\r\n    case \"arrow_circle\":\r\n      svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + diagramType + \"-circleEnd)\");\r\n      break;\r\n    case \"aggregation\":\r\n      svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + diagramType + \"-aggregationEnd)\");\r\n      break;\r\n    case \"extension\":\r\n      svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + diagramType + \"-extensionEnd)\");\r\n      break;\r\n    case \"composition\":\r\n      svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + diagramType + \"-compositionEnd)\");\r\n      break;\r\n    case \"dependency\":\r\n      svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + diagramType + \"-dependencyEnd)\");\r\n      break;\r\n    case \"lollipop\":\r\n      svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + diagramType + \"-lollipopEnd)\");\r\n      break;\r\n  }\r\n  let paths = {};\r\n  if (pointsHasChanged) {\r\n    paths.updatedPath = points;\r\n  }\r\n  paths.originalPath = edge.points;\r\n  return paths;\r\n};\r\nexport {\r\n  insertMarkers$1 as a,\r\n  clear$1 as b,\r\n  createLabel$1 as c,\r\n  clear as d,\r\n  insertNode as e,\r\n  insertEdgeLabel as f,\r\n  insertEdge as g,\r\n  positionEdgeLabel as h,\r\n  intersectRect$1 as i,\r\n  labelHelper as l,\r\n  positionNode as p,\r\n  setNodeElem as s,\r\n  updateNodeBounds as u\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAIA,IAAM,gBAAgB,CAAC,MAAM,aAAa,MAAM,OAAO;AACrD,cAAY,QAAQ,CAAC,eAAe;AAClC,YAAQ,UAAU,EAAE,MAAM,MAAM,EAAE;AAAA,EACpC,CAAC;AACH;AACA,IAAM,YAAY,CAAC,MAAM,MAAM,OAAO;AACpC,QAAI,MAAM,uBAAuB,EAAE;AACnC,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,iBAAiB,EAAE,KAAK,SAAS,sBAAsB,IAAI,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,GAAG,EAAE,KAAK,gBAAgB,GAAG,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,oBAAoB;AAC3Q,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,eAAe,EAAE,KAAK,SAAS,sBAAsB,IAAI,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,oBAAoB;AAC1Q;AACA,IAAM,cAAc,CAAC,MAAM,SAAS;AAClC,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,mBAAmB,EAAE,KAAK,SAAS,wBAAwB,IAAI,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,GAAG,EAAE,KAAK,gBAAgB,GAAG,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,0BAA0B;AACrR,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,iBAAiB,EAAE,KAAK,SAAS,wBAAwB,IAAI,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,0BAA0B;AACpR;AACA,IAAM,cAAc,CAAC,MAAM,SAAS;AAClC,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,mBAAmB,EAAE,KAAK,SAAS,wBAAwB,IAAI,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,GAAG,EAAE,KAAK,gBAAgB,GAAG,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,0BAA0B;AACrR,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,iBAAiB,EAAE,KAAK,SAAS,wBAAwB,IAAI,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,0BAA0B;AACpR;AACA,IAAM,aAAa,CAAC,MAAM,SAAS;AACjC,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,kBAAkB,EAAE,KAAK,SAAS,uBAAuB,IAAI,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,GAAG,EAAE,KAAK,gBAAgB,GAAG,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,yBAAyB;AAClR,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,gBAAgB,EAAE,KAAK,SAAS,uBAAuB,IAAI,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,2BAA2B;AACnR;AACA,IAAM,WAAW,CAAC,MAAM,SAAS;AAC/B,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,gBAAgB,EAAE,KAAK,SAAS,qBAAqB,IAAI,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,GAAG,EAAE,KAAK,gBAAgB,GAAG,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,UAAU,OAAO,EAAE,KAAK,QAAQ,OAAO,EAAE,KAAK,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC;AACpU;AACA,IAAM,QAAQ,CAAC,MAAM,SAAS;AAC5B,OAAK,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,WAAW,EAAE,KAAK,SAAS,YAAY,IAAI,EAAE,KAAK,WAAW,WAAW,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,gBAAgB,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,uBAAuB,EAAE,KAAK,SAAS,iBAAiB,EAAE,MAAM,gBAAgB,CAAC,EAAE,MAAM,oBAAoB,KAAK;AAC5Y,OAAK,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,aAAa,EAAE,KAAK,SAAS,YAAY,IAAI,EAAE,KAAK,WAAW,WAAW,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,gBAAgB,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,wBAAwB,EAAE,KAAK,SAAS,iBAAiB,EAAE,MAAM,gBAAgB,CAAC,EAAE,MAAM,oBAAoB,KAAK;AAChZ;AACA,IAAM,WAAW,CAAC,MAAM,SAAS;AAC/B,OAAK,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,YAAY,EAAE,KAAK,SAAS,YAAY,IAAI,EAAE,KAAK,WAAW,WAAW,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,gBAAgB,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,GAAG,EAAE,KAAK,MAAM,GAAG,EAAE,KAAK,KAAK,GAAG,EAAE,KAAK,SAAS,iBAAiB,EAAE,MAAM,gBAAgB,CAAC,EAAE,MAAM,oBAAoB,KAAK;AAC3Z,OAAK,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,cAAc,EAAE,KAAK,SAAS,YAAY,IAAI,EAAE,KAAK,WAAW,WAAW,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,gBAAgB,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,GAAG,EAAE,KAAK,MAAM,GAAG,EAAE,KAAK,KAAK,GAAG,EAAE,KAAK,SAAS,iBAAiB,EAAE,MAAM,gBAAgB,CAAC,EAAE,MAAM,oBAAoB,KAAK;AAC/Z;AACA,IAAM,QAAQ,CAAC,MAAM,SAAS;AAC5B,OAAK,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,WAAW,EAAE,KAAK,SAAS,kBAAkB,IAAI,EAAE,KAAK,WAAW,WAAW,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,GAAG,EAAE,KAAK,eAAe,gBAAgB,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,2BAA2B,EAAE,KAAK,SAAS,iBAAiB,EAAE,MAAM,gBAAgB,CAAC,EAAE,MAAM,oBAAoB,KAAK;AACxZ,OAAK,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,aAAa,EAAE,KAAK,SAAS,kBAAkB,IAAI,EAAE,KAAK,WAAW,WAAW,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,GAAG,EAAE,KAAK,eAAe,gBAAgB,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,2BAA2B,EAAE,KAAK,SAAS,iBAAiB,EAAE,MAAM,gBAAgB,CAAC,EAAE,MAAM,oBAAoB,KAAK;AAC5Z;AACA,IAAM,OAAO,CAAC,MAAM,SAAS;AAC3B,OAAK,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,OAAO,UAAU,EAAE,KAAK,QAAQ,EAAE,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,EAAE,EAAE,KAAK,gBAAgB,EAAE,EAAE,KAAK,eAAe,aAAa,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,2BAA2B;AACrQ;AACA,IAAM,UAAU;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR;AAAA,EACA;AACF;AACA,IAAM,kBAAkB;AACxB,SAAS,WAAW,KAAK,SAAS;AAChC,MAAI,SAAS;AACX,QAAI,KAAK,SAAS,OAAO;AAAA,EAC3B;AACF;AACA,SAAS,aAAa,MAAM;AAC1B,QAAM,KAAK,eAAO,SAAS,gBAAgB,8BAA8B,eAAe,CAAC;AACzF,QAAM,MAAM,GAAG,OAAO,WAAW;AACjC,QAAM,QAAQ,KAAK;AACnB,QAAM,aAAa,KAAK,SAAS,cAAc;AAC/C,MAAI;AAAA,IACF,kBAAkB,aAAa,QAAQ,KAAK,aAAa,YAAY,KAAK,aAAa,MAAM,MAAM,MAAM,QAAQ;AAAA,EACnH;AACA,aAAW,KAAK,KAAK,UAAU;AAC/B,MAAI,MAAM,WAAW,cAAc;AACnC,MAAI,MAAM,eAAe,QAAQ;AACjC,MAAI,KAAK,SAAS,8BAA8B;AAChD,SAAO,GAAG,KAAK;AACjB;AACA,IAAM,cAAc,CAAC,aAAa,OAAO,SAAS,WAAW;AAC3D,MAAI,aAAa,eAAe;AAChC,MAAI,OAAO,eAAe,UAAU;AAClC,iBAAa,WAAW,CAAC;AAAA,EAC3B;AACA,MAAI,SAAS,YAAU,EAAE,UAAU,UAAU,GAAG;AAC9C,iBAAa,WAAW,QAAQ,WAAW,QAAQ;AACnD,UAAI,KAAK,eAAe,UAAU;AAClC,UAAM,OAAO;AAAA,MACX;AAAA,MACA,OAAO,eAAe,UAAU,EAAE;AAAA,QAChC;AAAA,QACA,CAAC,MAAM,aAAa,EAAE,QAAQ,KAAK,GAAG,CAAC;AAAA,MACzC;AAAA,MACA,YAAY,MAAM,QAAQ,SAAS,QAAQ;AAAA,IAC7C;AACA,QAAI,aAAa,aAAa,IAAI;AAClC,WAAO;AAAA,EACT,OAAO;AACL,UAAM,WAAW,SAAS,gBAAgB,8BAA8B,MAAM;AAC9E,aAAS,aAAa,SAAS,MAAM,QAAQ,UAAU,OAAO,CAAC;AAC/D,QAAI,OAAO,CAAC;AACZ,QAAI,OAAO,eAAe,UAAU;AAClC,aAAO,WAAW,MAAM,qBAAqB;AAAA,IAC/C,WAAW,MAAM,QAAQ,UAAU,GAAG;AACpC,aAAO;AAAA,IACT,OAAO;AACL,aAAO,CAAC;AAAA,IACV;AACA,eAAW,OAAO,MAAM;AACtB,YAAM,QAAQ,SAAS,gBAAgB,8BAA8B,OAAO;AAC5E,YAAM,eAAe,wCAAwC,aAAa,UAAU;AACpF,YAAM,aAAa,MAAM,KAAK;AAC9B,YAAM,aAAa,KAAK,GAAG;AAC3B,UAAI,SAAS;AACX,cAAM,aAAa,SAAS,WAAW;AAAA,MACzC,OAAO;AACL,cAAM,aAAa,SAAS,KAAK;AAAA,MACnC;AACA,YAAM,cAAc,IAAI,KAAK;AAC7B,eAAS,YAAY,KAAK;AAAA,IAC5B;AACA,WAAO;AAAA,EACT;AACF;AACA,IAAM,gBAAgB;AACtB,IAAM,cAAc,OAAO,QAAQ,MAAM,UAAU,WAAW;AAC5D,MAAI;AACJ,QAAM,gBAAgB,KAAK,iBAAiB,SAAS,YAAU,EAAE,UAAU,UAAU;AACrF,MAAI,CAAC,UAAU;AACb,cAAU;AAAA,EACZ,OAAO;AACL,cAAU;AAAA,EACZ;AACA,QAAM,WAAW,OAAO,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO,EAAE,KAAK,MAAM,KAAK,SAAS,KAAK,EAAE;AAC3F,QAAM,QAAQ,SAAS,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO,EAAE,KAAK,SAAS,KAAK,UAAU;AACvF,MAAI;AACJ,MAAI,KAAK,cAAc,QAAQ;AAC7B,gBAAY;AAAA,EACd,OAAO;AACL,gBAAY,OAAO,KAAK,cAAc,WAAW,KAAK,YAAY,KAAK,UAAU,CAAC;AAAA,EACpF;AACA,QAAM,WAAW,MAAM,KAAK;AAC5B,MAAI;AACJ,MAAI,KAAK,cAAc,YAAY;AACjC,WAAO,WAAW,OAAO,eAAa,eAAe,SAAS,GAAG,YAAU,CAAC,GAAG;AAAA,MAC7E;AAAA,MACA,OAAO,KAAK,SAAS,YAAU,EAAE,UAAU;AAAA,MAC3C,SAAS;AAAA,IACX,CAAC;AAAA,EACH,OAAO;AACL,WAAO,SAAS;AAAA,MACd;AAAA,QACE,eAAa,eAAe,SAAS,GAAG,YAAU,CAAC;AAAA,QACnD,KAAK;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,MAAI,OAAO,KAAK,QAAQ;AACxB,QAAM,cAAc,KAAK,UAAU;AACnC,MAAI,SAAS,YAAU,EAAE,UAAU,UAAU,GAAG;AAC9C,UAAM,MAAM,KAAK,SAAS,CAAC;AAC3B,UAAM,KAAK,eAAO,IAAI;AACtB,UAAM,SAAS,IAAI,qBAAqB,KAAK;AAC7C,QAAI,QAAQ;AACV,YAAM,YAAY,UAAU,QAAQ,eAAe,EAAE,EAAE,KAAK,MAAM;AAClE,YAAM,QAAQ;AAAA,QACZ,CAAC,GAAG,MAAM,EAAE;AAAA,UACV,CAAC,QAAQ,IAAI;AAAA,YACX,CAAC,QAAQ,IAAI,iBAAiB,QAAQ,WAAW;AAC/C,kBAAI,MAAM,UAAU;AACpB,kBAAI,MAAM,gBAAgB;AAC1B,kBAAI,WAAW;AACb,sBAAM,eAAe,YAAU,EAAE,WAAW,YAAU,EAAE,WAAW,OAAO,iBAAiB,SAAS,IAAI,EAAE;AAC1G,sBAAM,kBAAkB;AACxB,oBAAI,MAAM,QAAQ,SAAS,cAAc,EAAE,IAAI,kBAAkB;AAAA,cACnE,OAAO;AACL,oBAAI,MAAM,QAAQ;AAAA,cACpB;AACA,kBAAI,GAAG;AAAA,YACT,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,WAAO,IAAI,sBAAsB;AACjC,OAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,OAAG,KAAK,UAAU,KAAK,MAAM;AAAA,EAC/B;AACA,MAAI,eAAe;AACjB,UAAM,KAAK,aAAa,eAAe,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,SAAS,IAAI,GAAG;AAAA,EACxF,OAAO;AACL,UAAM,KAAK,aAAa,kBAAkB,CAAC,KAAK,SAAS,IAAI,GAAG;AAAA,EAClE;AACA,MAAI,KAAK,aAAa;AACpB,UAAM,KAAK,aAAa,eAAe,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,SAAS,IAAI,GAAG;AAAA,EACxF;AACA,QAAM,OAAO,QAAQ,cAAc;AACnC,SAAO,EAAE,UAAU,MAAM,aAAa,MAAM;AAC9C;AACA,IAAM,mBAAmB,CAAC,MAAM,YAAY;AAC1C,QAAM,OAAO,QAAQ,KAAK,EAAE,QAAQ;AACpC,OAAK,QAAQ,KAAK;AAClB,OAAK,SAAS,KAAK;AACrB;AACA,SAAS,mBAAmB,QAAQ,GAAG,GAAG,QAAQ;AAChD,SAAO,OAAO,OAAO,WAAW,cAAc,EAAE;AAAA,IAC9C;AAAA,IACA,OAAO,IAAI,SAAS,GAAG;AACrB,aAAO,EAAE,IAAI,MAAM,EAAE;AAAA,IACvB,CAAC,EAAE,KAAK,GAAG;AAAA,EACb,EAAE,KAAK,SAAS,iBAAiB,EAAE,KAAK,aAAa,eAAe,CAAC,IAAI,IAAI,MAAM,IAAI,IAAI,GAAG;AAChG;AACA,SAAS,cAAc,MAAM,QAAQ;AACnC,SAAO,KAAK,UAAU,MAAM;AAC9B;AACA,SAAS,iBAAiB,MAAM,IAAI,IAAI,QAAQ;AAC9C,MAAI,KAAK,KAAK;AACd,MAAI,KAAK,KAAK;AACd,MAAI,KAAK,KAAK,OAAO;AACrB,MAAI,KAAK,KAAK,OAAO;AACrB,MAAI,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AACzD,MAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,GAAG;AACpC,MAAI,OAAO,IAAI,IAAI;AACjB,SAAK,CAAC;AAAA,EACR;AACA,MAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,GAAG;AACpC,MAAI,OAAO,IAAI,IAAI;AACjB,SAAK,CAAC;AAAA,EACR;AACA,SAAO,EAAE,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG;AAClC;AACA,SAAS,gBAAgB,MAAM,IAAI,QAAQ;AACzC,SAAO,iBAAiB,MAAM,IAAI,IAAI,MAAM;AAC9C;AACA,SAAS,cAAc,IAAI,IAAI,IAAI,IAAI;AACrC,MAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxB,MAAI,IAAI,IAAI,IAAI;AAChB,MAAI,OAAO,QAAQ;AACnB,MAAI,GAAG;AACP,OAAK,GAAG,IAAI,GAAG;AACf,OAAK,GAAG,IAAI,GAAG;AACf,OAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAC7B,OAAK,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AAC7B,OAAK,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AAC7B,MAAI,OAAO,KAAK,OAAO,KAAK,SAAS,IAAI,EAAE,GAAG;AAC5C;AAAA,EACF;AACA,OAAK,GAAG,IAAI,GAAG;AACf,OAAK,GAAG,IAAI,GAAG;AACf,OAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAC7B,OAAK,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AAC7B,OAAK,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AAC7B,MAAI,OAAO,KAAK,OAAO,KAAK,SAAS,IAAI,EAAE,GAAG;AAC5C;AAAA,EACF;AACA,UAAQ,KAAK,KAAK,KAAK;AACvB,MAAI,UAAU,GAAG;AACf;AAAA,EACF;AACA,WAAS,KAAK,IAAI,QAAQ,CAAC;AAC3B,QAAM,KAAK,KAAK,KAAK;AACrB,MAAI,MAAM,KAAK,MAAM,UAAU,SAAS,MAAM,UAAU;AACxD,QAAM,KAAK,KAAK,KAAK;AACrB,MAAI,MAAM,KAAK,MAAM,UAAU,SAAS,MAAM,UAAU;AACxD,SAAO,EAAE,GAAG,EAAE;AAChB;AACA,SAAS,SAAS,IAAI,IAAI;AACxB,SAAO,KAAK,KAAK;AACnB;AACA,SAAS,iBAAiB,MAAM,YAAY,QAAQ;AAClD,MAAI,KAAK,KAAK;AACd,MAAI,KAAK,KAAK;AACd,MAAI,gBAAgB,CAAC;AACrB,MAAI,OAAO,OAAO;AAClB,MAAI,OAAO,OAAO;AAClB,MAAI,OAAO,WAAW,YAAY,YAAY;AAC5C,eAAW,QAAQ,SAAS,OAAO;AACjC,aAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAC7B,aAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAAA,IAC/B,CAAC;AAAA,EACH,OAAO;AACL,WAAO,KAAK,IAAI,MAAM,WAAW,CAAC;AAClC,WAAO,KAAK,IAAI,MAAM,WAAW,CAAC;AAAA,EACpC;AACA,MAAI,OAAO,KAAK,KAAK,QAAQ,IAAI;AACjC,MAAI,MAAM,KAAK,KAAK,SAAS,IAAI;AACjC,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,QAAI,KAAK,WAAW,CAAC;AACrB,QAAI,KAAK,WAAW,IAAI,WAAW,SAAS,IAAI,IAAI,IAAI,CAAC;AACzD,QAAI,aAAa;AAAA,MACf;AAAA,MACA;AAAA,MACA,EAAE,GAAG,OAAO,GAAG,GAAG,GAAG,MAAM,GAAG,EAAE;AAAA,MAChC,EAAE,GAAG,OAAO,GAAG,GAAG,GAAG,MAAM,GAAG,EAAE;AAAA,IAClC;AACA,QAAI,YAAY;AACd,oBAAc,KAAK,UAAU;AAAA,IAC/B;AAAA,EACF;AACA,MAAI,CAAC,cAAc,QAAQ;AACzB,WAAO;AAAA,EACT;AACA,MAAI,cAAc,SAAS,GAAG;AAC5B,kBAAc,KAAK,SAAS,GAAG,GAAG;AAChC,UAAI,MAAM,EAAE,IAAI,OAAO;AACvB,UAAI,MAAM,EAAE,IAAI,OAAO;AACvB,UAAI,QAAQ,KAAK,KAAK,MAAM,MAAM,MAAM,GAAG;AAC3C,UAAI,MAAM,EAAE,IAAI,OAAO;AACvB,UAAI,MAAM,EAAE,IAAI,OAAO;AACvB,UAAI,QAAQ,KAAK,KAAK,MAAM,MAAM,MAAM,GAAG;AAC3C,aAAO,QAAQ,QAAQ,KAAK,UAAU,QAAQ,IAAI;AAAA,IACpD,CAAC;AAAA,EACH;AACA,SAAO,cAAc,CAAC;AACxB;AACA,IAAM,gBAAgB,CAAC,MAAM,WAAW;AACtC,MAAI,IAAI,KAAK;AACb,MAAI,IAAI,KAAK;AACb,MAAI,KAAK,OAAO,IAAI;AACpB,MAAI,KAAK,OAAO,IAAI;AACpB,MAAI,IAAI,KAAK,QAAQ;AACrB,MAAI,IAAI,KAAK,SAAS;AACtB,MAAI,IAAI;AACR,MAAI,KAAK,IAAI,EAAE,IAAI,IAAI,KAAK,IAAI,EAAE,IAAI,GAAG;AACvC,QAAI,KAAK,GAAG;AACV,UAAI,CAAC;AAAA,IACP;AACA,SAAK,OAAO,IAAI,IAAI,IAAI,KAAK;AAC7B,SAAK;AAAA,EACP,OAAO;AACL,QAAI,KAAK,GAAG;AACV,UAAI,CAAC;AAAA,IACP;AACA,SAAK;AACL,SAAK,OAAO,IAAI,IAAI,IAAI,KAAK;AAAA,EAC/B;AACA,SAAO,EAAE,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG;AAChC;AACA,IAAM,kBAAkB;AACxB,IAAM,YAAY;AAAA,EAChB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM;AACR;AACA,IAAM,OAAO,OAAO,QAAQ,SAAS;AACnC,QAAM,gBAAgB,KAAK,iBAAiB,YAAU,EAAE,UAAU;AAClE,MAAI,CAAC,eAAe;AAClB,SAAK,cAAc;AAAA,EACrB;AACA,QAAM,EAAE,UAAU,MAAM,YAAY,IAAI,MAAM;AAAA,IAC5C;AAAA,IACA;AAAA,IACA,UAAU,KAAK;AAAA,IACf;AAAA,EACF;AACA,QAAI,KAAK,cAAc,KAAK,OAAO;AACnC,QAAM,QAAQ,SAAS,OAAO,QAAQ,cAAc;AACpD,QAAM,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,KAAK,CAAC,KAAK,QAAQ,IAAI,WAAW,EAAE,KAAK,KAAK,CAAC,KAAK,SAAS,IAAI,WAAW,EAAE,KAAK,SAAS,KAAK,QAAQ,KAAK,OAAO,EAAE,KAAK,UAAU,KAAK,SAAS,KAAK,OAAO;AACnN,mBAAiB,MAAM,KAAK;AAC5B,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,KAAK,MAAM,MAAM;AAAA,EACpC;AACA,SAAO;AACT;AACA,IAAM,SAAS;AACf,IAAM,WAAW,OAAO,QAAQ,SAAS;AACvC,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,QAAQ,KAAK;AAC5B,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,IAAI,IAAI;AACd,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,IAAI,GAAG,GAAG,EAAE;AAAA,IACjB,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE;AAAA,IAClB,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IAClB,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE;AAAA,EACpB;AACA,QAAI,KAAK,wBAAwB;AACjC,QAAM,eAAe,mBAAmB,UAAU,GAAG,GAAG,MAAM;AAC9D,eAAa,KAAK,SAAS,KAAK,KAAK;AACrC,mBAAiB,MAAM,YAAY;AACnC,OAAK,YAAY,SAAS,QAAQ;AAChC,UAAI,KAAK,kBAAkB;AAC3B,WAAO,UAAU,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC/C;AACA,SAAO;AACT;AACA,IAAM,SAAS,CAAC,QAAQ,SAAS;AAC/B,QAAM,WAAW,OAAO,OAAO,GAAG,EAAE,KAAK,SAAS,cAAc,EAAE,KAAK,MAAM,KAAK,SAAS,KAAK,EAAE;AAClG,QAAM,IAAI;AACV,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,GAAG,GAAG,IAAI,EAAE;AAAA,IACjB,EAAE,GAAG,IAAI,GAAG,GAAG,EAAE;AAAA,IACjB,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE;AAAA,IAClB,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE;AAAA,EACpB;AACA,QAAM,UAAU,SAAS,OAAO,WAAW,cAAc,EAAE;AAAA,IACzD;AAAA,IACA,OAAO,IAAI,SAAS,GAAG;AACrB,aAAO,EAAE,IAAI,MAAM,EAAE;AAAA,IACvB,CAAC,EAAE,KAAK,GAAG;AAAA,EACb;AACA,UAAQ,KAAK,SAAS,aAAa,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,SAAS,EAAE,EAAE,KAAK,UAAU,EAAE;AACrF,OAAK,QAAQ;AACb,OAAK,SAAS;AACd,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,OAAO,MAAM,IAAI,MAAM;AAAA,EAC1C;AACA,SAAO;AACT;AACA,IAAM,UAAU,OAAO,QAAQ,SAAS;AACtC,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI;AACV,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,IAAI,IAAI;AACd,QAAM,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK;AACpC,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,IACb,EAAE,GAAG,IAAI,GAAG,GAAG,EAAE;AAAA,IACjB,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE;AAAA,IAClB,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IAClB,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE;AAAA,IACd,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE;AAAA,EACpB;AACA,QAAM,MAAM,mBAAmB,UAAU,GAAG,GAAG,MAAM;AACrD,MAAI,KAAK,SAAS,KAAK,KAAK;AAC5B,mBAAiB,MAAM,GAAG;AAC1B,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC/C;AACA,SAAO;AACT;AACA,IAAM,sBAAsB,OAAO,QAAQ,SAAS;AAClD,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,QAAQ,KAAK;AAC5B,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE;AAAA,IAClB,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,IACb,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE;AAAA,IACd,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IACnB,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE;AAAA,EACpB;AACA,QAAM,KAAK,mBAAmB,UAAU,GAAG,GAAG,MAAM;AACpD,KAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,OAAK,QAAQ,IAAI;AACjB,OAAK,SAAS;AACd,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC/C;AACA,SAAO;AACT;AACA,IAAM,aAAa,OAAO,QAAQ,SAAS;AACzC,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,QAAQ,KAAK;AAC5B,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,KAAK,IAAI,GAAG,GAAG,EAAE;AAAA,IACtB,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,EAAE;AAAA,IACrB,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IAC1B,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,EACpB;AACA,QAAM,KAAK,mBAAmB,UAAU,GAAG,GAAG,MAAM;AACpD,KAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,mBAAiB,MAAM,EAAE;AACzB,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC/C;AACA,SAAO;AACT;AACA,IAAM,YAAY,OAAO,QAAQ,SAAS;AACxC,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,QAAQ,KAAK;AAC5B,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,EAAE;AAAA,IACrB,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,EAAE;AAAA,IACrB,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IAC1B,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,EACrB;AACA,QAAM,KAAK,mBAAmB,UAAU,GAAG,GAAG,MAAM;AACpD,KAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,mBAAiB,MAAM,EAAE;AACzB,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC/C;AACA,SAAO;AACT;AACA,IAAM,YAAY,OAAO,QAAQ,SAAS;AACxC,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,QAAQ,KAAK;AAC5B,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,KAAK,IAAI,GAAG,GAAG,EAAE;AAAA,IACtB,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,EAAE;AAAA,IACzB,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IACtB,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,EACpB;AACA,QAAM,KAAK,mBAAmB,UAAU,GAAG,GAAG,MAAM;AACpD,KAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,mBAAiB,MAAM,EAAE;AACzB,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC/C;AACA,SAAO;AACT;AACA,IAAM,gBAAgB,OAAO,QAAQ,SAAS;AAC5C,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,QAAQ,KAAK;AAC5B,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,IAAI,GAAG,GAAG,EAAE;AAAA,IACjB,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,EAAE;AAAA,IACrB,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IAC1B,EAAE,GAAG,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,EACzB;AACA,QAAM,KAAK,mBAAmB,UAAU,GAAG,GAAG,MAAM;AACpD,KAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,mBAAiB,MAAM,EAAE;AACzB,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC/C;AACA,SAAO;AACT;AACA,IAAM,uBAAuB,OAAO,QAAQ,SAAS;AACnD,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,QAAQ,KAAK;AAC5B,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,IACb,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,EAAE;AAAA,IACrB,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE;AAAA,IAClB,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IACtB,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE;AAAA,EAChB;AACA,QAAM,KAAK,mBAAmB,UAAU,GAAG,GAAG,MAAM;AACpD,KAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,mBAAiB,MAAM,EAAE;AACzB,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC/C;AACA,SAAO;AACT;AACA,IAAM,WAAW,OAAO,QAAQ,SAAS;AACvC,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,QAAQ,KAAK;AAC5B,QAAM,KAAK,IAAI;AACf,QAAM,KAAK,MAAM,MAAM,IAAI;AAC3B,QAAM,IAAI,KAAK,SAAS,KAAK,KAAK;AAClC,QAAM,QAAQ,SAAS,KAAK,QAAQ,KAAK,MAAM,KAAK,YAAY,IAAI,UAAU,KAAK,MAAM,KAAK,YAAY,CAAC,IAAI,YAAY,IAAI,QAAQ,KAAK,MAAM,KAAK,YAAY,IAAI,YAAY,CAAC;AACpL,QAAM,KAAK,SAAS,KAAK,kBAAkB,EAAE,EAAE,OAAO,QAAQ,cAAc,EAAE,KAAK,SAAS,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,aAAa,eAAe,CAAC,IAAI,IAAI,MAAM,EAAE,IAAI,IAAI,MAAM,GAAG;AAC5L,mBAAiB,MAAM,EAAE;AACzB,OAAK,YAAY,SAAS,QAAQ;AAChC,UAAM,MAAM,UAAU,KAAK,MAAM,MAAM;AACvC,UAAM,IAAI,IAAI,IAAI,KAAK;AACvB,QAAI,MAAM,MAAM,KAAK,IAAI,CAAC,IAAI,KAAK,QAAQ,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,QAAQ,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,IAAI,KAAK;AACjI,UAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,KAAK;AACrC,UAAI,KAAK,GAAG;AACV,YAAI,KAAK,KAAK,CAAC;AAAA,MACjB;AACA,UAAI,KAAK;AACT,UAAI,OAAO,IAAI,KAAK,IAAI,GAAG;AACzB,YAAI,CAAC;AAAA,MACP;AACA,UAAI,KAAK;AAAA,IACX;AACA,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,IAAM,OAAO,OAAO,QAAQ,SAAS;AACnC,QAAM,EAAE,UAAU,MAAM,YAAY,IAAI,MAAM;AAAA,IAC5C;AAAA,IACA;AAAA,IACA,UAAU,KAAK;AAAA,IACf;AAAA,EACF;AACA,QAAM,QAAQ,SAAS,OAAO,QAAQ,cAAc;AACpD,QAAM,aAAa,KAAK,QAAQ,KAAK;AACrC,QAAM,cAAc,KAAK,SAAS,KAAK;AACvC,QAAM,KAAK,SAAS,uBAAuB,EAAE,KAAK,SAAS,KAAK,KAAK,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,KAAK,CAAC,KAAK,QAAQ,IAAI,WAAW,EAAE,KAAK,KAAK,CAAC,KAAK,SAAS,IAAI,WAAW,EAAE,KAAK,SAAS,UAAU,EAAE,KAAK,UAAU,WAAW;AACtP,MAAI,KAAK,OAAO;AACd,UAAM,WAAW,IAAI,IAAI,OAAO,KAAK,KAAK,KAAK,CAAC;AAChD,QAAI,KAAK,MAAM,SAAS;AACtB,+BAAyB,OAAO,KAAK,MAAM,SAAS,YAAY,WAAW;AAC3E,eAAS,OAAO,SAAS;AAAA,IAC3B;AACA,aAAS,QAAQ,CAAC,YAAY;AAC5B,YAAI,KAAK,yBAAyB,OAAO,EAAE;AAAA,IAC7C,CAAC;AAAA,EACH;AACA,mBAAiB,MAAM,KAAK;AAC5B,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,KAAK,MAAM,MAAM;AAAA,EACpC;AACA,SAAO;AACT;AACA,IAAM,YAAY,OAAO,QAAQ,SAAS;AACxC,QAAM,EAAE,SAAS,IAAI,MAAM,YAAY,QAAQ,MAAM,SAAS,IAAI;AAClE,QAAI,MAAM,cAAc,KAAK,OAAO;AACpC,QAAM,QAAQ,SAAS,OAAO,QAAQ,cAAc;AACpD,QAAM,aAAa;AACnB,QAAM,cAAc;AACpB,QAAM,KAAK,SAAS,UAAU,EAAE,KAAK,UAAU,WAAW;AAC1D,WAAS,KAAK,SAAS,iBAAiB;AACxC,MAAI,KAAK,OAAO;AACd,UAAM,WAAW,IAAI,IAAI,OAAO,KAAK,KAAK,KAAK,CAAC;AAChD,QAAI,KAAK,MAAM,SAAS;AACtB,+BAAyB,OAAO,KAAK,MAAM,SAAS,YAAY,WAAW;AAC3E,eAAS,OAAO,SAAS;AAAA,IAC3B;AACA,aAAS,QAAQ,CAAC,YAAY;AAC5B,YAAI,KAAK,yBAAyB,OAAO,EAAE;AAAA,IAC7C,CAAC;AAAA,EACH;AACA,mBAAiB,MAAM,KAAK;AAC5B,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,KAAK,MAAM,MAAM;AAAA,EACpC;AACA,SAAO;AACT;AACA,SAAS,yBAAyB,OAAO,SAAS,YAAY,aAAa;AACzE,QAAM,kBAAkB,CAAC;AACzB,QAAM,YAAY,CAAC,WAAW;AAC5B,oBAAgB,KAAK,QAAQ,CAAC;AAAA,EAChC;AACA,QAAM,aAAa,CAAC,WAAW;AAC7B,oBAAgB,KAAK,GAAG,MAAM;AAAA,EAChC;AACA,MAAI,QAAQ,SAAS,GAAG,GAAG;AACzB,UAAI,MAAM,gBAAgB;AAC1B,cAAU,UAAU;AAAA,EACtB,OAAO;AACL,eAAW,UAAU;AAAA,EACvB;AACA,MAAI,QAAQ,SAAS,GAAG,GAAG;AACzB,UAAI,MAAM,kBAAkB;AAC5B,cAAU,WAAW;AAAA,EACvB,OAAO;AACL,eAAW,WAAW;AAAA,EACxB;AACA,MAAI,QAAQ,SAAS,GAAG,GAAG;AACzB,UAAI,MAAM,mBAAmB;AAC7B,cAAU,UAAU;AAAA,EACtB,OAAO;AACL,eAAW,UAAU;AAAA,EACvB;AACA,MAAI,QAAQ,SAAS,GAAG,GAAG;AACzB,UAAI,MAAM,iBAAiB;AAC3B,cAAU,WAAW;AAAA,EACvB,OAAO;AACL,eAAW,WAAW;AAAA,EACxB;AACA,QAAM,KAAK,oBAAoB,gBAAgB,KAAK,GAAG,CAAC;AAC1D;AACA,IAAM,gBAAgB,CAAC,QAAQ,SAAS;AACtC,MAAI;AACJ,MAAI,CAAC,KAAK,SAAS;AACjB,cAAU;AAAA,EACZ,OAAO;AACL,cAAU,UAAU,KAAK;AAAA,EAC3B;AACA,QAAM,WAAW,OAAO,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO,EAAE,KAAK,MAAM,KAAK,SAAS,KAAK,EAAE;AAC3F,QAAM,QAAQ,SAAS,OAAO,QAAQ,cAAc;AACpD,QAAM,YAAY,SAAS,OAAO,MAAM;AACxC,QAAM,QAAQ,SAAS,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO;AACxD,QAAM,QAAQ,KAAK,UAAU,OAAO,KAAK,UAAU,KAAK,IAAI,KAAK;AACjE,MAAI,QAAQ;AACZ,MAAI,OAAO,UAAU,UAAU;AAC7B,YAAQ,MAAM,CAAC;AAAA,EACjB,OAAO;AACL,YAAQ;AAAA,EACV;AACA,QAAI,KAAK,oBAAoB,OAAO,OAAO,OAAO,UAAU,QAAQ;AACpE,QAAM,OAAO,MAAM,KAAK,EAAE,YAAY,cAAc,OAAO,KAAK,YAAY,MAAM,IAAI,CAAC;AACvF,MAAI,OAAO,EAAE,OAAO,GAAG,QAAQ,EAAE;AACjC,MAAI,SAAS,YAAU,EAAE,UAAU,UAAU,GAAG;AAC9C,UAAM,MAAM,KAAK,SAAS,CAAC;AAC3B,UAAM,KAAK,eAAO,IAAI;AACtB,WAAO,IAAI,sBAAsB;AACjC,OAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,OAAG,KAAK,UAAU,KAAK,MAAM;AAAA,EAC/B;AACA,QAAI,KAAK,UAAU,KAAK;AACxB,QAAM,WAAW,MAAM,MAAM,GAAG,MAAM,MAAM;AAC5C,MAAI,WAAW,KAAK,QAAQ;AAC5B,QAAM,QAAQ,MAAM,KAAK,EAAE;AAAA,IACzB,cAAc,SAAS,OAAO,SAAS,KAAK,OAAO,IAAI,UAAU,KAAK,YAAY,MAAM,IAAI;AAAA,EAC9F;AACA,MAAI,SAAS,YAAU,EAAE,UAAU,UAAU,GAAG;AAC9C,UAAM,MAAM,MAAM,SAAS,CAAC;AAC5B,UAAM,KAAK,eAAO,KAAK;AACvB,WAAO,IAAI,sBAAsB;AACjC,OAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,OAAG,KAAK,UAAU,KAAK,MAAM;AAAA,EAC/B;AACA,QAAM,cAAc,KAAK,UAAU;AACnC,iBAAO,KAAK,EAAE;AAAA,IACZ;AAAA,IACA;AAAA,KACC,KAAK,QAAQ,SAAS,QAAQ,KAAK,SAAS,QAAQ,KAAK,SAAS,KAAK,QAAQ,SAAS,SAAS,cAAc,KAAK;AAAA,EACvH;AACA,iBAAO,IAAI,EAAE;AAAA,IACX;AAAA,IACA;AAAA,KACC,KAAK,QAAQ,SAAS,QAAQ,IAAI,EAAE,SAAS,QAAQ,KAAK,SAAS,KAAK;AAAA,EAC3E;AACA,SAAO,MAAM,KAAK,EAAE,QAAQ;AAC5B,QAAM;AAAA,IACJ;AAAA,IACA,eAAe,CAAC,KAAK,QAAQ,IAAI,QAAQ,CAAC,KAAK,SAAS,IAAI,cAAc,KAAK;AAAA,EACjF;AACA,QAAM,KAAK,SAAS,mBAAmB,EAAE,KAAK,KAAK,CAAC,KAAK,QAAQ,IAAI,WAAW,EAAE,KAAK,KAAK,CAAC,KAAK,SAAS,IAAI,WAAW,EAAE,KAAK,SAAS,KAAK,QAAQ,KAAK,OAAO,EAAE,KAAK,UAAU,KAAK,SAAS,KAAK,OAAO;AAC9M,YAAU,KAAK,SAAS,SAAS,EAAE,KAAK,MAAM,CAAC,KAAK,QAAQ,IAAI,WAAW,EAAE,KAAK,MAAM,KAAK,QAAQ,IAAI,WAAW,EAAE,KAAK,MAAM,CAAC,KAAK,SAAS,IAAI,cAAc,SAAS,SAAS,WAAW,EAAE,KAAK,MAAM,CAAC,KAAK,SAAS,IAAI,cAAc,SAAS,SAAS,WAAW;AAC1Q,mBAAiB,MAAM,KAAK;AAC5B,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,KAAK,MAAM,MAAM;AAAA,EACpC;AACA,SAAO;AACT;AACA,IAAM,UAAU,OAAO,QAAQ,SAAS;AACtC,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK;AACpC,QAAM,QAAQ,SAAS,OAAO,QAAQ,cAAc,EAAE,KAAK,SAAS,KAAK,KAAK,EAAE,KAAK,MAAM,IAAI,CAAC,EAAE,KAAK,MAAM,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,KAAK,UAAU,CAAC;AACzL,mBAAiB,MAAM,KAAK;AAC5B,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,KAAK,MAAM,MAAM;AAAA,EACpC;AACA,SAAO;AACT;AACA,IAAM,SAAS,OAAO,QAAQ,SAAS;AACrC,QAAM,EAAE,UAAU,MAAM,YAAY,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACpF,QAAM,UAAU,SAAS,OAAO,UAAU,cAAc;AACxD,UAAQ,KAAK,SAAS,KAAK,KAAK,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,QAAQ,IAAI,WAAW,EAAE,KAAK,SAAS,KAAK,QAAQ,KAAK,OAAO,EAAE,KAAK,UAAU,KAAK,SAAS,KAAK,OAAO;AACpM,QAAI,KAAK,aAAa;AACtB,mBAAiB,MAAM,OAAO;AAC9B,OAAK,YAAY,SAAS,QAAQ;AAChC,UAAI,KAAK,oBAAoB,MAAM,KAAK,QAAQ,IAAI,aAAa,MAAM;AACvE,WAAO,UAAU,OAAO,MAAM,KAAK,QAAQ,IAAI,aAAa,MAAM;AAAA,EACpE;AACA,SAAO;AACT;AACA,IAAM,eAAe,OAAO,QAAQ,SAAS;AAC3C,QAAM,EAAE,UAAU,MAAM,YAAY,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACpF,QAAM,MAAM;AACZ,QAAM,cAAc,SAAS,OAAO,KAAK,cAAc;AACvD,QAAM,cAAc,YAAY,OAAO,QAAQ;AAC/C,QAAM,cAAc,YAAY,OAAO,QAAQ;AAC/C,cAAY,KAAK,SAAS,KAAK,KAAK;AACpC,cAAY,KAAK,SAAS,KAAK,KAAK,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,QAAQ,IAAI,cAAc,GAAG,EAAE,KAAK,SAAS,KAAK,QAAQ,KAAK,UAAU,MAAM,CAAC,EAAE,KAAK,UAAU,KAAK,SAAS,KAAK,UAAU,MAAM,CAAC;AAClO,cAAY,KAAK,SAAS,KAAK,KAAK,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,QAAQ,IAAI,WAAW,EAAE,KAAK,SAAS,KAAK,QAAQ,KAAK,OAAO,EAAE,KAAK,UAAU,KAAK,SAAS,KAAK,OAAO;AACxM,QAAI,KAAK,mBAAmB;AAC5B,mBAAiB,MAAM,WAAW;AAClC,OAAK,YAAY,SAAS,QAAQ;AAChC,UAAI,KAAK,0BAA0B,MAAM,KAAK,QAAQ,IAAI,cAAc,KAAK,MAAM;AACnF,WAAO,UAAU,OAAO,MAAM,KAAK,QAAQ,IAAI,cAAc,KAAK,MAAM;AAAA,EAC1E;AACA,SAAO;AACT;AACA,IAAM,aAAa,OAAO,QAAQ,SAAS;AACzC,QAAM,EAAE,UAAU,KAAK,IAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AACvE,QAAM,IAAI,KAAK,QAAQ,KAAK;AAC5B,QAAM,IAAI,KAAK,SAAS,KAAK;AAC7B,QAAM,SAAS;AAAA,IACb,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,IACb,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,IACb,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE;AAAA,IACd,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE;AAAA,IACd,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,IACb,EAAE,GAAG,IAAI,GAAG,EAAE;AAAA,IACd,EAAE,GAAG,IAAI,GAAG,GAAG,EAAE;AAAA,IACjB,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IAClB,EAAE,GAAG,IAAI,GAAG,CAAC,EAAE;AAAA,IACf,EAAE,GAAG,IAAI,GAAG,EAAE;AAAA,EAChB;AACA,QAAM,KAAK,mBAAmB,UAAU,GAAG,GAAG,MAAM;AACpD,KAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,mBAAiB,MAAM,EAAE;AACzB,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,QAAQ,MAAM,QAAQ,MAAM;AAAA,EAC/C;AACA,SAAO;AACT;AACA,IAAM,QAAQ,CAAC,QAAQ,SAAS;AAC9B,QAAM,WAAW,OAAO,OAAO,GAAG,EAAE,KAAK,SAAS,cAAc,EAAE,KAAK,MAAM,KAAK,SAAS,KAAK,EAAE;AAClG,QAAM,UAAU,SAAS,OAAO,UAAU,cAAc;AACxD,UAAQ,KAAK,SAAS,aAAa,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,SAAS,EAAE,EAAE,KAAK,UAAU,EAAE;AACrF,mBAAiB,MAAM,OAAO;AAC9B,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,OAAO,MAAM,GAAG,MAAM;AAAA,EACzC;AACA,SAAO;AACT;AACA,IAAM,WAAW,CAAC,QAAQ,MAAM,QAAQ;AACtC,QAAM,WAAW,OAAO,OAAO,GAAG,EAAE,KAAK,SAAS,cAAc,EAAE,KAAK,MAAM,KAAK,SAAS,KAAK,EAAE;AAClG,MAAI,QAAQ;AACZ,MAAI,SAAS;AACb,MAAI,QAAQ,MAAM;AAChB,YAAQ;AACR,aAAS;AAAA,EACX;AACA,QAAM,QAAQ,SAAS,OAAO,MAAM,EAAE,KAAK,KAAK,KAAK,QAAQ,CAAC,EAAE,KAAK,KAAK,KAAK,SAAS,CAAC,EAAE,KAAK,SAAS,KAAK,EAAE,KAAK,UAAU,MAAM,EAAE,KAAK,SAAS,WAAW;AAChK,mBAAiB,MAAM,KAAK;AAC5B,OAAK,SAAS,KAAK,SAAS,KAAK,UAAU;AAC3C,OAAK,QAAQ,KAAK,QAAQ,KAAK,UAAU;AACzC,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,KAAK,MAAM,MAAM;AAAA,EACpC;AACA,SAAO;AACT;AACA,IAAM,MAAM,CAAC,QAAQ,SAAS;AAC5B,QAAM,WAAW,OAAO,OAAO,GAAG,EAAE,KAAK,SAAS,cAAc,EAAE,KAAK,MAAM,KAAK,SAAS,KAAK,EAAE;AAClG,QAAM,cAAc,SAAS,OAAO,UAAU,cAAc;AAC5D,QAAM,UAAU,SAAS,OAAO,UAAU,cAAc;AACxD,UAAQ,KAAK,SAAS,aAAa,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,SAAS,EAAE,EAAE,KAAK,UAAU,EAAE;AACrF,cAAY,KAAK,SAAS,WAAW,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,SAAS,EAAE,EAAE,KAAK,UAAU,EAAE;AACvF,mBAAiB,MAAM,OAAO;AAC9B,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,OAAO,MAAM,GAAG,MAAM;AAAA,EACzC;AACA,SAAO;AACT;AACA,IAAM,YAAY,CAAC,QAAQ,SAAS;AAClC,QAAM,cAAc,KAAK,UAAU;AACnC,QAAM,aAAa;AACnB,QAAM,aAAa;AACnB,MAAI;AACJ,MAAI,CAAC,KAAK,SAAS;AACjB,cAAU;AAAA,EACZ,OAAO;AACL,cAAU,UAAU,KAAK;AAAA,EAC3B;AACA,QAAM,WAAW,OAAO,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO,EAAE,KAAK,MAAM,KAAK,SAAS,KAAK,EAAE;AAC3F,QAAM,QAAQ,SAAS,OAAO,QAAQ,cAAc;AACpD,QAAM,UAAU,SAAS,OAAO,MAAM;AACtC,QAAM,aAAa,SAAS,OAAO,MAAM;AACzC,MAAI,WAAW;AACf,MAAI,YAAY;AAChB,QAAM,iBAAiB,SAAS,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO;AACjE,MAAI,cAAc;AAClB,QAAM,eAAe,KAAK,UAAU,eAAe,KAAK,UAAU,YAAY,CAAC;AAC/E,QAAM,qBAAqB,KAAK,UAAU,YAAY,CAAC,IAAI,MAAM,KAAK,UAAU,YAAY,CAAC,IAAI,MAAM;AACvG,QAAM,iBAAiB,eAAe,KAAK,EAAE,YAAY,cAAc,oBAAoB,KAAK,YAAY,MAAM,IAAI,CAAC;AACvH,MAAI,gBAAgB,eAAe,QAAQ;AAC3C,MAAI,SAAS,YAAU,EAAE,UAAU,UAAU,GAAG;AAC9C,UAAM,MAAM,eAAe,SAAS,CAAC;AACrC,UAAM,KAAK,eAAO,cAAc;AAChC,oBAAgB,IAAI,sBAAsB;AAC1C,OAAG,KAAK,SAAS,cAAc,KAAK;AACpC,OAAG,KAAK,UAAU,cAAc,MAAM;AAAA,EACxC;AACA,MAAI,KAAK,UAAU,YAAY,CAAC,GAAG;AACjC,iBAAa,cAAc,SAAS;AACpC,gBAAY,cAAc;AAAA,EAC5B;AACA,MAAI,mBAAmB,KAAK,UAAU;AACtC,MAAI,KAAK,UAAU,SAAS,UAAU,KAAK,UAAU,SAAS,IAAI;AAChE,QAAI,YAAU,EAAE,UAAU,YAAY;AACpC,0BAAoB,SAAS,KAAK,UAAU,OAAO;AAAA,IACrD,OAAO;AACL,0BAAoB,MAAM,KAAK,UAAU,OAAO;AAAA,IAClD;AAAA,EACF;AACA,QAAM,kBAAkB,eAAe,KAAK,EAAE,YAAY,cAAc,kBAAkB,KAAK,YAAY,MAAM,IAAI,CAAC;AACtH,iBAAO,eAAe,EAAE,KAAK,SAAS,YAAY;AAClD,MAAI,iBAAiB,gBAAgB,QAAQ;AAC7C,MAAI,SAAS,YAAU,EAAE,UAAU,UAAU,GAAG;AAC9C,UAAM,MAAM,gBAAgB,SAAS,CAAC;AACtC,UAAM,KAAK,eAAO,eAAe;AACjC,qBAAiB,IAAI,sBAAsB;AAC3C,OAAG,KAAK,SAAS,eAAe,KAAK;AACrC,OAAG,KAAK,UAAU,eAAe,MAAM;AAAA,EACzC;AACA,eAAa,eAAe,SAAS;AACrC,MAAI,eAAe,QAAQ,UAAU;AACnC,eAAW,eAAe;AAAA,EAC5B;AACA,QAAM,kBAAkB,CAAC;AACzB,OAAK,UAAU,QAAQ,QAAQ,CAAC,QAAQ;AACtC,UAAM,aAAa,YAAY,GAAG;AAClC,QAAI,aAAa,WAAW;AAC5B,QAAI,YAAU,EAAE,UAAU,YAAY;AACpC,mBAAa,WAAW,QAAQ,MAAM,MAAM,EAAE,QAAQ,MAAM,MAAM;AAAA,IACpE;AACA,UAAM,MAAM,eAAe,KAAK,EAAE;AAAA,MAChC;AAAA,QACE;AAAA,QACA,WAAW,WAAW,WAAW,WAAW,KAAK;AAAA,QACjD;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,QAAI,OAAO,IAAI,QAAQ;AACvB,QAAI,SAAS,YAAU,EAAE,UAAU,UAAU,GAAG;AAC9C,YAAM,MAAM,IAAI,SAAS,CAAC;AAC1B,YAAM,KAAK,eAAO,GAAG;AACrB,aAAO,IAAI,sBAAsB;AACjC,SAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,SAAG,KAAK,UAAU,KAAK,MAAM;AAAA,IAC/B;AACA,QAAI,KAAK,QAAQ,UAAU;AACzB,iBAAW,KAAK;AAAA,IAClB;AACA,iBAAa,KAAK,SAAS;AAC3B,oBAAgB,KAAK,GAAG;AAAA,EAC1B,CAAC;AACD,eAAa;AACb,QAAM,eAAe,CAAC;AACtB,OAAK,UAAU,QAAQ,QAAQ,CAAC,QAAQ;AACtC,UAAM,aAAa,YAAY,GAAG;AAClC,QAAI,cAAc,WAAW;AAC7B,QAAI,YAAU,EAAE,UAAU,YAAY;AACpC,oBAAc,YAAY,QAAQ,MAAM,MAAM,EAAE,QAAQ,MAAM,MAAM;AAAA,IACtE;AACA,UAAM,MAAM,eAAe,KAAK,EAAE;AAAA,MAChC;AAAA,QACE;AAAA,QACA,WAAW,WAAW,WAAW,WAAW,KAAK;AAAA,QACjD;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,QAAI,OAAO,IAAI,QAAQ;AACvB,QAAI,SAAS,YAAU,EAAE,UAAU,UAAU,GAAG;AAC9C,YAAM,MAAM,IAAI,SAAS,CAAC;AAC1B,YAAM,KAAK,eAAO,GAAG;AACrB,aAAO,IAAI,sBAAsB;AACjC,SAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,SAAG,KAAK,UAAU,KAAK,MAAM;AAAA,IAC/B;AACA,QAAI,KAAK,QAAQ,UAAU;AACzB,iBAAW,KAAK;AAAA,IAClB;AACA,iBAAa,KAAK,SAAS;AAC3B,iBAAa,KAAK,GAAG;AAAA,EACvB,CAAC;AACD,eAAa;AACb,MAAI,cAAc;AAChB,QAAI,UAAU,WAAW,cAAc,SAAS;AAChD,mBAAO,cAAc,EAAE;AAAA,MACrB;AAAA,MACA,iBAAiB,KAAK,WAAW,IAAI,UAAU,OAAO,KAAK,YAAY,IAAI;AAAA,IAC7E;AACA,kBAAc,cAAc,SAAS;AAAA,EACvC;AACA,MAAI,SAAS,WAAW,eAAe,SAAS;AAChD,iBAAO,eAAe,EAAE;AAAA,IACtB;AAAA,IACA,iBAAiB,KAAK,WAAW,IAAI,SAAS,QAAQ,KAAK,YAAY,IAAI,eAAe;AAAA,EAC5F;AACA,iBAAe,eAAe,SAAS;AACvC,UAAQ,KAAK,SAAS,SAAS,EAAE,KAAK,MAAM,CAAC,WAAW,IAAI,WAAW,EAAE,KAAK,MAAM,WAAW,IAAI,WAAW,EAAE,KAAK,MAAM,CAAC,YAAY,IAAI,cAAc,aAAa,WAAW,EAAE,KAAK,MAAM,CAAC,YAAY,IAAI,cAAc,aAAa,WAAW;AACtP,iBAAe;AACf,kBAAgB,QAAQ,CAAC,QAAQ;AAC/B,mBAAO,GAAG,EAAE;AAAA,MACV;AAAA,MACA,gBAAgB,CAAC,WAAW,IAAI,QAAQ,KAAK,YAAY,IAAI,cAAc,aAAa,KAAK;AAAA,IAC/F;AACA,mBAAe,eAAe,SAAS;AAAA,EACzC,CAAC;AACD,iBAAe;AACf,aAAW,KAAK,SAAS,SAAS,EAAE,KAAK,MAAM,CAAC,WAAW,IAAI,WAAW,EAAE,KAAK,MAAM,WAAW,IAAI,WAAW,EAAE,KAAK,MAAM,CAAC,YAAY,IAAI,cAAc,aAAa,WAAW,EAAE,KAAK,MAAM,CAAC,YAAY,IAAI,cAAc,aAAa,WAAW;AACzP,iBAAe;AACf,eAAa,QAAQ,CAAC,QAAQ;AAC5B,mBAAO,GAAG,EAAE;AAAA,MACV;AAAA,MACA,gBAAgB,CAAC,WAAW,IAAI,QAAQ,KAAK,YAAY,IAAI,eAAe;AAAA,IAC9E;AACA,mBAAe,eAAe,SAAS;AAAA,EACzC,CAAC;AACD,QAAM,KAAK,SAAS,mBAAmB,EAAE,KAAK,KAAK,CAAC,WAAW,IAAI,WAAW,EAAE,KAAK,KAAK,EAAE,YAAY,KAAK,WAAW,EAAE,KAAK,SAAS,WAAW,KAAK,OAAO,EAAE,KAAK,UAAU,YAAY,KAAK,OAAO;AACxM,mBAAiB,MAAM,KAAK;AAC5B,OAAK,YAAY,SAAS,QAAQ;AAChC,WAAO,UAAU,KAAK,MAAM,MAAM;AAAA,EACpC;AACA,SAAO;AACT;AACA,IAAM,SAAS;AAAA,EACb,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN;AAAA,EACA,MAAM;AAAA,EACN,MAAM;AAAA,EACN;AACF;AACA,IAAI,YAAY,CAAC;AACjB,IAAM,aAAa,OAAO,MAAM,MAAM,QAAQ;AAC5C,MAAI;AACJ,MAAI;AACJ,MAAI,KAAK,MAAM;AACb,QAAI;AACJ,QAAI,YAAU,EAAE,kBAAkB,WAAW;AAC3C,eAAS;AAAA,IACX,WAAW,KAAK,YAAY;AAC1B,eAAS,KAAK,cAAc;AAAA,IAC9B;AACA,YAAQ,KAAK,OAAO,OAAO,EAAE,KAAK,cAAc,KAAK,IAAI,EAAE,KAAK,UAAU,MAAM;AAChF,SAAK,MAAM,OAAO,KAAK,KAAK,EAAE,OAAO,MAAM,GAAG;AAAA,EAChD,OAAO;AACL,SAAK,MAAM,OAAO,KAAK,KAAK,EAAE,MAAM,MAAM,GAAG;AAC7C,YAAQ;AAAA,EACV;AACA,MAAI,KAAK,SAAS;AAChB,OAAG,KAAK,SAAS,KAAK,OAAO;AAAA,EAC/B;AACA,MAAI,KAAK,OAAO;AACd,OAAG,KAAK,SAAS,kBAAkB,KAAK,KAAK;AAAA,EAC/C;AACA,YAAU,KAAK,EAAE,IAAI;AACrB,MAAI,KAAK,cAAc;AACrB,cAAU,KAAK,EAAE,EAAE,KAAK,SAAS,UAAU,KAAK,EAAE,EAAE,KAAK,OAAO,IAAI,YAAY;AAAA,EAClF;AACA,SAAO;AACT;AACA,IAAM,cAAc,CAAC,MAAM,SAAS;AAClC,YAAU,KAAK,EAAE,IAAI;AACvB;AACA,IAAM,UAAU,MAAM;AACpB,cAAY,CAAC;AACf;AACA,IAAM,eAAe,CAAC,SAAS;AAC7B,QAAM,KAAK,UAAU,KAAK,EAAE;AAC5B,QAAI;AAAA,IACF;AAAA,IACA,KAAK;AAAA,IACL;AAAA,IACA,gBAAgB,KAAK,IAAI,KAAK,QAAQ,IAAI,KAAK,OAAO,KAAK,QAAQ,IAAI;AAAA,EACzE;AACA,QAAM,UAAU;AAChB,QAAM,OAAO,KAAK,QAAQ;AAC1B,MAAI,KAAK,aAAa;AACpB,OAAG;AAAA,MACD;AAAA,MACA,gBAAgB,KAAK,IAAI,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,IAAI,KAAK,SAAS,IAAI,WAAW;AAAA,IAClG;AAAA,EACF,OAAO;AACL,OAAG,KAAK,aAAa,eAAe,KAAK,IAAI,OAAO,KAAK,IAAI,GAAG;AAAA,EAClE;AACA,SAAO;AACT;AACA,IAAI,aAAa,CAAC;AAClB,IAAI,iBAAiB,CAAC;AACtB,IAAM,QAAQ,MAAM;AAClB,eAAa,CAAC;AACd,mBAAiB,CAAC;AACpB;AACA,IAAM,kBAAkB,CAAC,MAAM,SAAS;AACtC,QAAM,gBAAgB,SAAS,YAAU,EAAE,UAAU,UAAU;AAC/D,QAAM,eAAe,KAAK,cAAc,aAAa,WAAW,MAAM,KAAK,OAAO;AAAA,IAChF,OAAO,KAAK;AAAA,IACZ;AAAA,IACA,kBAAkB;AAAA,EACpB,CAAC,IAAI,cAAc,KAAK,OAAO,KAAK,UAAU;AAC9C,QAAI,KAAK,SAAS,MAAM,KAAK,SAAS;AACtC,QAAM,YAAY,KAAK,OAAO,GAAG,EAAE,KAAK,SAAS,WAAW;AAC5D,QAAM,QAAQ,UAAU,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO;AACzD,QAAM,KAAK,EAAE,YAAY,YAAY;AACrC,MAAI,OAAO,aAAa,QAAQ;AAChC,MAAI,eAAe;AACjB,UAAM,MAAM,aAAa,SAAS,CAAC;AACnC,UAAM,KAAK,eAAO,YAAY;AAC9B,WAAO,IAAI,sBAAsB;AACjC,OAAG,KAAK,SAAS,KAAK,KAAK;AAC3B,OAAG,KAAK,UAAU,KAAK,MAAM;AAAA,EAC/B;AACA,QAAM,KAAK,aAAa,eAAe,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,SAAS,IAAI,GAAG;AACtF,aAAW,KAAK,EAAE,IAAI;AACtB,OAAK,QAAQ,KAAK;AAClB,OAAK,SAAS,KAAK;AACnB,MAAI;AACJ,MAAI,KAAK,gBAAgB;AACvB,UAAM,oBAAoB,cAAc,KAAK,gBAAgB,KAAK,UAAU;AAC5E,UAAM,qBAAqB,KAAK,OAAO,GAAG,EAAE,KAAK,SAAS,eAAe;AACzE,UAAM,QAAQ,mBAAmB,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO;AAClE,SAAK,MAAM,KAAK,EAAE,YAAY,iBAAiB;AAC/C,UAAM,QAAQ,kBAAkB,QAAQ;AACxC,UAAM,KAAK,aAAa,eAAe,CAAC,MAAM,QAAQ,IAAI,OAAO,CAAC,MAAM,SAAS,IAAI,GAAG;AACxF,QAAI,CAAC,eAAe,KAAK,EAAE,GAAG;AAC5B,qBAAe,KAAK,EAAE,IAAI,CAAC;AAAA,IAC7B;AACA,mBAAe,KAAK,EAAE,EAAE,YAAY;AACpC,qBAAiB,IAAI,KAAK,cAAc;AAAA,EAC1C;AACA,MAAI,KAAK,iBAAiB;AACxB,UAAM,oBAAoB,cAAc,KAAK,iBAAiB,KAAK,UAAU;AAC7E,UAAM,sBAAsB,KAAK,OAAO,GAAG,EAAE,KAAK,SAAS,eAAe;AAC1E,UAAM,QAAQ,oBAAoB,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO;AACnE,SAAK,oBAAoB,KAAK,EAAE,YAAY,iBAAiB;AAC7D,UAAM,KAAK,EAAE,YAAY,iBAAiB;AAC1C,UAAM,QAAQ,kBAAkB,QAAQ;AACxC,UAAM,KAAK,aAAa,eAAe,CAAC,MAAM,QAAQ,IAAI,OAAO,CAAC,MAAM,SAAS,IAAI,GAAG;AACxF,QAAI,CAAC,eAAe,KAAK,EAAE,GAAG;AAC5B,qBAAe,KAAK,EAAE,IAAI,CAAC;AAAA,IAC7B;AACA,mBAAe,KAAK,EAAE,EAAE,aAAa;AACrC,qBAAiB,IAAI,KAAK,eAAe;AAAA,EAC3C;AACA,MAAI,KAAK,cAAc;AACrB,UAAM,kBAAkB,cAAc,KAAK,cAAc,KAAK,UAAU;AACxE,UAAM,mBAAmB,KAAK,OAAO,GAAG,EAAE,KAAK,SAAS,eAAe;AACvE,UAAM,QAAQ,iBAAiB,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO;AAChE,SAAK,MAAM,KAAK,EAAE,YAAY,eAAe;AAC7C,UAAM,QAAQ,gBAAgB,QAAQ;AACtC,UAAM,KAAK,aAAa,eAAe,CAAC,MAAM,QAAQ,IAAI,OAAO,CAAC,MAAM,SAAS,IAAI,GAAG;AACxF,qBAAiB,KAAK,EAAE,YAAY,eAAe;AACnD,QAAI,CAAC,eAAe,KAAK,EAAE,GAAG;AAC5B,qBAAe,KAAK,EAAE,IAAI,CAAC;AAAA,IAC7B;AACA,mBAAe,KAAK,EAAE,EAAE,UAAU;AAClC,qBAAiB,IAAI,KAAK,YAAY;AAAA,EACxC;AACA,MAAI,KAAK,eAAe;AACtB,UAAM,kBAAkB,cAAc,KAAK,eAAe,KAAK,UAAU;AACzE,UAAM,oBAAoB,KAAK,OAAO,GAAG,EAAE,KAAK,SAAS,eAAe;AACxE,UAAM,QAAQ,kBAAkB,OAAO,GAAG,EAAE,KAAK,SAAS,OAAO;AACjE,SAAK,MAAM,KAAK,EAAE,YAAY,eAAe;AAC7C,UAAM,QAAQ,gBAAgB,QAAQ;AACtC,UAAM,KAAK,aAAa,eAAe,CAAC,MAAM,QAAQ,IAAI,OAAO,CAAC,MAAM,SAAS,IAAI,GAAG;AACxF,sBAAkB,KAAK,EAAE,YAAY,eAAe;AACpD,QAAI,CAAC,eAAe,KAAK,EAAE,GAAG;AAC5B,qBAAe,KAAK,EAAE,IAAI,CAAC;AAAA,IAC7B;AACA,mBAAe,KAAK,EAAE,EAAE,WAAW;AACnC,qBAAiB,IAAI,KAAK,aAAa;AAAA,EACzC;AACA,SAAO;AACT;AACA,SAAS,iBAAiB,IAAI,OAAO;AACnC,MAAI,YAAU,EAAE,UAAU,cAAc,IAAI;AAC1C,OAAG,MAAM,QAAQ,MAAM,SAAS,IAAI;AACpC,OAAG,MAAM,SAAS;AAAA,EACpB;AACF;AACA,IAAM,oBAAoB,CAAC,MAAM,UAAU;AACzC,QAAI,KAAK,uBAAuB,KAAK,IAAI,KAAK,OAAO,WAAW,KAAK,EAAE,CAAC;AACxE,MAAI,OAAO,MAAM,cAAc,MAAM,cAAc,MAAM;AACzD,MAAI,KAAK,OAAO;AACd,UAAM,KAAK,WAAW,KAAK,EAAE;AAC7B,QAAI,IAAI,KAAK;AACb,QAAI,IAAI,KAAK;AACb,QAAI,MAAM;AACR,YAAM,MAAM,MAAM,kBAAkB,IAAI;AACxC,YAAI;AAAA,QACF,kBAAkB,KAAK,QAAQ;AAAA,QAC/B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,IAAI;AAAA,QACJ;AAAA,QACA,IAAI;AAAA,QACJ;AAAA,MACF;AACA,UAAI,MAAM,aAAa;AACrB,YAAI,IAAI;AACR,YAAI,IAAI;AAAA,MACV;AAAA,IACF;AACA,OAAG,KAAK,aAAa,eAAe,IAAI,OAAO,IAAI,GAAG;AAAA,EACxD;AACA,MAAI,KAAK,gBAAgB;AACvB,UAAM,KAAK,eAAe,KAAK,EAAE,EAAE;AACnC,QAAI,IAAI,KAAK;AACb,QAAI,IAAI,KAAK;AACb,QAAI,MAAM;AACR,YAAM,MAAM,MAAM,0BAA0B,KAAK,iBAAiB,KAAK,GAAG,cAAc,IAAI;AAC5F,UAAI,IAAI;AACR,UAAI,IAAI;AAAA,IACV;AACA,OAAG,KAAK,aAAa,eAAe,IAAI,OAAO,IAAI,GAAG;AAAA,EACxD;AACA,MAAI,KAAK,iBAAiB;AACxB,UAAM,KAAK,eAAe,KAAK,EAAE,EAAE;AACnC,QAAI,IAAI,KAAK;AACb,QAAI,IAAI,KAAK;AACb,QAAI,MAAM;AACR,YAAM,MAAM,MAAM;AAAA,QAChB,KAAK,iBAAiB,KAAK;AAAA,QAC3B;AAAA,QACA;AAAA,MACF;AACA,UAAI,IAAI;AACR,UAAI,IAAI;AAAA,IACV;AACA,OAAG,KAAK,aAAa,eAAe,IAAI,OAAO,IAAI,GAAG;AAAA,EACxD;AACA,MAAI,KAAK,cAAc;AACrB,UAAM,KAAK,eAAe,KAAK,EAAE,EAAE;AACnC,QAAI,IAAI,KAAK;AACb,QAAI,IAAI,KAAK;AACb,QAAI,MAAM;AACR,YAAM,MAAM,MAAM,0BAA0B,KAAK,eAAe,KAAK,GAAG,YAAY,IAAI;AACxF,UAAI,IAAI;AACR,UAAI,IAAI;AAAA,IACV;AACA,OAAG,KAAK,aAAa,eAAe,IAAI,OAAO,IAAI,GAAG;AAAA,EACxD;AACA,MAAI,KAAK,eAAe;AACtB,UAAM,KAAK,eAAe,KAAK,EAAE,EAAE;AACnC,QAAI,IAAI,KAAK;AACb,QAAI,IAAI,KAAK;AACb,QAAI,MAAM;AACR,YAAM,MAAM,MAAM,0BAA0B,KAAK,eAAe,KAAK,GAAG,aAAa,IAAI;AACzF,UAAI,IAAI;AACR,UAAI,IAAI;AAAA,IACV;AACA,OAAG,KAAK,aAAa,eAAe,IAAI,OAAO,IAAI,GAAG;AAAA,EACxD;AACF;AACA,IAAM,cAAc,CAAC,MAAM,WAAW;AACpC,QAAM,IAAI,KAAK;AACf,QAAM,IAAI,KAAK;AACf,QAAM,KAAK,KAAK,IAAI,OAAO,IAAI,CAAC;AAChC,QAAM,KAAK,KAAK,IAAI,OAAO,IAAI,CAAC;AAChC,QAAM,IAAI,KAAK,QAAQ;AACvB,QAAM,IAAI,KAAK,SAAS;AACxB,MAAI,MAAM,KAAK,MAAM,GAAG;AACtB,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,IAAM,eAAe,CAAC,MAAM,cAAc,gBAAgB;AACxD,QAAI,KAAK;AAAA,kBACO,KAAK,UAAU,YAAY,CAAC;AAAA,kBAC5B,KAAK,UAAU,WAAW,CAAC;AAAA,oBACzB,KAAK,CAAC,MAAM,KAAK,CAAC,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM,EAAE;AACvE,QAAM,IAAI,KAAK;AACf,QAAM,IAAI,KAAK;AACf,QAAM,KAAK,KAAK,IAAI,IAAI,YAAY,CAAC;AACrC,QAAM,IAAI,KAAK,QAAQ;AACvB,MAAI,IAAI,YAAY,IAAI,aAAa,IAAI,IAAI,KAAK,IAAI;AACtD,QAAM,IAAI,KAAK,SAAS;AACxB,QAAM,IAAI,KAAK,IAAI,aAAa,IAAI,YAAY,CAAC;AACjD,QAAM,IAAI,KAAK,IAAI,aAAa,IAAI,YAAY,CAAC;AACjD,MAAI,KAAK,IAAI,IAAI,aAAa,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI,aAAa,CAAC,IAAI,GAAG;AACvE,QAAI,IAAI,YAAY,IAAI,aAAa,IAAI,aAAa,IAAI,IAAI,IAAI,IAAI,IAAI,aAAa;AACvF,QAAI,IAAI,IAAI;AACZ,UAAM,MAAM;AAAA,MACV,GAAG,YAAY,IAAI,aAAa,IAAI,YAAY,IAAI,IAAI,YAAY,IAAI,IAAI;AAAA,MAC5E,GAAG,YAAY,IAAI,aAAa,IAAI,YAAY,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI;AAAA,IAClF;AACA,QAAI,MAAM,GAAG;AACX,UAAI,IAAI,aAAa;AACrB,UAAI,IAAI,aAAa;AAAA,IACvB;AACA,QAAI,MAAM,GAAG;AACX,UAAI,IAAI,aAAa;AAAA,IACvB;AACA,QAAI,MAAM,GAAG;AACX,UAAI,IAAI,aAAa;AAAA,IACvB;AACA,UAAI,KAAK,2BAA2B,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG;AACpE,WAAO;AAAA,EACT,OAAO;AACL,QAAI,YAAY,IAAI,aAAa,GAAG;AAClC,UAAI,aAAa,IAAI,IAAI;AAAA,IAC3B,OAAO;AACL,UAAI,IAAI,IAAI,aAAa;AAAA,IAC3B;AACA,QAAI,IAAI,IAAI,IAAI;AAChB,QAAI,KAAK,YAAY,IAAI,aAAa,IAAI,YAAY,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI;AACtF,QAAI,KAAK,YAAY,IAAI,aAAa,IAAI,YAAY,IAAI,IAAI,YAAY,IAAI;AAC9E,UAAI,KAAK,uBAAuB,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC;AACvE,QAAI,MAAM,GAAG;AACX,WAAK,aAAa;AAClB,WAAK,aAAa;AAAA,IACpB;AACA,QAAI,MAAM,GAAG;AACX,WAAK,aAAa;AAAA,IACpB;AACA,QAAI,MAAM,GAAG;AACX,WAAK,aAAa;AAAA,IACpB;AACA,WAAO,EAAE,GAAG,IAAI,GAAG,GAAG;AAAA,EACxB;AACF;AACA,IAAM,qBAAqB,CAAC,SAAS,gBAAgB;AACnD,QAAI,KAAK,4BAA4B,SAAS,WAAW;AACzD,MAAI,SAAS,CAAC;AACd,MAAI,mBAAmB,QAAQ,CAAC;AAChC,MAAI,WAAW;AACf,UAAQ,QAAQ,CAAC,WAAW;AAC1B,UAAI,KAAK,wBAAwB,QAAQ,WAAW;AACpD,QAAI,CAAC,YAAY,aAAa,MAAM,KAAK,CAAC,UAAU;AAClD,YAAM,QAAQ,aAAa,aAAa,kBAAkB,MAAM;AAChE,YAAI,KAAK,gBAAgB,QAAQ,kBAAkB,KAAK;AACxD,YAAI,KAAK,sBAAsB,KAAK;AACpC,UAAI,eAAe;AACnB,aAAO,QAAQ,CAAC,MAAM;AACpB,uBAAe,gBAAgB,EAAE,MAAM,MAAM,KAAK,EAAE,MAAM,MAAM;AAAA,MAClE,CAAC;AACD,UAAI,CAAC,OAAO,KAAK,CAAC,MAAM,EAAE,MAAM,MAAM,KAAK,EAAE,MAAM,MAAM,CAAC,GAAG;AAC3D,eAAO,KAAK,KAAK;AAAA,MACnB,OAAO;AACL,cAAI,KAAK,sBAAsB,OAAO,MAAM;AAAA,MAC9C;AACA,iBAAW;AAAA,IACb,OAAO;AACL,YAAI,KAAK,iBAAiB,QAAQ,gBAAgB;AAClD,yBAAmB;AACnB,UAAI,CAAC,UAAU;AACb,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,IACF;AAAA,EACF,CAAC;AACD,QAAI,KAAK,0BAA0B,MAAM;AACzC,SAAO;AACT;AACA,IAAM,aAAa,SAAS,MAAM,GAAG,MAAM,WAAW,aAAa,OAAO;AACxE,MAAI,SAAS,KAAK;AAClB,MAAI,mBAAmB;AACvB,QAAM,OAAO,MAAM,KAAK,EAAE,CAAC;AAC3B,MAAI,OAAO,MAAM,KAAK,EAAE,CAAC;AACzB,QAAI,KAAK,sBAAsB,IAAI;AACnC,MAAI,KAAK,aAAa,KAAK,WAAW;AACpC,aAAS,OAAO,MAAM,GAAG,KAAK,OAAO,SAAS,CAAC;AAC/C,WAAO,QAAQ,KAAK,UAAU,OAAO,CAAC,CAAC,CAAC;AACxC,UAAI;AAAA,MACF;AAAA,MACA,OAAO,OAAO,SAAS,CAAC;AAAA,MACxB;AAAA,MACA,KAAK,UAAU,OAAO,OAAO,SAAS,CAAC,CAAC;AAAA,IAC1C;AACA,WAAO,KAAK,KAAK,UAAU,OAAO,OAAO,SAAS,CAAC,CAAC,CAAC;AAAA,EACvD;AACA,MAAI,KAAK,WAAW;AAClB,UAAI,KAAK,oBAAoB,UAAU,KAAK,SAAS,CAAC;AACtD,aAAS,mBAAmB,KAAK,QAAQ,UAAU,KAAK,SAAS,EAAE,IAAI;AACvE,uBAAmB;AAAA,EACrB;AACA,MAAI,KAAK,aAAa;AACpB,UAAI,KAAK,sBAAsB,UAAU,KAAK,WAAW,CAAC;AAC1D,aAAS,mBAAmB,OAAO,QAAQ,GAAG,UAAU,KAAK,WAAW,EAAE,IAAI,EAAE,QAAQ;AACxF,uBAAmB;AAAA,EACrB;AACA,QAAM,WAAW,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,MAAM,EAAE,CAAC,CAAC;AACxD,MAAI;AACJ,MAAI,gBAAgB,WAAW,gBAAgB,aAAa;AAC1D,YAAQ,KAAK,SAAS;AAAA,EACxB,OAAO;AACL,YAAQ;AAAA,EACV;AACA,QAAM,eAAe,aAAK,EAAE,EAAE,SAAS,GAAG;AACxC,WAAO,EAAE;AAAA,EACX,CAAC,EAAE,EAAE,SAAS,GAAG;AACf,WAAO,EAAE;AAAA,EACX,CAAC,EAAE,MAAM,KAAK;AACd,MAAI;AACJ,UAAQ,KAAK,WAAW;AAAA,IACtB,KAAK;AACH,sBAAgB;AAChB;AAAA,IACF,KAAK;AACH,sBAAgB;AAChB;AAAA,IACF,KAAK;AACH,sBAAgB;AAChB;AAAA,IACF;AACE,sBAAgB;AAAA,EACpB;AACA,UAAQ,KAAK,SAAS;AAAA,IACpB,KAAK;AACH,uBAAiB;AACjB;AAAA,IACF,KAAK;AACH,uBAAiB;AACjB;AAAA,IACF,KAAK;AACH,uBAAiB;AACjB;AAAA,EACJ;AACA,QAAM,UAAU,KAAK,OAAO,MAAM,EAAE,KAAK,KAAK,aAAa,QAAQ,CAAC,EAAE,KAAK,MAAM,KAAK,EAAE,EAAE,KAAK,SAAS,MAAM,iBAAiB,KAAK,UAAU,MAAM,KAAK,UAAU,GAAG,EAAE,KAAK,SAAS,KAAK,KAAK;AAChM,MAAI,MAAM;AACV,MAAI,YAAU,EAAE,UAAU,uBAAuB,YAAU,EAAE,MAAM,qBAAqB;AACtF,UAAM,OAAO,SAAS,WAAW,OAAO,OAAO,SAAS,OAAO,OAAO,SAAS,WAAW,OAAO,SAAS;AAC1G,UAAM,IAAI,QAAQ,OAAO,KAAK;AAC9B,UAAM,IAAI,QAAQ,OAAO,KAAK;AAAA,EAChC;AACA,QAAI,KAAK,kBAAkB,KAAK,cAAc;AAC9C,QAAI,KAAK,gBAAgB,KAAK,YAAY;AAC1C,UAAQ,KAAK,gBAAgB;AAAA,IAC3B,KAAK;AACH,cAAQ,KAAK,gBAAgB,SAAS,MAAM,MAAM,cAAc,cAAc;AAC9E;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,gBAAgB,SAAS,MAAM,MAAM,cAAc,cAAc;AAC9E;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,gBAAgB,SAAS,MAAM,MAAM,cAAc,aAAa;AAC7E;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,gBAAgB,SAAS,MAAM,MAAM,cAAc,eAAe;AAC/E;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,gBAAgB,SAAS,MAAM,MAAM,cAAc,oBAAoB;AACpF;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,gBAAgB,SAAS,MAAM,MAAM,cAAc,kBAAkB;AAClF;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,gBAAgB,SAAS,MAAM,MAAM,cAAc,oBAAoB;AACpF;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,gBAAgB,SAAS,MAAM,MAAM,cAAc,mBAAmB;AACnF;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,gBAAgB,SAAS,MAAM,MAAM,cAAc,iBAAiB;AACjF;AAAA,EACJ;AACA,UAAQ,KAAK,cAAc;AAAA,IACzB,KAAK;AACH,cAAQ,KAAK,cAAc,SAAS,MAAM,MAAM,cAAc,YAAY;AAC1E;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,cAAc,SAAS,MAAM,MAAM,cAAc,YAAY;AAC1E;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,cAAc,SAAS,MAAM,MAAM,cAAc,WAAW;AACzE;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,cAAc,SAAS,MAAM,MAAM,cAAc,aAAa;AAC3E;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,cAAc,SAAS,MAAM,MAAM,cAAc,kBAAkB;AAChF;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,cAAc,SAAS,MAAM,MAAM,cAAc,gBAAgB;AAC9E;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,cAAc,SAAS,MAAM,MAAM,cAAc,kBAAkB;AAChF;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,cAAc,SAAS,MAAM,MAAM,cAAc,iBAAiB;AAC/E;AAAA,IACF,KAAK;AACH,cAAQ,KAAK,cAAc,SAAS,MAAM,MAAM,cAAc,eAAe;AAC7E;AAAA,EACJ;AACA,MAAI,QAAQ,CAAC;AACb,MAAI,kBAAkB;AACpB,UAAM,cAAc;AAAA,EACtB;AACA,QAAM,eAAe,KAAK;AAC1B,SAAO;AACT;",
  "names": []
}
