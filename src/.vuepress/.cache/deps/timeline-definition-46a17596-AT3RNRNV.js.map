{
  "version": 3,
  "sources": ["../../../../node_modules/mermaid/dist/timeline-definition-46a17596.js"],
  "sourcesContent": ["import { I as commonDb, J as parseDirective$1, v as clear$1, c as getConfig, l as log, p as setupGraphViewbox } from \"./mermaid-aad43469.js\";\r\nimport { select, arc } from \"d3\";\r\nimport { isDark, lighten, darken } from \"khroma\";\r\nimport \"ts-dedent\";\r\nimport \"dayjs\";\r\nimport \"@braintree/sanitize-url\";\r\nimport \"dompurify\";\r\nimport \"lodash-es/memoize.js\";\r\nimport \"stylis\";\r\nimport \"lodash-es/isEmpty.js\";\r\nvar parser = function() {\r\n  var o = function(k, v, o2, l) {\r\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\r\n      ;\r\n    return o2;\r\n  }, $V0 = [1, 2], $V1 = [1, 5], $V2 = [6, 9, 11, 17, 18, 20, 22, 23, 26, 27, 28], $V3 = [1, 15], $V4 = [1, 16], $V5 = [1, 17], $V6 = [1, 18], $V7 = [1, 19], $V8 = [1, 23], $V9 = [1, 24], $Va = [1, 27], $Vb = [4, 6, 9, 11, 17, 18, 20, 22, 23, 26, 27, 28];\r\n  var parser2 = {\r\n    trace: function trace() {\r\n    },\r\n    yy: {},\r\n    symbols_: { \"error\": 2, \"start\": 3, \"timeline\": 4, \"document\": 5, \"EOF\": 6, \"directive\": 7, \"line\": 8, \"SPACE\": 9, \"statement\": 10, \"NEWLINE\": 11, \"openDirective\": 12, \"typeDirective\": 13, \"closeDirective\": 14, \":\": 15, \"argDirective\": 16, \"title\": 17, \"acc_title\": 18, \"acc_title_value\": 19, \"acc_descr\": 20, \"acc_descr_value\": 21, \"acc_descr_multiline_value\": 22, \"section\": 23, \"period_statement\": 24, \"event_statement\": 25, \"period\": 26, \"event\": 27, \"open_directive\": 28, \"type_directive\": 29, \"arg_directive\": 30, \"close_directive\": 31, \"$accept\": 0, \"$end\": 1 },\r\n    terminals_: { 2: \"error\", 4: \"timeline\", 6: \"EOF\", 9: \"SPACE\", 11: \"NEWLINE\", 15: \":\", 17: \"title\", 18: \"acc_title\", 19: \"acc_title_value\", 20: \"acc_descr\", 21: \"acc_descr_value\", 22: \"acc_descr_multiline_value\", 23: \"section\", 26: \"period\", 27: \"event\", 28: \"open_directive\", 29: \"type_directive\", 30: \"arg_directive\", 31: \"close_directive\" },\r\n    productions_: [0, [3, 3], [3, 2], [5, 0], [5, 2], [8, 2], [8, 1], [8, 1], [8, 1], [7, 4], [7, 6], [10, 1], [10, 2], [10, 2], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [24, 1], [25, 1], [12, 1], [13, 1], [16, 1], [14, 1]],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\r\n      var $0 = $$.length - 1;\r\n      switch (yystate) {\r\n        case 1:\r\n          return $$[$0 - 1];\r\n        case 3:\r\n          this.$ = [];\r\n          break;\r\n        case 4:\r\n          $$[$0 - 1].push($$[$0]);\r\n          this.$ = $$[$0 - 1];\r\n          break;\r\n        case 5:\r\n        case 6:\r\n          this.$ = $$[$0];\r\n          break;\r\n        case 7:\r\n        case 8:\r\n          this.$ = [];\r\n          break;\r\n        case 11:\r\n          yy.getCommonDb().setDiagramTitle($$[$0].substr(6));\r\n          this.$ = $$[$0].substr(6);\r\n          break;\r\n        case 12:\r\n          this.$ = $$[$0].trim();\r\n          yy.getCommonDb().setAccTitle(this.$);\r\n          break;\r\n        case 13:\r\n        case 14:\r\n          this.$ = $$[$0].trim();\r\n          yy.getCommonDb().setAccDescription(this.$);\r\n          break;\r\n        case 15:\r\n          yy.addSection($$[$0].substr(8));\r\n          this.$ = $$[$0].substr(8);\r\n          break;\r\n        case 19:\r\n          yy.addTask($$[$0], 0, \"\");\r\n          this.$ = $$[$0];\r\n          break;\r\n        case 20:\r\n          yy.addEvent($$[$0].substr(2));\r\n          this.$ = $$[$0];\r\n          break;\r\n        case 21:\r\n          yy.parseDirective(\"%%{\", \"open_directive\");\r\n          break;\r\n        case 22:\r\n          yy.parseDirective($$[$0], \"type_directive\");\r\n          break;\r\n        case 23:\r\n          $$[$0] = $$[$0].trim().replace(/'/g, '\"');\r\n          yy.parseDirective($$[$0], \"arg_directive\");\r\n          break;\r\n        case 24:\r\n          yy.parseDirective(\"}%%\", \"close_directive\", \"timeline\");\r\n          break;\r\n      }\r\n    },\r\n    table: [{ 3: 1, 4: $V0, 7: 3, 12: 4, 28: $V1 }, { 1: [3] }, o($V2, [2, 3], { 5: 6 }), { 3: 7, 4: $V0, 7: 3, 12: 4, 28: $V1 }, { 13: 8, 29: [1, 9] }, { 29: [2, 21] }, { 6: [1, 10], 7: 22, 8: 11, 9: [1, 12], 10: 13, 11: [1, 14], 12: 4, 17: $V3, 18: $V4, 20: $V5, 22: $V6, 23: $V7, 24: 20, 25: 21, 26: $V8, 27: $V9, 28: $V1 }, { 1: [2, 2] }, { 14: 25, 15: [1, 26], 31: $Va }, o([15, 31], [2, 22]), o($V2, [2, 8], { 1: [2, 1] }), o($V2, [2, 4]), { 7: 22, 10: 28, 12: 4, 17: $V3, 18: $V4, 20: $V5, 22: $V6, 23: $V7, 24: 20, 25: 21, 26: $V8, 27: $V9, 28: $V1 }, o($V2, [2, 6]), o($V2, [2, 7]), o($V2, [2, 11]), { 19: [1, 29] }, { 21: [1, 30] }, o($V2, [2, 14]), o($V2, [2, 15]), o($V2, [2, 16]), o($V2, [2, 17]), o($V2, [2, 18]), o($V2, [2, 19]), o($V2, [2, 20]), { 11: [1, 31] }, { 16: 32, 30: [1, 33] }, { 11: [2, 24] }, o($V2, [2, 5]), o($V2, [2, 12]), o($V2, [2, 13]), o($Vb, [2, 9]), { 14: 34, 31: $Va }, { 31: [2, 23] }, { 11: [1, 35] }, o($Vb, [2, 10])],\r\n    defaultActions: { 5: [2, 21], 7: [2, 2], 27: [2, 24], 33: [2, 23] },\r\n    parseError: function parseError(str, hash) {\r\n      if (hash.recoverable) {\r\n        this.trace(str);\r\n      } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n      }\r\n    },\r\n    parse: function parse(input) {\r\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\r\n      var args = lstack.slice.call(arguments, 1);\r\n      var lexer2 = Object.create(this.lexer);\r\n      var sharedState = { yy: {} };\r\n      for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n          sharedState.yy[k] = this.yy[k];\r\n        }\r\n      }\r\n      lexer2.setInput(input, sharedState.yy);\r\n      sharedState.yy.lexer = lexer2;\r\n      sharedState.yy.parser = this;\r\n      if (typeof lexer2.yylloc == \"undefined\") {\r\n        lexer2.yylloc = {};\r\n      }\r\n      var yyloc = lexer2.yylloc;\r\n      lstack.push(yyloc);\r\n      var ranges = lexer2.options && lexer2.options.ranges;\r\n      if (typeof sharedState.yy.parseError === \"function\") {\r\n        this.parseError = sharedState.yy.parseError;\r\n      } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n      }\r\n      function lex() {\r\n        var token;\r\n        token = tstack.pop() || lexer2.lex() || EOF;\r\n        if (typeof token !== \"number\") {\r\n          if (token instanceof Array) {\r\n            tstack = token;\r\n            token = tstack.pop();\r\n          }\r\n          token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n      }\r\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\r\n      while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n          action = this.defaultActions[state];\r\n        } else {\r\n          if (symbol === null || typeof symbol == \"undefined\") {\r\n            symbol = lex();\r\n          }\r\n          action = table[state] && table[state][symbol];\r\n        }\r\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\r\n          var errStr = \"\";\r\n          expected = [];\r\n          for (p in table[state]) {\r\n            if (this.terminals_[p] && p > TERROR) {\r\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n            }\r\n          }\r\n          if (lexer2.showPosition) {\r\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n          } else {\r\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\r\n          }\r\n          this.parseError(errStr, {\r\n            text: lexer2.match,\r\n            token: this.terminals_[symbol] || symbol,\r\n            line: lexer2.yylineno,\r\n            loc: yyloc,\r\n            expected\r\n          });\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\r\n        }\r\n        switch (action[0]) {\r\n          case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer2.yytext);\r\n            lstack.push(lexer2.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            {\r\n              yyleng = lexer2.yyleng;\r\n              yytext = lexer2.yytext;\r\n              yylineno = lexer2.yylineno;\r\n              yyloc = lexer2.yylloc;\r\n            }\r\n            break;\r\n          case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n              first_line: lstack[lstack.length - (len || 1)].first_line,\r\n              last_line: lstack[lstack.length - 1].last_line,\r\n              first_column: lstack[lstack.length - (len || 1)].first_column,\r\n              last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n              yyval._$.range = [\r\n                lstack[lstack.length - (len || 1)].range[0],\r\n                lstack[lstack.length - 1].range[1]\r\n              ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n              yytext,\r\n              yyleng,\r\n              yylineno,\r\n              sharedState.yy,\r\n              action[1],\r\n              vstack,\r\n              lstack\r\n            ].concat(args));\r\n            if (typeof r !== \"undefined\") {\r\n              return r;\r\n            }\r\n            if (len) {\r\n              stack = stack.slice(0, -1 * len * 2);\r\n              vstack = vstack.slice(0, -1 * len);\r\n              lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n          case 3:\r\n            return true;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n  var lexer = function() {\r\n    var lexer2 = {\r\n      EOF: 1,\r\n      parseError: function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n          this.yy.parser.parseError(str, hash);\r\n        } else {\r\n          throw new Error(str);\r\n        }\r\n      },\r\n      // resets the lexer, sets new input\r\n      setInput: function(input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = \"\";\r\n        this.conditionStack = [\"INITIAL\"];\r\n        this.yylloc = {\r\n          first_line: 1,\r\n          first_column: 0,\r\n          last_line: 1,\r\n          last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [0, 0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n      },\r\n      // consumes and returns one char from the input\r\n      input: function() {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno++;\r\n          this.yylloc.last_line++;\r\n        } else {\r\n          this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range[1]++;\r\n        }\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n      },\r\n      // unshifts one char (or a string) into the input\r\n      unput: function(ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n        if (lines.length - 1) {\r\n          this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n        this.yylloc = {\r\n          first_line: this.yylloc.first_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.first_column,\r\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\r\n        };\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n      },\r\n      // When called from action, caches matched text and appends it on next action\r\n      more: function() {\r\n        this._more = true;\r\n        return this;\r\n      },\r\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n      reject: function() {\r\n        if (this.options.backtrack_lexer) {\r\n          this._backtrack = true;\r\n        } else {\r\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\r\n            text: \"\",\r\n            token: null,\r\n            line: this.yylineno\r\n          });\r\n        }\r\n        return this;\r\n      },\r\n      // retain first n characters of the match\r\n      less: function(n) {\r\n        this.unput(this.match.slice(n));\r\n      },\r\n      // displays already matched input, i.e. for error messages\r\n      pastInput: function() {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\r\n      },\r\n      // displays upcoming input, i.e. for error messages\r\n      upcomingInput: function() {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n          next += this._input.substr(0, 20 - next.length);\r\n        }\r\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\r\n      },\r\n      // displays the character position where the lexing error occurred, i.e. for error messages\r\n      showPosition: function() {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n      },\r\n      // test the lexed token: return FALSE when not a match, otherwise return token\r\n      test_match: function(match, indexed_rule) {\r\n        var token, lines, backup;\r\n        if (this.options.backtrack_lexer) {\r\n          backup = {\r\n            yylineno: this.yylineno,\r\n            yylloc: {\r\n              first_line: this.yylloc.first_line,\r\n              last_line: this.last_line,\r\n              first_column: this.yylloc.first_column,\r\n              last_column: this.yylloc.last_column\r\n            },\r\n            yytext: this.yytext,\r\n            match: this.match,\r\n            matches: this.matches,\r\n            matched: this.matched,\r\n            yyleng: this.yyleng,\r\n            offset: this.offset,\r\n            _more: this._more,\r\n            _input: this._input,\r\n            yy: this.yy,\r\n            conditionStack: this.conditionStack.slice(0),\r\n            done: this.done\r\n          };\r\n          if (this.options.ranges) {\r\n            backup.yylloc.range = this.yylloc.range.slice(0);\r\n          }\r\n        }\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n          first_line: this.yylloc.last_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.last_column,\r\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n          this.done = false;\r\n        }\r\n        if (token) {\r\n          return token;\r\n        } else if (this._backtrack) {\r\n          for (var k in backup) {\r\n            this[k] = backup[k];\r\n          }\r\n          return false;\r\n        }\r\n        return false;\r\n      },\r\n      // return next match in input\r\n      next: function() {\r\n        if (this.done) {\r\n          return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n          this.done = true;\r\n        }\r\n        var token, match, tempMatch, index;\r\n        if (!this._more) {\r\n          this.yytext = \"\";\r\n          this.match = \"\";\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n          tempMatch = this._input.match(this.rules[rules[i]]);\r\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n            match = tempMatch;\r\n            index = i;\r\n            if (this.options.backtrack_lexer) {\r\n              token = this.test_match(tempMatch, rules[i]);\r\n              if (token !== false) {\r\n                return token;\r\n              } else if (this._backtrack) {\r\n                match = false;\r\n                continue;\r\n              } else {\r\n                return false;\r\n              }\r\n            } else if (!this.options.flex) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (match) {\r\n          token = this.test_match(match, rules[index]);\r\n          if (token !== false) {\r\n            return token;\r\n          }\r\n          return false;\r\n        }\r\n        if (this._input === \"\") {\r\n          return this.EOF;\r\n        } else {\r\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\r\n            text: \"\",\r\n            token: null,\r\n            line: this.yylineno\r\n          });\r\n        }\r\n      },\r\n      // return next match that has a token\r\n      lex: function lex() {\r\n        var r = this.next();\r\n        if (r) {\r\n          return r;\r\n        } else {\r\n          return this.lex();\r\n        }\r\n      },\r\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n      begin: function begin(condition) {\r\n        this.conditionStack.push(condition);\r\n      },\r\n      // pop the previously active lexer condition state off the condition stack\r\n      popState: function popState() {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n          return this.conditionStack.pop();\r\n        } else {\r\n          return this.conditionStack[0];\r\n        }\r\n      },\r\n      // produce the lexer rule set which is active for the currently active lexer condition state\r\n      _currentRules: function _currentRules() {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n          return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n      },\r\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n      topState: function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n          return this.conditionStack[n];\r\n        } else {\r\n          return \"INITIAL\";\r\n        }\r\n      },\r\n      // alias for begin(condition)\r\n      pushState: function pushState(condition) {\r\n        this.begin(condition);\r\n      },\r\n      // return the number of states currently on the stack\r\n      stateStackSize: function stateStackSize() {\r\n        return this.conditionStack.length;\r\n      },\r\n      options: { \"case-insensitive\": true },\r\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n        switch ($avoiding_name_collisions) {\r\n          case 0:\r\n            this.begin(\"open_directive\");\r\n            return 28;\r\n          case 1:\r\n            this.begin(\"type_directive\");\r\n            return 29;\r\n          case 2:\r\n            this.popState();\r\n            this.begin(\"arg_directive\");\r\n            return 15;\r\n          case 3:\r\n            this.popState();\r\n            this.popState();\r\n            return 31;\r\n          case 4:\r\n            return 30;\r\n          case 5:\r\n            break;\r\n          case 6:\r\n            break;\r\n          case 7:\r\n            return 11;\r\n          case 8:\r\n            break;\r\n          case 9:\r\n            break;\r\n          case 10:\r\n            return 4;\r\n          case 11:\r\n            return 17;\r\n          case 12:\r\n            this.begin(\"acc_title\");\r\n            return 18;\r\n          case 13:\r\n            this.popState();\r\n            return \"acc_title_value\";\r\n          case 14:\r\n            this.begin(\"acc_descr\");\r\n            return 20;\r\n          case 15:\r\n            this.popState();\r\n            return \"acc_descr_value\";\r\n          case 16:\r\n            this.begin(\"acc_descr_multiline\");\r\n            break;\r\n          case 17:\r\n            this.popState();\r\n            break;\r\n          case 18:\r\n            return \"acc_descr_multiline_value\";\r\n          case 19:\r\n            return 23;\r\n          case 20:\r\n            return 27;\r\n          case 21:\r\n            return 26;\r\n          case 22:\r\n            return 6;\r\n          case 23:\r\n            return \"INVALID\";\r\n        }\r\n      },\r\n      rules: [/^(?:%%\\{)/i, /^(?:((?:(?!\\}%%)[^:.])*))/i, /^(?::)/i, /^(?:\\}%%)/i, /^(?:((?:(?!\\}%%).|\\n)*))/i, /^(?:%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:#[^\\n]*)/i, /^(?:timeline\\b)/i, /^(?:title\\s[^#\\n;]+)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:section\\s[^#:\\n;]+)/i, /^(?::\\s[^#:\\n;]+)/i, /^(?:[^#:\\n;]+)/i, /^(?:$)/i, /^(?:.)/i],\r\n      conditions: { \"open_directive\": { \"rules\": [1], \"inclusive\": false }, \"type_directive\": { \"rules\": [2, 3], \"inclusive\": false }, \"arg_directive\": { \"rules\": [3, 4], \"inclusive\": false }, \"acc_descr_multiline\": { \"rules\": [17, 18], \"inclusive\": false }, \"acc_descr\": { \"rules\": [15], \"inclusive\": false }, \"acc_title\": { \"rules\": [13], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 21, 22, 23], \"inclusive\": true } }\r\n    };\r\n    return lexer2;\r\n  }();\r\n  parser2.lexer = lexer;\r\n  function Parser() {\r\n    this.yy = {};\r\n  }\r\n  Parser.prototype = parser2;\r\n  parser2.Parser = Parser;\r\n  return new Parser();\r\n}();\r\nparser.parser = parser;\r\nconst parser$1 = parser;\r\nlet currentSection = \"\";\r\nlet currentTaskId = 0;\r\nconst sections = [];\r\nconst tasks = [];\r\nconst rawTasks = [];\r\nconst getCommonDb = () => commonDb;\r\nconst parseDirective = (statement, context, type) => {\r\n  parseDirective$1(globalThis, statement, context, type);\r\n};\r\nconst clear = function() {\r\n  sections.length = 0;\r\n  tasks.length = 0;\r\n  currentSection = \"\";\r\n  rawTasks.length = 0;\r\n  clear$1();\r\n};\r\nconst addSection = function(txt) {\r\n  currentSection = txt;\r\n  sections.push(txt);\r\n};\r\nconst getSections = function() {\r\n  return sections;\r\n};\r\nconst getTasks = function() {\r\n  let allItemsProcessed = compileTasks();\r\n  const maxDepth = 100;\r\n  let iterationCount = 0;\r\n  while (!allItemsProcessed && iterationCount < maxDepth) {\r\n    allItemsProcessed = compileTasks();\r\n    iterationCount++;\r\n  }\r\n  tasks.push(...rawTasks);\r\n  return tasks;\r\n};\r\nconst addTask = function(period, length, event) {\r\n  const rawTask = {\r\n    id: currentTaskId++,\r\n    section: currentSection,\r\n    type: currentSection,\r\n    task: period,\r\n    score: length ? length : 0,\r\n    //if event is defined, then add it the events array\r\n    events: event ? [event] : []\r\n  };\r\n  rawTasks.push(rawTask);\r\n};\r\nconst addEvent = function(event) {\r\n  const currentTask = rawTasks.find((task) => task.id === currentTaskId - 1);\r\n  currentTask.events.push(event);\r\n};\r\nconst addTaskOrg = function(descr) {\r\n  const newTask = {\r\n    section: currentSection,\r\n    type: currentSection,\r\n    description: descr,\r\n    task: descr,\r\n    classes: []\r\n  };\r\n  tasks.push(newTask);\r\n};\r\nconst compileTasks = function() {\r\n  const compileTask = function(pos) {\r\n    return rawTasks[pos].processed;\r\n  };\r\n  let allProcessed = true;\r\n  for (const [i, rawTask] of rawTasks.entries()) {\r\n    compileTask(i);\r\n    allProcessed = allProcessed && rawTask.processed;\r\n  }\r\n  return allProcessed;\r\n};\r\nconst timelineDb = {\r\n  clear,\r\n  getCommonDb,\r\n  addSection,\r\n  getSections,\r\n  getTasks,\r\n  addTask,\r\n  addTaskOrg,\r\n  addEvent,\r\n  parseDirective\r\n};\r\nconst db = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\r\n  __proto__: null,\r\n  addEvent,\r\n  addSection,\r\n  addTask,\r\n  addTaskOrg,\r\n  clear,\r\n  default: timelineDb,\r\n  getCommonDb,\r\n  getSections,\r\n  getTasks,\r\n  parseDirective\r\n}, Symbol.toStringTag, { value: \"Module\" }));\r\nconst MAX_SECTIONS = 12;\r\nconst drawRect = function(elem, rectData) {\r\n  const rectElem = elem.append(\"rect\");\r\n  rectElem.attr(\"x\", rectData.x);\r\n  rectElem.attr(\"y\", rectData.y);\r\n  rectElem.attr(\"fill\", rectData.fill);\r\n  rectElem.attr(\"stroke\", rectData.stroke);\r\n  rectElem.attr(\"width\", rectData.width);\r\n  rectElem.attr(\"height\", rectData.height);\r\n  rectElem.attr(\"rx\", rectData.rx);\r\n  rectElem.attr(\"ry\", rectData.ry);\r\n  if (rectData.class !== void 0) {\r\n    rectElem.attr(\"class\", rectData.class);\r\n  }\r\n  return rectElem;\r\n};\r\nconst drawFace = function(element, faceData) {\r\n  const radius = 15;\r\n  const circleElement = element.append(\"circle\").attr(\"cx\", faceData.cx).attr(\"cy\", faceData.cy).attr(\"class\", \"face\").attr(\"r\", radius).attr(\"stroke-width\", 2).attr(\"overflow\", \"visible\");\r\n  const face = element.append(\"g\");\r\n  face.append(\"circle\").attr(\"cx\", faceData.cx - radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\r\n  face.append(\"circle\").attr(\"cx\", faceData.cx + radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\r\n  function smile(face2) {\r\n    const arc$1 = arc().startAngle(Math.PI / 2).endAngle(3 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\r\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 2) + \")\");\r\n  }\r\n  function sad(face2) {\r\n    const arc$1 = arc().startAngle(3 * Math.PI / 2).endAngle(5 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\r\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 7) + \")\");\r\n  }\r\n  function ambivalent(face2) {\r\n    face2.append(\"line\").attr(\"class\", \"mouth\").attr(\"stroke\", 2).attr(\"x1\", faceData.cx - 5).attr(\"y1\", faceData.cy + 7).attr(\"x2\", faceData.cx + 5).attr(\"y2\", faceData.cy + 7).attr(\"class\", \"mouth\").attr(\"stroke-width\", \"1px\").attr(\"stroke\", \"#666\");\r\n  }\r\n  if (faceData.score > 3) {\r\n    smile(face);\r\n  } else if (faceData.score < 3) {\r\n    sad(face);\r\n  } else {\r\n    ambivalent(face);\r\n  }\r\n  return circleElement;\r\n};\r\nconst drawCircle = function(element, circleData) {\r\n  const circleElement = element.append(\"circle\");\r\n  circleElement.attr(\"cx\", circleData.cx);\r\n  circleElement.attr(\"cy\", circleData.cy);\r\n  circleElement.attr(\"class\", \"actor-\" + circleData.pos);\r\n  circleElement.attr(\"fill\", circleData.fill);\r\n  circleElement.attr(\"stroke\", circleData.stroke);\r\n  circleElement.attr(\"r\", circleData.r);\r\n  if (circleElement.class !== void 0) {\r\n    circleElement.attr(\"class\", circleElement.class);\r\n  }\r\n  if (circleData.title !== void 0) {\r\n    circleElement.append(\"title\").text(circleData.title);\r\n  }\r\n  return circleElement;\r\n};\r\nconst drawText = function(elem, textData) {\r\n  const nText = textData.text.replace(/<br\\s*\\/?>/gi, \" \");\r\n  const textElem = elem.append(\"text\");\r\n  textElem.attr(\"x\", textData.x);\r\n  textElem.attr(\"y\", textData.y);\r\n  textElem.attr(\"class\", \"legend\");\r\n  textElem.style(\"text-anchor\", textData.anchor);\r\n  if (textData.class !== void 0) {\r\n    textElem.attr(\"class\", textData.class);\r\n  }\r\n  const span = textElem.append(\"tspan\");\r\n  span.attr(\"x\", textData.x + textData.textMargin * 2);\r\n  span.text(nText);\r\n  return textElem;\r\n};\r\nconst drawLabel = function(elem, txtObject) {\r\n  function genPoints(x, y, width, height, cut) {\r\n    return x + \",\" + y + \" \" + (x + width) + \",\" + y + \" \" + (x + width) + \",\" + (y + height - cut) + \" \" + (x + width - cut * 1.2) + \",\" + (y + height) + \" \" + x + \",\" + (y + height);\r\n  }\r\n  const polygon = elem.append(\"polygon\");\r\n  polygon.attr(\"points\", genPoints(txtObject.x, txtObject.y, 50, 20, 7));\r\n  polygon.attr(\"class\", \"labelBox\");\r\n  txtObject.y = txtObject.y + txtObject.labelMargin;\r\n  txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\r\n  drawText(elem, txtObject);\r\n};\r\nconst drawSection = function(elem, section, conf) {\r\n  const g = elem.append(\"g\");\r\n  const rect = getNoteRect();\r\n  rect.x = section.x;\r\n  rect.y = section.y;\r\n  rect.fill = section.fill;\r\n  rect.width = conf.width;\r\n  rect.height = conf.height;\r\n  rect.class = \"journey-section section-type-\" + section.num;\r\n  rect.rx = 3;\r\n  rect.ry = 3;\r\n  drawRect(g, rect);\r\n  _drawTextCandidateFunc(conf)(\r\n    section.text,\r\n    g,\r\n    rect.x,\r\n    rect.y,\r\n    rect.width,\r\n    rect.height,\r\n    { class: \"journey-section section-type-\" + section.num },\r\n    conf,\r\n    section.colour\r\n  );\r\n};\r\nlet taskCount = -1;\r\nconst drawTask = function(elem, task, conf) {\r\n  const center = task.x + conf.width / 2;\r\n  const g = elem.append(\"g\");\r\n  taskCount++;\r\n  const maxHeight = 300 + 5 * 30;\r\n  g.append(\"line\").attr(\"id\", \"task\" + taskCount).attr(\"x1\", center).attr(\"y1\", task.y).attr(\"x2\", center).attr(\"y2\", maxHeight).attr(\"class\", \"task-line\").attr(\"stroke-width\", \"1px\").attr(\"stroke-dasharray\", \"4 2\").attr(\"stroke\", \"#666\");\r\n  drawFace(g, {\r\n    cx: center,\r\n    cy: 300 + (5 - task.score) * 30,\r\n    score: task.score\r\n  });\r\n  const rect = getNoteRect();\r\n  rect.x = task.x;\r\n  rect.y = task.y;\r\n  rect.fill = task.fill;\r\n  rect.width = conf.width;\r\n  rect.height = conf.height;\r\n  rect.class = \"task task-type-\" + task.num;\r\n  rect.rx = 3;\r\n  rect.ry = 3;\r\n  drawRect(g, rect);\r\n  task.x + 14;\r\n  _drawTextCandidateFunc(conf)(\r\n    task.task,\r\n    g,\r\n    rect.x,\r\n    rect.y,\r\n    rect.width,\r\n    rect.height,\r\n    { class: \"task\" },\r\n    conf,\r\n    task.colour\r\n  );\r\n};\r\nconst drawBackgroundRect = function(elem, bounds) {\r\n  const rectElem = drawRect(elem, {\r\n    x: bounds.startx,\r\n    y: bounds.starty,\r\n    width: bounds.stopx - bounds.startx,\r\n    height: bounds.stopy - bounds.starty,\r\n    fill: bounds.fill,\r\n    class: \"rect\"\r\n  });\r\n  rectElem.lower();\r\n};\r\nconst getTextObj = function() {\r\n  return {\r\n    x: 0,\r\n    y: 0,\r\n    fill: void 0,\r\n    \"text-anchor\": \"start\",\r\n    width: 100,\r\n    height: 100,\r\n    textMargin: 0,\r\n    rx: 0,\r\n    ry: 0\r\n  };\r\n};\r\nconst getNoteRect = function() {\r\n  return {\r\n    x: 0,\r\n    y: 0,\r\n    width: 100,\r\n    anchor: \"start\",\r\n    height: 100,\r\n    rx: 0,\r\n    ry: 0\r\n  };\r\n};\r\nconst _drawTextCandidateFunc = function() {\r\n  function byText(content, g, x, y, width, height, textAttrs, colour) {\r\n    const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y + height / 2 + 5).style(\"font-color\", colour).style(\"text-anchor\", \"middle\").text(content);\r\n    _setTextAttrs(text, textAttrs);\r\n  }\r\n  function byTspan(content, g, x, y, width, height, textAttrs, conf, colour) {\r\n    const { taskFontSize, taskFontFamily } = conf;\r\n    const lines = content.split(/<br\\s*\\/?>/gi);\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const dy = i * taskFontSize - taskFontSize * (lines.length - 1) / 2;\r\n      const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y).attr(\"fill\", colour).style(\"text-anchor\", \"middle\").style(\"font-size\", taskFontSize).style(\"font-family\", taskFontFamily);\r\n      text.append(\"tspan\").attr(\"x\", x + width / 2).attr(\"dy\", dy).text(lines[i]);\r\n      text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\r\n      _setTextAttrs(text, textAttrs);\r\n    }\r\n  }\r\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\r\n    const body = g.append(\"switch\");\r\n    const f = body.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height).attr(\"position\", \"fixed\");\r\n    const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\r\n    text.append(\"div\").attr(\"class\", \"label\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\r\n    byTspan(content, body, x, y, width, height, textAttrs, conf);\r\n    _setTextAttrs(text, textAttrs);\r\n  }\r\n  function _setTextAttrs(toText, fromTextAttrsDict) {\r\n    for (const key in fromTextAttrsDict) {\r\n      if (key in fromTextAttrsDict) {\r\n        toText.attr(key, fromTextAttrsDict[key]);\r\n      }\r\n    }\r\n  }\r\n  return function(conf) {\r\n    return conf.textPlacement === \"fo\" ? byFo : conf.textPlacement === \"old\" ? byText : byTspan;\r\n  };\r\n}();\r\nconst initGraphics = function(graphics) {\r\n  graphics.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 5).attr(\"refY\", 2).attr(\"markerWidth\", 6).attr(\"markerHeight\", 4).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0,0 V 4 L6,2 Z\");\r\n};\r\nfunction wrap(text, width) {\r\n  text.each(function() {\r\n    var text2 = select(this), words = text2.text().split(/(\\s+|<br>)/).reverse(), word, line = [], lineHeight = 1.1, y = text2.attr(\"y\"), dy = parseFloat(text2.attr(\"dy\")), tspan = text2.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n    for (let j = 0; j < words.length; j++) {\r\n      word = words[words.length - 1 - j];\r\n      line.push(word);\r\n      tspan.text(line.join(\" \").trim());\r\n      if (tspan.node().getComputedTextLength() > width || word === \"<br>\") {\r\n        line.pop();\r\n        tspan.text(line.join(\" \").trim());\r\n        if (word === \"<br>\") {\r\n          line = [\"\"];\r\n        } else {\r\n          line = [word];\r\n        }\r\n        tspan = text2.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", lineHeight + \"em\").text(word);\r\n      }\r\n    }\r\n  });\r\n}\r\nconst drawNode = function(elem, node, fullSection, conf) {\r\n  const section = fullSection % MAX_SECTIONS - 1;\r\n  const nodeElem = elem.append(\"g\");\r\n  node.section = section;\r\n  nodeElem.attr(\r\n    \"class\",\r\n    (node.class ? node.class + \" \" : \"\") + \"timeline-node \" + (\"section-\" + section)\r\n  );\r\n  const bkgElem = nodeElem.append(\"g\");\r\n  const textElem = nodeElem.append(\"g\");\r\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\r\n  const bbox = txt.node().getBBox();\r\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\r\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\r\n  node.height = Math.max(node.height, node.maxHeight);\r\n  node.width = node.width + 2 * node.padding;\r\n  textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + node.padding / 2 + \")\");\r\n  defaultBkg(bkgElem, node, section);\r\n  return node;\r\n};\r\nconst getVirtualNodeHeight = function(elem, node, conf) {\r\n  const textElem = elem.append(\"g\");\r\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\r\n  const bbox = txt.node().getBBox();\r\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\r\n  textElem.remove();\r\n  return bbox.height + fontSize * 1.1 * 0.5 + node.padding;\r\n};\r\nconst defaultBkg = function(elem, node, section) {\r\n  const rd = 5;\r\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + node.type).attr(\r\n    \"d\",\r\n    `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`\r\n  );\r\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\r\n};\r\nconst svgDraw = {\r\n  drawRect,\r\n  drawCircle,\r\n  drawSection,\r\n  drawText,\r\n  drawLabel,\r\n  drawTask,\r\n  drawBackgroundRect,\r\n  getTextObj,\r\n  getNoteRect,\r\n  initGraphics,\r\n  drawNode,\r\n  getVirtualNodeHeight\r\n};\r\nconst draw = function(text, id, version, diagObj) {\r\n  var _a, _b, _c, _d;\r\n  const conf = getConfig();\r\n  const LEFT_MARGIN = conf.leftMargin ?? 50;\r\n  (_b = (_a = diagObj.db).clear) == null ? void 0 : _b.call(_a);\r\n  diagObj.parser.parse(text + \"\\n\");\r\n  log.debug(\"timeline\", diagObj.db);\r\n  const securityLevel = conf.securityLevel;\r\n  let sandboxElement;\r\n  if (securityLevel === \"sandbox\") {\r\n    sandboxElement = select(\"#i\" + id);\r\n  }\r\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\r\n  const svg = root.select(\"#\" + id);\r\n  svg.append(\"g\");\r\n  const tasks2 = diagObj.db.getTasks();\r\n  const title = diagObj.db.getCommonDb().getDiagramTitle();\r\n  log.debug(\"task\", tasks2);\r\n  svgDraw.initGraphics(svg);\r\n  const sections2 = diagObj.db.getSections();\r\n  log.debug(\"sections\", sections2);\r\n  let maxSectionHeight = 0;\r\n  let maxTaskHeight = 0;\r\n  let depthY = 0;\r\n  let sectionBeginY = 0;\r\n  let masterX = 50 + LEFT_MARGIN;\r\n  let masterY = 50;\r\n  sectionBeginY = 50;\r\n  let sectionNumber = 0;\r\n  let hasSections = true;\r\n  sections2.forEach(function(section) {\r\n    const sectionNode = {\r\n      number: sectionNumber,\r\n      descr: section,\r\n      section: sectionNumber,\r\n      width: 150,\r\n      padding: 20,\r\n      maxHeight: maxSectionHeight\r\n    };\r\n    const sectionHeight = svgDraw.getVirtualNodeHeight(svg, sectionNode, conf);\r\n    log.debug(\"sectionHeight before draw\", sectionHeight);\r\n    maxSectionHeight = Math.max(maxSectionHeight, sectionHeight + 20);\r\n  });\r\n  let maxEventCount = 0;\r\n  let maxEventLineLength = 0;\r\n  log.debug(\"tasks.length\", tasks2.length);\r\n  for (const [i, task] of tasks2.entries()) {\r\n    const taskNode = {\r\n      number: i,\r\n      descr: task,\r\n      section: task.section,\r\n      width: 150,\r\n      padding: 20,\r\n      maxHeight: maxTaskHeight\r\n    };\r\n    const taskHeight = svgDraw.getVirtualNodeHeight(svg, taskNode, conf);\r\n    log.debug(\"taskHeight before draw\", taskHeight);\r\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight + 20);\r\n    maxEventCount = Math.max(maxEventCount, task.events.length);\r\n    let maxEventLineLengthTemp = 0;\r\n    for (let j = 0; j < task.events.length; j++) {\r\n      const event = task.events[j];\r\n      const eventNode = {\r\n        descr: event,\r\n        section: task.section,\r\n        number: task.section,\r\n        width: 150,\r\n        padding: 20,\r\n        maxHeight: 50\r\n      };\r\n      maxEventLineLengthTemp += svgDraw.getVirtualNodeHeight(svg, eventNode, conf);\r\n    }\r\n    maxEventLineLength = Math.max(maxEventLineLength, maxEventLineLengthTemp);\r\n  }\r\n  log.debug(\"maxSectionHeight before draw\", maxSectionHeight);\r\n  log.debug(\"maxTaskHeight before draw\", maxTaskHeight);\r\n  if (sections2 && sections2.length > 0) {\r\n    sections2.forEach((section) => {\r\n      const tasksForSection = tasks2.filter((task) => task.section === section);\r\n      const sectionNode = {\r\n        number: sectionNumber,\r\n        descr: section,\r\n        section: sectionNumber,\r\n        width: 200 * Math.max(tasksForSection.length, 1) - 50,\r\n        padding: 20,\r\n        maxHeight: maxSectionHeight\r\n      };\r\n      log.debug(\"sectionNode\", sectionNode);\r\n      const sectionNodeWrapper = svg.append(\"g\");\r\n      const node = svgDraw.drawNode(sectionNodeWrapper, sectionNode, sectionNumber, conf);\r\n      log.debug(\"sectionNode output\", node);\r\n      sectionNodeWrapper.attr(\"transform\", `translate(${masterX}, ${sectionBeginY})`);\r\n      masterY += maxSectionHeight + 50;\r\n      if (tasksForSection.length > 0) {\r\n        drawTasks(\r\n          svg,\r\n          tasksForSection,\r\n          sectionNumber,\r\n          masterX,\r\n          masterY,\r\n          maxTaskHeight,\r\n          conf,\r\n          maxEventCount,\r\n          maxEventLineLength,\r\n          maxSectionHeight,\r\n          false\r\n        );\r\n      }\r\n      masterX += 200 * Math.max(tasksForSection.length, 1);\r\n      masterY = sectionBeginY;\r\n      sectionNumber++;\r\n    });\r\n  } else {\r\n    hasSections = false;\r\n    drawTasks(\r\n      svg,\r\n      tasks2,\r\n      sectionNumber,\r\n      masterX,\r\n      masterY,\r\n      maxTaskHeight,\r\n      conf,\r\n      maxEventCount,\r\n      maxEventLineLength,\r\n      maxSectionHeight,\r\n      true\r\n    );\r\n  }\r\n  const box = svg.node().getBBox();\r\n  log.debug(\"bounds\", box);\r\n  if (title) {\r\n    svg.append(\"text\").text(title).attr(\"x\", box.width / 2 - LEFT_MARGIN).attr(\"font-size\", \"4ex\").attr(\"font-weight\", \"bold\").attr(\"y\", 20);\r\n  }\r\n  depthY = hasSections ? maxSectionHeight + maxTaskHeight + 150 : maxTaskHeight + 100;\r\n  const lineWrapper = svg.append(\"g\").attr(\"class\", \"lineWrapper\");\r\n  lineWrapper.append(\"line\").attr(\"x1\", LEFT_MARGIN).attr(\"y1\", depthY).attr(\"x2\", box.width + 3 * LEFT_MARGIN).attr(\"y2\", depthY).attr(\"stroke-width\", 4).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\");\r\n  setupGraphViewbox(\r\n    void 0,\r\n    svg,\r\n    ((_c = conf.timeline) == null ? void 0 : _c.padding) ?? 50,\r\n    ((_d = conf.timeline) == null ? void 0 : _d.useMaxWidth) ?? false\r\n  );\r\n};\r\nconst drawTasks = function(diagram2, tasks2, sectionColor, masterX, masterY, maxTaskHeight, conf, maxEventCount, maxEventLineLength, maxSectionHeight, isWithoutSections) {\r\n  var _a;\r\n  for (const task of tasks2) {\r\n    const taskNode = {\r\n      descr: task.task,\r\n      section: sectionColor,\r\n      number: sectionColor,\r\n      width: 150,\r\n      padding: 20,\r\n      maxHeight: maxTaskHeight\r\n    };\r\n    log.debug(\"taskNode\", taskNode);\r\n    const taskWrapper = diagram2.append(\"g\").attr(\"class\", \"taskWrapper\");\r\n    const node = svgDraw.drawNode(taskWrapper, taskNode, sectionColor, conf);\r\n    const taskHeight = node.height;\r\n    log.debug(\"taskHeight after draw\", taskHeight);\r\n    taskWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\r\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight);\r\n    if (task.events) {\r\n      const lineWrapper = diagram2.append(\"g\").attr(\"class\", \"lineWrapper\");\r\n      let lineLength = maxTaskHeight;\r\n      masterY += 100;\r\n      lineLength = lineLength + drawEvents(diagram2, task.events, sectionColor, masterX, masterY, conf);\r\n      masterY -= 100;\r\n      lineWrapper.append(\"line\").attr(\"x1\", masterX + 190 / 2).attr(\"y1\", masterY + maxTaskHeight).attr(\"x2\", masterX + 190 / 2).attr(\r\n        \"y2\",\r\n        masterY + maxTaskHeight + (isWithoutSections ? maxTaskHeight : maxSectionHeight) + maxEventLineLength + 120\r\n      ).attr(\"stroke-width\", 2).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\").attr(\"stroke-dasharray\", \"5,5\");\r\n    }\r\n    masterX = masterX + 200;\r\n    if (isWithoutSections && !((_a = conf.timeline) == null ? void 0 : _a.disableMulticolor)) {\r\n      sectionColor++;\r\n    }\r\n  }\r\n  masterY = masterY - 10;\r\n};\r\nconst drawEvents = function(diagram2, events, sectionColor, masterX, masterY, conf) {\r\n  let maxEventHeight = 0;\r\n  const eventBeginY = masterY;\r\n  masterY = masterY + 100;\r\n  for (const event of events) {\r\n    const eventNode = {\r\n      descr: event,\r\n      section: sectionColor,\r\n      number: sectionColor,\r\n      width: 150,\r\n      padding: 20,\r\n      maxHeight: 50\r\n    };\r\n    log.debug(\"eventNode\", eventNode);\r\n    const eventWrapper = diagram2.append(\"g\").attr(\"class\", \"eventWrapper\");\r\n    const node = svgDraw.drawNode(eventWrapper, eventNode, sectionColor, conf);\r\n    const eventHeight = node.height;\r\n    maxEventHeight = maxEventHeight + eventHeight;\r\n    eventWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\r\n    masterY = masterY + 10 + eventHeight;\r\n  }\r\n  masterY = eventBeginY;\r\n  return maxEventHeight;\r\n};\r\nconst renderer = {\r\n  setConf: () => {\r\n  },\r\n  draw\r\n};\r\nconst genSections = (options) => {\r\n  let sections2 = \"\";\r\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\r\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\r\n    if (isDark(options[\"lineColor\" + i])) {\r\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\r\n    } else {\r\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\r\n    }\r\n  }\r\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\r\n    const sw = \"\" + (17 - 3 * i);\r\n    sections2 += `\r\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} path  {\r\n      fill: ${options[\"cScale\" + i]};\r\n    }\r\n    .section-${i - 1} text {\r\n     fill: ${options[\"cScaleLabel\" + i]};\r\n    }\r\n    .node-icon-${i - 1} {\r\n      font-size: 40px;\r\n      color: ${options[\"cScaleLabel\" + i]};\r\n    }\r\n    .section-edge-${i - 1}{\r\n      stroke: ${options[\"cScale\" + i]};\r\n    }\r\n    .edge-depth-${i - 1}{\r\n      stroke-width: ${sw};\r\n    }\r\n    .section-${i - 1} line {\r\n      stroke: ${options[\"cScaleInv\" + i]} ;\r\n      stroke-width: 3;\r\n    }\r\n\r\n    .lineWrapper line{\r\n      stroke: ${options[\"cScaleLabel\" + i]} ;\r\n    }\r\n\r\n    .disabled, .disabled circle, .disabled text {\r\n      fill: lightgray;\r\n    }\r\n    .disabled text {\r\n      fill: #efefef;\r\n    }\r\n    `;\r\n  }\r\n  return sections2;\r\n};\r\nconst getStyles = (options) => `\r\n  .edge {\r\n    stroke-width: 3;\r\n  }\r\n  ${genSections(options)}\r\n  .section-root rect, .section-root path, .section-root circle  {\r\n    fill: ${options.git0};\r\n  }\r\n  .section-root text {\r\n    fill: ${options.gitBranchLabel0};\r\n  }\r\n  .icon-container {\r\n    height:100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .edge {\r\n    fill: none;\r\n  }\r\n  .eventWrapper  {\r\n   filter: brightness(120%);\r\n  }\r\n`;\r\nconst styles = getStyles;\r\nconst diagram = {\r\n  db,\r\n  renderer,\r\n  parser: parser$1,\r\n  styles\r\n};\r\nexport {\r\n  diagram\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAIA,mBAAO;AACP,0BAAO;AAKP,IAAI,SAAS,WAAW;AACtB,MAAI,IAAI,SAAS,GAAG,GAAG,IAAI,GAAG;AAC5B,SAAK,KAAK,MAAM,CAAC,GAAG,IAAI,EAAE,QAAQ,KAAK,GAAG,EAAE,CAAC,CAAC,IAAI;AAChD;AACF,WAAO;AAAA,EACT,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC3P,MAAI,UAAU;AAAA,IACZ,OAAO,SAAS,QAAQ;AAAA,IACxB;AAAA,IACA,IAAI,CAAC;AAAA,IACL,UAAU,EAAE,SAAS,GAAG,SAAS,GAAG,YAAY,GAAG,YAAY,GAAG,OAAO,GAAG,aAAa,GAAG,QAAQ,GAAG,SAAS,GAAG,aAAa,IAAI,WAAW,IAAI,iBAAiB,IAAI,iBAAiB,IAAI,kBAAkB,IAAI,KAAK,IAAI,gBAAgB,IAAI,SAAS,IAAI,aAAa,IAAI,mBAAmB,IAAI,aAAa,IAAI,mBAAmB,IAAI,6BAA6B,IAAI,WAAW,IAAI,oBAAoB,IAAI,mBAAmB,IAAI,UAAU,IAAI,SAAS,IAAI,kBAAkB,IAAI,kBAAkB,IAAI,iBAAiB,IAAI,mBAAmB,IAAI,WAAW,GAAG,QAAQ,EAAE;AAAA,IACvjB,YAAY,EAAE,GAAG,SAAS,GAAG,YAAY,GAAG,OAAO,GAAG,SAAS,IAAI,WAAW,IAAI,KAAK,IAAI,SAAS,IAAI,aAAa,IAAI,mBAAmB,IAAI,aAAa,IAAI,mBAAmB,IAAI,6BAA6B,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,kBAAkB,IAAI,kBAAkB,IAAI,iBAAiB,IAAI,kBAAkB;AAAA,IACtV,cAAceAAe,SAAS,UAAU,QAAQ,QAAQ,UAAU,IAAI,SAAS,IAAI,IAAI;AAC/E,UAAI,KAAK,GAAG,SAAS;AACrB,cAAQ,SAAS;AAAA,QACf,KAAK;AACH,iBAAO,GAAG,KAAK,CAAC;AAAA,QAClB,KAAK;AACH,eAAK,IAAI,CAAC;AACV;AAAA,QACF,KAAK;AACH,aAAG,KAAK,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC;AACtB,eAAK,IAAI,GAAG,KAAK,CAAC;AAClB;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,eAAK,IAAI,GAAG,EAAE;AACd;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,eAAK,IAAI,CAAC;AACV;AAAA,QACF,KAAK;AACH,aAAG,YAAY,EAAE,gBAAgB,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC;AACjD,eAAK,IAAI,GAAG,EAAE,EAAE,OAAO,CAAC;AACxB;AAAA,QACF,KAAK;AACH,eAAK,IAAI,GAAG,EAAE,EAAE,KAAK;AACrB,aAAG,YAAY,EAAE,YAAY,KAAK,CAAC;AACnC;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,eAAK,IAAI,GAAG,EAAE,EAAE,KAAK;AACrB,aAAG,YAAY,EAAE,kBAAkB,KAAK,CAAC;AACzC;AAAA,QACF,KAAK;AACH,aAAG,WAAW,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC;AAC9B,eAAK,IAAI,GAAG,EAAE,EAAE,OAAO,CAAC;AACxB;AAAA,QACF,KAAK;AACH,aAAG,QAAQ,GAAG,EAAE,GAAG,GAAG,EAAE;AACxB,eAAK,IAAI,GAAG,EAAE;AACd;AAAA,QACF,KAAK;AACH,aAAG,SAAS,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC;AAC5B,eAAK,IAAI,GAAG,EAAE;AACd;AAAA,QACF,KAAK;AACH,aAAG,eAAe,OAAO,gBAAgB;AACzC;AAAA,QACF,KAAK;AACH,aAAG,eAAe,GAAG,EAAE,GAAG,gBAAgB;AAC1C;AAAA,QACF,KAAK;AACH,aAAG,EAAE,IAAI,GAAG,EAAE,EAAE,KAAK,EAAE,QAAQ,MAAM,GAAG;AACxC,aAAG,eAAe,GAAG,EAAE,GAAG,eAAe;AACzC;AAAA,QACF,KAAK;AACH,aAAG,eAAe,OAAO,mBAAmB,UAAU;AACtD;AAAA,MACJ;AAAA,IACF;AAAA,IACA,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,IACz7B,gBAAgB,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;AAAA,IAClE,YAAY,SAAS,WAAW,KAAK,MAAM;AACzC,UAAI,KAAK,aAAa;AACpB,aAAK,MAAM,GAAG;AAAA,MAChB,OAAO;AACL,YAAI,QAAQ,IAAI,MAAM,GAAG;AACzB,cAAM,OAAO;AACb,cAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,OAAO,SAAS,MAAM,OAAO;AAC3B,UAAI,OAAO,MAAM,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,QAAQ,KAAK,OAAO,SAAS,IAAI,WAAW,GAAG,SAAS,GAAG,SAAS,GAAG,MAAM;AACtJ,UAAI,OAAO,OAAO,MAAM,KAAK,WAAW,CAAC;AACzC,UAAI,SAAS,OAAO,OAAO,KAAK,KAAK;AACrC,UAAI,cAAc,EAAE,IAAI,CAAC,EAAE;AAC3B,eAAS,KAAK,KAAK,IAAI;AACrB,YAAI,OAAO,UAAU,eAAe,KAAK,KAAK,IAAI,CAAC,GAAG;AACpD,sBAAY,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC;AAAA,QAC/B;AAAA,MACF;AACA,aAAO,SAAS,OAAO,YAAY,EAAE;AACrC,kBAAY,GAAG,QAAQ;AACvB,kBAAY,GAAG,SAAS;AACxB,UAAI,OAAO,OAAO,UAAU,aAAa;AACvC,eAAO,SAAS,CAAC;AAAA,MACnB;AACA,UAAI,QAAQ,OAAO;AACnB,aAAO,KAAK,KAAK;AACjB,UAAI,SAAS,OAAO,WAAW,OAAO,QAAQ;AAC9C,UAAI,OAAO,YAAY,GAAG,eAAe,YAAY;AACnD,aAAK,aAAa,YAAY,GAAG;AAAA,MACnC,OAAO;AACL,aAAK,aAAa,OAAO,eAAe,IAAI,EAAE;AAAA,MAChD;AACA,eAAS,MAAM;AACb,YAAI;AACJ,gBAAQ,OAAO,IAAI,KAAK,OAAO,IAAI,KAAK;AACxC,YAAI,OAAO,UAAU,UAAU;AAC7B,cAAI,iBAAiB,OAAO;AAC1B,qBAAS;AACT,oBAAQ,OAAO,IAAI;AAAA,UACrB;AACA,kBAAQ,KAAK,SAAS,KAAK,KAAK;AAAA,QAClC;AACA,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,OAAO,QAAQ,GAAG,QAAQ,CAAC,GAAG,GAAG,KAAK,UAAU;AAC5D,aAAO,MAAM;AACX,gBAAQ,MAAM,MAAM,SAAS,CAAC;AAC9B,YAAI,KAAK,eAAe,KAAK,GAAG;AAC9B,mBAAS,KAAK,eAAe,KAAK;AAAA,QACpC,OAAO;AACL,cAAI,WAAW,QAAQ,OAAO,UAAU,aAAa;AACnD,qBAAS,IAAI;AAAA,UACf;AACA,mBAAS,MAAM,KAAK,KAAK,MAAM,KAAK,EAAE,MAAM;AAAA,QAC9C;AACA,YAAI,OAAO,WAAW,eAAe,CAAC,OAAO,UAAU,CAAC,OAAO,CAAC,GAAG;AACjE,cAAI,SAAS;AACb,qBAAW,CAAC;AACZ,eAAK,KAAK,MAAM,KAAK,GAAG;AACtB,gBAAI,KAAK,WAAW,CAAC,KAAK,IAAI,QAAQ;AACpC,uBAAS,KAAK,MAAM,KAAK,WAAW,CAAC,IAAI,GAAG;AAAA,YAC9C;AAAA,UACF;AACA,cAAI,OAAO,cAAc;AACvB,qBAAS,0BAA0B,WAAW,KAAK,QAAQ,OAAO,aAAa,IAAI,iBAAiB,SAAS,KAAK,IAAI,IAAI,aAAa,KAAK,WAAW,MAAM,KAAK,UAAU;AAAA,UAC9K,OAAO;AACL,qBAAS,0BAA0B,WAAW,KAAK,mBAAmB,UAAU,MAAM,iBAAiB,OAAO,KAAK,WAAW,MAAM,KAAK,UAAU;AAAA,UACrJ;AACA,eAAK,WAAW,QAAQ;AAAA,YACtB,MAAM,OAAO;AAAA,YACb,OAAO,KAAK,WAAW,MAAM,KAAK;AAAA,YAClC,MAAM,OAAO;AAAA,YACb,KAAK;AAAA,YACL;AAAA,UACF,CAAC;AAAA,QACH;AACA,YAAI,OAAO,CAAC,aAAa,SAAS,OAAO,SAAS,GAAG;AACnD,gBAAM,IAAI,MAAM,sDAAsD,QAAQ,cAAc,MAAM;AAAA,QACpG;AACA,gBAAQ,OAAO,CAAC,GAAG;AAAA,UACjB,KAAK;AACH,kBAAM,KAAK,MAAM;AACjB,mBAAO,KAAK,OAAO,MAAM;AACzB,mBAAO,KAAK,OAAO,MAAM;AACzB,kBAAM,KAAK,OAAO,CAAC,CAAC;AACpB,qBAAS;AACT;AACE,uBAAS,OAAO;AAChB,uBAAS,OAAO;AAChB,yBAAW,OAAO;AAClB,sBAAQ,OAAO;AAAA,YACjB;AACA;AAAA,UACF,KAAK;AACH,kBAAM,KAAK,aAAa,OAAO,CAAC,CAAC,EAAE,CAAC;AACpC,kBAAM,IAAI,OAAO,OAAO,SAAS,GAAG;AACpC,kBAAM,KAAK;AAAA,cACT,YAAY,OAAO,OAAO,UAAU,OAAO,EAAE,EAAE;AAAA,cAC/C,WAAW,OAAO,OAAO,SAAS,CAAC,EAAE;AAAA,cACrC,cAAc,OAAO,OAAO,UAAU,OAAO,EAAE,EAAE;AAAA,cACjD,aAAa,OAAO,OAAO,SAAS,CAAC,EAAE;AAAA,YACzC;AACA,gBAAI,QAAQ;AACV,oBAAM,GAAG,QAAQ;AAAA,gBACf,OAAO,OAAO,UAAU,OAAO,EAAE,EAAE,MAAM,CAAC;AAAA,gBAC1C,OAAO,OAAO,SAAS,CAAC,EAAE,MAAM,CAAC;AAAA,cACnC;AAAA,YACF;AACA,gBAAI,KAAK,cAAc,MAAM,OAAO;AAAA,cAClC;AAAA,cACA;AAAA,cACA;AAAA,cACA,YAAY;AAAA,cACZ,OAAO,CAAC;AAAA,cACR;AAAA,cACA;AAAA,YACF,EAAE,OAAO,IAAI,CAAC;AACd,gBAAI,OAAO,MAAM,aAAa;AAC5B,qBAAO;AAAA,YACT;AACA,gBAAI,KAAK;AACP,sBAAQ,MAAM,MAAM,GAAG,KAAK,MAAM,CAAC;AACnC,uBAAS,OAAO,MAAM,GAAG,KAAK,GAAG;AACjC,uBAAS,OAAO,MAAM,GAAG,KAAK,GAAG;AAAA,YACnC;AACA,kBAAM,KAAK,KAAK,aAAa,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1C,mBAAO,KAAK,MAAM,CAAC;AACnB,mBAAO,KAAK,MAAM,EAAE;AACpB,uBAAW,MAAM,MAAM,MAAM,SAAS,CAAC,CAAC,EAAE,MAAM,MAAM,SAAS,CAAC,CAAC;AACjE,kBAAM,KAAK,QAAQ;AACnB;AAAA,UACF,KAAK;AACH,mBAAO;AAAA,QACX;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA,EACF;AACA,MAAI,QAAQ,WAAW;AACrB,QAAI,SAAS;AAAA,MACX,KAAK;AAAA,MACL,YAAY,SAAS,WAAW,KAAK,MAAM;AACzC,YAAI,KAAK,GAAG,QAAQ;AAClB,eAAK,GAAG,OAAO,WAAW,KAAK,IAAI;AAAA,QACrC,OAAO;AACL,gBAAM,IAAI,MAAM,GAAG;AAAA,QACrB;AAAA,MACF;AAAA;AAAA,MAEA,UAAU,SAAS,OAAO,IAAI;AAC5B,aAAK,KAAK,MAAM,KAAK,MAAM,CAAC;AAC5B,aAAK,SAAS;AACd,aAAK,QAAQ,KAAK,aAAa,KAAK,OAAO;AAC3C,aAAK,WAAW,KAAK,SAAS;AAC9B,aAAK,SAAS,KAAK,UAAU,KAAK,QAAQ;AAC1C,aAAK,iBAAiB,CAAC,SAAS;AAChC,aAAK,SAAS;AAAA,UACZ,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,WAAW;AAAA,UACX,aAAa;AAAA,QACf;AACA,YAAI,KAAK,QAAQ,QAAQ;AACvB,eAAK,OAAO,QAAQ,CAAC,GAAG,CAAC;AAAA,QAC3B;AACA,aAAK,SAAS;AACd,eAAO;AAAA,MACT;AAAA;AAAA,MAEA,OAAO,WAAW;AAChB,YAAI,KAAK,KAAK,OAAO,CAAC;AACtB,aAAK,UAAU;AACf,aAAK;AACL,aAAK;AACL,aAAK,SAAS;AACd,aAAK,WAAW;AAChB,YAAI,QAAQ,GAAG,MAAM,iBAAiB;AACtC,YAAI,OAAO;AACT,eAAK;AACL,eAAK,OAAO;AAAA,QACd,OAAO;AACL,eAAK,OAAO;AAAA,QACd;AACA,YAAI,KAAK,QAAQ,QAAQ;AACvB,eAAK,OAAO,MAAM,CAAC;AAAA,QACrB;AACA,aAAK,SAAS,KAAK,OAAO,MAAM,CAAC;AACjC,eAAO;AAAA,MACT;AAAA;AAAA,MAEA,OAAO,SAAS,IAAI;AAClB,YAAI,MAAM,GAAG;AACb,YAAI,QAAQ,GAAG,MAAM,eAAe;AACpC,aAAK,SAAS,KAAK,KAAK;AACxB,aAAK,SAAS,KAAK,OAAO,OAAO,GAAG,KAAK,OAAO,SAAS,GAAG;AAC5D,aAAK,UAAU;AACf,YAAI,WAAW,KAAK,MAAM,MAAM,eAAe;AAC/C,aAAK,QAAQ,KAAK,MAAM,OAAO,GAAG,KAAK,MAAM,SAAS,CAAC;AACvD,aAAK,UAAU,KAAK,QAAQ,OAAO,GAAG,KAAK,QAAQ,SAAS,CAAC;AAC7D,YAAI,MAAM,SAAS,GAAG;AACpB,eAAK,YAAY,MAAM,SAAS;AAAA,QAClC;AACA,YAAI,IAAI,KAAK,OAAO;AACpB,aAAK,SAAS;AAAA,UACZ,YAAY,KAAK,OAAO;AAAA,UACxB,WAAW,KAAK,WAAW;AAAA,UAC3B,cAAc,KAAK,OAAO;AAAA,UAC1B,aAAa,SAAS,MAAM,WAAW,SAAS,SAAS,KAAK,OAAO,eAAe,KAAK,SAAS,SAAS,SAAS,MAAM,MAAM,EAAE,SAAS,MAAM,CAAC,EAAE,SAAS,KAAK,OAAO,eAAe;AAAA,QAC1L;AACA,YAAI,KAAK,QAAQ,QAAQ;AACvB,eAAK,OAAO,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,SAAS,GAAG;AAAA,QACrD;AACA,aAAK,SAAS,KAAK,OAAO;AAC1B,eAAO;AAAA,MACT;AAAA;AAAA,MAEA,MAAM,WAAW;AACf,aAAK,QAAQ;AACb,eAAO;AAAA,MACT;AAAA;AAAA,MAEA,QAAQ,WAAW;AACjB,YAAI,KAAK,QAAQ,iBAAiB;AAChC,eAAK,aAAa;AAAA,QACpB,OAAO;AACL,iBAAO,KAAK,WAAW,4BAA4B,KAAK,WAAW,KAAK,qIAAqI,KAAK,aAAa,GAAG;AAAA,YAChO,MAAM;AAAA,YACN,OAAO;AAAA,YACP,MAAM,KAAK;AAAA,UACb,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAAA;AAAA,MAEA,MAAM,SAAS,GAAG;AAChB,aAAK,MAAM,KAAK,MAAM,MAAM,CAAC,CAAC;AAAA,MAChC;AAAA;AAAA,MAEA,WAAW,WAAW;AACpB,YAAI,OAAO,KAAK,QAAQ,OAAO,GAAG,KAAK,QAAQ,SAAS,KAAK,MAAM,MAAM;AACzE,gBAAQ,KAAK,SAAS,KAAK,QAAQ,MAAM,KAAK,OAAO,GAAG,EAAE,QAAQ,OAAO,EAAE;AAAA,MAC7E;AAAA;AAAA,MAEA,eAAe,WAAW;AACxB,YAAI,OAAO,KAAK;AAChB,YAAI,KAAK,SAAS,IAAI;AACpB,kBAAQ,KAAK,OAAO,OAAO,GAAG,KAAK,KAAK,MAAM;AAAA,QAChD;AACA,gBAAQ,KAAK,OAAO,GAAG,EAAE,KAAK,KAAK,SAAS,KAAK,QAAQ,KAAK,QAAQ,OAAO,EAAE;AAAA,MACjF;AAAA;AAAA,MAEA,cAAc,WAAW;AACvB,YAAI,MAAM,KAAK,UAAU;AACzB,YAAI,IAAI,IAAI,MAAM,IAAI,SAAS,CAAC,EAAE,KAAK,GAAG;AAC1C,eAAO,MAAM,KAAK,cAAc,IAAI,OAAO,IAAI;AAAA,MACjD;AAAA;AAAA,MAEA,YAAY,SAAS,OAAO,cAAc;AACxC,YAAI,OAAO,OAAO;AAClB,YAAI,KAAK,QAAQ,iBAAiB;AAChC,mBAAS;AAAA,YACP,UAAU,KAAK;AAAA,YACf,QAAQ;AAAA,cACN,YAAY,KAAK,OAAO;AAAA,cACxB,WAAW,KAAK;AAAA,cAChB,cAAc,KAAK,OAAO;AAAA,cAC1B,aAAa,KAAK,OAAO;AAAA,YAC3B;AAAA,YACA,QAAQ,KAAK;AAAA,YACb,OAAO,KAAK;AAAA,YACZ,SAAS,KAAK;AAAA,YACd,SAAS,KAAK;AAAA,YACd,QAAQ,KAAK;AAAA,YACb,QAAQ,KAAK;AAAA,YACb,OAAO,KAAK;AAAA,YACZ,QAAQ,KAAK;AAAA,YACb,IAAI,KAAK;AAAA,YACT,gBAAgB,KAAK,eAAe,MAAM,CAAC;AAAA,YAC3C,MAAM,KAAK;AAAA,UACb;AACA,cAAI,KAAK,QAAQ,QAAQ;AACvB,mBAAO,OAAO,QAAQ,KAAK,OAAO,MAAM,MAAM,CAAC;AAAA,UACjD;AAAA,QACF;AACA,gBAAQ,MAAM,CAAC,EAAE,MAAM,iBAAiB;AACxC,YAAI,OAAO;AACT,eAAK,YAAY,MAAM;AAAA,QACzB;AACA,aAAK,SAAS;AAAA,UACZ,YAAY,KAAK,OAAO;AAAA,UACxB,WAAW,KAAK,WAAW;AAAA,UAC3B,cAAc,KAAK,OAAO;AAAA,UAC1B,aAAa,QAAQ,MAAM,MAAM,SAAS,CAAC,EAAE,SAAS,MAAM,MAAM,SAAS,CAAC,EAAE,MAAM,QAAQ,EAAE,CAAC,EAAE,SAAS,KAAK,OAAO,cAAc,MAAM,CAAC,EAAE;AAAA,QAC/I;AACA,aAAK,UAAU,MAAM,CAAC;AACtB,aAAK,SAAS,MAAM,CAAC;AACrB,aAAK,UAAU;AACf,aAAK,SAAS,KAAK,OAAO;AAC1B,YAAI,KAAK,QAAQ,QAAQ;AACvB,eAAK,OAAO,QAAQ,CAAC,KAAK,QAAQ,KAAK,UAAU,KAAK,MAAM;AAAA,QAC9D;AACA,aAAK,QAAQ;AACb,aAAK,aAAa;AAClB,aAAK,SAAS,KAAK,OAAO,MAAM,MAAM,CAAC,EAAE,MAAM;AAC/C,aAAK,WAAW,MAAM,CAAC;AACvB,gBAAQ,KAAK,cAAc,KAAK,MAAM,KAAK,IAAI,MAAM,cAAc,KAAK,eAAe,KAAK,eAAe,SAAS,CAAC,CAAC;AACtH,YAAI,KAAK,QAAQ,KAAK,QAAQ;AAC5B,eAAK,OAAO;AAAA,QACd;AACA,YAAI,OAAO;AACT,iBAAO;AAAA,QACT,WAAW,KAAK,YAAY;AAC1B,mBAAS,KAAK,QAAQ;AACpB,iBAAK,CAAC,IAAI,OAAO,CAAC;AAAA,UACpB;AACA,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAAA;AAAA,MAEA,MAAM,WAAW;AACf,YAAI,KAAK,MAAM;AACb,iBAAO,KAAK;AAAA,QACd;AACA,YAAI,CAAC,KAAK,QAAQ;AAChB,eAAK,OAAO;AAAA,QACd;AACA,YAAI,OAAO,OAAO,WAAW;AAC7B,YAAI,CAAC,KAAK,OAAO;AACf,eAAK,SAAS;AACd,eAAK,QAAQ;AAAA,QACf;AACA,YAAI,QAAQ,KAAK,cAAc;AAC/B,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,sBAAY,KAAK,OAAO,MAAM,KAAK,MAAM,MAAM,CAAC,CAAC,CAAC;AAClD,cAAI,cAAc,CAAC,SAAS,UAAU,CAAC,EAAE,SAAS,MAAM,CAAC,EAAE,SAAS;AAClE,oBAAQ;AACR,oBAAQ;AACR,gBAAI,KAAK,QAAQ,iBAAiB;AAChC,sBAAQ,KAAK,WAAW,WAAW,MAAM,CAAC,CAAC;AAC3C,kBAAI,UAAU,OAAO;AACnB,uBAAO;AAAA,cACT,WAAW,KAAK,YAAY;AAC1B,wBAAQ;AACR;AAAA,cACF,OAAO;AACL,uBAAO;AAAA,cACT;AAAA,YACF,WAAW,CAAC,KAAK,QAAQ,MAAM;AAC7B;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,YAAI,OAAO;AACT,kBAAQ,KAAK,WAAW,OAAO,MAAM,KAAK,CAAC;AAC3C,cAAI,UAAU,OAAO;AACnB,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,WAAW,IAAI;AACtB,iBAAO,KAAK;AAAA,QACd,OAAO;AACL,iBAAO,KAAK,WAAW,4BAA4B,KAAK,WAAW,KAAK,2BAA2B,KAAK,aAAa,GAAG;AAAA,YACtH,MAAM;AAAA,YACN,OAAO;AAAA,YACP,MAAM,KAAK;AAAA,UACb,CAAC;AAAA,QACH;AAAA,MACF;AAAA;AAAA,MAEA,KAAK,SAAS,MAAM;AAClB,YAAI,IAAI,KAAK,KAAK;AAClB,YAAI,GAAG;AACL,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,KAAK,IAAI;AAAA,QAClB;AAAA,MACF;AAAA;AAAA,MAEA,OAAO,SAAS,MAAM,WAAW;AAC/B,aAAK,eAAe,KAAK,SAAS;AAAA,MACpC;AAAA;AAAA,MAEA,UAAU,SAAS,WAAW;AAC5B,YAAI,IAAI,KAAK,eAAe,SAAS;AACrC,YAAI,IAAI,GAAG;AACT,iBAAO,KAAK,eAAe,IAAI;AAAA,QACjC,OAAO;AACL,iBAAO,KAAK,eAAe,CAAC;AAAA,QAC9B;AAAA,MACF;AAAA;AAAA,MAEA,eAAe,SAAS,gBAAgB;AACtC,YAAI,KAAK,eAAe,UAAU,KAAK,eAAe,KAAK,eAAe,SAAS,CAAC,GAAG;AACrF,iBAAO,KAAK,WAAW,KAAK,eAAe,KAAK,eAAe,SAAS,CAAC,CAAC,EAAE;AAAA,QAC9E,OAAO;AACL,iBAAO,KAAK,WAAW,SAAS,EAAE;AAAA,QACpC;AAAA,MACF;AAAA;AAAA,MAEA,UAAU,SAAS,SAAS,GAAG;AAC7B,YAAI,KAAK,eAAe,SAAS,IAAI,KAAK,IAAI,KAAK,CAAC;AACpD,YAAI,KAAK,GAAG;AACV,iBAAO,KAAK,eAAe,CAAC;AAAA,QAC9B,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAEA,WAAW,SAAS,UAAU,WAAW;AACvC,aAAK,MAAM,SAAS;AAAA,MACtB;AAAA;AAAA,MAEA,gBAAgB,SAAS,iBAAiB;AACxC,eAAO,KAAK,eAAe;AAAA,MAC7B;AAAA,MACA,SAAS,EAAE,oBAAoB,KAAK;AAAA,MACpC,eAAe,SAAS,UAAU,IAAI,KAAK,2BAA2B,UAAU;AAC9E,gBAAQ,2BAA2B;AAAA,UACjC,KAAK;AACH,iBAAK,MAAM,gBAAgB;AAC3B,mBAAO;AAAA,UACT,KAAK;AACH,iBAAK,MAAM,gBAAgB;AAC3B,mBAAO;AAAA,UACT,KAAK;AACH,iBAAK,SAAS;AACd,iBAAK,MAAM,eAAe;AAC1B,mBAAO;AAAA,UACT,KAAK;AACH,iBAAK,SAAS;AACd,iBAAK,SAAS;AACd,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH;AAAA,UACF,KAAK;AACH;AAAA,UACF,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH;AAAA,UACF,KAAK;AACH;AAAA,UACF,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,iBAAK,MAAM,WAAW;AACtB,mBAAO;AAAA,UACT,KAAK;AACH,iBAAK,SAAS;AACd,mBAAO;AAAA,UACT,KAAK;AACH,iBAAK,MAAM,WAAW;AACtB,mBAAO;AAAA,UACT,KAAK;AACH,iBAAK,SAAS;AACd,mBAAO;AAAA,UACT,KAAK;AACH,iBAAK,MAAM,qBAAqB;AAChC;AAAA,UACF,KAAK;AACH,iBAAK,SAAS;AACd;AAAA,UACF,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AACH,mBAAO;AAAA,QACX;AAAA,MACF;AAAA,MACA,OAAO,CAAC,cAAc,8BAA8B,WAAW,cAAc,6BAA6B,uBAAuB,uBAAuB,eAAe,aAAa,iBAAiB,oBAAoB,yBAAyB,yBAAyB,yBAAyB,yBAAyB,yBAAyB,0BAA0B,cAAc,gBAAgB,4BAA4B,sBAAsB,mBAAmB,WAAW,SAAS;AAAA,MACve,YAAY,EAAE,kBAAkB,EAAE,SAAS,CAAC,CAAC,GAAG,aAAa,MAAM,GAAG,kBAAkB,EAAE,SAAS,CAAC,GAAG,CAAC,GAAG,aAAa,MAAM,GAAG,iBAAiB,EAAE,SAAS,CAAC,GAAG,CAAC,GAAG,aAAa,MAAM,GAAG,uBAAuB,EAAE,SAAS,CAAC,IAAI,EAAE,GAAG,aAAa,MAAM,GAAG,aAAa,EAAE,SAAS,CAAC,EAAE,GAAG,aAAa,MAAM,GAAG,aAAa,EAAE,SAAS,CAAC,EAAE,GAAG,aAAa,MAAM,GAAG,WAAW,EAAE,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,aAAa,KAAK,EAAE;AAAA,IAC7c;AACA,WAAO;AAAA,EACT,EAAE;AACF,UAAQ,QAAQ;AAChB,WAAS,SAAS;AAChB,SAAK,KAAK,CAAC;AAAA,EACb;AACA,SAAO,YAAY;AACnB,UAAQ,SAAS;AACjB,SAAO,IAAI,OAAO;AACpB,EAAE;AACF,OAAO,SAAS;AAChB,IAAM,WAAW;AACjB,IAAI,iBAAiB;AACrB,IAAI,gBAAgB;AACpB,IAAM,WAAW,CAAC;AAClB,IAAM,QAAQ,CAAC;AACf,IAAM,WAAW,CAAC;AAClB,IAAM,cAAc,MAAM;AAC1B,IAAM,iBAAiB,CAAC,WAAW,SAAS,SAAS;AACnD,mBAAiB,YAAY,WAAW,SAAS,IAAI;AACvD;AACA,IAAMA,SAAQ,WAAW;AACvB,WAAS,SAAS;AAClB,QAAM,SAAS;AACf,mBAAiB;AACjB,WAAS,SAAS;AAClB,QAAQ;AACV;AACA,IAAM,aAAa,SAAS,KAAK;AAC/B,mBAAiB;AACjB,WAAS,KAAK,GAAG;AACnB;AACA,IAAM,cAAc,WAAW;AAC7B,SAAO;AACT;AACA,IAAM,WAAW,WAAW;AAC1B,MAAI,oBAAoB,aAAa;AACrC,QAAM,WAAW;AACjB,MAAI,iBAAiB;AACrB,SAAO,CAAC,qBAAqB,iBAAiB,UAAU;AACtD,wBAAoB,aAAa;AACjC;AAAA,EACF;AACA,QAAM,KAAK,GAAG,QAAQ;AACtB,SAAO;AACT;AACA,IAAM,UAAU,SAAS,QAAQ,QAAQ,OAAO;AAC9C,QAAM,UAAU;AAAA,IACd,IAAI;AAAA,IACJ,SAAS;AAAA,IACT,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO,SAAS,SAAS;AAAA;AAAA,IAEzB,QAAQ,QAAQ,CAAC,KAAK,IAAI,CAAC;AAAA,EAC7B;AACA,WAAS,KAAK,OAAO;AACvB;AACA,IAAM,WAAW,SAAS,OAAO;AAC/B,QAAM,cAAc,SAAS,KAAK,CAAC,SAAS,KAAK,OAAO,gBAAgB,CAAC;AACzE,cAAY,OAAO,KAAK,KAAK;AAC/B;AACA,IAAM,aAAa,SAAS,OAAO;AACjC,QAAM,UAAU;AAAA,IACd,SAAS;AAAA,IACT,MAAM;AAAA,IACN,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AACA,QAAM,KAAK,OAAO;AACpB;AACA,IAAM,eAAe,WAAW;AAC9B,QAAM,cAAc,SAAS,KAAK;AAChC,WAAO,SAAS,GAAG,EAAE;AAAA,EACvB;AACA,MAAI,eAAe;AACnB,aAAW,CAAC,GAAG,OAAO,KAAK,SAAS,QAAQ,GAAG;AAC7C,gBAAY,CAAC;AACb,mBAAe,gBAAgB,QAAQ;AAAA,EACzC;AACA,SAAO;AACT;AACA,IAAM,aAAa;AAAA,EACjB,OAAAA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAM,KAAqB,OAAO,OAAuB,OAAO,eAAe;AAAA,EAC7E,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAAA;AAAA,EACA,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG,OAAO,aAAa,EAAE,OAAO,SAAS,CAAC,CAAC;AAC3C,IAAM,eAAe;AACrB,IAAM,WAAW,SAAS,MAAM,UAAU;AACxC,QAAM,WAAW,KAAK,OAAO,MAAM;AACnC,WAAS,KAAK,KAAK,SAAS,CAAC;AAC7B,WAAS,KAAK,KAAK,SAAS,CAAC;AAC7B,WAAS,KAAK,QAAQ,SAAS,IAAI;AACnC,WAAS,KAAK,UAAU,SAAS,MAAM;AACvC,WAAS,KAAK,SAAS,SAAS,KAAK;AACrC,WAAS,KAAK,UAAU,SAAS,MAAM;AACvC,WAAS,KAAK,MAAM,SAAS,EAAE;AAC/B,WAAS,KAAK,MAAM,SAAS,EAAE;AAC/B,MAAI,SAAS,UAAU,QAAQ;AAC7B,aAAS,KAAK,SAAS,SAAS,KAAK;AAAA,EACvC;AACA,SAAO;AACT;AACA,IAAM,WAAW,SAAS,SAAS,UAAU;AAC3C,QAAM,SAAS;AACf,QAAM,gBAAgB,QAAQ,OAAO,QAAQ,EAAE,KAAK,MAAM,SAAS,EAAE,EAAE,KAAK,MAAM,SAAS,EAAE,EAAE,KAAK,SAAS,MAAM,EAAE,KAAK,KAAK,MAAM,EAAE,KAAK,gBAAgB,CAAC,EAAE,KAAK,YAAY,SAAS;AACzL,QAAM,OAAO,QAAQ,OAAO,GAAG;AAC/B,OAAK,OAAO,QAAQ,EAAE,KAAK,MAAM,SAAS,KAAK,SAAS,CAAC,EAAE,KAAK,MAAM,SAAS,KAAK,SAAS,CAAC,EAAE,KAAK,KAAK,GAAG,EAAE,KAAK,gBAAgB,CAAC,EAAE,KAAK,QAAQ,MAAM,EAAE,KAAK,UAAU,MAAM;AACjL,OAAK,OAAO,QAAQ,EAAE,KAAK,MAAM,SAAS,KAAK,SAAS,CAAC,EAAE,KAAK,MAAM,SAAS,KAAK,SAAS,CAAC,EAAE,KAAK,KAAK,GAAG,EAAE,KAAK,gBAAgB,CAAC,EAAE,KAAK,QAAQ,MAAM,EAAE,KAAK,UAAU,MAAM;AACjL,WAAS,MAAM,OAAO;AACpB,UAAM,QAAQ,YAAI,EAAE,WAAW,KAAK,KAAK,CAAC,EAAE,SAAS,KAAK,KAAK,KAAK,EAAE,EAAE,YAAY,SAAS,CAAC,EAAE,YAAY,SAAS,GAAG;AACxH,UAAM,OAAO,MAAM,EAAE,KAAK,SAAS,OAAO,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,aAAa,eAAe,SAAS,KAAK,OAAO,SAAS,KAAK,KAAK,GAAG;AAAA,EAC3I;AACA,WAAS,IAAI,OAAO;AAClB,UAAM,QAAQ,YAAI,EAAE,WAAW,IAAI,KAAK,KAAK,CAAC,EAAE,SAAS,KAAK,KAAK,KAAK,EAAE,EAAE,YAAY,SAAS,CAAC,EAAE,YAAY,SAAS,GAAG;AAC5H,UAAM,OAAO,MAAM,EAAE,KAAK,SAAS,OAAO,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,aAAa,eAAe,SAAS,KAAK,OAAO,SAAS,KAAK,KAAK,GAAG;AAAA,EAC3I;AACA,WAAS,WAAW,OAAO;AACzB,UAAM,OAAO,MAAM,EAAE,KAAK,SAAS,OAAO,EAAE,KAAK,UAAU,CAAC,EAAE,KAAK,MAAM,SAAS,KAAK,CAAC,EAAE,KAAK,MAAM,SAAS,KAAK,CAAC,EAAE,KAAK,MAAM,SAAS,KAAK,CAAC,EAAE,KAAK,MAAM,SAAS,KAAK,CAAC,EAAE,KAAK,SAAS,OAAO,EAAE,KAAK,gBAAgB,KAAK,EAAE,KAAK,UAAU,MAAM;AAAA,EACxP;AACA,MAAI,SAAS,QAAQ,GAAG;AACtB,UAAM,IAAI;AAAA,EACZ,WAAW,SAAS,QAAQ,GAAG;AAC7B,QAAI,IAAI;AAAA,EACV,OAAO;AACL,eAAW,IAAI;AAAA,EACjB;AACA,SAAO;AACT;AACA,IAAM,aAAa,SAAS,SAAS,YAAY;AAC/C,QAAM,gBAAgB,QAAQ,OAAO,QAAQ;AAC7C,gBAAc,KAAK,MAAM,WAAW,EAAE;AACtC,gBAAc,KAAK,MAAM,WAAW,EAAE;AACtC,gBAAc,KAAK,SAAS,WAAW,WAAW,GAAG;AACrD,gBAAc,KAAK,QAAQ,WAAW,IAAI;AAC1C,gBAAc,KAAK,UAAU,WAAW,MAAM;AAC9C,gBAAc,KAAK,KAAK,WAAW,CAAC;AACpC,MAAI,cAAc,UAAU,QAAQ;AAClC,kBAAc,KAAK,SAAS,cAAc,KAAK;AAAA,EACjD;AACA,MAAI,WAAW,UAAU,QAAQ;AAC/B,kBAAc,OAAO,OAAO,EAAE,KAAK,WAAW,KAAK;AAAA,EACrD;AACA,SAAO;AACT;AACA,IAAM,WAAW,SAAS,MAAM,UAAU;AACxC,QAAM,QAAQ,SAAS,KAAK,QAAQ,gBAAgB,GAAG;AACvD,QAAM,WAAW,KAAK,OAAO,MAAM;AACnC,WAAS,KAAK,KAAK,SAAS,CAAC;AAC7B,WAAS,KAAK,KAAK,SAAS,CAAC;AAC7B,WAAS,KAAK,SAAS,QAAQ;AAC/B,WAAS,MAAM,eAAe,SAAS,MAAM;AAC7C,MAAI,SAAS,UAAU,QAAQ;AAC7B,aAAS,KAAK,SAAS,SAAS,KAAK;AAAA,EACvC;AACA,QAAM,OAAO,SAAS,OAAO,OAAO;AACpC,OAAK,KAAK,KAAK,SAAS,IAAI,SAAS,aAAa,CAAC;AACnD,OAAK,KAAK,KAAK;AACf,SAAO;AACT;AACA,IAAM,YAAY,SAAS,MAAM,WAAW;AAC1C,WAAS,UAAU,GAAG,GAAG,OAAO,QAAQ,KAAK;AAC3C,WAAO,IAAI,MAAM,IAAI,OAAO,IAAI,SAAS,MAAM,IAAI,OAAO,IAAI,SAAS,OAAO,IAAI,SAAS,OAAO,OAAO,IAAI,QAAQ,MAAM,OAAO,OAAO,IAAI,UAAU,MAAM,IAAI,OAAO,IAAI;AAAA,EAC9K;AACA,QAAM,UAAU,KAAK,OAAO,SAAS;AACrC,UAAQ,KAAK,UAAU,UAAU,UAAU,GAAG,UAAU,GAAG,IAAI,IAAI,CAAC,CAAC;AACrE,UAAQ,KAAK,SAAS,UAAU;AAChC,YAAU,IAAI,UAAU,IAAI,UAAU;AACtC,YAAU,IAAI,UAAU,IAAI,MAAM,UAAU;AAC5C,WAAS,MAAM,SAAS;AAC1B;AACA,IAAM,cAAc,SAAS,MAAM,SAAS,MAAM;AAChD,QAAM,IAAI,KAAK,OAAO,GAAG;AACzB,QAAM,OAAO,YAAY;AACzB,OAAK,IAAI,QAAQ;AACjB,OAAK,IAAI,QAAQ;AACjB,OAAK,OAAO,QAAQ;AACpB,OAAK,QAAQ,KAAK;AAClB,OAAK,SAAS,KAAK;AACnB,OAAK,QAAQ,kCAAkC,QAAQ;AACvD,OAAK,KAAK;AACV,OAAK,KAAK;AACV,WAAS,GAAG,IAAI;AAChB,yBAAuB,IAAI;AAAA,IACzB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,EAAE,OAAO,kCAAkC,QAAQ,IAAI;AAAA,IACvD;AAAA,IACA,QAAQ;AAAA,EACV;AACF;AACA,IAAI,YAAY;AAChB,IAAM,WAAW,SAAS,MAAM,MAAM,MAAM;AAC1C,QAAM,SAAS,KAAK,IAAI,KAAK,QAAQ;AACrC,QAAM,IAAI,KAAK,OAAO,GAAG;AACzB;AACA,QAAM,YAAY,MAAM,IAAI;AAC5B,IAAE,OAAO,MAAM,EAAE,KAAK,MAAM,SAAS,SAAS,EAAE,KAAK,MAAM,MAAM,EAAE,KAAK,MAAM,KAAK,CAAC,EAAE,KAAK,MAAM,MAAM,EAAE,KAAK,MAAM,SAAS,EAAE,KAAK,SAAS,WAAW,EAAE,KAAK,gBAAgB,KAAK,EAAE,KAAK,oBAAoB,KAAK,EAAE,KAAK,UAAU,MAAM;AAC3O,WAAS,GAAG;AAAA,IACV,IAAI;AAAA,IACJ,IAAI,OAAO,IAAI,KAAK,SAAS;AAAA,IAC7B,OAAO,KAAK;AAAA,EACd,CAAC;AACD,QAAM,OAAO,YAAY;AACzB,OAAK,IAAI,KAAK;AACd,OAAK,IAAI,KAAK;AACd,OAAK,OAAO,KAAK;AACjB,OAAK,QAAQ,KAAK;AAClB,OAAK,SAAS,KAAK;AACnB,OAAK,QAAQ,oBAAoB,KAAK;AACtC,OAAK,KAAK;AACV,OAAK,KAAK;AACV,WAAS,GAAG,IAAI;AAChB,OAAK,IAAI;AACT,yBAAuB,IAAI;AAAA,IACzB,KAAK;AAAA,IACL;AAAA,IACA,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,EAAE,OAAO,OAAO;AAAA,IAChB;AAAA,IACA,KAAK;AAAA,EACP;AACF;AACA,IAAM,qBAAqB,SAAS,MAAM,QAAQ;AAChD,QAAM,WAAW,SAAS,MAAM;AAAA,IAC9B,GAAG,OAAO;AAAA,IACV,GAAG,OAAO;AAAA,IACV,OAAO,OAAO,QAAQ,OAAO;AAAA,IAC7B,QAAQ,OAAO,QAAQ,OAAO;AAAA,IAC9B,MAAM,OAAO;AAAA,IACb,OAAO;AAAA,EACT,CAAC;AACD,WAAS,MAAM;AACjB;AACA,IAAM,aAAa,WAAW;AAC5B,SAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,MAAM;AAAA,IACN,eAAe;AAAA,IACf,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AACF;AACA,IAAM,cAAc,WAAW;AAC7B,SAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AACF;AACA,IAAM,yBAAyB,WAAW;AACxC,WAAS,OAAO,SAAS,GAAG,GAAG,GAAG,OAAO,QAAQ,WAAW,QAAQ;AAClE,UAAM,OAAO,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,SAAS,IAAI,CAAC,EAAE,MAAM,cAAc,MAAM,EAAE,MAAM,eAAe,QAAQ,EAAE,KAAK,OAAO;AAC5J,kBAAc,MAAM,SAAS;AAAA,EAC/B;AACA,WAAS,QAAQ,SAAS,GAAG,GAAG,GAAG,OAAO,QAAQ,WAAW,MAAM,QAAQ;AACzE,UAAM,EAAE,cAAc,eAAe,IAAI;AACzC,UAAM,QAAQ,QAAQ,MAAM,cAAc;AAC1C,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAM,KAAK,IAAI,eAAe,gBAAgB,MAAM,SAAS,KAAK;AAClE,YAAM,OAAO,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,QAAQ,MAAM,EAAE,MAAM,eAAe,QAAQ,EAAE,MAAM,aAAa,YAAY,EAAE,MAAM,eAAe,cAAc;AAC5L,WAAK,OAAO,OAAO,EAAE,KAAK,KAAK,IAAI,QAAQ,CAAC,EAAE,KAAK,MAAM,EAAE,EAAE,KAAK,MAAM,CAAC,CAAC;AAC1E,WAAK,KAAK,KAAK,IAAI,SAAS,CAAC,EAAE,KAAK,qBAAqB,SAAS,EAAE,KAAK,sBAAsB,SAAS;AACxG,oBAAc,MAAM,SAAS;AAAA,IAC/B;AAAA,EACF;AACA,WAAS,KAAK,SAAS,GAAG,GAAG,GAAG,OAAO,QAAQ,WAAW,MAAM;AAC9D,UAAM,OAAO,EAAE,OAAO,QAAQ;AAC9B,UAAM,IAAI,KAAK,OAAO,eAAe,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,SAAS,KAAK,EAAE,KAAK,UAAU,MAAM,EAAE,KAAK,YAAY,OAAO;AACrI,UAAM,OAAO,EAAE,OAAO,WAAW,EAAE,MAAM,WAAW,OAAO,EAAE,MAAM,UAAU,MAAM,EAAE,MAAM,SAAS,MAAM;AAC1G,SAAK,OAAO,KAAK,EAAE,KAAK,SAAS,OAAO,EAAE,MAAM,WAAW,YAAY,EAAE,MAAM,cAAc,QAAQ,EAAE,MAAM,kBAAkB,QAAQ,EAAE,KAAK,OAAO;AACrJ,YAAQ,SAAS,MAAM,GAAG,GAAG,OAAO,QAAQ,WAAW,IAAI;AAC3D,kBAAc,MAAM,SAAS;AAAA,EAC/B;AACA,WAAS,cAAc,QAAQ,mBAAmB;AAChD,eAAW,OAAO,mBAAmB;AACnC,UAAI,OAAO,mBAAmB;AAC5B,eAAO,KAAK,KAAK,kBAAkB,GAAG,CAAC;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AACA,SAAO,SAAS,MAAM;AACpB,WAAO,KAAK,kBAAkB,OAAO,OAAO,KAAK,kBAAkB,QAAQ,SAAS;AAAA,EACtF;AACF,EAAE;AACF,IAAM,eAAe,SAAS,UAAU;AACtC,WAAS,OAAO,MAAM,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,WAAW,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,eAAe,CAAC,EAAE,KAAK,gBAAgB,CAAC,EAAE,KAAK,UAAU,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,kBAAkB;AACpN;AACA,SAAS,KAAK,MAAM,OAAO;AACzB,OAAK,KAAK,WAAW;AACnB,QAAI,QAAQ,eAAO,IAAI,GAAG,QAAQ,MAAM,KAAK,EAAE,MAAM,YAAY,EAAE,QAAQ,GAAG,MAAM,OAAO,CAAC,GAAG,aAAa,KAAK,IAAI,MAAM,KAAK,GAAG,GAAG,KAAK,WAAW,MAAM,KAAK,IAAI,CAAC,GAAG,QAAQ,MAAM,KAAK,IAAI,EAAE,OAAO,OAAO,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,MAAM,KAAK,IAAI;AAChQ,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,aAAO,MAAM,MAAM,SAAS,IAAI,CAAC;AACjC,WAAK,KAAK,IAAI;AACd,YAAM,KAAK,KAAK,KAAK,GAAG,EAAE,KAAK,CAAC;AAChC,UAAI,MAAM,KAAK,EAAE,sBAAsB,IAAI,SAAS,SAAS,QAAQ;AACnE,aAAK,IAAI;AACT,cAAM,KAAK,KAAK,KAAK,GAAG,EAAE,KAAK,CAAC;AAChC,YAAI,SAAS,QAAQ;AACnB,iBAAO,CAAC,EAAE;AAAA,QACZ,OAAO;AACL,iBAAO,CAAC,IAAI;AAAA,QACd;AACA,gBAAQ,MAAM,OAAO,OAAO,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,MAAM,aAAa,IAAI,EAAE,KAAK,IAAI;AAAA,MACjG;AAAA,IACF;AAAA,EACF,CAAC;AACH;AACA,IAAM,WAAW,SAAS,MAAM,MAAM,aAAa,MAAM;AACvD,QAAM,UAAU,cAAc,eAAe;AAC7C,QAAM,WAAW,KAAK,OAAO,GAAG;AAChC,OAAK,UAAU;AACf,WAAS;AAAA,IACP;AAAA,KACC,KAAK,QAAQ,KAAK,QAAQ,MAAM,MAAM,oBAAoB,aAAa;AAAA,EAC1E;AACA,QAAM,UAAU,SAAS,OAAO,GAAG;AACnC,QAAM,WAAW,SAAS,OAAO,GAAG;AACpC,QAAM,MAAM,SAAS,OAAO,MAAM,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,MAAM,KAAK,EAAE,KAAK,sBAAsB,QAAQ,EAAE,KAAK,qBAAqB,QAAQ,EAAE,KAAK,eAAe,QAAQ,EAAE,KAAK,MAAM,KAAK,KAAK;AACnM,QAAM,OAAO,IAAI,KAAK,EAAE,QAAQ;AAChC,QAAM,WAAW,KAAK,YAAY,KAAK,SAAS,UAAU,KAAK,SAAS,QAAQ,MAAM,EAAE,IAAI,KAAK;AACjG,OAAK,SAAS,KAAK,SAAS,WAAW,MAAM,MAAM,KAAK;AACxD,OAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,KAAK,SAAS;AAClD,OAAK,QAAQ,KAAK,QAAQ,IAAI,KAAK;AACnC,WAAS,KAAK,aAAa,eAAe,KAAK,QAAQ,IAAI,OAAO,KAAK,UAAU,IAAI,GAAG;AACxF,aAAW,SAAS,MAAM,OAAO;AACjC,SAAO;AACT;AACA,IAAM,uBAAuB,SAAS,MAAM,MAAM,MAAM;AACtD,QAAM,WAAW,KAAK,OAAO,GAAG;AAChC,QAAM,MAAM,SAAS,OAAO,MAAM,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,MAAM,KAAK,EAAE,KAAK,sBAAsB,QAAQ,EAAE,KAAK,qBAAqB,QAAQ,EAAE,KAAK,eAAe,QAAQ,EAAE,KAAK,MAAM,KAAK,KAAK;AACnM,QAAM,OAAO,IAAI,KAAK,EAAE,QAAQ;AAChC,QAAM,WAAW,KAAK,YAAY,KAAK,SAAS,UAAU,KAAK,SAAS,QAAQ,MAAM,EAAE,IAAI,KAAK;AACjG,WAAS,OAAO;AAChB,SAAO,KAAK,SAAS,WAAW,MAAM,MAAM,KAAK;AACnD;AACA,IAAM,aAAa,SAAS,MAAM,MAAM,SAAS;AAC/C,QAAM,KAAK;AACX,OAAK,OAAO,MAAM,EAAE,KAAK,MAAM,UAAU,KAAK,EAAE,EAAE,KAAK,SAAS,mBAAmB,KAAK,IAAI,EAAE;AAAA,IAC5F;AAAA,IACA,MAAM,KAAK,SAAS,EAAE,KAAK,CAAC,KAAK,SAAS,IAAI,EAAE,gBAAgB,KAAK,QAAQ,IAAI,EAAE,cAAc,KAAK,SAAS,EAAE;AAAA,EACnH;AACA,OAAK,OAAO,MAAM,EAAE,KAAK,SAAS,eAAe,OAAO,EAAE,KAAK,MAAM,CAAC,EAAE,KAAK,MAAM,KAAK,MAAM,EAAE,KAAK,MAAM,KAAK,KAAK,EAAE,KAAK,MAAM,KAAK,MAAM;AAC/I;AACA,IAAM,UAAU;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAM,OAAO,SAAS,MAAM,IAAI,SAAS,SAAS;AAChD,MAAI,IAAI,IAAI,IAAI;AAChB,QAAM,OAAO,YAAU;AACvB,QAAM,cAAc,KAAK,cAAc;AACvC,GAAC,MAAM,KAAK,QAAQ,IAAI,UAAU,OAAO,SAAS,GAAG,KAAK,EAAE;AAC5D,UAAQ,OAAO,MAAM,OAAO,IAAI;AAChC,QAAI,MAAM,YAAY,QAAQ,EAAE;AAChC,QAAM,gBAAgB,KAAK;AAC3B,MAAI;AACJ,MAAI,kBAAkB,WAAW;AAC/B,qBAAiB,eAAO,OAAO,EAAE;AAAA,EACnC;AACA,QAAM,OAAO,kBAAkB,YAAY,eAAO,eAAe,MAAM,EAAE,CAAC,EAAE,gBAAgB,IAAI,IAAI,eAAO,MAAM;AACjH,QAAM,MAAM,KAAK,OAAO,MAAM,EAAE;AAChC,MAAI,OAAO,GAAG;AACd,QAAM,SAAS,QAAQ,GAAG,SAAS;AACnC,QAAM,QAAQ,QAAQ,GAAG,YAAY,EAAE,gBAAgB;AACvD,QAAI,MAAM,QAAQ,MAAM;AACxB,UAAQ,aAAa,GAAG;AACxB,QAAM,YAAY,QAAQ,GAAG,YAAY;AACzC,QAAI,MAAM,YAAY,SAAS;AAC/B,MAAI,mBAAmB;AACvB,MAAI,gBAAgB;AACpB,MAAI,SAAS;AACb,MAAI,gBAAgB;AACpB,MAAI,UAAU,KAAK;AACnB,MAAI,UAAU;AACd,kBAAgB;AAChB,MAAI,gBAAgB;AACpB,MAAI,cAAc;AAClB,YAAU,QAAQ,SAAS,SAAS;AAClC,UAAM,cAAc;AAAA,MAClB,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AACA,UAAM,gBAAgB,QAAQ,qBAAqB,KAAK,aAAa,IAAI;AACzE,UAAI,MAAM,6BAA6B,aAAa;AACpD,uBAAmB,KAAK,IAAI,kBAAkB,gBAAgB,EAAE;AAAA,EAClE,CAAC;AACD,MAAI,gBAAgB;AACpB,MAAI,qBAAqB;AACzB,QAAI,MAAM,gBAAgB,OAAO,MAAM;AACvC,aAAW,CAAC,GAAG,IAAI,KAAK,OAAO,QAAQ,GAAG;AACxC,UAAM,WAAW;AAAA,MACf,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS,KAAK;AAAA,MACd,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AACA,UAAM,aAAa,QAAQ,qBAAqB,KAAK,UAAU,IAAI;AACnE,UAAI,MAAM,0BAA0B,UAAU;AAC9C,oBAAgB,KAAK,IAAI,eAAe,aAAa,EAAE;AACvD,oBAAgB,KAAK,IAAI,eAAe,KAAK,OAAO,MAAM;AAC1D,QAAI,yBAAyB;AAC7B,aAAS,IAAI,GAAG,IAAI,KAAK,OAAO,QAAQ,KAAK;AAC3C,YAAM,QAAQ,KAAK,OAAO,CAAC;AAC3B,YAAM,YAAY;AAAA,QAChB,OAAO;AAAA,QACP,SAAS,KAAK;AAAA,QACd,QAAQ,KAAK;AAAA,QACb,OAAO;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACb;AACA,gCAA0B,QAAQ,qBAAqB,KAAK,WAAW,IAAI;AAAA,IAC7E;AACA,yBAAqB,KAAK,IAAI,oBAAoB,sBAAsB;AAAA,EAC1E;AACA,QAAI,MAAM,gCAAgC,gBAAgB;AAC1D,QAAI,MAAM,6BAA6B,aAAa;AACpD,MAAI,aAAa,UAAU,SAAS,GAAG;AACrC,cAAU,QAAQ,CAAC,YAAY;AAC7B,YAAM,kBAAkB,OAAO,OAAO,CAAC,SAAS,KAAK,YAAY,OAAO;AACxE,YAAM,cAAc;AAAA,QAClB,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,SAAS;AAAA,QACT,OAAO,MAAM,KAAK,IAAI,gBAAgB,QAAQ,CAAC,IAAI;AAAA,QACnD,SAAS;AAAA,QACT,WAAW;AAAA,MACb;AACA,YAAI,MAAM,eAAe,WAAW;AACpC,YAAM,qBAAqB,IAAI,OAAO,GAAG;AACzC,YAAM,OAAO,QAAQ,SAAS,oBAAoB,aAAa,eAAe,IAAI;AAClF,YAAI,MAAM,sBAAsB,IAAI;AACpC,yBAAmB,KAAK,aAAa,aAAa,OAAO,KAAK,aAAa,GAAG;AAC9E,iBAAW,mBAAmB;AAC9B,UAAI,gBAAgB,SAAS,GAAG;AAC9B;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AACA,iBAAW,MAAM,KAAK,IAAI,gBAAgB,QAAQ,CAAC;AACnD,gBAAU;AACV;AAAA,IACF,CAAC;AAAA,EACH,OAAO;AACL,kBAAc;AACd;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACA,QAAM,MAAM,IAAI,KAAK,EAAE,QAAQ;AAC/B,QAAI,MAAM,UAAU,GAAG;AACvB,MAAI,OAAO;AACT,QAAI,OAAO,MAAM,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,IAAI,QAAQ,IAAI,WAAW,EAAE,KAAK,aAAa,KAAK,EAAE,KAAK,eAAe,MAAM,EAAE,KAAK,KAAK,EAAE;AAAA,EACzI;AACA,WAAS,cAAc,mBAAmB,gBAAgB,MAAM,gBAAgB;AAChF,QAAM,cAAc,IAAI,OAAO,GAAG,EAAE,KAAK,SAAS,aAAa;AAC/D,cAAY,OAAO,MAAM,EAAE,KAAK,MAAM,WAAW,EAAE,KAAK,MAAM,MAAM,EAAE,KAAK,MAAM,IAAI,QAAQ,IAAI,WAAW,EAAE,KAAK,MAAM,MAAM,EAAE,KAAK,gBAAgB,CAAC,EAAE,KAAK,UAAU,OAAO,EAAE,KAAK,cAAc,iBAAiB;AACrN;AAAA,IACE;AAAA,IACA;AAAA,MACE,KAAK,KAAK,aAAa,OAAO,SAAS,GAAG,YAAY;AAAA,MACtD,KAAK,KAAK,aAAa,OAAO,SAAS,GAAG,gBAAgB;AAAA,EAC9D;AACF;AACA,IAAM,YAAY,SAAS,UAAU,QAAQ,cAAc,SAAS,SAAS,eAAe,MAAM,eAAe,oBAAoB,kBAAkB,mBAAmB;AACxK,MAAI;AACJ,aAAW,QAAQ,QAAQ;AACzB,UAAM,WAAW;AAAA,MACf,OAAO,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AACA,UAAI,MAAM,YAAY,QAAQ;AAC9B,UAAM,cAAc,SAAS,OAAO,GAAG,EAAE,KAAK,SAAS,aAAa;AACpE,UAAM,OAAO,QAAQ,SAAS,aAAa,UAAU,cAAc,IAAI;AACvE,UAAM,aAAa,KAAK;AACxB,UAAI,MAAM,yBAAyB,UAAU;AAC7C,gBAAY,KAAK,aAAa,aAAa,OAAO,KAAK,OAAO,GAAG;AACjE,oBAAgB,KAAK,IAAI,eAAe,UAAU;AAClD,QAAI,KAAK,QAAQ;AACf,YAAM,cAAc,SAAS,OAAO,GAAG,EAAE,KAAK,SAAS,aAAa;AACpE,UAAI,aAAa;AACjB,iBAAW;AACX,mBAAa,aAAa,WAAW,UAAU,KAAK,QAAQ,cAAc,SAAS,SAAS,IAAI;AAChG,iBAAW;AACX,kBAAY,OAAO,MAAM,EAAE,KAAK,MAAM,UAAU,MAAM,CAAC,EAAE,KAAK,MAAM,UAAU,aAAa,EAAE,KAAK,MAAM,UAAU,MAAM,CAAC,EAAE;AAAA,QACzH;AAAA,QACA,UAAU,iBAAiB,oBAAoB,gBAAgB,oBAAoB,qBAAqB;AAAA,MAC1G,EAAE,KAAK,gBAAgB,CAAC,EAAE,KAAK,UAAU,OAAO,EAAE,KAAK,cAAc,iBAAiB,EAAE,KAAK,oBAAoB,KAAK;AAAA,IACxH;AACA,cAAU,UAAU;AACpB,QAAI,qBAAqB,GAAG,KAAK,KAAK,aAAa,OAAO,SAAS,GAAG,oBAAoB;AACxF;AAAA,IACF;AAAA,EACF;AACA,YAAU,UAAU;AACtB;AACA,IAAM,aAAa,SAAS,UAAU,QAAQ,cAAc,SAAS,SAAS,MAAM;AAClF,MAAI,iBAAiB;AACrB,QAAM,cAAc;AACpB,YAAU,UAAU;AACpB,aAAW,SAAS,QAAQ;AAC1B,UAAM,YAAY;AAAA,MAChB,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AACA,UAAI,MAAM,aAAa,SAAS;AAChC,UAAM,eAAe,SAAS,OAAO,GAAG,EAAE,KAAK,SAAS,cAAc;AACtE,UAAM,OAAO,QAAQ,SAAS,cAAc,WAAW,cAAc,IAAI;AACzE,UAAM,cAAc,KAAK;AACzB,qBAAiB,iBAAiB;AAClC,iBAAa,KAAK,aAAa,aAAa,OAAO,KAAK,OAAO,GAAG;AAClE,cAAU,UAAU,KAAK;AAAA,EAC3B;AACA,YAAU;AACV,SAAO;AACT;AACA,IAAM,WAAW;AAAA,EACf,SAAS,MAAM;AAAA,EACf;AAAA,EACA;AACF;AACA,IAAM,cAAc,CAAC,YAAY;AAC/B,MAAI,YAAY;AAChB,WAAS,IAAI,GAAG,IAAI,QAAQ,mBAAmB,KAAK;AAClD,YAAQ,cAAc,CAAC,IAAI,QAAQ,cAAc,CAAC,KAAK,QAAQ,cAAc,CAAC;AAC9E,QAAI,gBAAO,QAAQ,cAAc,CAAC,CAAC,GAAG;AACpC,cAAQ,cAAc,CAAC,IAAI,gBAAQ,QAAQ,cAAc,CAAC,GAAG,EAAE;AAAA,IACjE,OAAO;AACL,cAAQ,cAAc,CAAC,IAAI,eAAO,QAAQ,cAAc,CAAC,GAAG,EAAE;AAAA,IAChE;AAAA,EACF;AACA,WAAS,IAAI,GAAG,IAAI,QAAQ,mBAAmB,KAAK;AAClD,UAAM,KAAK,MAAM,KAAK,IAAI;AAC1B,iBAAa;AAAA,eACF,IAAI,CAAC,mBAAmB,IAAI,CAAC,mBAAmB,IAAI,CAAC,qBAAqB,IAAI,CAAC;AAAA,cAChF,QAAQ,WAAW,CAAC,CAAC;AAAA;AAAA,eAEpB,IAAI,CAAC;AAAA,aACP,QAAQ,gBAAgB,CAAC,CAAC;AAAA;AAAA,iBAEtB,IAAI,CAAC;AAAA;AAAA,eAEP,QAAQ,gBAAgB,CAAC,CAAC;AAAA;AAAA,oBAErB,IAAI,CAAC;AAAA,gBACT,QAAQ,WAAW,CAAC,CAAC;AAAA;AAAA,kBAEnB,IAAI,CAAC;AAAA,sBACD,EAAE;AAAA;AAAA,eAET,IAAI,CAAC;AAAA,gBACJ,QAAQ,cAAc,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKxB,QAAQ,gBAAgB,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUxC;AACA,SAAO;AACT;AACA,IAAM,YAAY,CAAC,YAAY;AAAA;AAAA;AAAA;AAAA,IAI3B,YAAY,OAAO,CAAC;AAAA;AAAA,YAEZ,QAAQ,IAAI;AAAA;AAAA;AAAA,YAGZ,QAAQ,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAenC,IAAM,SAAS;AACf,IAAM,UAAU;AAAA,EACd;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR;AACF;",
  "names": ["clear"]
}
