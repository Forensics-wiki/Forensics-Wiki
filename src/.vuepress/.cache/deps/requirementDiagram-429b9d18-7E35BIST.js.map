{
  "version": 3,
  "sources": ["../../../../node_modules/mermaid/dist/requirementDiagram-429b9d18.js"],
  "sourcesContent": ["import { c as getConfig, s as setAccTitle, g as getAccTitle, b as setAccDescription, a as getAccDescription, m as mermaidAPI, l as log, v as clear$1, i as configureSvgSize, e as common } from \"./mermaid-aad43469.js\";\r\nimport { select, line } from \"d3\";\r\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\r\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\r\nimport \"ts-dedent\";\r\nimport \"dayjs\";\r\nimport \"@braintree/sanitize-url\";\r\nimport \"dompurify\";\r\nimport \"khroma\";\r\nimport \"lodash-es/memoize.js\";\r\nimport \"stylis\";\r\nimport \"lodash-es/isEmpty.js\";\r\nvar parser = function() {\r\n  var o = function(k, v, o2, l) {\r\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\r\n      ;\r\n    return o2;\r\n  }, $V0 = [1, 3], $V1 = [1, 5], $V2 = [1, 6], $V3 = [1, 7], $V4 = [1, 8], $V5 = [5, 6, 8, 14, 16, 18, 19, 40, 41, 42, 43, 44, 45, 53, 71, 72], $V6 = [1, 22], $V7 = [2, 13], $V8 = [1, 26], $V9 = [1, 27], $Va = [1, 28], $Vb = [1, 29], $Vc = [1, 30], $Vd = [1, 31], $Ve = [1, 24], $Vf = [1, 32], $Vg = [1, 33], $Vh = [1, 36], $Vi = [71, 72], $Vj = [5, 8, 14, 16, 18, 19, 40, 41, 42, 43, 44, 45, 53, 60, 62, 71, 72], $Vk = [1, 56], $Vl = [1, 57], $Vm = [1, 58], $Vn = [1, 59], $Vo = [1, 60], $Vp = [1, 61], $Vq = [1, 62], $Vr = [62, 63], $Vs = [1, 74], $Vt = [1, 70], $Vu = [1, 71], $Vv = [1, 72], $Vw = [1, 73], $Vx = [1, 75], $Vy = [1, 79], $Vz = [1, 80], $VA = [1, 77], $VB = [1, 78], $VC = [5, 8, 14, 16, 18, 19, 40, 41, 42, 43, 44, 45, 53, 71, 72];\r\n  var parser2 = {\r\n    trace: function trace() {\r\n    },\r\n    yy: {},\r\n    symbols_: { \"error\": 2, \"start\": 3, \"directive\": 4, \"NEWLINE\": 5, \"RD\": 6, \"diagram\": 7, \"EOF\": 8, \"openDirective\": 9, \"typeDirective\": 10, \"closeDirective\": 11, \":\": 12, \"argDirective\": 13, \"acc_title\": 14, \"acc_title_value\": 15, \"acc_descr\": 16, \"acc_descr_value\": 17, \"acc_descr_multiline_value\": 18, \"open_directive\": 19, \"type_directive\": 20, \"arg_directive\": 21, \"close_directive\": 22, \"requirementDef\": 23, \"elementDef\": 24, \"relationshipDef\": 25, \"requirementType\": 26, \"requirementName\": 27, \"STRUCT_START\": 28, \"requirementBody\": 29, \"ID\": 30, \"COLONSEP\": 31, \"id\": 32, \"TEXT\": 33, \"text\": 34, \"RISK\": 35, \"riskLevel\": 36, \"VERIFYMTHD\": 37, \"verifyType\": 38, \"STRUCT_STOP\": 39, \"REQUIREMENT\": 40, \"FUNCTIONAL_REQUIREMENT\": 41, \"INTERFACE_REQUIREMENT\": 42, \"PERFORMANCE_REQUIREMENT\": 43, \"PHYSICAL_REQUIREMENT\": 44, \"DESIGN_CONSTRAINT\": 45, \"LOW_RISK\": 46, \"MED_RISK\": 47, \"HIGH_RISK\": 48, \"VERIFY_ANALYSIS\": 49, \"VERIFY_DEMONSTRATION\": 50, \"VERIFY_INSPECTION\": 51, \"VERIFY_TEST\": 52, \"ELEMENT\": 53, \"elementName\": 54, \"elementBody\": 55, \"TYPE\": 56, \"type\": 57, \"DOCREF\": 58, \"ref\": 59, \"END_ARROW_L\": 60, \"relationship\": 61, \"LINE\": 62, \"END_ARROW_R\": 63, \"CONTAINS\": 64, \"COPIES\": 65, \"DERIVES\": 66, \"SATISFIES\": 67, \"VERIFIES\": 68, \"REFINES\": 69, \"TRACES\": 70, \"unqString\": 71, \"qString\": 72, \"$accept\": 0, \"$end\": 1 },\r\n    terminals_: { 2: \"error\", 5: \"NEWLINE\", 6: \"RD\", 8: \"EOF\", 12: \":\", 14: \"acc_title\", 15: \"acc_title_value\", 16: \"acc_descr\", 17: \"acc_descr_value\", 18: \"acc_descr_multiline_value\", 19: \"open_directive\", 20: \"type_directive\", 21: \"arg_directive\", 22: \"close_directive\", 28: \"STRUCT_START\", 30: \"ID\", 31: \"COLONSEP\", 33: \"TEXT\", 35: \"RISK\", 37: \"VERIFYMTHD\", 39: \"STRUCT_STOP\", 40: \"REQUIREMENT\", 41: \"FUNCTIONAL_REQUIREMENT\", 42: \"INTERFACE_REQUIREMENT\", 43: \"PERFORMANCE_REQUIREMENT\", 44: \"PHYSICAL_REQUIREMENT\", 45: \"DESIGN_CONSTRAINT\", 46: \"LOW_RISK\", 47: \"MED_RISK\", 48: \"HIGH_RISK\", 49: \"VERIFY_ANALYSIS\", 50: \"VERIFY_DEMONSTRATION\", 51: \"VERIFY_INSPECTION\", 52: \"VERIFY_TEST\", 53: \"ELEMENT\", 56: \"TYPE\", 58: \"DOCREF\", 60: \"END_ARROW_L\", 62: \"LINE\", 63: \"END_ARROW_R\", 64: \"CONTAINS\", 65: \"COPIES\", 66: \"DERIVES\", 67: \"SATISFIES\", 68: \"VERIFIES\", 69: \"REFINES\", 70: \"TRACES\", 71: \"unqString\", 72: \"qString\" },\r\n    productions_: [0, [3, 3], [3, 2], [3, 4], [4, 3], [4, 5], [4, 2], [4, 2], [4, 1], [9, 1], [10, 1], [13, 1], [11, 1], [7, 0], [7, 2], [7, 2], [7, 2], [7, 2], [7, 2], [23, 5], [29, 5], [29, 5], [29, 5], [29, 5], [29, 2], [29, 1], [26, 1], [26, 1], [26, 1], [26, 1], [26, 1], [26, 1], [36, 1], [36, 1], [36, 1], [38, 1], [38, 1], [38, 1], [38, 1], [24, 5], [55, 5], [55, 5], [55, 2], [55, 1], [25, 5], [25, 5], [61, 1], [61, 1], [61, 1], [61, 1], [61, 1], [61, 1], [61, 1], [27, 1], [27, 1], [32, 1], [32, 1], [34, 1], [34, 1], [54, 1], [54, 1], [57, 1], [57, 1], [59, 1], [59, 1]],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\r\n      var $0 = $$.length - 1;\r\n      switch (yystate) {\r\n        case 6:\r\n          this.$ = $$[$0].trim();\r\n          yy.setAccTitle(this.$);\r\n          break;\r\n        case 7:\r\n        case 8:\r\n          this.$ = $$[$0].trim();\r\n          yy.setAccDescription(this.$);\r\n          break;\r\n        case 9:\r\n          yy.parseDirective(\"%%{\", \"open_directive\");\r\n          break;\r\n        case 10:\r\n          yy.parseDirective($$[$0], \"type_directive\");\r\n          break;\r\n        case 11:\r\n          $$[$0] = $$[$0].trim().replace(/'/g, '\"');\r\n          yy.parseDirective($$[$0], \"arg_directive\");\r\n          break;\r\n        case 12:\r\n          yy.parseDirective(\"}%%\", \"close_directive\", \"pie\");\r\n          break;\r\n        case 13:\r\n          this.$ = [];\r\n          break;\r\n        case 19:\r\n          yy.addRequirement($$[$0 - 3], $$[$0 - 4]);\r\n          break;\r\n        case 20:\r\n          yy.setNewReqId($$[$0 - 2]);\r\n          break;\r\n        case 21:\r\n          yy.setNewReqText($$[$0 - 2]);\r\n          break;\r\n        case 22:\r\n          yy.setNewReqRisk($$[$0 - 2]);\r\n          break;\r\n        case 23:\r\n          yy.setNewReqVerifyMethod($$[$0 - 2]);\r\n          break;\r\n        case 26:\r\n          this.$ = yy.RequirementType.REQUIREMENT;\r\n          break;\r\n        case 27:\r\n          this.$ = yy.RequirementType.FUNCTIONAL_REQUIREMENT;\r\n          break;\r\n        case 28:\r\n          this.$ = yy.RequirementType.INTERFACE_REQUIREMENT;\r\n          break;\r\n        case 29:\r\n          this.$ = yy.RequirementType.PERFORMANCE_REQUIREMENT;\r\n          break;\r\n        case 30:\r\n          this.$ = yy.RequirementType.PHYSICAL_REQUIREMENT;\r\n          break;\r\n        case 31:\r\n          this.$ = yy.RequirementType.DESIGN_CONSTRAINT;\r\n          break;\r\n        case 32:\r\n          this.$ = yy.RiskLevel.LOW_RISK;\r\n          break;\r\n        case 33:\r\n          this.$ = yy.RiskLevel.MED_RISK;\r\n          break;\r\n        case 34:\r\n          this.$ = yy.RiskLevel.HIGH_RISK;\r\n          break;\r\n        case 35:\r\n          this.$ = yy.VerifyType.VERIFY_ANALYSIS;\r\n          break;\r\n        case 36:\r\n          this.$ = yy.VerifyType.VERIFY_DEMONSTRATION;\r\n          break;\r\n        case 37:\r\n          this.$ = yy.VerifyType.VERIFY_INSPECTION;\r\n          break;\r\n        case 38:\r\n          this.$ = yy.VerifyType.VERIFY_TEST;\r\n          break;\r\n        case 39:\r\n          yy.addElement($$[$0 - 3]);\r\n          break;\r\n        case 40:\r\n          yy.setNewElementType($$[$0 - 2]);\r\n          break;\r\n        case 41:\r\n          yy.setNewElementDocRef($$[$0 - 2]);\r\n          break;\r\n        case 44:\r\n          yy.addRelationship($$[$0 - 2], $$[$0], $$[$0 - 4]);\r\n          break;\r\n        case 45:\r\n          yy.addRelationship($$[$0 - 2], $$[$0 - 4], $$[$0]);\r\n          break;\r\n        case 46:\r\n          this.$ = yy.Relationships.CONTAINS;\r\n          break;\r\n        case 47:\r\n          this.$ = yy.Relationships.COPIES;\r\n          break;\r\n        case 48:\r\n          this.$ = yy.Relationships.DERIVES;\r\n          break;\r\n        case 49:\r\n          this.$ = yy.Relationships.SATISFIES;\r\n          break;\r\n        case 50:\r\n          this.$ = yy.Relationships.VERIFIES;\r\n          break;\r\n        case 51:\r\n          this.$ = yy.Relationships.REFINES;\r\n          break;\r\n        case 52:\r\n          this.$ = yy.Relationships.TRACES;\r\n          break;\r\n      }\r\n    },\r\n    table: [{ 3: 1, 4: 2, 6: $V0, 9: 4, 14: $V1, 16: $V2, 18: $V3, 19: $V4 }, { 1: [3] }, { 3: 10, 4: 2, 5: [1, 9], 6: $V0, 9: 4, 14: $V1, 16: $V2, 18: $V3, 19: $V4 }, { 5: [1, 11] }, { 10: 12, 20: [1, 13] }, { 15: [1, 14] }, { 17: [1, 15] }, o($V5, [2, 8]), { 20: [2, 9] }, { 3: 16, 4: 2, 6: $V0, 9: 4, 14: $V1, 16: $V2, 18: $V3, 19: $V4 }, { 1: [2, 2] }, { 4: 21, 5: $V6, 7: 17, 8: $V7, 9: 4, 14: $V1, 16: $V2, 18: $V3, 19: $V4, 23: 18, 24: 19, 25: 20, 26: 23, 32: 25, 40: $V8, 41: $V9, 42: $Va, 43: $Vb, 44: $Vc, 45: $Vd, 53: $Ve, 71: $Vf, 72: $Vg }, { 11: 34, 12: [1, 35], 22: $Vh }, o([12, 22], [2, 10]), o($V5, [2, 6]), o($V5, [2, 7]), { 1: [2, 1] }, { 8: [1, 37] }, { 4: 21, 5: $V6, 7: 38, 8: $V7, 9: 4, 14: $V1, 16: $V2, 18: $V3, 19: $V4, 23: 18, 24: 19, 25: 20, 26: 23, 32: 25, 40: $V8, 41: $V9, 42: $Va, 43: $Vb, 44: $Vc, 45: $Vd, 53: $Ve, 71: $Vf, 72: $Vg }, { 4: 21, 5: $V6, 7: 39, 8: $V7, 9: 4, 14: $V1, 16: $V2, 18: $V3, 19: $V4, 23: 18, 24: 19, 25: 20, 26: 23, 32: 25, 40: $V8, 41: $V9, 42: $Va, 43: $Vb, 44: $Vc, 45: $Vd, 53: $Ve, 71: $Vf, 72: $Vg }, { 4: 21, 5: $V6, 7: 40, 8: $V7, 9: 4, 14: $V1, 16: $V2, 18: $V3, 19: $V4, 23: 18, 24: 19, 25: 20, 26: 23, 32: 25, 40: $V8, 41: $V9, 42: $Va, 43: $Vb, 44: $Vc, 45: $Vd, 53: $Ve, 71: $Vf, 72: $Vg }, { 4: 21, 5: $V6, 7: 41, 8: $V7, 9: 4, 14: $V1, 16: $V2, 18: $V3, 19: $V4, 23: 18, 24: 19, 25: 20, 26: 23, 32: 25, 40: $V8, 41: $V9, 42: $Va, 43: $Vb, 44: $Vc, 45: $Vd, 53: $Ve, 71: $Vf, 72: $Vg }, { 4: 21, 5: $V6, 7: 42, 8: $V7, 9: 4, 14: $V1, 16: $V2, 18: $V3, 19: $V4, 23: 18, 24: 19, 25: 20, 26: 23, 32: 25, 40: $V8, 41: $V9, 42: $Va, 43: $Vb, 44: $Vc, 45: $Vd, 53: $Ve, 71: $Vf, 72: $Vg }, { 27: 43, 71: [1, 44], 72: [1, 45] }, { 54: 46, 71: [1, 47], 72: [1, 48] }, { 60: [1, 49], 62: [1, 50] }, o($Vi, [2, 26]), o($Vi, [2, 27]), o($Vi, [2, 28]), o($Vi, [2, 29]), o($Vi, [2, 30]), o($Vi, [2, 31]), o($Vj, [2, 55]), o($Vj, [2, 56]), o($V5, [2, 4]), { 13: 51, 21: [1, 52] }, o($V5, [2, 12]), { 1: [2, 3] }, { 8: [2, 14] }, { 8: [2, 15] }, { 8: [2, 16] }, { 8: [2, 17] }, { 8: [2, 18] }, { 28: [1, 53] }, { 28: [2, 53] }, { 28: [2, 54] }, { 28: [1, 54] }, { 28: [2, 59] }, { 28: [2, 60] }, { 61: 55, 64: $Vk, 65: $Vl, 66: $Vm, 67: $Vn, 68: $Vo, 69: $Vp, 70: $Vq }, { 61: 63, 64: $Vk, 65: $Vl, 66: $Vm, 67: $Vn, 68: $Vo, 69: $Vp, 70: $Vq }, { 11: 64, 22: $Vh }, { 22: [2, 11] }, { 5: [1, 65] }, { 5: [1, 66] }, { 62: [1, 67] }, o($Vr, [2, 46]), o($Vr, [2, 47]), o($Vr, [2, 48]), o($Vr, [2, 49]), o($Vr, [2, 50]), o($Vr, [2, 51]), o($Vr, [2, 52]), { 63: [1, 68] }, o($V5, [2, 5]), { 5: $Vs, 29: 69, 30: $Vt, 33: $Vu, 35: $Vv, 37: $Vw, 39: $Vx }, { 5: $Vy, 39: $Vz, 55: 76, 56: $VA, 58: $VB }, { 32: 81, 71: $Vf, 72: $Vg }, { 32: 82, 71: $Vf, 72: $Vg }, o($VC, [2, 19]), { 31: [1, 83] }, { 31: [1, 84] }, { 31: [1, 85] }, { 31: [1, 86] }, { 5: $Vs, 29: 87, 30: $Vt, 33: $Vu, 35: $Vv, 37: $Vw, 39: $Vx }, o($VC, [2, 25]), o($VC, [2, 39]), { 31: [1, 88] }, { 31: [1, 89] }, { 5: $Vy, 39: $Vz, 55: 90, 56: $VA, 58: $VB }, o($VC, [2, 43]), o($VC, [2, 44]), o($VC, [2, 45]), { 32: 91, 71: $Vf, 72: $Vg }, { 34: 92, 71: [1, 93], 72: [1, 94] }, { 36: 95, 46: [1, 96], 47: [1, 97], 48: [1, 98] }, { 38: 99, 49: [1, 100], 50: [1, 101], 51: [1, 102], 52: [1, 103] }, o($VC, [2, 24]), { 57: 104, 71: [1, 105], 72: [1, 106] }, { 59: 107, 71: [1, 108], 72: [1, 109] }, o($VC, [2, 42]), { 5: [1, 110] }, { 5: [1, 111] }, { 5: [2, 57] }, { 5: [2, 58] }, { 5: [1, 112] }, { 5: [2, 32] }, { 5: [2, 33] }, { 5: [2, 34] }, { 5: [1, 113] }, { 5: [2, 35] }, { 5: [2, 36] }, { 5: [2, 37] }, { 5: [2, 38] }, { 5: [1, 114] }, { 5: [2, 61] }, { 5: [2, 62] }, { 5: [1, 115] }, { 5: [2, 63] }, { 5: [2, 64] }, { 5: $Vs, 29: 116, 30: $Vt, 33: $Vu, 35: $Vv, 37: $Vw, 39: $Vx }, { 5: $Vs, 29: 117, 30: $Vt, 33: $Vu, 35: $Vv, 37: $Vw, 39: $Vx }, { 5: $Vs, 29: 118, 30: $Vt, 33: $Vu, 35: $Vv, 37: $Vw, 39: $Vx }, { 5: $Vs, 29: 119, 30: $Vt, 33: $Vu, 35: $Vv, 37: $Vw, 39: $Vx }, { 5: $Vy, 39: $Vz, 55: 120, 56: $VA, 58: $VB }, { 5: $Vy, 39: $Vz, 55: 121, 56: $VA, 58: $VB }, o($VC, [2, 20]), o($VC, [2, 21]), o($VC, [2, 22]), o($VC, [2, 23]), o($VC, [2, 40]), o($VC, [2, 41])],\r\n    defaultActions: { 8: [2, 9], 10: [2, 2], 16: [2, 1], 37: [2, 3], 38: [2, 14], 39: [2, 15], 40: [2, 16], 41: [2, 17], 42: [2, 18], 44: [2, 53], 45: [2, 54], 47: [2, 59], 48: [2, 60], 52: [2, 11], 93: [2, 57], 94: [2, 58], 96: [2, 32], 97: [2, 33], 98: [2, 34], 100: [2, 35], 101: [2, 36], 102: [2, 37], 103: [2, 38], 105: [2, 61], 106: [2, 62], 108: [2, 63], 109: [2, 64] },\r\n    parseError: function parseError(str, hash) {\r\n      if (hash.recoverable) {\r\n        this.trace(str);\r\n      } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n      }\r\n    },\r\n    parse: function parse(input) {\r\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\r\n      var args = lstack.slice.call(arguments, 1);\r\n      var lexer2 = Object.create(this.lexer);\r\n      var sharedState = { yy: {} };\r\n      for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n          sharedState.yy[k] = this.yy[k];\r\n        }\r\n      }\r\n      lexer2.setInput(input, sharedState.yy);\r\n      sharedState.yy.lexer = lexer2;\r\n      sharedState.yy.parser = this;\r\n      if (typeof lexer2.yylloc == \"undefined\") {\r\n        lexer2.yylloc = {};\r\n      }\r\n      var yyloc = lexer2.yylloc;\r\n      lstack.push(yyloc);\r\n      var ranges = lexer2.options && lexer2.options.ranges;\r\n      if (typeof sharedState.yy.parseError === \"function\") {\r\n        this.parseError = sharedState.yy.parseError;\r\n      } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n      }\r\n      function lex() {\r\n        var token;\r\n        token = tstack.pop() || lexer2.lex() || EOF;\r\n        if (typeof token !== \"number\") {\r\n          if (token instanceof Array) {\r\n            tstack = token;\r\n            token = tstack.pop();\r\n          }\r\n          token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n      }\r\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\r\n      while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n          action = this.defaultActions[state];\r\n        } else {\r\n          if (symbol === null || typeof symbol == \"undefined\") {\r\n            symbol = lex();\r\n          }\r\n          action = table[state] && table[state][symbol];\r\n        }\r\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\r\n          var errStr = \"\";\r\n          expected = [];\r\n          for (p in table[state]) {\r\n            if (this.terminals_[p] && p > TERROR) {\r\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n            }\r\n          }\r\n          if (lexer2.showPosition) {\r\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\r\n          } else {\r\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\r\n          }\r\n          this.parseError(errStr, {\r\n            text: lexer2.match,\r\n            token: this.terminals_[symbol] || symbol,\r\n            line: lexer2.yylineno,\r\n            loc: yyloc,\r\n            expected\r\n          });\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\r\n        }\r\n        switch (action[0]) {\r\n          case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer2.yytext);\r\n            lstack.push(lexer2.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            {\r\n              yyleng = lexer2.yyleng;\r\n              yytext = lexer2.yytext;\r\n              yylineno = lexer2.yylineno;\r\n              yyloc = lexer2.yylloc;\r\n            }\r\n            break;\r\n          case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n              first_line: lstack[lstack.length - (len || 1)].first_line,\r\n              last_line: lstack[lstack.length - 1].last_line,\r\n              first_column: lstack[lstack.length - (len || 1)].first_column,\r\n              last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n              yyval._$.range = [\r\n                lstack[lstack.length - (len || 1)].range[0],\r\n                lstack[lstack.length - 1].range[1]\r\n              ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n              yytext,\r\n              yyleng,\r\n              yylineno,\r\n              sharedState.yy,\r\n              action[1],\r\n              vstack,\r\n              lstack\r\n            ].concat(args));\r\n            if (typeof r !== \"undefined\") {\r\n              return r;\r\n            }\r\n            if (len) {\r\n              stack = stack.slice(0, -1 * len * 2);\r\n              vstack = vstack.slice(0, -1 * len);\r\n              lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n          case 3:\r\n            return true;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n  var lexer = function() {\r\n    var lexer2 = {\r\n      EOF: 1,\r\n      parseError: function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n          this.yy.parser.parseError(str, hash);\r\n        } else {\r\n          throw new Error(str);\r\n        }\r\n      },\r\n      // resets the lexer, sets new input\r\n      setInput: function(input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = \"\";\r\n        this.conditionStack = [\"INITIAL\"];\r\n        this.yylloc = {\r\n          first_line: 1,\r\n          first_column: 0,\r\n          last_line: 1,\r\n          last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [0, 0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n      },\r\n      // consumes and returns one char from the input\r\n      input: function() {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno++;\r\n          this.yylloc.last_line++;\r\n        } else {\r\n          this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range[1]++;\r\n        }\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n      },\r\n      // unshifts one char (or a string) into the input\r\n      unput: function(ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n        if (lines.length - 1) {\r\n          this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n        this.yylloc = {\r\n          first_line: this.yylloc.first_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.first_column,\r\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\r\n        };\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n      },\r\n      // When called from action, caches matched text and appends it on next action\r\n      more: function() {\r\n        this._more = true;\r\n        return this;\r\n      },\r\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n      reject: function() {\r\n        if (this.options.backtrack_lexer) {\r\n          this._backtrack = true;\r\n        } else {\r\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\r\n            text: \"\",\r\n            token: null,\r\n            line: this.yylineno\r\n          });\r\n        }\r\n        return this;\r\n      },\r\n      // retain first n characters of the match\r\n      less: function(n) {\r\n        this.unput(this.match.slice(n));\r\n      },\r\n      // displays already matched input, i.e. for error messages\r\n      pastInput: function() {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\r\n      },\r\n      // displays upcoming input, i.e. for error messages\r\n      upcomingInput: function() {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n          next += this._input.substr(0, 20 - next.length);\r\n        }\r\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\r\n      },\r\n      // displays the character position where the lexing error occurred, i.e. for error messages\r\n      showPosition: function() {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n      },\r\n      // test the lexed token: return FALSE when not a match, otherwise return token\r\n      test_match: function(match, indexed_rule) {\r\n        var token, lines, backup;\r\n        if (this.options.backtrack_lexer) {\r\n          backup = {\r\n            yylineno: this.yylineno,\r\n            yylloc: {\r\n              first_line: this.yylloc.first_line,\r\n              last_line: this.last_line,\r\n              first_column: this.yylloc.first_column,\r\n              last_column: this.yylloc.last_column\r\n            },\r\n            yytext: this.yytext,\r\n            match: this.match,\r\n            matches: this.matches,\r\n            matched: this.matched,\r\n            yyleng: this.yyleng,\r\n            offset: this.offset,\r\n            _more: this._more,\r\n            _input: this._input,\r\n            yy: this.yy,\r\n            conditionStack: this.conditionStack.slice(0),\r\n            done: this.done\r\n          };\r\n          if (this.options.ranges) {\r\n            backup.yylloc.range = this.yylloc.range.slice(0);\r\n          }\r\n        }\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n          first_line: this.yylloc.last_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.last_column,\r\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n          this.done = false;\r\n        }\r\n        if (token) {\r\n          return token;\r\n        } else if (this._backtrack) {\r\n          for (var k in backup) {\r\n            this[k] = backup[k];\r\n          }\r\n          return false;\r\n        }\r\n        return false;\r\n      },\r\n      // return next match in input\r\n      next: function() {\r\n        if (this.done) {\r\n          return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n          this.done = true;\r\n        }\r\n        var token, match, tempMatch, index;\r\n        if (!this._more) {\r\n          this.yytext = \"\";\r\n          this.match = \"\";\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n          tempMatch = this._input.match(this.rules[rules[i]]);\r\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n            match = tempMatch;\r\n            index = i;\r\n            if (this.options.backtrack_lexer) {\r\n              token = this.test_match(tempMatch, rules[i]);\r\n              if (token !== false) {\r\n                return token;\r\n              } else if (this._backtrack) {\r\n                match = false;\r\n                continue;\r\n              } else {\r\n                return false;\r\n              }\r\n            } else if (!this.options.flex) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (match) {\r\n          token = this.test_match(match, rules[index]);\r\n          if (token !== false) {\r\n            return token;\r\n          }\r\n          return false;\r\n        }\r\n        if (this._input === \"\") {\r\n          return this.EOF;\r\n        } else {\r\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\r\n            text: \"\",\r\n            token: null,\r\n            line: this.yylineno\r\n          });\r\n        }\r\n      },\r\n      // return next match that has a token\r\n      lex: function lex() {\r\n        var r = this.next();\r\n        if (r) {\r\n          return r;\r\n        } else {\r\n          return this.lex();\r\n        }\r\n      },\r\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n      begin: function begin(condition) {\r\n        this.conditionStack.push(condition);\r\n      },\r\n      // pop the previously active lexer condition state off the condition stack\r\n      popState: function popState() {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n          return this.conditionStack.pop();\r\n        } else {\r\n          return this.conditionStack[0];\r\n        }\r\n      },\r\n      // produce the lexer rule set which is active for the currently active lexer condition state\r\n      _currentRules: function _currentRules() {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n          return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n      },\r\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n      topState: function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n          return this.conditionStack[n];\r\n        } else {\r\n          return \"INITIAL\";\r\n        }\r\n      },\r\n      // alias for begin(condition)\r\n      pushState: function pushState(condition) {\r\n        this.begin(condition);\r\n      },\r\n      // return the number of states currently on the stack\r\n      stateStackSize: function stateStackSize() {\r\n        return this.conditionStack.length;\r\n      },\r\n      options: { \"case-insensitive\": true },\r\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n        switch ($avoiding_name_collisions) {\r\n          case 0:\r\n            this.begin(\"open_directive\");\r\n            return 19;\r\n          case 1:\r\n            this.begin(\"type_directive\");\r\n            return 20;\r\n          case 2:\r\n            this.popState();\r\n            this.begin(\"arg_directive\");\r\n            return 12;\r\n          case 3:\r\n            this.popState();\r\n            this.popState();\r\n            return 22;\r\n          case 4:\r\n            return 21;\r\n          case 5:\r\n            return \"title\";\r\n          case 6:\r\n            this.begin(\"acc_title\");\r\n            return 14;\r\n          case 7:\r\n            this.popState();\r\n            return \"acc_title_value\";\r\n          case 8:\r\n            this.begin(\"acc_descr\");\r\n            return 16;\r\n          case 9:\r\n            this.popState();\r\n            return \"acc_descr_value\";\r\n          case 10:\r\n            this.begin(\"acc_descr_multiline\");\r\n            break;\r\n          case 11:\r\n            this.popState();\r\n            break;\r\n          case 12:\r\n            return \"acc_descr_multiline_value\";\r\n          case 13:\r\n            return 5;\r\n          case 14:\r\n            break;\r\n          case 15:\r\n            break;\r\n          case 16:\r\n            break;\r\n          case 17:\r\n            return 8;\r\n          case 18:\r\n            return 6;\r\n          case 19:\r\n            return 28;\r\n          case 20:\r\n            return 39;\r\n          case 21:\r\n            return 31;\r\n          case 22:\r\n            return 30;\r\n          case 23:\r\n            return 33;\r\n          case 24:\r\n            return 35;\r\n          case 25:\r\n            return 37;\r\n          case 26:\r\n            return 40;\r\n          case 27:\r\n            return 41;\r\n          case 28:\r\n            return 42;\r\n          case 29:\r\n            return 43;\r\n          case 30:\r\n            return 44;\r\n          case 31:\r\n            return 45;\r\n          case 32:\r\n            return 46;\r\n          case 33:\r\n            return 47;\r\n          case 34:\r\n            return 48;\r\n          case 35:\r\n            return 49;\r\n          case 36:\r\n            return 50;\r\n          case 37:\r\n            return 51;\r\n          case 38:\r\n            return 52;\r\n          case 39:\r\n            return 53;\r\n          case 40:\r\n            return 64;\r\n          case 41:\r\n            return 65;\r\n          case 42:\r\n            return 66;\r\n          case 43:\r\n            return 67;\r\n          case 44:\r\n            return 68;\r\n          case 45:\r\n            return 69;\r\n          case 46:\r\n            return 70;\r\n          case 47:\r\n            return 56;\r\n          case 48:\r\n            return 58;\r\n          case 49:\r\n            return 60;\r\n          case 50:\r\n            return 63;\r\n          case 51:\r\n            return 62;\r\n          case 52:\r\n            this.begin(\"string\");\r\n            break;\r\n          case 53:\r\n            this.popState();\r\n            break;\r\n          case 54:\r\n            return \"qString\";\r\n          case 55:\r\n            yy_.yytext = yy_.yytext.trim();\r\n            return 71;\r\n        }\r\n      },\r\n      rules: [/^(?:%%\\{)/i, /^(?:((?:(?!\\}%%)[^:.])*))/i, /^(?::)/i, /^(?:\\}%%)/i, /^(?:((?:(?!\\}%%).|\\n)*))/i, /^(?:title\\s[^#\\n;]+)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:(\\r?\\n)+)/i, /^(?:\\s+)/i, /^(?:#[^\\n]*)/i, /^(?:%[^\\n]*)/i, /^(?:$)/i, /^(?:requirementDiagram\\b)/i, /^(?:\\{)/i, /^(?:\\})/i, /^(?::)/i, /^(?:id\\b)/i, /^(?:text\\b)/i, /^(?:risk\\b)/i, /^(?:verifyMethod\\b)/i, /^(?:requirement\\b)/i, /^(?:functionalRequirement\\b)/i, /^(?:interfaceRequirement\\b)/i, /^(?:performanceRequirement\\b)/i, /^(?:physicalRequirement\\b)/i, /^(?:designConstraint\\b)/i, /^(?:low\\b)/i, /^(?:medium\\b)/i, /^(?:high\\b)/i, /^(?:analysis\\b)/i, /^(?:demonstration\\b)/i, /^(?:inspection\\b)/i, /^(?:test\\b)/i, /^(?:element\\b)/i, /^(?:contains\\b)/i, /^(?:copies\\b)/i, /^(?:derives\\b)/i, /^(?:satisfies\\b)/i, /^(?:verifies\\b)/i, /^(?:refines\\b)/i, /^(?:traces\\b)/i, /^(?:type\\b)/i, /^(?:docref\\b)/i, /^(?:<-)/i, /^(?:->)/i, /^(?:-)/i, /^(?:[\"])/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:[\\w][^\\r\\n\\{\\<\\>\\-\\=]*)/i],\r\n      conditions: { \"acc_descr_multiline\": { \"rules\": [11, 12], \"inclusive\": false }, \"acc_descr\": { \"rules\": [9], \"inclusive\": false }, \"acc_title\": { \"rules\": [7], \"inclusive\": false }, \"close_directive\": { \"rules\": [], \"inclusive\": false }, \"arg_directive\": { \"rules\": [3, 4], \"inclusive\": false }, \"type_directive\": { \"rules\": [2, 3], \"inclusive\": false }, \"open_directive\": { \"rules\": [1], \"inclusive\": false }, \"unqString\": { \"rules\": [], \"inclusive\": false }, \"token\": { \"rules\": [], \"inclusive\": false }, \"string\": { \"rules\": [53, 54], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 5, 6, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55], \"inclusive\": true } }\r\n    };\r\n    return lexer2;\r\n  }();\r\n  parser2.lexer = lexer;\r\n  function Parser() {\r\n    this.yy = {};\r\n  }\r\n  Parser.prototype = parser2;\r\n  parser2.Parser = Parser;\r\n  return new Parser();\r\n}();\r\nparser.parser = parser;\r\nconst parser$1 = parser;\r\nlet relations = [];\r\nlet latestRequirement = {};\r\nlet requirements = {};\r\nlet latestElement = {};\r\nlet elements = {};\r\nconst RequirementType = {\r\n  REQUIREMENT: \"Requirement\",\r\n  FUNCTIONAL_REQUIREMENT: \"Functional Requirement\",\r\n  INTERFACE_REQUIREMENT: \"Interface Requirement\",\r\n  PERFORMANCE_REQUIREMENT: \"Performance Requirement\",\r\n  PHYSICAL_REQUIREMENT: \"Physical Requirement\",\r\n  DESIGN_CONSTRAINT: \"Design Constraint\"\r\n};\r\nconst RiskLevel = {\r\n  LOW_RISK: \"Low\",\r\n  MED_RISK: \"Medium\",\r\n  HIGH_RISK: \"High\"\r\n};\r\nconst VerifyType = {\r\n  VERIFY_ANALYSIS: \"Analysis\",\r\n  VERIFY_DEMONSTRATION: \"Demonstration\",\r\n  VERIFY_INSPECTION: \"Inspection\",\r\n  VERIFY_TEST: \"Test\"\r\n};\r\nconst Relationships = {\r\n  CONTAINS: \"contains\",\r\n  COPIES: \"copies\",\r\n  DERIVES: \"derives\",\r\n  SATISFIES: \"satisfies\",\r\n  VERIFIES: \"verifies\",\r\n  REFINES: \"refines\",\r\n  TRACES: \"traces\"\r\n};\r\nconst parseDirective = function(statement, context, type) {\r\n  mermaidAPI.parseDirective(this, statement, context, type);\r\n};\r\nconst addRequirement = (name, type) => {\r\n  if (requirements[name] === void 0) {\r\n    requirements[name] = {\r\n      name,\r\n      type,\r\n      id: latestRequirement.id,\r\n      text: latestRequirement.text,\r\n      risk: latestRequirement.risk,\r\n      verifyMethod: latestRequirement.verifyMethod\r\n    };\r\n  }\r\n  latestRequirement = {};\r\n  return requirements[name];\r\n};\r\nconst getRequirements = () => requirements;\r\nconst setNewReqId = (id) => {\r\n  if (latestRequirement !== void 0) {\r\n    latestRequirement.id = id;\r\n  }\r\n};\r\nconst setNewReqText = (text) => {\r\n  if (latestRequirement !== void 0) {\r\n    latestRequirement.text = text;\r\n  }\r\n};\r\nconst setNewReqRisk = (risk) => {\r\n  if (latestRequirement !== void 0) {\r\n    latestRequirement.risk = risk;\r\n  }\r\n};\r\nconst setNewReqVerifyMethod = (verifyMethod) => {\r\n  if (latestRequirement !== void 0) {\r\n    latestRequirement.verifyMethod = verifyMethod;\r\n  }\r\n};\r\nconst addElement = (name) => {\r\n  if (elements[name] === void 0) {\r\n    elements[name] = {\r\n      name,\r\n      type: latestElement.type,\r\n      docRef: latestElement.docRef\r\n    };\r\n    log.info(\"Added new requirement: \", name);\r\n  }\r\n  latestElement = {};\r\n  return elements[name];\r\n};\r\nconst getElements = () => elements;\r\nconst setNewElementType = (type) => {\r\n  if (latestElement !== void 0) {\r\n    latestElement.type = type;\r\n  }\r\n};\r\nconst setNewElementDocRef = (docRef) => {\r\n  if (latestElement !== void 0) {\r\n    latestElement.docRef = docRef;\r\n  }\r\n};\r\nconst addRelationship = (type, src, dst) => {\r\n  relations.push({\r\n    type,\r\n    src,\r\n    dst\r\n  });\r\n};\r\nconst getRelationships = () => relations;\r\nconst clear = () => {\r\n  relations = [];\r\n  latestRequirement = {};\r\n  requirements = {};\r\n  latestElement = {};\r\n  elements = {};\r\n  clear$1();\r\n};\r\nconst db = {\r\n  RequirementType,\r\n  RiskLevel,\r\n  VerifyType,\r\n  Relationships,\r\n  parseDirective,\r\n  getConfig: () => getConfig().req,\r\n  addRequirement,\r\n  getRequirements,\r\n  setNewReqId,\r\n  setNewReqText,\r\n  setNewReqRisk,\r\n  setNewReqVerifyMethod,\r\n  setAccTitle,\r\n  getAccTitle,\r\n  setAccDescription,\r\n  getAccDescription,\r\n  addElement,\r\n  getElements,\r\n  setNewElementType,\r\n  setNewElementDocRef,\r\n  addRelationship,\r\n  getRelationships,\r\n  clear\r\n};\r\nconst getStyles = (options) => `\r\n\r\n  marker {\r\n    fill: ${options.relationColor};\r\n    stroke: ${options.relationColor};\r\n  }\r\n\r\n  marker.cross {\r\n    stroke: ${options.lineColor};\r\n  }\r\n\r\n  svg {\r\n    font-family: ${options.fontFamily};\r\n    font-size: ${options.fontSize};\r\n  }\r\n\r\n  .reqBox {\r\n    fill: ${options.requirementBackground};\r\n    fill-opacity: 1.0;\r\n    stroke: ${options.requirementBorderColor};\r\n    stroke-width: ${options.requirementBorderSize};\r\n  }\r\n  \r\n  .reqTitle, .reqLabel{\r\n    fill:  ${options.requirementTextColor};\r\n  }\r\n  .reqLabelBox {\r\n    fill: ${options.relationLabelBackground};\r\n    fill-opacity: 1.0;\r\n  }\r\n\r\n  .req-title-line {\r\n    stroke: ${options.requirementBorderColor};\r\n    stroke-width: ${options.requirementBorderSize};\r\n  }\r\n  .relationshipLine {\r\n    stroke: ${options.relationColor};\r\n    stroke-width: 1;\r\n  }\r\n  .relationshipLabel {\r\n    fill: ${options.relationLabelColor};\r\n  }\r\n\r\n`;\r\nconst styles = getStyles;\r\nconst ReqMarkers = {\r\n  CONTAINS: \"contains\",\r\n  ARROW: \"arrow\"\r\n};\r\nconst insertLineEndings = (parentNode, conf2) => {\r\n  let containsNode = parentNode.append(\"defs\").append(\"marker\").attr(\"id\", ReqMarkers.CONTAINS + \"_line_ending\").attr(\"refX\", 0).attr(\"refY\", conf2.line_height / 2).attr(\"markerWidth\", conf2.line_height).attr(\"markerHeight\", conf2.line_height).attr(\"orient\", \"auto\").append(\"g\");\r\n  containsNode.append(\"circle\").attr(\"cx\", conf2.line_height / 2).attr(\"cy\", conf2.line_height / 2).attr(\"r\", conf2.line_height / 2).attr(\"fill\", \"none\");\r\n  containsNode.append(\"line\").attr(\"x1\", 0).attr(\"x2\", conf2.line_height).attr(\"y1\", conf2.line_height / 2).attr(\"y2\", conf2.line_height / 2).attr(\"stroke-width\", 1);\r\n  containsNode.append(\"line\").attr(\"y1\", 0).attr(\"y2\", conf2.line_height).attr(\"x1\", conf2.line_height / 2).attr(\"x2\", conf2.line_height / 2).attr(\"stroke-width\", 1);\r\n  parentNode.append(\"defs\").append(\"marker\").attr(\"id\", ReqMarkers.ARROW + \"_line_ending\").attr(\"refX\", conf2.line_height).attr(\"refY\", 0.5 * conf2.line_height).attr(\"markerWidth\", conf2.line_height).attr(\"markerHeight\", conf2.line_height).attr(\"orient\", \"auto\").append(\"path\").attr(\r\n    \"d\",\r\n    `M0,0\r\n      L${conf2.line_height},${conf2.line_height / 2}\r\n      M${conf2.line_height},${conf2.line_height / 2}\r\n      L0,${conf2.line_height}`\r\n  ).attr(\"stroke-width\", 1);\r\n};\r\nconst markers = {\r\n  ReqMarkers,\r\n  insertLineEndings\r\n};\r\nlet conf = {};\r\nlet relCnt = 0;\r\nconst newRectNode = (parentNode, id) => {\r\n  return parentNode.insert(\"rect\", \"#\" + id).attr(\"class\", \"req reqBox\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", conf.rect_min_width + \"px\").attr(\"height\", conf.rect_min_height + \"px\");\r\n};\r\nconst newTitleNode = (parentNode, id, txts) => {\r\n  let x = conf.rect_min_width / 2;\r\n  let title = parentNode.append(\"text\").attr(\"class\", \"req reqLabel reqTitle\").attr(\"id\", id).attr(\"x\", x).attr(\"y\", conf.rect_padding).attr(\"dominant-baseline\", \"hanging\");\r\n  let i = 0;\r\n  txts.forEach((textStr) => {\r\n    if (i == 0) {\r\n      title.append(\"tspan\").attr(\"text-anchor\", \"middle\").attr(\"x\", conf.rect_min_width / 2).attr(\"dy\", 0).text(textStr);\r\n    } else {\r\n      title.append(\"tspan\").attr(\"text-anchor\", \"middle\").attr(\"x\", conf.rect_min_width / 2).attr(\"dy\", conf.line_height * 0.75).text(textStr);\r\n    }\r\n    i++;\r\n  });\r\n  let yPadding = 1.5 * conf.rect_padding;\r\n  let linePadding = i * conf.line_height * 0.75;\r\n  let totalY = yPadding + linePadding;\r\n  parentNode.append(\"line\").attr(\"class\", \"req-title-line\").attr(\"x1\", \"0\").attr(\"x2\", conf.rect_min_width).attr(\"y1\", totalY).attr(\"y2\", totalY);\r\n  return {\r\n    titleNode: title,\r\n    y: totalY\r\n  };\r\n};\r\nconst newBodyNode = (parentNode, id, txts, yStart) => {\r\n  let body = parentNode.append(\"text\").attr(\"class\", \"req reqLabel\").attr(\"id\", id).attr(\"x\", conf.rect_padding).attr(\"y\", yStart).attr(\"dominant-baseline\", \"hanging\");\r\n  let currentRow = 0;\r\n  const charLimit = 30;\r\n  let wrappedTxts = [];\r\n  txts.forEach((textStr) => {\r\n    let currentTextLen = textStr.length;\r\n    while (currentTextLen > charLimit && currentRow < 3) {\r\n      let firstPart = textStr.substring(0, charLimit);\r\n      textStr = textStr.substring(charLimit, textStr.length);\r\n      currentTextLen = textStr.length;\r\n      wrappedTxts[wrappedTxts.length] = firstPart;\r\n      currentRow++;\r\n    }\r\n    if (currentRow == 3) {\r\n      let lastStr = wrappedTxts[wrappedTxts.length - 1];\r\n      wrappedTxts[wrappedTxts.length - 1] = lastStr.substring(0, lastStr.length - 4) + \"...\";\r\n    } else {\r\n      wrappedTxts[wrappedTxts.length] = textStr;\r\n    }\r\n    currentRow = 0;\r\n  });\r\n  wrappedTxts.forEach((textStr) => {\r\n    body.append(\"tspan\").attr(\"x\", conf.rect_padding).attr(\"dy\", conf.line_height).text(textStr);\r\n  });\r\n  return body;\r\n};\r\nconst addEdgeLabel = (parentNode, svgPath, conf2, txt) => {\r\n  const len = svgPath.node().getTotalLength();\r\n  const labelPoint = svgPath.node().getPointAtLength(len * 0.5);\r\n  const labelId = \"rel\" + relCnt;\r\n  relCnt++;\r\n  const labelNode = parentNode.append(\"text\").attr(\"class\", \"req relationshipLabel\").attr(\"id\", labelId).attr(\"x\", labelPoint.x).attr(\"y\", labelPoint.y).attr(\"text-anchor\", \"middle\").attr(\"dominant-baseline\", \"middle\").text(txt);\r\n  const labelBBox = labelNode.node().getBBox();\r\n  parentNode.insert(\"rect\", \"#\" + labelId).attr(\"class\", \"req reqLabelBox\").attr(\"x\", labelPoint.x - labelBBox.width / 2).attr(\"y\", labelPoint.y - labelBBox.height / 2).attr(\"width\", labelBBox.width).attr(\"height\", labelBBox.height).attr(\"fill\", \"white\").attr(\"fill-opacity\", \"85%\");\r\n};\r\nconst drawRelationshipFromLayout = function(svg, rel, g, insert, diagObj) {\r\n  const edge = g.edge(elementString(rel.src), elementString(rel.dst));\r\n  const lineFunction = line().x(function(d) {\r\n    return d.x;\r\n  }).y(function(d) {\r\n    return d.y;\r\n  });\r\n  const svgPath = svg.insert(\"path\", \"#\" + insert).attr(\"class\", \"er relationshipLine\").attr(\"d\", lineFunction(edge.points)).attr(\"fill\", \"none\");\r\n  if (rel.type == diagObj.db.Relationships.CONTAINS) {\r\n    svgPath.attr(\r\n      \"marker-start\",\r\n      \"url(\" + common.getUrl(conf.arrowMarkerAbsolute) + \"#\" + rel.type + \"_line_ending)\"\r\n    );\r\n  } else {\r\n    svgPath.attr(\"stroke-dasharray\", \"10,7\");\r\n    svgPath.attr(\r\n      \"marker-end\",\r\n      \"url(\" + common.getUrl(conf.arrowMarkerAbsolute) + \"#\" + markers.ReqMarkers.ARROW + \"_line_ending)\"\r\n    );\r\n  }\r\n  addEdgeLabel(svg, svgPath, conf, `<<${rel.type}>>`);\r\n  return;\r\n};\r\nconst drawReqs = (reqs, graph, svgNode) => {\r\n  Object.keys(reqs).forEach((reqName) => {\r\n    let req = reqs[reqName];\r\n    reqName = elementString(reqName);\r\n    log.info(\"Added new requirement: \", reqName);\r\n    const groupNode = svgNode.append(\"g\").attr(\"id\", reqName);\r\n    const textId = \"req-\" + reqName;\r\n    const rectNode = newRectNode(groupNode, textId);\r\n    let titleNodeInfo = newTitleNode(groupNode, reqName + \"_title\", [\r\n      `<<${req.type}>>`,\r\n      `${req.name}`\r\n    ]);\r\n    newBodyNode(\r\n      groupNode,\r\n      reqName + \"_body\",\r\n      [\r\n        `Id: ${req.id}`,\r\n        `Text: ${req.text}`,\r\n        `Risk: ${req.risk}`,\r\n        `Verification: ${req.verifyMethod}`\r\n      ],\r\n      titleNodeInfo.y\r\n    );\r\n    const rectBBox = rectNode.node().getBBox();\r\n    graph.setNode(reqName, {\r\n      width: rectBBox.width,\r\n      height: rectBBox.height,\r\n      shape: \"rect\",\r\n      id: reqName\r\n    });\r\n  });\r\n};\r\nconst drawElements = (els, graph, svgNode) => {\r\n  Object.keys(els).forEach((elName) => {\r\n    let el = els[elName];\r\n    const id = elementString(elName);\r\n    const groupNode = svgNode.append(\"g\").attr(\"id\", id);\r\n    const textId = \"element-\" + id;\r\n    const rectNode = newRectNode(groupNode, textId);\r\n    let titleNodeInfo = newTitleNode(groupNode, textId + \"_title\", [`<<Element>>`, `${elName}`]);\r\n    newBodyNode(\r\n      groupNode,\r\n      textId + \"_body\",\r\n      [`Type: ${el.type || \"Not Specified\"}`, `Doc Ref: ${el.docRef || \"None\"}`],\r\n      titleNodeInfo.y\r\n    );\r\n    const rectBBox = rectNode.node().getBBox();\r\n    graph.setNode(id, {\r\n      width: rectBBox.width,\r\n      height: rectBBox.height,\r\n      shape: \"rect\",\r\n      id\r\n    });\r\n  });\r\n};\r\nconst addRelationships = (relationships, g) => {\r\n  relationships.forEach(function(r) {\r\n    let src = elementString(r.src);\r\n    let dst = elementString(r.dst);\r\n    g.setEdge(src, dst, { relationship: r });\r\n  });\r\n  return relationships;\r\n};\r\nconst adjustEntities = function(svgNode, graph) {\r\n  graph.nodes().forEach(function(v) {\r\n    if (v !== void 0 && graph.node(v) !== void 0) {\r\n      svgNode.select(\"#\" + v);\r\n      svgNode.select(\"#\" + v).attr(\r\n        \"transform\",\r\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y - graph.node(v).height / 2) + \" )\"\r\n      );\r\n    }\r\n  });\r\n  return;\r\n};\r\nconst elementString = (str) => {\r\n  return str.replace(/\\s/g, \"\").replace(/\\./g, \"_\");\r\n};\r\nconst draw = (text, id, _version, diagObj) => {\r\n  conf = getConfig().requirement;\r\n  diagObj.db.clear();\r\n  diagObj.parser.parse(text);\r\n  const securityLevel = conf.securityLevel;\r\n  let sandboxElement;\r\n  if (securityLevel === \"sandbox\") {\r\n    sandboxElement = select(\"#i\" + id);\r\n  }\r\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\r\n  const svg = root.select(`[id='${id}']`);\r\n  markers.insertLineEndings(svg, conf);\r\n  const g = new graphlib.Graph({\r\n    multigraph: false,\r\n    compound: false,\r\n    directed: true\r\n  }).setGraph({\r\n    rankdir: conf.layoutDirection,\r\n    marginx: 20,\r\n    marginy: 20,\r\n    nodesep: 100,\r\n    edgesep: 100,\r\n    ranksep: 100\r\n  }).setDefaultEdgeLabel(function() {\r\n    return {};\r\n  });\r\n  let requirements2 = diagObj.db.getRequirements();\r\n  let elements2 = diagObj.db.getElements();\r\n  let relationships = diagObj.db.getRelationships();\r\n  drawReqs(requirements2, g, svg);\r\n  drawElements(elements2, g, svg);\r\n  addRelationships(relationships, g);\r\n  layout(g);\r\n  adjustEntities(svg, g);\r\n  relationships.forEach(function(rel) {\r\n    drawRelationshipFromLayout(svg, rel, g, id, diagObj);\r\n  });\r\n  const padding = conf.rect_padding;\r\n  const svgBounds = svg.node().getBBox();\r\n  const width = svgBounds.width + padding * 2;\r\n  const height = svgBounds.height + padding * 2;\r\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\r\n  svg.attr(\"viewBox\", `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`);\r\n};\r\nconst renderer = {\r\n  draw\r\n};\r\nconst diagram = {\r\n  parser: parser$1,\r\n  db,\r\n  renderer,\r\n  styles\r\n};\r\nexport {\r\n  diagram\r\n};\r\n"],
  "mappings": "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,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE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",
  "names": ["clear"]
}
