{
  "version": 3,
  "sources": ["../../../../node_modules/@vuepress/shared/dist/index.js"],
  "sourcesContent": ["// src/utils/index.ts\r\nimport { isArray, isFunction, isString } from \"@vue/shared\";\r\n\r\n// src/utils/resolveHeadIdentifier.ts\r\nvar resolveHeadIdentifier = ([\r\n  tag,\r\n  attrs,\r\n  content\r\n]) => {\r\n  if (tag === \"meta\" && attrs.name) {\r\n    return `${tag}.${attrs.name}`;\r\n  }\r\n  if ([\"title\", \"base\"].includes(tag)) {\r\n    return tag;\r\n  }\r\n  if (tag === \"template\" && attrs.id) {\r\n    return `${tag}.${attrs.id}`;\r\n  }\r\n  return JSON.stringify([tag, attrs, content]);\r\n};\r\n\r\n// src/utils/dedupeHead.ts\r\nvar dedupeHead = (head) => {\r\n  const identifierSet = /* @__PURE__ */ new Set();\r\n  const result = [];\r\n  head.forEach((item) => {\r\n    const identifier = resolveHeadIdentifier(item);\r\n    if (!identifierSet.has(identifier)) {\r\n      identifierSet.add(identifier);\r\n      result.push(item);\r\n    }\r\n  });\r\n  return result;\r\n};\r\n\r\n// src/utils/ensureLeadingSlash.ts\r\nvar ensureLeadingSlash = (str) => str[0] === \"/\" ? str : `/${str}`;\r\n\r\n// src/utils/ensureEndingSlash.ts\r\nvar ensureEndingSlash = (str) => str[str.length - 1] === \"/\" || str.endsWith(\".html\") ? str : `${str}/`;\r\n\r\n// src/utils/formatDateString.ts\r\nvar formatDateString = (str, defaultDateString = \"\") => {\r\n  const dateMatch = str.match(/\\b(\\d{4})-(\\d{1,2})-(\\d{1,2})\\b/);\r\n  if (dateMatch === null) {\r\n    return defaultDateString;\r\n  }\r\n  const [, yearStr, monthStr, dayStr] = dateMatch;\r\n  return [yearStr, monthStr.padStart(2, \"0\"), dayStr.padStart(2, \"0\")].join(\"-\");\r\n};\r\n\r\n// src/utils/isLinkFtp.ts\r\nvar isLinkFtp = (link) => link.startsWith(\"ftp://\");\r\n\r\n// src/utils/isLinkHttp.ts\r\nvar isLinkHttp = (link) => /^(https?:)?\\/\\//.test(link);\r\n\r\n// src/utils/isLinkExternal.ts\r\nvar markdownLinkRegexp = /.md((\\?|#).*)?$/;\r\nvar isLinkExternal = (link, base = \"/\") => {\r\n  if (isLinkHttp(link) || isLinkFtp(link)) {\r\n    return true;\r\n  }\r\n  if (link.startsWith(\"/\") && !link.startsWith(base) && !markdownLinkRegexp.test(link)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n// src/utils/isLinkMailto.ts\r\nvar isLinkMailto = (link) => /^mailto:/.test(link);\r\n\r\n// src/utils/isLinkTel.ts\r\nvar isLinkTel = (link) => /^tel:/.test(link);\r\n\r\n// src/utils/isPlainObject.ts\r\nvar isPlainObject = (val) => Object.prototype.toString.call(val) === \"[object Object]\";\r\n\r\n// src/utils/omit.ts\r\nvar omit = (obj, ...keys) => {\r\n  const result = { ...obj };\r\n  for (const key of keys) {\r\n    delete result[key];\r\n  }\r\n  return result;\r\n};\r\n\r\n// src/utils/removeEndingSlash.ts\r\nvar removeEndingSlash = (str) => str[str.length - 1] === \"/\" ? str.slice(0, -1) : str;\r\n\r\n// src/utils/removeLeadingSlash.ts\r\nvar removeLeadingSlash = (str) => str[0] === \"/\" ? str.slice(1) : str;\r\n\r\n// src/utils/resolveLocalePath.ts\r\nvar resolveLocalePath = (locales, routePath) => {\r\n  const localePaths = Object.keys(locales).sort((a, b) => {\r\n    const levelDelta = b.split(\"/\").length - a.split(\"/\").length;\r\n    if (levelDelta !== 0) {\r\n      return levelDelta;\r\n    }\r\n    return b.length - a.length;\r\n  });\r\n  for (const localePath of localePaths) {\r\n    if (routePath.startsWith(localePath)) {\r\n      return localePath;\r\n    }\r\n  }\r\n  return \"/\";\r\n};\r\n\r\n// src/utils/resolveRoutePathFromUrl.ts\r\nvar resolveRoutePathFromUrl = (url, base = \"/\") => {\r\n  const pathname = url.replace(/^(https?:)?\\/\\/[^/]*/, \"\");\r\n  return pathname.startsWith(base) ? `/${pathname.slice(base.length)}` : pathname;\r\n};\r\nexport {\r\n  dedupeHead,\r\n  ensureEndingSlash,\r\n  ensureLeadingSlash,\r\n  formatDateString,\r\n  isArray,\r\n  isFunction,\r\n  isLinkExternal,\r\n  isLinkFtp,\r\n  isLinkHttp,\r\n  isLinkMailto,\r\n  isLinkTel,\r\n  isPlainObject,\r\n  isString,\r\n  omit,\r\n  removeEndingSlash,\r\n  removeLeadingSlash,\r\n  resolveHeadIdentifier,\r\n  resolveLocalePath,\r\n  resolveRoutePathFromUrl\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
