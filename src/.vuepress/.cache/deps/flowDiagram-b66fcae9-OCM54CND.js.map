{
  "version": 3,
  "sources": ["../../../../node_modules/dagre-d3-es/src/dagre-js/arrows.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/label/add-svg-label.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/label/add-text-label.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/label/add-label.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/create-clusters.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/create-edge-labels.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-node.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/create-edge-paths.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/create-nodes.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/position-clusters.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/position-edge-labels.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/position-nodes.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-ellipse.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-circle.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-line.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-rect.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/shapes.js", "../../../../node_modules/dagre-d3-es/src/dagre-js/render.js", "../../../../node_modules/mermaid/dist/flowDiagram-b66fcae9.js"],
  "sourcesContent": ["import * as util from './util.js';\r\n\r\nexport { arrows, setArrows };\r\n\r\nvar arrows = {\r\n  normal,\r\n  vee,\r\n  undirected,\r\n};\r\n\r\nfunction setArrows(value) {\r\n  arrows = value;\r\n}\r\n\r\nfunction normal(parent, id, edge, type) {\r\n  var marker = parent\r\n    .append('marker')\r\n    .attr('id', id)\r\n    .attr('viewBox', '0 0 10 10')\r\n    .attr('refX', 9)\r\n    .attr('refY', 5)\r\n    .attr('markerUnits', 'strokeWidth')\r\n    .attr('markerWidth', 8)\r\n    .attr('markerHeight', 6)\r\n    .attr('orient', 'auto');\r\n\r\n  var path = marker\r\n    .append('path')\r\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\r\n    .style('stroke-width', 1)\r\n    .style('stroke-dasharray', '1,0');\r\n  util.applyStyle(path, edge[type + 'Style']);\r\n  if (edge[type + 'Class']) {\r\n    path.attr('class', edge[type + 'Class']);\r\n  }\r\n}\r\n\r\nfunction vee(parent, id, edge, type) {\r\n  var marker = parent\r\n    .append('marker')\r\n    .attr('id', id)\r\n    .attr('viewBox', '0 0 10 10')\r\n    .attr('refX', 9)\r\n    .attr('refY', 5)\r\n    .attr('markerUnits', 'strokeWidth')\r\n    .attr('markerWidth', 8)\r\n    .attr('markerHeight', 6)\r\n    .attr('orient', 'auto');\r\n\r\n  var path = marker\r\n    .append('path')\r\n    .attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z')\r\n    .style('stroke-width', 1)\r\n    .style('stroke-dasharray', '1,0');\r\n  util.applyStyle(path, edge[type + 'Style']);\r\n  if (edge[type + 'Class']) {\r\n    path.attr('class', edge[type + 'Class']);\r\n  }\r\n}\r\n\r\nfunction undirected(parent, id, edge, type) {\r\n  var marker = parent\r\n    .append('marker')\r\n    .attr('id', id)\r\n    .attr('viewBox', '0 0 10 10')\r\n    .attr('refX', 9)\r\n    .attr('refY', 5)\r\n    .attr('markerUnits', 'strokeWidth')\r\n    .attr('markerWidth', 8)\r\n    .attr('markerHeight', 6)\r\n    .attr('orient', 'auto');\r\n\r\n  var path = marker\r\n    .append('path')\r\n    .attr('d', 'M 0 5 L 10 5')\r\n    .style('stroke-width', 1)\r\n    .style('stroke-dasharray', '1,0');\r\n  util.applyStyle(path, edge[type + 'Style']);\r\n  if (edge[type + 'Class']) {\r\n    path.attr('class', edge[type + 'Class']);\r\n  }\r\n}\r\n", "import * as util from '../util.js';\r\n\r\nexport { addSVGLabel };\r\n\r\nfunction addSVGLabel(root, node) {\r\n  var domNode = root;\r\n\r\n  domNode.node().appendChild(node.label);\r\n\r\n  util.applyStyle(domNode, node.labelStyle);\r\n\r\n  return domNode;\r\n}\r\n", "import * as util from '../util.js';\r\n\r\nexport { addTextLabel };\r\n\r\n/*\r\n * Attaches a text label to the specified root. Handles escape sequences.\r\n */\r\nfunction addTextLabel(root, node) {\r\n  var domNode = root.append('text');\r\n\r\n  var lines = processEscapeSequences(node.label).split('\\n');\r\n  for (var i = 0; i < lines.length; i++) {\r\n    domNode\r\n      .append('tspan')\r\n      .attr('xml:space', 'preserve')\r\n      .attr('dy', '1em')\r\n      .attr('x', '1')\r\n      .text(lines[i]);\r\n  }\r\n\r\n  util.applyStyle(domNode, node.labelStyle);\r\n\r\n  return domNode;\r\n}\r\n\r\nfunction processEscapeSequences(text) {\r\n  var newText = '';\r\n  var escaped = false;\r\n  var ch;\r\n  for (var i = 0; i < text.length; ++i) {\r\n    ch = text[i];\r\n    if (escaped) {\r\n      switch (ch) {\r\n        case 'n':\r\n          newText += '\\n';\r\n          break;\r\n        default:\r\n          newText += ch;\r\n      }\r\n      escaped = false;\r\n    } else if (ch === '\\\\') {\r\n      escaped = true;\r\n    } else {\r\n      newText += ch;\r\n    }\r\n  }\r\n  return newText;\r\n}\r\n", "import { addHtmlLabel } from './add-html-label.js';\r\nimport { addSVGLabel } from './add-svg-label.js';\r\nimport { addTextLabel } from './add-text-label.js';\r\n\r\nexport { addLabel };\r\n\r\nfunction addLabel(root, node, location) {\r\n  var label = node.label;\r\n  var labelSvg = root.append('g');\r\n\r\n  // Allow the label to be a string, a function that returns a DOM element, or\r\n  // a DOM element itself.\r\n  if (node.labelType === 'svg') {\r\n    addSVGLabel(labelSvg, node);\r\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\r\n    addHtmlLabel(labelSvg, node);\r\n  } else {\r\n    addTextLabel(labelSvg, node);\r\n  }\r\n\r\n  var labelBBox = labelSvg.node().getBBox();\r\n  var y;\r\n  switch (location) {\r\n    case 'top':\r\n      y = -node.height / 2;\r\n      break;\r\n    case 'bottom':\r\n      y = node.height / 2 - labelBBox.height;\r\n      break;\r\n    default:\r\n      y = -labelBBox.height / 2;\r\n  }\r\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\r\n\r\n  return labelSvg;\r\n}\r\n", "import * as d3 from 'd3';\r\nimport { addLabel } from './label/add-label.js';\r\nimport * as util from './util.js';\r\n\r\nexport { createClusters, setCreateClusters };\r\n\r\nvar createClusters = function (selection, g) {\r\n  var clusters = g.nodes().filter(function (v) {\r\n    return util.isSubgraph(g, v);\r\n  });\r\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\r\n    return v;\r\n  });\r\n\r\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\r\n\r\n  var enterSelection = svgClusters\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'cluster')\r\n    .attr('id', function (v) {\r\n      var node = g.node(v);\r\n      return node.id;\r\n    })\r\n    .style('opacity', 0)\r\n    .each(function (v) {\r\n      var node = g.node(v);\r\n      var thisGroup = d3.select(this);\r\n      d3.select(this).append('rect');\r\n      var labelGroup = thisGroup.append('g').attr('class', 'label');\r\n      addLabel(labelGroup, node, node.clusterLabelPos);\r\n    });\r\n\r\n  svgClusters = svgClusters.merge(enterSelection);\r\n\r\n  svgClusters = util.applyTransition(svgClusters, g).style('opacity', 1);\r\n\r\n  svgClusters.selectAll('rect').each(function (c) {\r\n    var node = g.node(c);\r\n    var domCluster = d3.select(this);\r\n    util.applyStyle(domCluster, node.style);\r\n  });\r\n\r\n  return svgClusters;\r\n};\r\n\r\nfunction setCreateClusters(value) {\r\n  createClusters = value;\r\n}\r\n", "import * as d3 from 'd3';\r\nimport * as _ from 'lodash-es';\r\nimport { addLabel } from './label/add-label.js';\r\nimport * as util from './util.js';\r\n\r\nexport { createEdgeLabels, setCreateEdgeLabels };\r\n\r\nlet createEdgeLabels = function (selection, g) {\r\n  var svgEdgeLabels = selection\r\n    .selectAll('g.edgeLabel')\r\n    .data(g.edges(), function (e) {\r\n      return util.edgeToId(e);\r\n    })\r\n    .classed('update', true);\r\n\r\n  svgEdgeLabels.exit().remove();\r\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\r\n\r\n  svgEdgeLabels = selection.selectAll('g.edgeLabel');\r\n\r\n  svgEdgeLabels.each(function (e) {\r\n    var root = d3.select(this);\r\n    root.select('.label').remove();\r\n    var edge = g.edge(e);\r\n    var label = addLabel(root, g.edge(e), 0).classed('label', true);\r\n    var bbox = label.node().getBBox();\r\n\r\n    if (edge.labelId) {\r\n      label.attr('id', edge.labelId);\r\n    }\r\n    if (!_.has(edge, 'width')) {\r\n      edge.width = bbox.width;\r\n    }\r\n    if (!_.has(edge, 'height')) {\r\n      edge.height = bbox.height;\r\n    }\r\n  });\r\n\r\n  var exitSelection;\r\n\r\n  if (svgEdgeLabels.exit) {\r\n    exitSelection = svgEdgeLabels.exit();\r\n  } else {\r\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\r\n  }\r\n\r\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\r\n\r\n  return svgEdgeLabels;\r\n};\r\n\r\nfunction setCreateEdgeLabels(value) {\r\n  createEdgeLabels = value;\r\n}\r\n", "export { intersectNode };\r\n\r\nfunction intersectNode(node, point) {\r\n  return node.intersect(point);\r\n}\r\n", "import * as d3 from 'd3';\r\nimport * as _ from 'lodash-es';\r\nimport { intersectNode } from './intersect/intersect-node.js';\r\nimport * as util from './util.js';\r\n\r\nexport { createEdgePaths, setCreateEdgePaths };\r\n\r\nvar createEdgePaths = function (selection, g, arrows) {\r\n  var previousPaths = selection\r\n    .selectAll('g.edgePath')\r\n    .data(g.edges(), function (e) {\r\n      return util.edgeToId(e);\r\n    })\r\n    .classed('update', true);\r\n\r\n  var newPaths = enter(previousPaths, g);\r\n  exit(previousPaths, g);\r\n\r\n  var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\r\n  util.applyTransition(svgPaths, g).style('opacity', 1);\r\n\r\n  // Save DOM element in the path group, and set ID and class\r\n  svgPaths.each(function (e) {\r\n    var domEdge = d3.select(this);\r\n    var edge = g.edge(e);\r\n    edge.elem = this;\r\n\r\n    if (edge.id) {\r\n      domEdge.attr('id', edge.id);\r\n    }\r\n\r\n    util.applyClass(\r\n      domEdge,\r\n      edge['class'],\r\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath'\r\n    );\r\n  });\r\n\r\n  svgPaths.selectAll('path.path').each(function (e) {\r\n    var edge = g.edge(e);\r\n    edge.arrowheadId = _.uniqueId('arrowhead');\r\n\r\n    var domEdge = d3\r\n      .select(this)\r\n      .attr('marker-end', function () {\r\n        return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\r\n      })\r\n      .style('fill', 'none');\r\n\r\n    util.applyTransition(domEdge, g).attr('d', function (e) {\r\n      return calcPoints(g, e);\r\n    });\r\n\r\n    util.applyStyle(domEdge, edge.style);\r\n  });\r\n\r\n  svgPaths.selectAll('defs *').remove();\r\n  svgPaths.selectAll('defs').each(function (e) {\r\n    var edge = g.edge(e);\r\n    var arrowhead = arrows[edge.arrowhead];\r\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\r\n  });\r\n\r\n  return svgPaths;\r\n};\r\n\r\nfunction setCreateEdgePaths(value) {\r\n  createEdgePaths = value;\r\n}\r\n\r\nfunction makeFragmentRef(url, fragmentId) {\r\n  var baseUrl = url.split('#')[0];\r\n  return baseUrl + '#' + fragmentId;\r\n}\r\n\r\nfunction calcPoints(g, e) {\r\n  var edge = g.edge(e);\r\n  var tail = g.node(e.v);\r\n  var head = g.node(e.w);\r\n  var points = edge.points.slice(1, edge.points.length - 1);\r\n  points.unshift(intersectNode(tail, points[0]));\r\n  points.push(intersectNode(head, points[points.length - 1]));\r\n\r\n  return createLine(edge, points);\r\n}\r\n\r\nfunction createLine(edge, points) {\r\n  // @ts-expect-error\r\n  var line = (d3.line || d3.svg.line)()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n\r\n  (line.curve || line.interpolate)(edge.curve);\r\n\r\n  return line(points);\r\n}\r\n\r\nfunction getCoords(elem) {\r\n  var bbox = elem.getBBox();\r\n  var matrix = elem.ownerSVGElement\r\n    .getScreenCTM()\r\n    .inverse()\r\n    .multiply(elem.getScreenCTM())\r\n    .translate(bbox.width / 2, bbox.height / 2);\r\n  return { x: matrix.e, y: matrix.f };\r\n}\r\n\r\nfunction enter(svgPaths, g) {\r\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\r\n  svgPathsEnter\r\n    .append('path')\r\n    .attr('class', 'path')\r\n    .attr('d', function (e) {\r\n      var edge = g.edge(e);\r\n      var sourceElem = g.node(e.v).elem;\r\n      var points = _.range(edge.points.length).map(function () {\r\n        return getCoords(sourceElem);\r\n      });\r\n      return createLine(edge, points);\r\n    });\r\n  svgPathsEnter.append('defs');\r\n  return svgPathsEnter;\r\n}\r\n\r\nfunction exit(svgPaths, g) {\r\n  var svgPathExit = svgPaths.exit();\r\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\r\n}\r\n", "import * as d3 from 'd3';\r\nimport * as _ from 'lodash-es';\r\nimport { addLabel } from './label/add-label.js';\r\nimport * as util from './util.js';\r\n\r\nexport { createNodes, setCreateNodes };\r\n\r\nvar createNodes = function (selection, g, shapes) {\r\n  var simpleNodes = g.nodes().filter(function (v) {\r\n    return !util.isSubgraph(g, v);\r\n  });\r\n  var svgNodes = selection\r\n    .selectAll('g.node')\r\n    .data(simpleNodes, function (v) {\r\n      return v;\r\n    })\r\n    .classed('update', true);\r\n\r\n  svgNodes.exit().remove();\r\n\r\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\r\n\r\n  svgNodes = selection.selectAll('g.node');\r\n\r\n  svgNodes.each(function (v) {\r\n    var node = g.node(v);\r\n    var thisGroup = d3.select(this);\r\n    util.applyClass(\r\n      thisGroup,\r\n      node['class'],\r\n      (thisGroup.classed('update') ? 'update ' : '') + 'node'\r\n    );\r\n\r\n    thisGroup.select('g.label').remove();\r\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\r\n    var labelDom = addLabel(labelGroup, node);\r\n    var shape = shapes[node.shape];\r\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\r\n\r\n    node.elem = this;\r\n\r\n    if (node.id) {\r\n      thisGroup.attr('id', node.id);\r\n    }\r\n    if (node.labelId) {\r\n      labelGroup.attr('id', node.labelId);\r\n    }\r\n\r\n    if (_.has(node, 'width')) {\r\n      bbox.width = node.width;\r\n    }\r\n    if (_.has(node, 'height')) {\r\n      bbox.height = node.height;\r\n    }\r\n\r\n    bbox.width += node.paddingLeft + node.paddingRight;\r\n    bbox.height += node.paddingTop + node.paddingBottom;\r\n    labelGroup.attr(\r\n      'transform',\r\n      'translate(' +\r\n        (node.paddingLeft - node.paddingRight) / 2 +\r\n        ',' +\r\n        (node.paddingTop - node.paddingBottom) / 2 +\r\n        ')'\r\n    );\r\n\r\n    var root = d3.select(this);\r\n    root.select('.label-container').remove();\r\n    var shapeSvg = shape(root, bbox, node).classed('label-container', true);\r\n    util.applyStyle(shapeSvg, node.style);\r\n\r\n    var shapeBBox = shapeSvg.node().getBBox();\r\n    node.width = shapeBBox.width;\r\n    node.height = shapeBBox.height;\r\n  });\r\n\r\n  var exitSelection;\r\n\r\n  if (svgNodes.exit) {\r\n    exitSelection = svgNodes.exit();\r\n  } else {\r\n    exitSelection = svgNodes.selectAll(null); // empty selection\r\n  }\r\n\r\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\r\n\r\n  return svgNodes;\r\n};\r\n\r\nfunction setCreateNodes(value) {\r\n  createNodes = value;\r\n}\r\n", "import * as d3 from 'd3';\r\nimport * as util from './util.js';\r\n\r\nexport { positionClusters };\r\n\r\nfunction positionClusters(selection, g) {\r\n  var created = selection.filter(function () {\r\n    return !d3.select(this).classed('update');\r\n  });\r\n\r\n  function translate(v) {\r\n    var node = g.node(v);\r\n    return 'translate(' + node.x + ',' + node.y + ')';\r\n  }\r\n\r\n  created.attr('transform', translate);\r\n\r\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\r\n\r\n  util\r\n    .applyTransition(created.selectAll('rect'), g)\r\n    .attr('width', function (v) {\r\n      return g.node(v).width;\r\n    })\r\n    .attr('height', function (v) {\r\n      return g.node(v).height;\r\n    })\r\n    .attr('x', function (v) {\r\n      var node = g.node(v);\r\n      return -node.width / 2;\r\n    })\r\n    .attr('y', function (v) {\r\n      var node = g.node(v);\r\n      return -node.height / 2;\r\n    });\r\n}\r\n", "import * as d3 from 'd3';\r\nimport * as _ from 'lodash-es';\r\nimport * as util from './util.js';\r\n\r\nexport { positionEdgeLabels };\r\n\r\nfunction positionEdgeLabels(selection, g) {\r\n  var created = selection.filter(function () {\r\n    return !d3.select(this).classed('update');\r\n  });\r\n\r\n  function translate(e) {\r\n    var edge = g.edge(e);\r\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\r\n  }\r\n\r\n  created.attr('transform', translate);\r\n\r\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\r\n}\r\n", "import * as d3 from 'd3';\r\nimport * as util from './util.js';\r\n\r\nexport { positionNodes };\r\n\r\nfunction positionNodes(selection, g) {\r\n  var created = selection.filter(function () {\r\n    return !d3.select(this).classed('update');\r\n  });\r\n\r\n  function translate(v) {\r\n    var node = g.node(v);\r\n    return 'translate(' + node.x + ',' + node.y + ')';\r\n  }\r\n\r\n  created.attr('transform', translate);\r\n\r\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\r\n}\r\n", "export { intersectEllipse };\r\n\r\nfunction intersectEllipse(node, rx, ry, point) {\r\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\r\n\r\n  var cx = node.x;\r\n  var cy = node.y;\r\n\r\n  var px = cx - point.x;\r\n  var py = cy - point.y;\r\n\r\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\r\n\r\n  var dx = Math.abs((rx * ry * px) / det);\r\n  if (point.x < cx) {\r\n    dx = -dx;\r\n  }\r\n  var dy = Math.abs((rx * ry * py) / det);\r\n  if (point.y < cy) {\r\n    dy = -dy;\r\n  }\r\n\r\n  return { x: cx + dx, y: cy + dy };\r\n}\r\n", "import { intersectEllipse } from './intersect-ellipse.js';\r\n\r\nexport { intersectCircle };\r\n\r\nfunction intersectCircle(node, rx, point) {\r\n  return intersectEllipse(node, rx, rx, point);\r\n}\r\n", "export { intersectLine };\r\n\r\n/*\r\n * Returns the point at which two lines, p and q, intersect or returns\r\n * undefined if they do not intersect.\r\n */\r\nfunction intersectLine(p1, p2, q1, q2) {\r\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\r\n  // p7 and p473.\r\n\r\n  var a1, a2, b1, b2, c1, c2;\r\n  var r1, r2, r3, r4;\r\n  var denom, offset, num;\r\n  var x, y;\r\n\r\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\r\n  // b1 y + c1 = 0.\r\n  a1 = p2.y - p1.y;\r\n  b1 = p1.x - p2.x;\r\n  c1 = p2.x * p1.y - p1.x * p2.y;\r\n\r\n  // Compute r3 and r4.\r\n  r3 = a1 * q1.x + b1 * q1.y + c1;\r\n  r4 = a1 * q2.x + b1 * q2.y + c1;\r\n\r\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\r\n  // same side of line 1, the line segments do not intersect.\r\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\r\n    return /*DONT_INTERSECT*/;\r\n  }\r\n\r\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\r\n  a2 = q2.y - q1.y;\r\n  b2 = q1.x - q2.x;\r\n  c2 = q2.x * q1.y - q1.x * q2.y;\r\n\r\n  // Compute r1 and r2\r\n  r1 = a2 * p1.x + b2 * p1.y + c2;\r\n  r2 = a2 * p2.x + b2 * p2.y + c2;\r\n\r\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\r\n  // on same side of second line segment, the line segments do\r\n  // not intersect.\r\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\r\n    return /*DONT_INTERSECT*/;\r\n  }\r\n\r\n  // Line segments intersect: compute intersection point.\r\n  denom = a1 * b2 - a2 * b1;\r\n  if (denom === 0) {\r\n    return /*COLLINEAR*/;\r\n  }\r\n\r\n  offset = Math.abs(denom / 2);\r\n\r\n  // The denom/2 is to get rounding instead of truncating. It\r\n  // is added or subtracted to the numerator, depending upon the\r\n  // sign of the numerator.\r\n  num = b1 * c2 - b2 * c1;\r\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\r\n\r\n  num = a2 * c1 - a1 * c2;\r\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\r\n\r\n  return { x: x, y: y };\r\n}\r\n\r\nfunction sameSign(r1, r2) {\r\n  return r1 * r2 > 0;\r\n}\r\n", "import { intersectLine } from './intersect-line.js';\r\n\r\nexport { intersectPolygon };\r\n\r\n/*\r\n * Returns the point ({x, y}) at which the point argument intersects with the\r\n * node argument assuming that it has the shape specified by polygon.\r\n */\r\nfunction intersectPolygon(node, polyPoints, point) {\r\n  var x1 = node.x;\r\n  var y1 = node.y;\r\n\r\n  var intersections = [];\r\n\r\n  var minX = Number.POSITIVE_INFINITY;\r\n  var minY = Number.POSITIVE_INFINITY;\r\n  polyPoints.forEach(function (entry) {\r\n    minX = Math.min(minX, entry.x);\r\n    minY = Math.min(minY, entry.y);\r\n  });\r\n\r\n  var left = x1 - node.width / 2 - minX;\r\n  var top = y1 - node.height / 2 - minY;\r\n\r\n  for (var i = 0; i < polyPoints.length; i++) {\r\n    var p1 = polyPoints[i];\r\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\r\n    var intersect = intersectLine(\r\n      node,\r\n      point,\r\n      { x: left + p1.x, y: top + p1.y },\r\n      { x: left + p2.x, y: top + p2.y }\r\n    );\r\n    if (intersect) {\r\n      intersections.push(intersect);\r\n    }\r\n  }\r\n\r\n  if (!intersections.length) {\r\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\r\n    return node;\r\n  }\r\n\r\n  if (intersections.length > 1) {\r\n    // More intersections, find the one nearest to edge end point\r\n    intersections.sort(function (p, q) {\r\n      var pdx = p.x - point.x;\r\n      var pdy = p.y - point.y;\r\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\r\n\r\n      var qdx = q.x - point.x;\r\n      var qdy = q.y - point.y;\r\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\r\n\r\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\r\n    });\r\n  }\r\n  return intersections[0];\r\n}\r\n", "export { intersectRect };\r\n\r\nfunction intersectRect(node, point) {\r\n  var x = node.x;\r\n  var y = node.y;\r\n\r\n  // Rectangle intersection algorithm from:\r\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\r\n  var dx = point.x - x;\r\n  var dy = point.y - y;\r\n  var w = node.width / 2;\r\n  var h = node.height / 2;\r\n\r\n  var sx, sy;\r\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\r\n    // Intersection is top or bottom of rect.\r\n    if (dy < 0) {\r\n      h = -h;\r\n    }\r\n    sx = dy === 0 ? 0 : (h * dx) / dy;\r\n    sy = h;\r\n  } else {\r\n    // Intersection is left or right of rect.\r\n    if (dx < 0) {\r\n      w = -w;\r\n    }\r\n    sx = w;\r\n    sy = dx === 0 ? 0 : (w * dy) / dx;\r\n  }\r\n\r\n  return { x: x + sx, y: y + sy };\r\n}\r\n", "import { intersectCircle } from './intersect/intersect-circle.js';\r\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\r\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\r\nimport { intersectRect } from './intersect/intersect-rect.js';\r\n\r\nexport { shapes, setShapes };\r\n\r\nvar shapes = {\r\n  rect,\r\n  ellipse,\r\n  circle,\r\n  diamond,\r\n};\r\n\r\nfunction setShapes(value) {\r\n  shapes = value;\r\n}\r\n\r\nfunction rect(parent, bbox, node) {\r\n  var shapeSvg = parent\r\n    .insert('rect', ':first-child')\r\n    .attr('rx', node.rx)\r\n    .attr('ry', node.ry)\r\n    .attr('x', -bbox.width / 2)\r\n    .attr('y', -bbox.height / 2)\r\n    .attr('width', bbox.width)\r\n    .attr('height', bbox.height);\r\n\r\n  node.intersect = function (point) {\r\n    return intersectRect(node, point);\r\n  };\r\n\r\n  return shapeSvg;\r\n}\r\n\r\nfunction ellipse(parent, bbox, node) {\r\n  var rx = bbox.width / 2;\r\n  var ry = bbox.height / 2;\r\n  var shapeSvg = parent\r\n    .insert('ellipse', ':first-child')\r\n    .attr('x', -bbox.width / 2)\r\n    .attr('y', -bbox.height / 2)\r\n    .attr('rx', rx)\r\n    .attr('ry', ry);\r\n\r\n  node.intersect = function (point) {\r\n    return intersectEllipse(node, rx, ry, point);\r\n  };\r\n\r\n  return shapeSvg;\r\n}\r\n\r\nfunction circle(parent, bbox, node) {\r\n  var r = Math.max(bbox.width, bbox.height) / 2;\r\n  var shapeSvg = parent\r\n    .insert('circle', ':first-child')\r\n    .attr('x', -bbox.width / 2)\r\n    .attr('y', -bbox.height / 2)\r\n    .attr('r', r);\r\n\r\n  node.intersect = function (point) {\r\n    return intersectCircle(node, r, point);\r\n  };\r\n\r\n  return shapeSvg;\r\n}\r\n\r\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\r\n// the function to calculate the diamond shape from:\r\n// http://mathforum.org/kb/message.jspa?messageID=3750236\r\nfunction diamond(parent, bbox, node) {\r\n  var w = (bbox.width * Math.SQRT2) / 2;\r\n  var h = (bbox.height * Math.SQRT2) / 2;\r\n  var points = [\r\n    { x: 0, y: -h },\r\n    { x: -w, y: 0 },\r\n    { x: 0, y: h },\r\n    { x: w, y: 0 },\r\n  ];\r\n  var shapeSvg = parent.insert('polygon', ':first-child').attr(\r\n    'points',\r\n    points\r\n      .map(function (p) {\r\n        return p.x + ',' + p.y;\r\n      })\r\n      .join(' ')\r\n  );\r\n\r\n  node.intersect = function (p) {\r\n    return intersectPolygon(node, points, p);\r\n  };\r\n\r\n  return shapeSvg;\r\n}\r\n", "import * as d3 from 'd3';\r\nimport * as _ from 'lodash-es';\r\nimport { layout } from '../dagre/index.js';\r\nimport { arrows, setArrows } from './arrows.js';\r\nimport { createClusters, setCreateClusters } from './create-clusters.js';\r\nimport { createEdgeLabels, setCreateEdgeLabels } from './create-edge-labels.js';\r\nimport { createEdgePaths, setCreateEdgePaths } from './create-edge-paths.js';\r\nimport { createNodes, setCreateNodes } from './create-nodes.js';\r\nimport { positionClusters } from './position-clusters.js';\r\nimport { positionEdgeLabels } from './position-edge-labels.js';\r\nimport { positionNodes } from './position-nodes.js';\r\nimport { shapes, setShapes } from './shapes.js';\r\n\r\nexport { render };\r\n\r\n// This design is based on http://bost.ocks.org/mike/chart/.\r\nfunction render() {\r\n  var fn = function (svg, g) {\r\n    preProcessGraph(g);\r\n\r\n    var outputGroup = createOrSelectGroup(svg, 'output');\r\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\r\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\r\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\r\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\r\n\r\n    layout(g);\r\n\r\n    positionNodes(nodes, g);\r\n    positionEdgeLabels(edgeLabels, g);\r\n    createEdgePaths(edgePathsGroup, g, arrows);\r\n\r\n    var clusters = createClusters(clustersGroup, g);\r\n    positionClusters(clusters, g);\r\n\r\n    postProcessGraph(g);\r\n  };\r\n\r\n  fn.createNodes = function (value) {\r\n    if (!arguments.length) return createNodes;\r\n    setCreateNodes(value);\r\n    return fn;\r\n  };\r\n\r\n  fn.createClusters = function (value) {\r\n    if (!arguments.length) return createClusters;\r\n    setCreateClusters(value);\r\n    return fn;\r\n  };\r\n\r\n  fn.createEdgeLabels = function (value) {\r\n    if (!arguments.length) return createEdgeLabels;\r\n    setCreateEdgeLabels(value);\r\n    return fn;\r\n  };\r\n\r\n  fn.createEdgePaths = function (value) {\r\n    if (!arguments.length) return createEdgePaths;\r\n    setCreateEdgePaths(value);\r\n    return fn;\r\n  };\r\n\r\n  fn.shapes = function (value) {\r\n    if (!arguments.length) return shapes;\r\n    setShapes(value);\r\n    return fn;\r\n  };\r\n\r\n  fn.arrows = function (value) {\r\n    if (!arguments.length) return arrows;\r\n    setArrows(value);\r\n    return fn;\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nvar NODE_DEFAULT_ATTRS = {\r\n  paddingLeft: 10,\r\n  paddingRight: 10,\r\n  paddingTop: 10,\r\n  paddingBottom: 10,\r\n  rx: 0,\r\n  ry: 0,\r\n  shape: 'rect',\r\n};\r\n\r\nvar EDGE_DEFAULT_ATTRS = {\r\n  arrowhead: 'normal',\r\n  curve: d3.curveLinear,\r\n};\r\n\r\nfunction preProcessGraph(g) {\r\n  g.nodes().forEach(function (v) {\r\n    var node = g.node(v);\r\n    if (!_.has(node, 'label') && !g.children(v).length) {\r\n      node.label = v;\r\n    }\r\n\r\n    if (_.has(node, 'paddingX')) {\r\n      _.defaults(node, {\r\n        paddingLeft: node.paddingX,\r\n        paddingRight: node.paddingX,\r\n      });\r\n    }\r\n\r\n    if (_.has(node, 'paddingY')) {\r\n      _.defaults(node, {\r\n        paddingTop: node.paddingY,\r\n        paddingBottom: node.paddingY,\r\n      });\r\n    }\r\n\r\n    if (_.has(node, 'padding')) {\r\n      _.defaults(node, {\r\n        paddingLeft: node.padding,\r\n        paddingRight: node.padding,\r\n        paddingTop: node.padding,\r\n        paddingBottom: node.padding,\r\n      });\r\n    }\r\n\r\n    _.defaults(node, NODE_DEFAULT_ATTRS);\r\n\r\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\r\n      node[k] = Number(node[k]);\r\n    });\r\n\r\n    // Save dimensions for restore during post-processing\r\n    if (_.has(node, 'width')) {\r\n      node._prevWidth = node.width;\r\n    }\r\n    if (_.has(node, 'height')) {\r\n      node._prevHeight = node.height;\r\n    }\r\n  });\r\n\r\n  g.edges().forEach(function (e) {\r\n    var edge = g.edge(e);\r\n    if (!_.has(edge, 'label')) {\r\n      edge.label = '';\r\n    }\r\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\r\n  });\r\n}\r\n\r\nfunction postProcessGraph(g) {\r\n  _.each(g.nodes(), function (v) {\r\n    var node = g.node(v);\r\n\r\n    // Restore original dimensions\r\n    if (_.has(node, '_prevWidth')) {\r\n      node.width = node._prevWidth;\r\n    } else {\r\n      delete node.width;\r\n    }\r\n\r\n    if (_.has(node, '_prevHeight')) {\r\n      node.height = node._prevHeight;\r\n    } else {\r\n      delete node.height;\r\n    }\r\n\r\n    delete node._prevWidth;\r\n    delete node._prevHeight;\r\n  });\r\n}\r\n\r\nfunction createOrSelectGroup(root, name) {\r\n  var selection = root.select('g.' + name);\r\n  if (selection.empty()) {\r\n    selection = root.append('g').attr('class', name);\r\n  }\r\n  return selection;\r\n}\r\n", "import { p as parser, f as flowDb } from \"./flowDb-9e6c6aac.js\";\r\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\r\nimport { select, curveLinear, selectAll } from \"d3\";\r\nimport { k as getStylesFromArray, n as evaluate, c as getConfig, e as common, l as log, o as interpolateToCurve, p as setupGraphViewbox } from \"./mermaid-aad43469.js\";\r\nimport { render } from \"dagre-d3-es\";\r\nimport { applyStyle } from \"dagre-d3-es/src/dagre-js/util.js\";\r\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\r\nimport { intersectPolygon } from \"dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js\";\r\nimport { intersectRect } from \"dagre-d3-es/src/dagre-js/intersect/intersect-rect.js\";\r\nimport { f as flowRendererV2, a as flowStyles } from \"./styles-7882abfe.js\";\r\nimport \"ts-dedent\";\r\nimport \"dayjs\";\r\nimport \"@braintree/sanitize-url\";\r\nimport \"dompurify\";\r\nimport \"khroma\";\r\nimport \"lodash-es/memoize.js\";\r\nimport \"stylis\";\r\nimport \"lodash-es/isEmpty.js\";\r\nimport \"./index-1e7f2254.js\";\r\nimport \"dagre-d3-es/src/dagre/index.js\";\r\nimport \"dagre-d3-es/src/graphlib/json.js\";\r\nimport \"./edges-66ea8538.js\";\r\nimport \"./createText-a49d2d2a.js\";\r\nimport \"mdast-util-from-markdown\";\r\nimport \"./svgDraw-95adee0a.js\";\r\nfunction question(parent, bbox, node) {\r\n  const w = bbox.width;\r\n  const h = bbox.height;\r\n  const s = (w + h) * 0.9;\r\n  const points = [\r\n    { x: s / 2, y: 0 },\r\n    { x: s, y: -s / 2 },\r\n    { x: s / 2, y: -s },\r\n    { x: 0, y: -s / 2 }\r\n  ];\r\n  const shapeSvg = insertPolygonShape(parent, s, s, points);\r\n  node.intersect = function(point) {\r\n    return intersectPolygon(node, points, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction hexagon(parent, bbox, node) {\r\n  const f = 4;\r\n  const h = bbox.height;\r\n  const m = h / f;\r\n  const w = bbox.width + 2 * m;\r\n  const points = [\r\n    { x: m, y: 0 },\r\n    { x: w - m, y: 0 },\r\n    { x: w, y: -h / 2 },\r\n    { x: w - m, y: -h },\r\n    { x: m, y: -h },\r\n    { x: 0, y: -h / 2 }\r\n  ];\r\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\r\n  node.intersect = function(point) {\r\n    return intersectPolygon(node, points, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction rect_left_inv_arrow(parent, bbox, node) {\r\n  const w = bbox.width;\r\n  const h = bbox.height;\r\n  const points = [\r\n    { x: -h / 2, y: 0 },\r\n    { x: w, y: 0 },\r\n    { x: w, y: -h },\r\n    { x: -h / 2, y: -h },\r\n    { x: 0, y: -h / 2 }\r\n  ];\r\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\r\n  node.intersect = function(point) {\r\n    return intersectPolygon(node, points, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction lean_right(parent, bbox, node) {\r\n  const w = bbox.width;\r\n  const h = bbox.height;\r\n  const points = [\r\n    { x: -2 * h / 6, y: 0 },\r\n    { x: w - h / 6, y: 0 },\r\n    { x: w + 2 * h / 6, y: -h },\r\n    { x: h / 6, y: -h }\r\n  ];\r\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\r\n  node.intersect = function(point) {\r\n    return intersectPolygon(node, points, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction lean_left(parent, bbox, node) {\r\n  const w = bbox.width;\r\n  const h = bbox.height;\r\n  const points = [\r\n    { x: 2 * h / 6, y: 0 },\r\n    { x: w + h / 6, y: 0 },\r\n    { x: w - 2 * h / 6, y: -h },\r\n    { x: -h / 6, y: -h }\r\n  ];\r\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\r\n  node.intersect = function(point) {\r\n    return intersectPolygon(node, points, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction trapezoid(parent, bbox, node) {\r\n  const w = bbox.width;\r\n  const h = bbox.height;\r\n  const points = [\r\n    { x: -2 * h / 6, y: 0 },\r\n    { x: w + 2 * h / 6, y: 0 },\r\n    { x: w - h / 6, y: -h },\r\n    { x: h / 6, y: -h }\r\n  ];\r\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\r\n  node.intersect = function(point) {\r\n    return intersectPolygon(node, points, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction inv_trapezoid(parent, bbox, node) {\r\n  const w = bbox.width;\r\n  const h = bbox.height;\r\n  const points = [\r\n    { x: h / 6, y: 0 },\r\n    { x: w - h / 6, y: 0 },\r\n    { x: w + 2 * h / 6, y: -h },\r\n    { x: -2 * h / 6, y: -h }\r\n  ];\r\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\r\n  node.intersect = function(point) {\r\n    return intersectPolygon(node, points, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction rect_right_inv_arrow(parent, bbox, node) {\r\n  const w = bbox.width;\r\n  const h = bbox.height;\r\n  const points = [\r\n    { x: 0, y: 0 },\r\n    { x: w + h / 2, y: 0 },\r\n    { x: w, y: -h / 2 },\r\n    { x: w + h / 2, y: -h },\r\n    { x: 0, y: -h }\r\n  ];\r\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\r\n  node.intersect = function(point) {\r\n    return intersectPolygon(node, points, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction stadium(parent, bbox, node) {\r\n  const h = bbox.height;\r\n  const w = bbox.width + h / 4;\r\n  const shapeSvg = parent.insert(\"rect\", \":first-child\").attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\r\n  node.intersect = function(point) {\r\n    return intersectRect(node, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction subroutine(parent, bbox, node) {\r\n  const w = bbox.width;\r\n  const h = bbox.height;\r\n  const points = [\r\n    { x: 0, y: 0 },\r\n    { x: w, y: 0 },\r\n    { x: w, y: -h },\r\n    { x: 0, y: -h },\r\n    { x: 0, y: 0 },\r\n    { x: -8, y: 0 },\r\n    { x: w + 8, y: 0 },\r\n    { x: w + 8, y: -h },\r\n    { x: -8, y: -h },\r\n    { x: -8, y: 0 }\r\n  ];\r\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\r\n  node.intersect = function(point) {\r\n    return intersectPolygon(node, points, point);\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction cylinder(parent, bbox, node) {\r\n  const w = bbox.width;\r\n  const rx = w / 2;\r\n  const ry = rx / (2.5 + w / 50);\r\n  const h = bbox.height + ry;\r\n  const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\r\n  const shapeSvg = parent.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\r\n  node.intersect = function(point) {\r\n    const pos = intersectRect(node, point);\r\n    const x = pos.x - node.x;\r\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\r\n      let y = ry * ry * (1 - x * x / (rx * rx));\r\n      if (y != 0) {\r\n        y = Math.sqrt(y);\r\n      }\r\n      y = ry - y;\r\n      if (point.y - node.y > 0) {\r\n        y = -y;\r\n      }\r\n      pos.y += y;\r\n    }\r\n    return pos;\r\n  };\r\n  return shapeSvg;\r\n}\r\nfunction addToRender(render2) {\r\n  render2.shapes().question = question;\r\n  render2.shapes().hexagon = hexagon;\r\n  render2.shapes().stadium = stadium;\r\n  render2.shapes().subroutine = subroutine;\r\n  render2.shapes().cylinder = cylinder;\r\n  render2.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\r\n  render2.shapes().lean_right = lean_right;\r\n  render2.shapes().lean_left = lean_left;\r\n  render2.shapes().trapezoid = trapezoid;\r\n  render2.shapes().inv_trapezoid = inv_trapezoid;\r\n  render2.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\r\n}\r\nfunction addToRenderV2(addShape) {\r\n  addShape({ question });\r\n  addShape({ hexagon });\r\n  addShape({ stadium });\r\n  addShape({ subroutine });\r\n  addShape({ cylinder });\r\n  addShape({ rect_left_inv_arrow });\r\n  addShape({ lean_right });\r\n  addShape({ lean_left });\r\n  addShape({ trapezoid });\r\n  addShape({ inv_trapezoid });\r\n  addShape({ rect_right_inv_arrow });\r\n}\r\nfunction insertPolygonShape(parent, w, h, points) {\r\n  return parent.insert(\"polygon\", \":first-child\").attr(\r\n    \"points\",\r\n    points.map(function(d) {\r\n      return d.x + \",\" + d.y;\r\n    }).join(\" \")\r\n  ).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\r\n}\r\nconst flowChartShapes = {\r\n  addToRender,\r\n  addToRenderV2\r\n};\r\nconst conf = {};\r\nconst setConf = function(cnf) {\r\n  const keys = Object.keys(cnf);\r\n  for (const key of keys) {\r\n    conf[key] = cnf[key];\r\n  }\r\n};\r\nconst addVertices = function(vert, g, svgId, root, _doc, diagObj) {\r\n  const svg = !root ? select(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\r\n  const doc = !_doc ? document : _doc;\r\n  const keys = Object.keys(vert);\r\n  keys.forEach(function(id) {\r\n    const vertex = vert[id];\r\n    let classStr = \"default\";\r\n    if (vertex.classes.length > 0) {\r\n      classStr = vertex.classes.join(\" \");\r\n    }\r\n    const styles = getStylesFromArray(vertex.styles);\r\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\r\n    let vertexNode;\r\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n      const node = {\r\n        label: vertexText.replace(\r\n          /fa[blrs]?:fa-[\\w-]+/g,\r\n          (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\r\n        )\r\n      };\r\n      vertexNode = addHtmlLabel(svg, node).node();\r\n      vertexNode.parentNode.removeChild(vertexNode);\r\n    } else {\r\n      const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\r\n      svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\r\n      const rows = vertexText.split(common.lineBreakRegex);\r\n      for (const row of rows) {\r\n        const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\r\n        tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\r\n        tspan.setAttribute(\"dy\", \"1em\");\r\n        tspan.setAttribute(\"x\", \"1\");\r\n        tspan.textContent = row;\r\n        svgLabel.appendChild(tspan);\r\n      }\r\n      vertexNode = svgLabel;\r\n    }\r\n    let radious = 0;\r\n    let _shape = \"\";\r\n    switch (vertex.type) {\r\n      case \"round\":\r\n        radious = 5;\r\n        _shape = \"rect\";\r\n        break;\r\n      case \"square\":\r\n        _shape = \"rect\";\r\n        break;\r\n      case \"diamond\":\r\n        _shape = \"question\";\r\n        break;\r\n      case \"hexagon\":\r\n        _shape = \"hexagon\";\r\n        break;\r\n      case \"odd\":\r\n        _shape = \"rect_left_inv_arrow\";\r\n        break;\r\n      case \"lean_right\":\r\n        _shape = \"lean_right\";\r\n        break;\r\n      case \"lean_left\":\r\n        _shape = \"lean_left\";\r\n        break;\r\n      case \"trapezoid\":\r\n        _shape = \"trapezoid\";\r\n        break;\r\n      case \"inv_trapezoid\":\r\n        _shape = \"inv_trapezoid\";\r\n        break;\r\n      case \"odd_right\":\r\n        _shape = \"rect_left_inv_arrow\";\r\n        break;\r\n      case \"circle\":\r\n        _shape = \"circle\";\r\n        break;\r\n      case \"ellipse\":\r\n        _shape = \"ellipse\";\r\n        break;\r\n      case \"stadium\":\r\n        _shape = \"stadium\";\r\n        break;\r\n      case \"subroutine\":\r\n        _shape = \"subroutine\";\r\n        break;\r\n      case \"cylinder\":\r\n        _shape = \"cylinder\";\r\n        break;\r\n      case \"group\":\r\n        _shape = \"rect\";\r\n        break;\r\n      default:\r\n        _shape = \"rect\";\r\n    }\r\n    log.warn(\"Adding node\", vertex.id, vertex.domId);\r\n    g.setNode(diagObj.db.lookUpDomId(vertex.id), {\r\n      labelType: \"svg\",\r\n      labelStyle: styles.labelStyle,\r\n      shape: _shape,\r\n      label: vertexNode,\r\n      rx: radious,\r\n      ry: radious,\r\n      class: classStr,\r\n      style: styles.style,\r\n      id: diagObj.db.lookUpDomId(vertex.id)\r\n    });\r\n  });\r\n};\r\nconst addEdges = function(edges, g, diagObj) {\r\n  let cnt = 0;\r\n  let defaultStyle;\r\n  let defaultLabelStyle;\r\n  if (edges.defaultStyle !== void 0) {\r\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\r\n    defaultStyle = defaultStyles.style;\r\n    defaultLabelStyle = defaultStyles.labelStyle;\r\n  }\r\n  edges.forEach(function(edge) {\r\n    cnt++;\r\n    const linkId = \"L-\" + edge.start + \"-\" + edge.end;\r\n    const linkNameStart = \"LS-\" + edge.start;\r\n    const linkNameEnd = \"LE-\" + edge.end;\r\n    const edgeData = {};\r\n    if (edge.type === \"arrow_open\") {\r\n      edgeData.arrowhead = \"none\";\r\n    } else {\r\n      edgeData.arrowhead = \"normal\";\r\n    }\r\n    let style = \"\";\r\n    let labelStyle = \"\";\r\n    if (edge.style !== void 0) {\r\n      const styles = getStylesFromArray(edge.style);\r\n      style = styles.style;\r\n      labelStyle = styles.labelStyle;\r\n    } else {\r\n      switch (edge.stroke) {\r\n        case \"normal\":\r\n          style = \"fill:none\";\r\n          if (defaultStyle !== void 0) {\r\n            style = defaultStyle;\r\n          }\r\n          if (defaultLabelStyle !== void 0) {\r\n            labelStyle = defaultLabelStyle;\r\n          }\r\n          break;\r\n        case \"dotted\":\r\n          style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\r\n          break;\r\n        case \"thick\":\r\n          style = \" stroke-width: 3.5px;fill:none\";\r\n          break;\r\n      }\r\n    }\r\n    edgeData.style = style;\r\n    edgeData.labelStyle = labelStyle;\r\n    if (edge.interpolate !== void 0) {\r\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\r\n    } else if (edges.defaultInterpolate !== void 0) {\r\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\r\n    } else {\r\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\r\n    }\r\n    if (edge.text === void 0) {\r\n      if (edge.style !== void 0) {\r\n        edgeData.arrowheadStyle = \"fill: #333\";\r\n      }\r\n    } else {\r\n      edgeData.arrowheadStyle = \"fill: #333\";\r\n      edgeData.labelpos = \"c\";\r\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\r\n        edgeData.labelType = \"html\";\r\n        edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${edgeData.labelStyle}\">${edge.text.replace(\r\n          /fa[blrs]?:fa-[\\w-]+/g,\r\n          (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\r\n        )}</span>`;\r\n      } else {\r\n        edgeData.labelType = \"text\";\r\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\r\n        if (edge.style === void 0) {\r\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\r\n        }\r\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\r\n      }\r\n    }\r\n    edgeData.id = linkId;\r\n    edgeData.class = linkNameStart + \" \" + linkNameEnd;\r\n    edgeData.minlen = edge.length || 1;\r\n    g.setEdge(diagObj.db.lookUpDomId(edge.start), diagObj.db.lookUpDomId(edge.end), edgeData, cnt);\r\n  });\r\n};\r\nconst getClasses = function(text, diagObj) {\r\n  log.info(\"Extracting classes\");\r\n  diagObj.db.clear();\r\n  try {\r\n    diagObj.parse(text);\r\n    return diagObj.db.getClasses();\r\n  } catch (e) {\r\n    log.error(e);\r\n    return {};\r\n  }\r\n};\r\nconst draw = function(text, id, _version, diagObj) {\r\n  log.info(\"Drawing flowchart\");\r\n  diagObj.db.clear();\r\n  const { securityLevel, flowchart: conf2 } = getConfig();\r\n  let sandboxElement;\r\n  if (securityLevel === \"sandbox\") {\r\n    sandboxElement = select(\"#i\" + id);\r\n  }\r\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\r\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\r\n  try {\r\n    diagObj.parser.parse(text);\r\n  } catch (err) {\r\n    log.debug(\"Parsing failed\");\r\n  }\r\n  let dir = diagObj.db.getDirection();\r\n  if (dir === void 0) {\r\n    dir = \"TD\";\r\n  }\r\n  const nodeSpacing = conf2.nodeSpacing || 50;\r\n  const rankSpacing = conf2.rankSpacing || 50;\r\n  const g = new graphlib.Graph({\r\n    multigraph: true,\r\n    compound: true\r\n  }).setGraph({\r\n    rankdir: dir,\r\n    nodesep: nodeSpacing,\r\n    ranksep: rankSpacing,\r\n    marginx: 8,\r\n    marginy: 8\r\n  }).setDefaultEdgeLabel(function() {\r\n    return {};\r\n  });\r\n  let subG;\r\n  const subGraphs = diagObj.db.getSubGraphs();\r\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\r\n    subG = subGraphs[i2];\r\n    diagObj.db.addVertex(subG.id, subG.title, \"group\", void 0, subG.classes);\r\n  }\r\n  const vert = diagObj.db.getVertices();\r\n  log.warn(\"Get vertices\", vert);\r\n  const edges = diagObj.db.getEdges();\r\n  let i = 0;\r\n  for (i = subGraphs.length - 1; i >= 0; i--) {\r\n    subG = subGraphs[i];\r\n    selectAll(\"cluster\").append(\"text\");\r\n    for (let j = 0; j < subG.nodes.length; j++) {\r\n      log.warn(\r\n        \"Setting subgraph\",\r\n        subG.nodes[j],\r\n        diagObj.db.lookUpDomId(subG.nodes[j]),\r\n        diagObj.db.lookUpDomId(subG.id)\r\n      );\r\n      g.setParent(diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\r\n    }\r\n  }\r\n  addVertices(vert, g, id, root, doc, diagObj);\r\n  addEdges(edges, g, diagObj);\r\n  const render$1 = new render();\r\n  flowChartShapes.addToRender(render$1);\r\n  render$1.arrows().none = function normal(parent, id2, edge, type) {\r\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\r\n    const path = marker.append(\"path\").attr(\"d\", \"M 0 0 L 0 0 L 0 0 z\");\r\n    applyStyle(path, edge[type + \"Style\"]);\r\n  };\r\n  render$1.arrows().normal = function normal(parent, id2) {\r\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\r\n    marker.append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"class\", \"arrowheadPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\r\n  };\r\n  const svg = root.select(`[id=\"${id}\"]`);\r\n  const element = root.select(\"#\" + id + \" g\");\r\n  render$1(element, g);\r\n  element.selectAll(\"g.node\").attr(\"title\", function() {\r\n    return diagObj.db.getTooltip(this.id);\r\n  });\r\n  diagObj.db.indexNodes(\"subGraph\" + i);\r\n  for (i = 0; i < subGraphs.length; i++) {\r\n    subG = subGraphs[i];\r\n    if (subG.title !== \"undefined\") {\r\n      const clusterRects = doc.querySelectorAll(\r\n        \"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"] rect'\r\n      );\r\n      const clusterEl = doc.querySelectorAll(\r\n        \"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"]'\r\n      );\r\n      const xPos = clusterRects[0].x.baseVal.value;\r\n      const yPos = clusterRects[0].y.baseVal.value;\r\n      const _width = clusterRects[0].width.baseVal.value;\r\n      const cluster = select(clusterEl[0]);\r\n      const te = cluster.select(\".label\");\r\n      te.attr(\"transform\", `translate(${xPos + _width / 2}, ${yPos + 14})`);\r\n      te.attr(\"id\", id + \"Text\");\r\n      for (let j = 0; j < subG.classes.length; j++) {\r\n        clusterEl[0].classList.add(subG.classes[j]);\r\n      }\r\n    }\r\n  }\r\n  if (!conf2.htmlLabels) {\r\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\r\n    for (const label of labels) {\r\n      const dim = label.getBBox();\r\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n      rect.setAttribute(\"rx\", 0);\r\n      rect.setAttribute(\"ry\", 0);\r\n      rect.setAttribute(\"width\", dim.width);\r\n      rect.setAttribute(\"height\", dim.height);\r\n      label.insertBefore(rect, label.firstChild);\r\n    }\r\n  }\r\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\r\n  const keys = Object.keys(vert);\r\n  keys.forEach(function(key) {\r\n    const vertex = vert[key];\r\n    if (vertex.link) {\r\n      const node = root.select(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(key) + '\"]');\r\n      if (node) {\r\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\r\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\r\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\r\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\r\n        if (securityLevel === \"sandbox\") {\r\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\r\n        } else if (vertex.linkTarget) {\r\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\r\n        }\r\n        const linkNode = node.insert(function() {\r\n          return link;\r\n        }, \":first-child\");\r\n        const shape = node.select(\".label-container\");\r\n        if (shape) {\r\n          linkNode.append(function() {\r\n            return shape.node();\r\n          });\r\n        }\r\n        const label = node.select(\".label\");\r\n        if (label) {\r\n          linkNode.append(function() {\r\n            return label.node();\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\nconst flowRenderer = {\r\n  setConf,\r\n  addVertices,\r\n  addEdges,\r\n  getClasses,\r\n  draw\r\n};\r\nconst diagram = {\r\n  parser,\r\n  db: flowDb,\r\n  renderer: flowRendererV2,\r\n  styles: flowStyles,\r\n  init: (cnf) => {\r\n    if (!cnf.flowchart) {\r\n      cnf.flowchart = {};\r\n    }\r\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\r\n    flowRenderer.setConf(cnf.flowchart);\r\n    flowDb.clear();\r\n    flowDb.setGen(\"gen-1\");\r\n  }\r\n};\r\nexport {\r\n  diagram\r\n};\r\n"],
  "mappings": "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",
  "names": ["location", "arrows", "e", "shapes", "svg", "svg", "normal", "rect"]
}
