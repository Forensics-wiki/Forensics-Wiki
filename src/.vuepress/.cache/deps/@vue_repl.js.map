{
  "version": 3,
  "sources": ["../../../../node_modules/@vue/compiler-sfc/dist/compiler-sfc.esm-browser.js", "../../../../node_modules/vue/compiler-sfc/index.mjs", "../../../../node_modules/vue/compiler-sfc/register-ts.js", "../../../../node_modules/@vue/repl/dist/chunks/_commonjsHelpers-24198af3.js", "../../../../node_modules/@vue/repl/dist/chunks/utils-a5e1dbae.js", "../../../../node_modules/@vue/repl/dist/vue-repl.js"],
  "sourcesContent": ["function makeMap(str, expectsLowerCase) {\r\n  const map = /* @__PURE__ */ Object.create(null);\r\n  const list = str.split(\",\");\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true;\r\n  }\r\n  return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\r\n}\r\n\r\nconst EMPTY_OBJ = Object.freeze({}) ;\r\nconst NOOP = () => {\r\n};\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst extend = Object.assign;\r\nconst hasOwnProperty$3 = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty$3.call(val, key);\r\nconst isArray$3 = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\r\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\r\nconst isFunction$1 = (val) => typeof val === \"function\";\r\nconst isString$2 = (val) => typeof val === \"string\";\r\nconst isSymbol$1 = (val) => typeof val === \"symbol\";\r\nconst isObject$2 = (val) => val !== null && typeof val === \"object\";\r\nconst objectToString$1 = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString$1.call(value);\r\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\r\nconst isReservedProp = /* @__PURE__ */ makeMap(\r\n  // the leading comma is intentional so empty string \"\" is also included\r\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\r\n);\r\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\r\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\r\n);\r\nconst cacheStringFunction = (fn) => {\r\n  const cache = /* @__PURE__ */ Object.create(null);\r\n  return (str) => {\r\n    const hit = cache[str];\r\n    return hit || (cache[str] = fn(str));\r\n  };\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\nconst camelize = cacheStringFunction((str) => {\r\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nconst hyphenate = cacheStringFunction(\r\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\r\n);\r\nconst capitalize$1 = cacheStringFunction(\r\n  (str) => str.charAt(0).toUpperCase() + str.slice(1)\r\n);\r\nconst toHandlerKey = cacheStringFunction(\r\n  (str) => str ? `on${capitalize$1(str)}` : ``\r\n);\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\r\nfunction genPropsAccessExp(name) {\r\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\r\n}\r\n\r\nconst PatchFlagNames = {\r\n  [1]: `TEXT`,\r\n  [2]: `CLASS`,\r\n  [4]: `STYLE`,\r\n  [8]: `PROPS`,\r\n  [16]: `FULL_PROPS`,\r\n  [32]: `HYDRATE_EVENTS`,\r\n  [64]: `STABLE_FRAGMENT`,\r\n  [128]: `KEYED_FRAGMENT`,\r\n  [256]: `UNKEYED_FRAGMENT`,\r\n  [512]: `NEED_PATCH`,\r\n  [1024]: `DYNAMIC_SLOTS`,\r\n  [2048]: `DEV_ROOT_FRAGMENT`,\r\n  [-1]: `HOISTED`,\r\n  [-2]: `BAIL`\r\n};\r\n\r\nconst slotFlagsText = {\r\n  [1]: \"STABLE\",\r\n  [2]: \"DYNAMIC\",\r\n  [3]: \"FORWARDED\"\r\n};\r\n\r\nconst GLOBALS_WHITE_LISTED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console\";\r\nconst isGloballyWhitelisted = /* @__PURE__ */ makeMap(GLOBALS_WHITE_LISTED);\r\n\r\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n  let lines = source.split(/(\\r?\\n)/);\r\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n  lines = lines.filter((_, idx) => idx % 2 === 0);\r\n  let count = 0;\r\n  const res = [];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\r\n    if (count >= start) {\r\n      for (let j = i - range; j <= i + range || end > count; j++) {\r\n        if (j < 0 || j >= lines.length)\r\n          continue;\r\n        const line = j + 1;\r\n        res.push(\r\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\r\n        );\r\n        const lineLength = lines[j].length;\r\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\r\n        if (j === i) {\r\n          const pad = start - (count - (lineLength + newLineSeqLength));\r\n          const length = Math.max(\r\n            1,\r\n            end > count ? lineLength - pad : end - start\r\n          );\r\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\r\n        } else if (j > i) {\r\n          if (end > count) {\r\n            const length = Math.max(Math.min(end - count, lineLength), 1);\r\n            res.push(`   |  ` + \"^\".repeat(length));\r\n          }\r\n          count += lineLength + newLineSeqLength;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  return res.join(\"\\n\");\r\n}\r\n\r\nfunction normalizeStyle(value) {\r\n  if (isArray$3(value)) {\r\n    const res = {};\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i];\r\n      const normalized = isString$2(item) ? parseStringStyle(item) : normalizeStyle(item);\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key];\r\n        }\r\n      }\r\n    }\r\n    return res;\r\n  } else if (isString$2(value)) {\r\n    return value;\r\n  } else if (isObject$2(value)) {\r\n    return value;\r\n  }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:([^]+)/;\r\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\r\nfunction parseStringStyle(cssText) {\r\n  const ret = {};\r\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\r\n    if (item) {\r\n      const tmp = item.split(propertyDelimiterRE);\r\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n    }\r\n  });\r\n  return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n  let ret = \"\";\r\n  if (!styles || isString$2(styles)) {\r\n    return ret;\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key];\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n    if (isString$2(value) || typeof value === \"number\") {\r\n      ret += `${normalizedKey}:${value};`;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n  let res = \"\";\r\n  if (isString$2(value)) {\r\n    res = value;\r\n  } else if (isArray$3(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const normalized = normalizeClass(value[i]);\r\n      if (normalized) {\r\n        res += normalized + \" \";\r\n      }\r\n    }\r\n  } else if (isObject$2(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + \" \";\r\n      }\r\n    }\r\n  }\r\n  return res.trim();\r\n}\r\n\r\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\r\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\r\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\r\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\r\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\r\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\r\n\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\r\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\r\n);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name];\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name);\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`);\r\n  }\r\n  return attrValidationCache[name] = !isUnsafe;\r\n}\r\nconst propsToAttrMap = {\r\n  acceptCharset: \"accept-charset\",\r\n  className: \"class\",\r\n  htmlFor: \"for\",\r\n  httpEquiv: \"http-equiv\"\r\n};\r\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\r\n);\r\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\r\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\r\n);\r\n\r\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n  const str = \"\" + string;\r\n  const match = escapeRE.exec(str);\r\n  if (!match) {\r\n    return str;\r\n  }\r\n  let html = \"\";\r\n  let escaped;\r\n  let index;\r\n  let lastIndex = 0;\r\n  for (index = match.index; index < str.length; index++) {\r\n    switch (str.charCodeAt(index)) {\r\n      case 34:\r\n        escaped = \"&quot;\";\r\n        break;\r\n      case 38:\r\n        escaped = \"&amp;\";\r\n        break;\r\n      case 39:\r\n        escaped = \"&#39;\";\r\n        break;\r\n      case 60:\r\n        escaped = \"&lt;\";\r\n        break;\r\n      case 62:\r\n        escaped = \"&gt;\";\r\n        break;\r\n      default:\r\n        continue;\r\n    }\r\n    if (lastIndex !== index) {\r\n      html += str.slice(lastIndex, index);\r\n    }\r\n    lastIndex = index + 1;\r\n    html += escaped;\r\n  }\r\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\r\n}\r\n\r\nconst toDisplayString = (val) => {\r\n  return isString$2(val) ? val : val == null ? \"\" : isArray$3(val) || isObject$2(val) && (val.toString === objectToString$1 || !isFunction$1(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n  if (val && val.__v_isRef) {\r\n    return replacer(_key, val.value);\r\n  } else if (isMap(val)) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val2]) => {\r\n        entries[`${key} =>`] = val2;\r\n        return entries;\r\n      }, {})\r\n    };\r\n  } else if (isSet(val)) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()]\r\n    };\r\n  } else if (isObject$2(val) && !isArray$3(val) && !isPlainObject(val)) {\r\n    return String(val);\r\n  }\r\n  return val;\r\n};\r\n\r\nfunction defaultOnError(error) {\r\n  throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n  console.warn(`[Vue warn] ${msg.message}`);\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``) ;\r\n  const error = new SyntaxError(String(msg));\r\n  error.code = code;\r\n  error.loc = loc;\r\n  return error;\r\n}\r\nconst errorMessages = {\r\n  // parse errors\r\n  [0]: \"Illegal comment.\",\r\n  [1]: \"CDATA section is allowed only in XML context.\",\r\n  [2]: \"Duplicate attribute.\",\r\n  [3]: \"End tag cannot have attributes.\",\r\n  [4]: \"Illegal '/' in tags.\",\r\n  [5]: \"Unexpected EOF in tag.\",\r\n  [6]: \"Unexpected EOF in CDATA section.\",\r\n  [7]: \"Unexpected EOF in comment.\",\r\n  [8]: \"Unexpected EOF in script.\",\r\n  [9]: \"Unexpected EOF in tag.\",\r\n  [10]: \"Incorrectly closed comment.\",\r\n  [11]: \"Incorrectly opened comment.\",\r\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n  [13]: \"Attribute value was expected.\",\r\n  [14]: \"End tag name was expected.\",\r\n  [15]: \"Whitespace was expected.\",\r\n  [16]: \"Unexpected '<!--' in comment.\",\r\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\r\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\r\n  [19]: \"Attribute name cannot start with '='.\",\r\n  [21]: \"'<?' is allowed only in XML context.\",\r\n  [20]: `Unexpected null character.`,\r\n  [22]: \"Illegal '/' in tags.\",\r\n  // Vue-specific parse errors\r\n  [23]: \"Invalid end tag.\",\r\n  [24]: \"Element is missing end tag.\",\r\n  [25]: \"Interpolation end sign was not found.\",\r\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\r\n  [26]: \"Legal directive name was expected.\",\r\n  // transform errors\r\n  [28]: `v-if/v-else-if is missing expression.`,\r\n  [29]: `v-if/else branches must use unique keys.`,\r\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n  [31]: `v-for is missing expression.`,\r\n  [32]: `v-for has invalid expression.`,\r\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\r\n  [34]: `v-bind is missing expression.`,\r\n  [35]: `v-on is missing expression.`,\r\n  [36]: `Unexpected custom directive on <slot> outlet.`,\r\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\r\n  [38]: `Duplicate slot names found. `,\r\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\r\n  [40]: `v-slot can only be used on components or <template> tags.`,\r\n  [41]: `v-model is missing expression.`,\r\n  [42]: `v-model value must be a valid JavaScript member expression.`,\r\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\r\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\r\n  [45]: `Error parsing JavaScript expression: `,\r\n  [46]: `<KeepAlive> expects exactly one child component.`,\r\n  // generic errors\r\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n  [48]: `ES module mode is not supported in this build of compiler.`,\r\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n  [50]: `\"scopeId\" option is only supported in module mode.`,\r\n  // deprecations\r\n  [51]: `@vnode-* hooks in templates are deprecated. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support will be removed in 3.4.`,\r\n  [52]: `v-is=\"component-name\" has been deprecated. Use is=\"vue:component-name\" instead. v-is support will be removed in 3.4.`,\r\n  // just to fulfill types\r\n  [53]: ``\r\n};\r\n\r\nconst FRAGMENT = Symbol(`Fragment` );\r\nconst TELEPORT = Symbol(`Teleport` );\r\nconst SUSPENSE = Symbol(`Suspense` );\r\nconst KEEP_ALIVE = Symbol(`KeepAlive` );\r\nconst BASE_TRANSITION = Symbol(`BaseTransition` );\r\nconst OPEN_BLOCK = Symbol(`openBlock` );\r\nconst CREATE_BLOCK = Symbol(`createBlock` );\r\nconst CREATE_ELEMENT_BLOCK = Symbol(`createElementBlock` );\r\nconst CREATE_VNODE = Symbol(`createVNode` );\r\nconst CREATE_ELEMENT_VNODE = Symbol(`createElementVNode` );\r\nconst CREATE_COMMENT = Symbol(`createCommentVNode` );\r\nconst CREATE_TEXT = Symbol(`createTextVNode` );\r\nconst CREATE_STATIC = Symbol(`createStaticVNode` );\r\nconst RESOLVE_COMPONENT = Symbol(`resolveComponent` );\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\r\n  `resolveDynamicComponent` \r\n);\r\nconst RESOLVE_DIRECTIVE = Symbol(`resolveDirective` );\r\nconst RESOLVE_FILTER = Symbol(`resolveFilter` );\r\nconst WITH_DIRECTIVES = Symbol(`withDirectives` );\r\nconst RENDER_LIST = Symbol(`renderList` );\r\nconst RENDER_SLOT = Symbol(`renderSlot` );\r\nconst CREATE_SLOTS = Symbol(`createSlots` );\r\nconst TO_DISPLAY_STRING = Symbol(`toDisplayString` );\r\nconst MERGE_PROPS = Symbol(`mergeProps` );\r\nconst NORMALIZE_CLASS = Symbol(`normalizeClass` );\r\nconst NORMALIZE_STYLE = Symbol(`normalizeStyle` );\r\nconst NORMALIZE_PROPS = Symbol(`normalizeProps` );\r\nconst GUARD_REACTIVE_PROPS = Symbol(`guardReactiveProps` );\r\nconst TO_HANDLERS = Symbol(`toHandlers` );\r\nconst CAMELIZE = Symbol(`camelize` );\r\nconst CAPITALIZE = Symbol(`capitalize` );\r\nconst TO_HANDLER_KEY = Symbol(`toHandlerKey` );\r\nconst SET_BLOCK_TRACKING = Symbol(`setBlockTracking` );\r\nconst PUSH_SCOPE_ID = Symbol(`pushScopeId` );\r\nconst POP_SCOPE_ID = Symbol(`popScopeId` );\r\nconst WITH_CTX = Symbol(`withCtx` );\r\nconst UNREF = Symbol(`unref` );\r\nconst IS_REF = Symbol(`isRef` );\r\nconst WITH_MEMO = Symbol(`withMemo` );\r\nconst IS_MEMO_SAME = Symbol(`isMemoSame` );\r\nconst helperNameMap = {\r\n  [FRAGMENT]: `Fragment`,\r\n  [TELEPORT]: `Teleport`,\r\n  [SUSPENSE]: `Suspense`,\r\n  [KEEP_ALIVE]: `KeepAlive`,\r\n  [BASE_TRANSITION]: `BaseTransition`,\r\n  [OPEN_BLOCK]: `openBlock`,\r\n  [CREATE_BLOCK]: `createBlock`,\r\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n  [CREATE_VNODE]: `createVNode`,\r\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n  [CREATE_COMMENT]: `createCommentVNode`,\r\n  [CREATE_TEXT]: `createTextVNode`,\r\n  [CREATE_STATIC]: `createStaticVNode`,\r\n  [RESOLVE_COMPONENT]: `resolveComponent`,\r\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n  [RESOLVE_FILTER]: `resolveFilter`,\r\n  [WITH_DIRECTIVES]: `withDirectives`,\r\n  [RENDER_LIST]: `renderList`,\r\n  [RENDER_SLOT]: `renderSlot`,\r\n  [CREATE_SLOTS]: `createSlots`,\r\n  [TO_DISPLAY_STRING]: `toDisplayString`,\r\n  [MERGE_PROPS]: `mergeProps`,\r\n  [NORMALIZE_CLASS]: `normalizeClass`,\r\n  [NORMALIZE_STYLE]: `normalizeStyle`,\r\n  [NORMALIZE_PROPS]: `normalizeProps`,\r\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n  [TO_HANDLERS]: `toHandlers`,\r\n  [CAMELIZE]: `camelize`,\r\n  [CAPITALIZE]: `capitalize`,\r\n  [TO_HANDLER_KEY]: `toHandlerKey`,\r\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n  [PUSH_SCOPE_ID]: `pushScopeId`,\r\n  [POP_SCOPE_ID]: `popScopeId`,\r\n  [WITH_CTX]: `withCtx`,\r\n  [UNREF]: `unref`,\r\n  [IS_REF]: `isRef`,\r\n  [WITH_MEMO]: `withMemo`,\r\n  [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\r\n    helperNameMap[s] = helpers[s];\r\n  });\r\n}\r\n\r\nconst locStub = {\r\n  source: \"\",\r\n  start: { line: 1, column: 1, offset: 0 },\r\n  end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n  return {\r\n    type: 0,\r\n    children,\r\n    helpers: /* @__PURE__ */ new Set(),\r\n    components: [],\r\n    directives: [],\r\n    hoists: [],\r\n    imports: [],\r\n    cached: 0,\r\n    temps: 0,\r\n    codegenNode: void 0,\r\n    loc\r\n  };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n  if (context) {\r\n    if (isBlock) {\r\n      context.helper(OPEN_BLOCK);\r\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n    } else {\r\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n    }\r\n    if (directives) {\r\n      context.helper(WITH_DIRECTIVES);\r\n    }\r\n  }\r\n  return {\r\n    type: 13,\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent,\r\n    loc\r\n  };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n  return {\r\n    type: 17,\r\n    loc,\r\n    elements\r\n  };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n  return {\r\n    type: 15,\r\n    loc,\r\n    properties\r\n  };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n  return {\r\n    type: 16,\r\n    loc: locStub,\r\n    key: isString$2(key) ? createSimpleExpression(key, true) : key,\r\n    value\r\n  };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\r\n  return {\r\n    type: 4,\r\n    loc,\r\n    content,\r\n    isStatic,\r\n    constType: isStatic ? 3 : constType\r\n  };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n  return {\r\n    type: 5,\r\n    loc,\r\n    content: isString$2(content) ? createSimpleExpression(content, false, loc) : content\r\n  };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n  return {\r\n    type: 8,\r\n    loc,\r\n    children\r\n  };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n  return {\r\n    type: 14,\r\n    loc,\r\n    callee,\r\n    arguments: args\r\n  };\r\n}\r\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\r\n  return {\r\n    type: 18,\r\n    params,\r\n    returns,\r\n    newline,\r\n    isSlot,\r\n    loc\r\n  };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n  return {\r\n    type: 19,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    newline,\r\n    loc: locStub\r\n  };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n  return {\r\n    type: 20,\r\n    index,\r\n    value,\r\n    isVNode,\r\n    loc: locStub\r\n  };\r\n}\r\nfunction createBlockStatement(body) {\r\n  return {\r\n    type: 21,\r\n    body,\r\n    loc: locStub\r\n  };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n  return {\r\n    type: 22,\r\n    elements,\r\n    loc: locStub\r\n  };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n  return {\r\n    type: 23,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    loc: locStub\r\n  };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n  return {\r\n    type: 24,\r\n    left,\r\n    right,\r\n    loc: locStub\r\n  };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n  return {\r\n    type: 25,\r\n    expressions,\r\n    loc: locStub\r\n  };\r\n}\r\nfunction createReturnStatement(returns) {\r\n  return {\r\n    type: 26,\r\n    returns,\r\n    loc: locStub\r\n  };\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\r\n  if (!node.isBlock) {\r\n    node.isBlock = true;\r\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n    helper(OPEN_BLOCK);\r\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n  }\r\n}\r\n\r\nfunction getDefaultExportFromCjs (x) {\r\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\r\n}\r\n\r\nfunction getAugmentedNamespace(n) {\r\n  if (n.__esModule) return n;\r\n  var f = n.default;\r\n\tif (typeof f == \"function\") {\r\n\t\tvar a = function a () {\r\n\t\t\tif (this instanceof a) {\r\n\t\t\t\tvar args = [null];\r\n\t\t\t\targs.push.apply(args, arguments);\r\n\t\t\t\tvar Ctor = Function.bind.apply(f, args);\r\n\t\t\t\treturn new Ctor();\r\n\t\t\t}\r\n\t\t\treturn f.apply(this, arguments);\r\n\t\t};\r\n\t\ta.prototype = f.prototype;\r\n  } else a = {};\r\n  Object.defineProperty(a, '__esModule', {value: true});\r\n\tObject.keys(n).forEach(function (k) {\r\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\r\n\t\tObject.defineProperty(a, k, d.get ? d : {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\treturn n[k];\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn a;\r\n}\r\n\r\nvar lib = {};\r\n\r\nObject.defineProperty(lib, '__esModule', {\r\n  value: true\r\n});\r\nconst defaultOptions = {\r\n  sourceType: \"script\",\r\n  sourceFilename: undefined,\r\n  startColumn: 0,\r\n  startLine: 1,\r\n  allowAwaitOutsideFunction: false,\r\n  allowReturnOutsideFunction: false,\r\n  allowNewTargetOutsideFunction: false,\r\n  allowImportExportEverywhere: false,\r\n  allowSuperOutsideMethod: false,\r\n  allowUndeclaredExports: false,\r\n  plugins: [],\r\n  strictMode: null,\r\n  ranges: false,\r\n  tokens: false,\r\n  createParenthesizedExpressions: false,\r\n  errorRecovery: false,\r\n  attachComment: true,\r\n  annexB: true\r\n};\r\nfunction getOptions(opts) {\r\n  if (opts && opts.annexB != null && opts.annexB !== false) {\r\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\r\n  }\r\n  const options = {};\r\n  for (const key of Object.keys(defaultOptions)) {\r\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\r\n  }\r\n  return options;\r\n}\r\nclass TokContext {\r\n  constructor(token, preserveSpace) {\r\n    this.token = void 0;\r\n    this.preserveSpace = void 0;\r\n    this.token = token;\r\n    this.preserveSpace = !!preserveSpace;\r\n  }\r\n}\r\nconst types$1 = {\r\n  brace: new TokContext(\"{\"),\r\n  j_oTag: new TokContext(\"<tag\"),\r\n  j_cTag: new TokContext(\"</tag\"),\r\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\r\n};\r\n{\r\n  types$1.template = new TokContext(\"`\", true);\r\n}\r\nconst beforeExpr = true;\r\nconst startsExpr = true;\r\nconst isLoop = true;\r\nconst isAssign = true;\r\nconst prefix = true;\r\nconst postfix = true;\r\nclass ExportedTokenType {\r\n  constructor(label, conf = {}) {\r\n    this.label = void 0;\r\n    this.keyword = void 0;\r\n    this.beforeExpr = void 0;\r\n    this.startsExpr = void 0;\r\n    this.rightAssociative = void 0;\r\n    this.isLoop = void 0;\r\n    this.isAssign = void 0;\r\n    this.prefix = void 0;\r\n    this.postfix = void 0;\r\n    this.binop = void 0;\r\n    this.label = label;\r\n    this.keyword = conf.keyword;\r\n    this.beforeExpr = !!conf.beforeExpr;\r\n    this.startsExpr = !!conf.startsExpr;\r\n    this.rightAssociative = !!conf.rightAssociative;\r\n    this.isLoop = !!conf.isLoop;\r\n    this.isAssign = !!conf.isAssign;\r\n    this.prefix = !!conf.prefix;\r\n    this.postfix = !!conf.postfix;\r\n    this.binop = conf.binop != null ? conf.binop : null;\r\n    {\r\n      this.updateContext = null;\r\n    }\r\n  }\r\n}\r\nconst keywords$1 = new Map();\r\nfunction createKeyword(name, options = {}) {\r\n  options.keyword = name;\r\n  const token = createToken(name, options);\r\n  keywords$1.set(name, token);\r\n  return token;\r\n}\r\nfunction createBinop(name, binop) {\r\n  return createToken(name, {\r\n    beforeExpr,\r\n    binop\r\n  });\r\n}\r\nlet tokenTypeCounter = -1;\r\nconst tokenTypes$1 = [];\r\nconst tokenLabels = [];\r\nconst tokenBinops = [];\r\nconst tokenBeforeExprs = [];\r\nconst tokenStartsExprs = [];\r\nconst tokenPrefixes = [];\r\nfunction createToken(name, options = {}) {\r\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\r\n  ++tokenTypeCounter;\r\n  tokenLabels.push(name);\r\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\r\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\r\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\r\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\r\n  tokenTypes$1.push(new ExportedTokenType(name, options));\r\n  return tokenTypeCounter;\r\n}\r\nfunction createKeywordLike(name, options = {}) {\r\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\r\n  ++tokenTypeCounter;\r\n  keywords$1.set(name, tokenTypeCounter);\r\n  tokenLabels.push(name);\r\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\r\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\r\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\r\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\r\n  tokenTypes$1.push(new ExportedTokenType(\"name\", options));\r\n  return tokenTypeCounter;\r\n}\r\nconst tt = {\r\n  bracketL: createToken(\"[\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  bracketHashL: createToken(\"#[\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  bracketBarL: createToken(\"[|\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  bracketR: createToken(\"]\"),\r\n  bracketBarR: createToken(\"|]\"),\r\n  braceL: createToken(\"{\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  braceBarL: createToken(\"{|\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  braceHashL: createToken(\"#{\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  braceR: createToken(\"}\"),\r\n  braceBarR: createToken(\"|}\"),\r\n  parenL: createToken(\"(\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  parenR: createToken(\")\"),\r\n  comma: createToken(\",\", {\r\n    beforeExpr\r\n  }),\r\n  semi: createToken(\";\", {\r\n    beforeExpr\r\n  }),\r\n  colon: createToken(\":\", {\r\n    beforeExpr\r\n  }),\r\n  doubleColon: createToken(\"::\", {\r\n    beforeExpr\r\n  }),\r\n  dot: createToken(\".\"),\r\n  question: createToken(\"?\", {\r\n    beforeExpr\r\n  }),\r\n  questionDot: createToken(\"?.\"),\r\n  arrow: createToken(\"=>\", {\r\n    beforeExpr\r\n  }),\r\n  template: createToken(\"template\"),\r\n  ellipsis: createToken(\"...\", {\r\n    beforeExpr\r\n  }),\r\n  backQuote: createToken(\"`\", {\r\n    startsExpr\r\n  }),\r\n  dollarBraceL: createToken(\"${\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  templateTail: createToken(\"...`\", {\r\n    startsExpr\r\n  }),\r\n  templateNonTail: createToken(\"...${\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  at: createToken(\"@\"),\r\n  hash: createToken(\"#\", {\r\n    startsExpr\r\n  }),\r\n  interpreterDirective: createToken(\"#!...\"),\r\n  eq: createToken(\"=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  assign: createToken(\"_=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  slashAssign: createToken(\"_=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  xorAssign: createToken(\"_=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  moduloAssign: createToken(\"_=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  incDec: createToken(\"++/--\", {\r\n    prefix,\r\n    postfix,\r\n    startsExpr\r\n  }),\r\n  bang: createToken(\"!\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  tilde: createToken(\"~\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  doubleCaret: createToken(\"^^\", {\r\n    startsExpr\r\n  }),\r\n  doubleAt: createToken(\"@@\", {\r\n    startsExpr\r\n  }),\r\n  pipeline: createBinop(\"|>\", 0),\r\n  nullishCoalescing: createBinop(\"??\", 1),\r\n  logicalOR: createBinop(\"||\", 1),\r\n  logicalAND: createBinop(\"&&\", 2),\r\n  bitwiseOR: createBinop(\"|\", 3),\r\n  bitwiseXOR: createBinop(\"^\", 4),\r\n  bitwiseAND: createBinop(\"&\", 5),\r\n  equality: createBinop(\"==/!=/===/!==\", 6),\r\n  lt: createBinop(\"</>/<=/>=\", 7),\r\n  gt: createBinop(\"</>/<=/>=\", 7),\r\n  relational: createBinop(\"</>/<=/>=\", 7),\r\n  bitShift: createBinop(\"<</>>/>>>\", 8),\r\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\r\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\r\n  plusMin: createToken(\"+/-\", {\r\n    beforeExpr,\r\n    binop: 9,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  modulo: createToken(\"%\", {\r\n    binop: 10,\r\n    startsExpr\r\n  }),\r\n  star: createToken(\"*\", {\r\n    binop: 10\r\n  }),\r\n  slash: createBinop(\"/\", 10),\r\n  exponent: createToken(\"**\", {\r\n    beforeExpr,\r\n    binop: 11,\r\n    rightAssociative: true\r\n  }),\r\n  _in: createKeyword(\"in\", {\r\n    beforeExpr,\r\n    binop: 7\r\n  }),\r\n  _instanceof: createKeyword(\"instanceof\", {\r\n    beforeExpr,\r\n    binop: 7\r\n  }),\r\n  _break: createKeyword(\"break\"),\r\n  _case: createKeyword(\"case\", {\r\n    beforeExpr\r\n  }),\r\n  _catch: createKeyword(\"catch\"),\r\n  _continue: createKeyword(\"continue\"),\r\n  _debugger: createKeyword(\"debugger\"),\r\n  _default: createKeyword(\"default\", {\r\n    beforeExpr\r\n  }),\r\n  _else: createKeyword(\"else\", {\r\n    beforeExpr\r\n  }),\r\n  _finally: createKeyword(\"finally\"),\r\n  _function: createKeyword(\"function\", {\r\n    startsExpr\r\n  }),\r\n  _if: createKeyword(\"if\"),\r\n  _return: createKeyword(\"return\", {\r\n    beforeExpr\r\n  }),\r\n  _switch: createKeyword(\"switch\"),\r\n  _throw: createKeyword(\"throw\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  _try: createKeyword(\"try\"),\r\n  _var: createKeyword(\"var\"),\r\n  _const: createKeyword(\"const\"),\r\n  _with: createKeyword(\"with\"),\r\n  _new: createKeyword(\"new\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  _this: createKeyword(\"this\", {\r\n    startsExpr\r\n  }),\r\n  _super: createKeyword(\"super\", {\r\n    startsExpr\r\n  }),\r\n  _class: createKeyword(\"class\", {\r\n    startsExpr\r\n  }),\r\n  _extends: createKeyword(\"extends\", {\r\n    beforeExpr\r\n  }),\r\n  _export: createKeyword(\"export\"),\r\n  _import: createKeyword(\"import\", {\r\n    startsExpr\r\n  }),\r\n  _null: createKeyword(\"null\", {\r\n    startsExpr\r\n  }),\r\n  _true: createKeyword(\"true\", {\r\n    startsExpr\r\n  }),\r\n  _false: createKeyword(\"false\", {\r\n    startsExpr\r\n  }),\r\n  _typeof: createKeyword(\"typeof\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  _void: createKeyword(\"void\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  _delete: createKeyword(\"delete\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  _do: createKeyword(\"do\", {\r\n    isLoop,\r\n    beforeExpr\r\n  }),\r\n  _for: createKeyword(\"for\", {\r\n    isLoop\r\n  }),\r\n  _while: createKeyword(\"while\", {\r\n    isLoop\r\n  }),\r\n  _as: createKeywordLike(\"as\", {\r\n    startsExpr\r\n  }),\r\n  _assert: createKeywordLike(\"assert\", {\r\n    startsExpr\r\n  }),\r\n  _async: createKeywordLike(\"async\", {\r\n    startsExpr\r\n  }),\r\n  _await: createKeywordLike(\"await\", {\r\n    startsExpr\r\n  }),\r\n  _from: createKeywordLike(\"from\", {\r\n    startsExpr\r\n  }),\r\n  _get: createKeywordLike(\"get\", {\r\n    startsExpr\r\n  }),\r\n  _let: createKeywordLike(\"let\", {\r\n    startsExpr\r\n  }),\r\n  _meta: createKeywordLike(\"meta\", {\r\n    startsExpr\r\n  }),\r\n  _of: createKeywordLike(\"of\", {\r\n    startsExpr\r\n  }),\r\n  _sent: createKeywordLike(\"sent\", {\r\n    startsExpr\r\n  }),\r\n  _set: createKeywordLike(\"set\", {\r\n    startsExpr\r\n  }),\r\n  _static: createKeywordLike(\"static\", {\r\n    startsExpr\r\n  }),\r\n  _using: createKeywordLike(\"using\", {\r\n    startsExpr\r\n  }),\r\n  _yield: createKeywordLike(\"yield\", {\r\n    startsExpr\r\n  }),\r\n  _asserts: createKeywordLike(\"asserts\", {\r\n    startsExpr\r\n  }),\r\n  _checks: createKeywordLike(\"checks\", {\r\n    startsExpr\r\n  }),\r\n  _exports: createKeywordLike(\"exports\", {\r\n    startsExpr\r\n  }),\r\n  _global: createKeywordLike(\"global\", {\r\n    startsExpr\r\n  }),\r\n  _implements: createKeywordLike(\"implements\", {\r\n    startsExpr\r\n  }),\r\n  _intrinsic: createKeywordLike(\"intrinsic\", {\r\n    startsExpr\r\n  }),\r\n  _infer: createKeywordLike(\"infer\", {\r\n    startsExpr\r\n  }),\r\n  _is: createKeywordLike(\"is\", {\r\n    startsExpr\r\n  }),\r\n  _mixins: createKeywordLike(\"mixins\", {\r\n    startsExpr\r\n  }),\r\n  _proto: createKeywordLike(\"proto\", {\r\n    startsExpr\r\n  }),\r\n  _require: createKeywordLike(\"require\", {\r\n    startsExpr\r\n  }),\r\n  _satisfies: createKeywordLike(\"satisfies\", {\r\n    startsExpr\r\n  }),\r\n  _keyof: createKeywordLike(\"keyof\", {\r\n    startsExpr\r\n  }),\r\n  _readonly: createKeywordLike(\"readonly\", {\r\n    startsExpr\r\n  }),\r\n  _unique: createKeywordLike(\"unique\", {\r\n    startsExpr\r\n  }),\r\n  _abstract: createKeywordLike(\"abstract\", {\r\n    startsExpr\r\n  }),\r\n  _declare: createKeywordLike(\"declare\", {\r\n    startsExpr\r\n  }),\r\n  _enum: createKeywordLike(\"enum\", {\r\n    startsExpr\r\n  }),\r\n  _module: createKeywordLike(\"module\", {\r\n    startsExpr\r\n  }),\r\n  _namespace: createKeywordLike(\"namespace\", {\r\n    startsExpr\r\n  }),\r\n  _interface: createKeywordLike(\"interface\", {\r\n    startsExpr\r\n  }),\r\n  _type: createKeywordLike(\"type\", {\r\n    startsExpr\r\n  }),\r\n  _opaque: createKeywordLike(\"opaque\", {\r\n    startsExpr\r\n  }),\r\n  name: createToken(\"name\", {\r\n    startsExpr\r\n  }),\r\n  string: createToken(\"string\", {\r\n    startsExpr\r\n  }),\r\n  num: createToken(\"num\", {\r\n    startsExpr\r\n  }),\r\n  bigint: createToken(\"bigint\", {\r\n    startsExpr\r\n  }),\r\n  decimal: createToken(\"decimal\", {\r\n    startsExpr\r\n  }),\r\n  regexp: createToken(\"regexp\", {\r\n    startsExpr\r\n  }),\r\n  privateName: createToken(\"#name\", {\r\n    startsExpr\r\n  }),\r\n  eof: createToken(\"eof\"),\r\n  jsxName: createToken(\"jsxName\"),\r\n  jsxText: createToken(\"jsxText\", {\r\n    beforeExpr: true\r\n  }),\r\n  jsxTagStart: createToken(\"jsxTagStart\", {\r\n    startsExpr: true\r\n  }),\r\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\r\n  placeholder: createToken(\"%%\", {\r\n    startsExpr: true\r\n  })\r\n};\r\nfunction tokenIsIdentifier(token) {\r\n  return token >= 93 && token <= 130;\r\n}\r\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\r\n  return token <= 92;\r\n}\r\nfunction tokenIsKeywordOrIdentifier(token) {\r\n  return token >= 58 && token <= 130;\r\n}\r\nfunction tokenIsLiteralPropertyName(token) {\r\n  return token >= 58 && token <= 134;\r\n}\r\nfunction tokenComesBeforeExpression(token) {\r\n  return tokenBeforeExprs[token];\r\n}\r\nfunction tokenCanStartExpression(token) {\r\n  return tokenStartsExprs[token];\r\n}\r\nfunction tokenIsAssignment(token) {\r\n  return token >= 29 && token <= 33;\r\n}\r\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\r\n  return token >= 127 && token <= 129;\r\n}\r\nfunction tokenIsLoop(token) {\r\n  return token >= 90 && token <= 92;\r\n}\r\nfunction tokenIsKeyword(token) {\r\n  return token >= 58 && token <= 92;\r\n}\r\nfunction tokenIsOperator(token) {\r\n  return token >= 39 && token <= 59;\r\n}\r\nfunction tokenIsPostfix(token) {\r\n  return token === 34;\r\n}\r\nfunction tokenIsPrefix(token) {\r\n  return tokenPrefixes[token];\r\n}\r\nfunction tokenIsTSTypeOperator(token) {\r\n  return token >= 119 && token <= 121;\r\n}\r\nfunction tokenIsTSDeclarationStart(token) {\r\n  return token >= 122 && token <= 128;\r\n}\r\nfunction tokenLabelName(token) {\r\n  return tokenLabels[token];\r\n}\r\nfunction tokenOperatorPrecedence(token) {\r\n  return tokenBinops[token];\r\n}\r\nfunction tokenIsRightAssociative(token) {\r\n  return token === 57;\r\n}\r\nfunction tokenIsTemplate(token) {\r\n  return token >= 24 && token <= 25;\r\n}\r\nfunction getExportedToken(token) {\r\n  return tokenTypes$1[token];\r\n}\r\n{\r\n  tokenTypes$1[8].updateContext = context => {\r\n    context.pop();\r\n  };\r\n  tokenTypes$1[5].updateContext = tokenTypes$1[7].updateContext = tokenTypes$1[23].updateContext = context => {\r\n    context.push(types$1.brace);\r\n  };\r\n  tokenTypes$1[22].updateContext = context => {\r\n    if (context[context.length - 1] === types$1.template) {\r\n      context.pop();\r\n    } else {\r\n      context.push(types$1.template);\r\n    }\r\n  };\r\n  tokenTypes$1[140].updateContext = context => {\r\n    context.push(types$1.j_expr, types$1.j_oTag);\r\n  };\r\n}\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n  return target;\r\n}\r\nclass Position {\r\n  constructor(line, col, index) {\r\n    this.line = void 0;\r\n    this.column = void 0;\r\n    this.index = void 0;\r\n    this.line = line;\r\n    this.column = col;\r\n    this.index = index;\r\n  }\r\n}\r\nclass SourceLocation {\r\n  constructor(start, end) {\r\n    this.start = void 0;\r\n    this.end = void 0;\r\n    this.filename = void 0;\r\n    this.identifierName = void 0;\r\n    this.start = start;\r\n    this.end = end;\r\n  }\r\n}\r\nfunction createPositionWithColumnOffset(position, columnOffset) {\r\n  const {\r\n    line,\r\n    column,\r\n    index\r\n  } = position;\r\n  return new Position(line, column + columnOffset, index + columnOffset);\r\n}\r\nvar ParseErrorCode = {\r\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\r\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\r\n};\r\nconst reflect = (keys, last = keys.length - 1) => ({\r\n  get() {\r\n    return keys.reduce((object, key) => object[key], this);\r\n  },\r\n  set(value) {\r\n    keys.reduce((item, key, i) => i === last ? item[key] = value : item[key], this);\r\n  }\r\n});\r\nconst instantiate = (constructor, properties, descriptors) => Object.keys(descriptors).map(key => [key, descriptors[key]]).filter(([, descriptor]) => !!descriptor).map(([key, descriptor]) => [key, typeof descriptor === \"function\" ? {\r\n  value: descriptor,\r\n  enumerable: false\r\n} : typeof descriptor.reflect === \"string\" ? Object.assign({}, descriptor, reflect(descriptor.reflect.split(\".\"))) : descriptor]).reduce((instance, [key, descriptor]) => Object.defineProperty(instance, key, Object.assign({\r\n  configurable: true\r\n}, descriptor)), Object.assign(new constructor(), properties));\r\nvar ModuleErrors = {\r\n  ImportMetaOutsideModule: {\r\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\r\n    code: ParseErrorCode.SourceTypeModuleError\r\n  },\r\n  ImportOutsideModule: {\r\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\r\n    code: ParseErrorCode.SourceTypeModuleError\r\n  }\r\n};\r\nconst NodeDescriptions = {\r\n  ArrayPattern: \"array destructuring pattern\",\r\n  AssignmentExpression: \"assignment expression\",\r\n  AssignmentPattern: \"assignment expression\",\r\n  ArrowFunctionExpression: \"arrow function expression\",\r\n  ConditionalExpression: \"conditional expression\",\r\n  CatchClause: \"catch clause\",\r\n  ForOfStatement: \"for-of statement\",\r\n  ForInStatement: \"for-in statement\",\r\n  ForStatement: \"for-loop\",\r\n  FormalParameters: \"function parameter list\",\r\n  Identifier: \"identifier\",\r\n  ImportSpecifier: \"import specifier\",\r\n  ImportDefaultSpecifier: \"import default specifier\",\r\n  ImportNamespaceSpecifier: \"import namespace specifier\",\r\n  ObjectPattern: \"object destructuring pattern\",\r\n  ParenthesizedExpression: \"parenthesized expression\",\r\n  RestElement: \"rest element\",\r\n  UpdateExpression: {\r\n    true: \"prefix operation\",\r\n    false: \"postfix operation\"\r\n  },\r\n  VariableDeclarator: \"variable declaration\",\r\n  YieldExpression: \"yield expression\"\r\n};\r\nconst toNodeDescription = ({\r\n  type,\r\n  prefix\r\n}) => type === \"UpdateExpression\" ? NodeDescriptions.UpdateExpression[String(prefix)] : NodeDescriptions[type];\r\nvar StandardErrors = {\r\n  AccessorIsGenerator: ({\r\n    kind\r\n  }) => `A ${kind}ter cannot be a generator.`,\r\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\r\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\r\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\r\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\r\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\r\n  AwaitInUsingBinding: \"'await' is not allowed to be used as a name in 'using' declarations.\",\r\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\r\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\r\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\r\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\r\n  BadSetterRestParameter: \"A 'set' accessor function argument must not be a rest parameter.\",\r\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\r\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\r\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\r\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\r\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\r\n  DeclarationMissingInitializer: ({\r\n    kind\r\n  }) => `Missing initializer in ${kind} declaration.`,\r\n  DecoratorArgumentsOutsideParentheses: \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\r\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\r\n  DecoratorsBeforeAfterExport: \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\r\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\r\n  DecoratorExportClass: \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\r\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\r\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\r\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\r\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\r\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\r\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\r\n  DuplicateExport: ({\r\n    exportName\r\n  }) => `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\r\n  DuplicateProto: \"Redefinition of __proto__ property.\",\r\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\r\n  ElementAfterRest: \"Rest element must be last element.\",\r\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\r\n  ExportBindingIsString: ({\r\n    localName,\r\n    exportName\r\n  }) => `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\r\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\r\n  ForInOfLoopInitializer: ({\r\n    type\r\n  }) => `'${type === \"ForInStatement\" ? \"for-in\" : \"for-of\"}' loop variable declaration may not have an initializer.`,\r\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\r\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\r\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\r\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\r\n  IllegalBreakContinue: ({\r\n    type\r\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\r\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\r\n  IllegalReturn: \"'return' outside of function.\",\r\n  ImportBindingIsString: ({\r\n    importName\r\n  }) => `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\r\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\r\n  ImportCallArity: ({\r\n    maxArgumentCount\r\n  }) => `\\`import()\\` requires exactly ${maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"}.`,\r\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\r\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\r\n  ImportJSONBindingNotDefault: \"A JSON module can only be imported with `default`.\",\r\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\r\n  ImportReflectionNotBinding: 'Only `import module x from \"./module\"` is valid.',\r\n  IncompatibleRegExpUVFlags: \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\r\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\r\n  InvalidCodePoint: \"Code point out of bounds.\",\r\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\r\n  InvalidDecimal: \"Invalid decimal.\",\r\n  InvalidDigit: ({\r\n    radix\r\n  }) => `Expected number in radix ${radix}.`,\r\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\r\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\r\n  InvalidEscapedReservedWord: ({\r\n    reservedWord\r\n  }) => `Escape sequence in keyword ${reservedWord}.`,\r\n  InvalidIdentifier: ({\r\n    identifierName\r\n  }) => `Invalid identifier ${identifierName}.`,\r\n  InvalidLhs: ({\r\n    ancestor\r\n  }) => `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\r\n  InvalidLhsBinding: ({\r\n    ancestor\r\n  }) => `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\r\n  InvalidNumber: \"Invalid number.\",\r\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\r\n  InvalidOrUnexpectedToken: ({\r\n    unexpected\r\n  }) => `Unexpected character '${unexpected}'.`,\r\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\r\n  InvalidPrivateFieldResolution: ({\r\n    identifierName\r\n  }) => `Private name #${identifierName} is not defined.`,\r\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\r\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\r\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\r\n  LabelRedeclaration: ({\r\n    labelName\r\n  }) => `Label '${labelName}' is already declared.`,\r\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\r\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\r\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\r\n  MissingClassName: \"A class name is required.\",\r\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\r\n  MissingSemicolon: \"Missing semicolon.\",\r\n  MissingPlugin: ({\r\n    missingPlugin\r\n  }) => `This experimental syntax requires enabling the parser plugin: ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\r\n  MissingOneOfPlugins: ({\r\n    missingPlugin\r\n  }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\r\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\r\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\r\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\r\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\r\n  ModuleAttributesWithDuplicateKeys: ({\r\n    key\r\n  }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\r\n  ModuleExportNameHasLoneSurrogate: ({\r\n    surrogateCharCode\r\n  }) => `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(16)}'.`,\r\n  ModuleExportUndefined: ({\r\n    localName\r\n  }) => `Export '${localName}' is not defined.`,\r\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\r\n  NewlineAfterThrow: \"Illegal newline after throw.\",\r\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\r\n  NumberIdentifier: \"Identifier directly after number.\",\r\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\r\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\r\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\r\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\r\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\r\n  ParamDupe: \"Argument name clash.\",\r\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\r\n  PatternHasMethod: \"Object pattern can't contain methods.\",\r\n  PrivateInExpectedIn: ({\r\n    identifierName\r\n  }) => `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\r\n  PrivateNameRedeclaration: ({\r\n    identifierName\r\n  }) => `Duplicate private name #${identifierName}.`,\r\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\r\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\r\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\r\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\r\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\r\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\r\n  SloppyFunctionAnnexB: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\r\n  StaticPrototype: \"Classes may not have static property named prototype.\",\r\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\r\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\r\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\r\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\r\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\r\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\r\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\r\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\r\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\r\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\r\n  UnexpectedKeyword: ({\r\n    keyword\r\n  }) => `Unexpected keyword '${keyword}'.`,\r\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\r\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\r\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\r\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\r\n  UnexpectedPrivateField: \"Unexpected private name.\",\r\n  UnexpectedReservedWord: ({\r\n    reservedWord\r\n  }) => `Unexpected reserved word '${reservedWord}'.`,\r\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\r\n  UnexpectedToken: ({\r\n    expected,\r\n    unexpected\r\n  }) => `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${expected ? `, expected \"${expected}\"` : \"\"}`,\r\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\r\n  UnexpectedUsingDeclaration: \"Using declaration cannot appear in the top level when source type is `script`.\",\r\n  UnsupportedBind: \"Binding should be performed on object property.\",\r\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\r\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\r\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\r\n  UnsupportedMetaProperty: ({\r\n    target,\r\n    onlyValidPropertyName\r\n  }) => `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\r\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\r\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\r\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\r\n  UnterminatedComment: \"Unterminated comment.\",\r\n  UnterminatedRegExp: \"Unterminated regular expression.\",\r\n  UnterminatedString: \"Unterminated string constant.\",\r\n  UnterminatedTemplate: \"Unterminated template.\",\r\n  UsingDeclarationHasBindingPattern: \"Using declaration cannot have destructuring patterns.\",\r\n  VarRedeclaration: ({\r\n    identifierName\r\n  }) => `Identifier '${identifierName}' has already been declared.`,\r\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\r\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\r\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\r\n};\r\nvar StrictModeErrors = {\r\n  StrictDelete: \"Deleting local variable in strict mode.\",\r\n  StrictEvalArguments: ({\r\n    referenceName\r\n  }) => `Assigning to '${referenceName}' in strict mode.`,\r\n  StrictEvalArgumentsBinding: ({\r\n    bindingName\r\n  }) => `Binding '${bindingName}' in strict mode.`,\r\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\r\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\r\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\r\n  StrictWith: \"'with' in strict mode.\"\r\n};\r\nconst UnparenthesizedPipeBodyDescriptions = new Set([\"ArrowFunctionExpression\", \"AssignmentExpression\", \"ConditionalExpression\", \"YieldExpression\"]);\r\nvar PipelineOperatorErrors = {\r\n  PipeBodyIsTighter: \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\r\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\r\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\r\n  PipeTopicUnconfiguredToken: ({\r\n    token\r\n  }) => `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\r\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\r\n  PipeUnparenthesizedBody: ({\r\n    type\r\n  }) => `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\r\n    type\r\n  })}; please wrap it in parentheses.`,\r\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\r\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\r\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\r\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\r\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\r\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.'\r\n};\r\nconst _excluded$1 = [\"toMessage\"],\r\n  _excluded2$1 = [\"message\"];\r\nfunction toParseErrorConstructor(_ref) {\r\n  let {\r\n      toMessage\r\n    } = _ref,\r\n    properties = _objectWithoutPropertiesLoose(_ref, _excluded$1);\r\n  return function constructor({\r\n    loc,\r\n    details\r\n  }) {\r\n    return instantiate(SyntaxError, Object.assign({}, properties, {\r\n      loc\r\n    }), {\r\n      clone(overrides = {}) {\r\n        const loc = overrides.loc || {};\r\n        return constructor({\r\n          loc: new Position(\"line\" in loc ? loc.line : this.loc.line, \"column\" in loc ? loc.column : this.loc.column, \"index\" in loc ? loc.index : this.loc.index),\r\n          details: Object.assign({}, this.details, overrides.details)\r\n        });\r\n      },\r\n      details: {\r\n        value: details,\r\n        enumerable: false\r\n      },\r\n      message: {\r\n        get() {\r\n          return `${toMessage(this.details)} (${this.loc.line}:${this.loc.column})`;\r\n        },\r\n        set(value) {\r\n          Object.defineProperty(this, \"message\", {\r\n            value\r\n          });\r\n        }\r\n      },\r\n      pos: {\r\n        reflect: \"loc.index\",\r\n        enumerable: true\r\n      },\r\n      missingPlugin: \"missingPlugin\" in details && {\r\n        reflect: \"details.missingPlugin\",\r\n        enumerable: true\r\n      }\r\n    });\r\n  };\r\n}\r\nfunction ParseErrorEnum(argument, syntaxPlugin) {\r\n  if (Array.isArray(argument)) {\r\n    return parseErrorTemplates => ParseErrorEnum(parseErrorTemplates, argument[0]);\r\n  }\r\n  const ParseErrorConstructors = {};\r\n  for (const reasonCode of Object.keys(argument)) {\r\n    const template = argument[reasonCode];\r\n    const _ref2 = typeof template === \"string\" ? {\r\n        message: () => template\r\n      } : typeof template === \"function\" ? {\r\n        message: template\r\n      } : template,\r\n      {\r\n        message\r\n      } = _ref2,\r\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2$1);\r\n    const toMessage = typeof message === \"string\" ? () => message : message;\r\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor(Object.assign({\r\n      code: ParseErrorCode.SyntaxError,\r\n      reasonCode,\r\n      toMessage\r\n    }, syntaxPlugin ? {\r\n      syntaxPlugin\r\n    } : {}, rest));\r\n  }\r\n  return ParseErrorConstructors;\r\n}\r\nconst Errors = Object.assign({}, ParseErrorEnum(ModuleErrors), ParseErrorEnum(StandardErrors), ParseErrorEnum(StrictModeErrors), ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors));\r\nconst {\r\n  defineProperty\r\n} = Object;\r\nconst toUnenumerable = (object, key) => defineProperty(object, key, {\r\n  enumerable: false,\r\n  value: object[key]\r\n});\r\nfunction toESTreeLocation(node) {\r\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\r\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\r\n  return node;\r\n}\r\nvar estree = superClass => class ESTreeParserMixin extends superClass {\r\n  parse() {\r\n    const file = toESTreeLocation(super.parse());\r\n    if (this.options.tokens) {\r\n      file.tokens = file.tokens.map(toESTreeLocation);\r\n    }\r\n    return file;\r\n  }\r\n  parseRegExpLiteral({\r\n    pattern,\r\n    flags\r\n  }) {\r\n    let regex = null;\r\n    try {\r\n      regex = new RegExp(pattern, flags);\r\n    } catch (e) {}\r\n    const node = this.estreeParseLiteral(regex);\r\n    node.regex = {\r\n      pattern,\r\n      flags\r\n    };\r\n    return node;\r\n  }\r\n  parseBigIntLiteral(value) {\r\n    let bigInt;\r\n    try {\r\n      bigInt = BigInt(value);\r\n    } catch (_unused) {\r\n      bigInt = null;\r\n    }\r\n    const node = this.estreeParseLiteral(bigInt);\r\n    node.bigint = String(node.value || value);\r\n    return node;\r\n  }\r\n  parseDecimalLiteral(value) {\r\n    const decimal = null;\r\n    const node = this.estreeParseLiteral(decimal);\r\n    node.decimal = String(node.value || value);\r\n    return node;\r\n  }\r\n  estreeParseLiteral(value) {\r\n    return this.parseLiteral(value, \"Literal\");\r\n  }\r\n  parseStringLiteral(value) {\r\n    return this.estreeParseLiteral(value);\r\n  }\r\n  parseNumericLiteral(value) {\r\n    return this.estreeParseLiteral(value);\r\n  }\r\n  parseNullLiteral() {\r\n    return this.estreeParseLiteral(null);\r\n  }\r\n  parseBooleanLiteral(value) {\r\n    return this.estreeParseLiteral(value);\r\n  }\r\n  directiveToStmt(directive) {\r\n    const expression = directive.value;\r\n    delete directive.value;\r\n    expression.type = \"Literal\";\r\n    expression.raw = expression.extra.raw;\r\n    expression.value = expression.extra.expressionValue;\r\n    const stmt = directive;\r\n    stmt.type = \"ExpressionStatement\";\r\n    stmt.expression = expression;\r\n    stmt.directive = expression.extra.rawValue;\r\n    delete expression.extra;\r\n    return stmt;\r\n  }\r\n  initFunction(node, isAsync) {\r\n    super.initFunction(node, isAsync);\r\n    node.expression = false;\r\n  }\r\n  checkDeclaration(node) {\r\n    if (node != null && this.isObjectProperty(node)) {\r\n      this.checkDeclaration(node.value);\r\n    } else {\r\n      super.checkDeclaration(node);\r\n    }\r\n  }\r\n  getObjectOrClassMethodParams(method) {\r\n    return method.value.params;\r\n  }\r\n  isValidDirective(stmt) {\r\n    var _stmt$expression$extr;\r\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\r\n  }\r\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\r\n    super.parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse);\r\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\r\n    node.body = directiveStatements.concat(node.body);\r\n    delete node.directives;\r\n  }\r\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\r\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\r\n    if (method.typeParameters) {\r\n      method.value.typeParameters = method.typeParameters;\r\n      delete method.typeParameters;\r\n    }\r\n    classBody.body.push(method);\r\n  }\r\n  parsePrivateName() {\r\n    const node = super.parsePrivateName();\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return node;\r\n      }\r\n    }\r\n    return this.convertPrivateNameToPrivateIdentifier(node);\r\n  }\r\n  convertPrivateNameToPrivateIdentifier(node) {\r\n    const name = super.getPrivateNameSV(node);\r\n    node = node;\r\n    delete node.id;\r\n    node.name = name;\r\n    node.type = \"PrivateIdentifier\";\r\n    return node;\r\n  }\r\n  isPrivateName(node) {\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return super.isPrivateName(node);\r\n      }\r\n    }\r\n    return node.type === \"PrivateIdentifier\";\r\n  }\r\n  getPrivateNameSV(node) {\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return super.getPrivateNameSV(node);\r\n      }\r\n    }\r\n    return node.name;\r\n  }\r\n  parseLiteral(value, type) {\r\n    const node = super.parseLiteral(value, type);\r\n    node.raw = node.extra.raw;\r\n    delete node.extra;\r\n    return node;\r\n  }\r\n  parseFunctionBody(node, allowExpression, isMethod = false) {\r\n    super.parseFunctionBody(node, allowExpression, isMethod);\r\n    node.expression = node.body.type !== \"BlockStatement\";\r\n  }\r\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\r\n    let funcNode = this.startNode();\r\n    funcNode.kind = node.kind;\r\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\r\n    funcNode.type = \"FunctionExpression\";\r\n    delete funcNode.kind;\r\n    node.value = funcNode;\r\n    if (type === \"ClassPrivateMethod\") {\r\n      node.computed = false;\r\n    }\r\n    return this.finishNode(node, \"MethodDefinition\");\r\n  }\r\n  parseClassProperty(...args) {\r\n    const propertyNode = super.parseClassProperty(...args);\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return propertyNode;\r\n      }\r\n    }\r\n    propertyNode.type = \"PropertyDefinition\";\r\n    return propertyNode;\r\n  }\r\n  parseClassPrivateProperty(...args) {\r\n    const propertyNode = super.parseClassPrivateProperty(...args);\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return propertyNode;\r\n      }\r\n    }\r\n    propertyNode.type = \"PropertyDefinition\";\r\n    propertyNode.computed = false;\r\n    return propertyNode;\r\n  }\r\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\r\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\r\n    if (node) {\r\n      node.type = \"Property\";\r\n      if (node.kind === \"method\") {\r\n        node.kind = \"init\";\r\n      }\r\n      node.shorthand = false;\r\n    }\r\n    return node;\r\n  }\r\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\r\n    const node = super.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\r\n    if (node) {\r\n      node.kind = \"init\";\r\n      node.type = \"Property\";\r\n    }\r\n    return node;\r\n  }\r\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\r\n    return type === \"Property\" ? \"value\" : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\r\n  }\r\n  isAssignable(node, isBinding) {\r\n    if (node != null && this.isObjectProperty(node)) {\r\n      return this.isAssignable(node.value, isBinding);\r\n    }\r\n    return super.isAssignable(node, isBinding);\r\n  }\r\n  toAssignable(node, isLHS = false) {\r\n    if (node != null && this.isObjectProperty(node)) {\r\n      const {\r\n        key,\r\n        value\r\n      } = node;\r\n      if (this.isPrivateName(key)) {\r\n        this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\r\n      }\r\n      this.toAssignable(value, isLHS);\r\n    } else {\r\n      super.toAssignable(node, isLHS);\r\n    }\r\n  }\r\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\r\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\r\n      this.raise(Errors.PatternHasAccessor, {\r\n        at: prop.key\r\n      });\r\n    } else if (prop.method) {\r\n      this.raise(Errors.PatternHasMethod, {\r\n        at: prop.key\r\n      });\r\n    } else {\r\n      super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\r\n    }\r\n  }\r\n  finishCallExpression(unfinished, optional) {\r\n    const node = super.finishCallExpression(unfinished, optional);\r\n    if (node.callee.type === \"Import\") {\r\n      node.type = \"ImportExpression\";\r\n      node.source = node.arguments[0];\r\n      if (this.hasPlugin(\"importAssertions\")) {\r\n        var _node$arguments$;\r\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\r\n      }\r\n      delete node.arguments;\r\n      delete node.callee;\r\n    }\r\n    return node;\r\n  }\r\n  toReferencedArguments(node) {\r\n    if (node.type === \"ImportExpression\") {\r\n      return;\r\n    }\r\n    super.toReferencedArguments(node);\r\n  }\r\n  parseExport(unfinished, decorators) {\r\n    const exportStartLoc = this.state.lastTokStartLoc;\r\n    const node = super.parseExport(unfinished, decorators);\r\n    switch (node.type) {\r\n      case \"ExportAllDeclaration\":\r\n        node.exported = null;\r\n        break;\r\n      case \"ExportNamedDeclaration\":\r\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\r\n          node.type = \"ExportAllDeclaration\";\r\n          node.exported = node.specifiers[0].exported;\r\n          delete node.specifiers;\r\n        }\r\n      case \"ExportDefaultDeclaration\":\r\n        {\r\n          var _declaration$decorato;\r\n          const {\r\n            declaration\r\n          } = node;\r\n          if ((declaration == null ? void 0 : declaration.type) === \"ClassDeclaration\" && ((_declaration$decorato = declaration.decorators) == null ? void 0 : _declaration$decorato.length) > 0 && declaration.start === node.start) {\r\n            this.resetStartLocation(node, exportStartLoc);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n    return node;\r\n  }\r\n  parseSubscript(base, startLoc, noCalls, state) {\r\n    const node = super.parseSubscript(base, startLoc, noCalls, state);\r\n    if (state.optionalChainMember) {\r\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\r\n        node.type = node.type.substring(8);\r\n      }\r\n      if (state.stop) {\r\n        const chain = this.startNodeAtNode(node);\r\n        chain.expression = node;\r\n        return this.finishNode(chain, \"ChainExpression\");\r\n      }\r\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\r\n      node.optional = false;\r\n    }\r\n    return node;\r\n  }\r\n  hasPropertyAsPrivateName(node) {\r\n    if (node.type === \"ChainExpression\") {\r\n      node = node.expression;\r\n    }\r\n    return super.hasPropertyAsPrivateName(node);\r\n  }\r\n  isObjectProperty(node) {\r\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\r\n  }\r\n  isObjectMethod(node) {\r\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\r\n  }\r\n  finishNodeAt(node, type, endLoc) {\r\n    return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\r\n  }\r\n  resetStartLocation(node, startLoc) {\r\n    super.resetStartLocation(node, startLoc);\r\n    toESTreeLocation(node);\r\n  }\r\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\r\n    super.resetEndLocation(node, endLoc);\r\n    toESTreeLocation(node);\r\n  }\r\n};\r\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\r\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\r\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\r\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\r\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\r\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];\r\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\r\nfunction isInAstralSet(code, set) {\r\n  let pos = 0x10000;\r\n  for (let i = 0, length = set.length; i < length; i += 2) {\r\n    pos += set[i];\r\n    if (pos > code) return false;\r\n    pos += set[i + 1];\r\n    if (pos >= code) return true;\r\n  }\r\n  return false;\r\n}\r\nfunction isIdentifierStart(code) {\r\n  if (code < 65) return code === 36;\r\n  if (code <= 90) return true;\r\n  if (code < 97) return code === 95;\r\n  if (code <= 122) return true;\r\n  if (code <= 0xffff) {\r\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\r\n  }\r\n  return isInAstralSet(code, astralIdentifierStartCodes);\r\n}\r\nfunction isIdentifierChar(code) {\r\n  if (code < 48) return code === 36;\r\n  if (code < 58) return true;\r\n  if (code < 65) return false;\r\n  if (code <= 90) return true;\r\n  if (code < 97) return code === 95;\r\n  if (code <= 122) return true;\r\n  if (code <= 0xffff) {\r\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\r\n  }\r\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\r\n}\r\nconst reservedWords = {\r\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\r\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\r\n  strictBind: [\"eval\", \"arguments\"]\r\n};\r\nconst keywords = new Set(reservedWords.keyword);\r\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\r\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\r\nfunction isReservedWord(word, inModule) {\r\n  return inModule && word === \"await\" || word === \"enum\";\r\n}\r\nfunction isStrictReservedWord(word, inModule) {\r\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\r\n}\r\nfunction isStrictBindOnlyReservedWord(word) {\r\n  return reservedWordsStrictBindSet.has(word);\r\n}\r\nfunction isStrictBindReservedWord(word, inModule) {\r\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\r\n}\r\nfunction isKeyword(word) {\r\n  return keywords.has(word);\r\n}\r\nfunction isIteratorStart(current, next, next2) {\r\n  return current === 64 && next === 64 && isIdentifierStart(next2);\r\n}\r\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\r\nfunction canBeReservedWord(word) {\r\n  return reservedWordLikeSet.has(word);\r\n}\r\nconst SCOPE_OTHER = 0b000000000,\r\n  SCOPE_PROGRAM = 0b000000001,\r\n  SCOPE_FUNCTION = 0b000000010,\r\n  SCOPE_ARROW = 0b000000100,\r\n  SCOPE_SIMPLE_CATCH = 0b000001000,\r\n  SCOPE_SUPER = 0b000010000,\r\n  SCOPE_DIRECT_SUPER = 0b000100000,\r\n  SCOPE_CLASS = 0b001000000,\r\n  SCOPE_STATIC_BLOCK = 0b010000000,\r\n  SCOPE_TS_MODULE = 0b100000000,\r\n  SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_STATIC_BLOCK | SCOPE_TS_MODULE;\r\nconst BIND_KIND_VALUE = 0b0000000000001,\r\n  BIND_KIND_TYPE = 0b0000000000010,\r\n  BIND_SCOPE_VAR = 0b0000000000100,\r\n  BIND_SCOPE_LEXICAL = 0b0000000001000,\r\n  BIND_SCOPE_FUNCTION = 0b0000000010000,\r\n  BIND_FLAGS_NONE = 0b00000001000000,\r\n  BIND_FLAGS_CLASS = 0b00000010000000,\r\n  BIND_FLAGS_TS_ENUM = 0b00000100000000,\r\n  BIND_FLAGS_TS_CONST_ENUM = 0b00001000000000,\r\n  BIND_FLAGS_TS_EXPORT_ONLY = 0b00010000000000,\r\n  BIND_FLAGS_FLOW_DECLARE_FN = 0b00100000000000,\r\n  BIND_FLAGS_TS_IMPORT = 0b01000000000000,\r\n  BIND_FLAGS_NO_LET_IN_LEXICAL = 0b10000000000000;\r\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS | BIND_FLAGS_NO_LET_IN_LEXICAL,\r\n  BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | BIND_FLAGS_NO_LET_IN_LEXICAL,\r\n  BIND_CATCH_PARAM = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\r\n  BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\r\n  BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\r\n  BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\r\n  BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\r\n  BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM | BIND_FLAGS_NO_LET_IN_LEXICAL,\r\n  BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\r\n  BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\r\n  BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\r\n  BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\r\n  BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\r\n  BIND_TS_TYPE_IMPORT = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_TS_IMPORT,\r\n  BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\r\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\r\n  CLASS_ELEMENT_KIND_GETTER = 0b010,\r\n  CLASS_ELEMENT_KIND_SETTER = 0b001,\r\n  CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\r\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\r\n  CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\r\n  CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\r\n  CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\r\n  CLASS_ELEMENT_OTHER = 0;\r\nclass Scope {\r\n  constructor(flags) {\r\n    this.var = new Set();\r\n    this.lexical = new Set();\r\n    this.functions = new Set();\r\n    this.flags = flags;\r\n  }\r\n}\r\nclass ScopeHandler {\r\n  constructor(parser, inModule) {\r\n    this.parser = void 0;\r\n    this.scopeStack = [];\r\n    this.inModule = void 0;\r\n    this.undefinedExports = new Map();\r\n    this.parser = parser;\r\n    this.inModule = inModule;\r\n  }\r\n  get inTopLevel() {\r\n    return (this.currentScope().flags & SCOPE_PROGRAM) > 0;\r\n  }\r\n  get inFunction() {\r\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\r\n  }\r\n  get allowSuper() {\r\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\r\n  }\r\n  get allowDirectSuper() {\r\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\r\n  }\r\n  get inClass() {\r\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\r\n  }\r\n  get inClassAndNotInNonArrowFunction() {\r\n    const flags = this.currentThisScopeFlags();\r\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\r\n  }\r\n  get inStaticBlock() {\r\n    for (let i = this.scopeStack.length - 1;; i--) {\r\n      const {\r\n        flags\r\n      } = this.scopeStack[i];\r\n      if (flags & SCOPE_STATIC_BLOCK) {\r\n        return true;\r\n      }\r\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  get inNonArrowFunction() {\r\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\r\n  }\r\n  get treatFunctionsAsVar() {\r\n    return this.treatFunctionsAsVarInScope(this.currentScope());\r\n  }\r\n  createScope(flags) {\r\n    return new Scope(flags);\r\n  }\r\n  enter(flags) {\r\n    this.scopeStack.push(this.createScope(flags));\r\n  }\r\n  exit() {\r\n    const scope = this.scopeStack.pop();\r\n    return scope.flags;\r\n  }\r\n  treatFunctionsAsVarInScope(scope) {\r\n    return !!(scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) || !this.parser.inModule && scope.flags & SCOPE_PROGRAM);\r\n  }\r\n  declareName(name, bindingType, loc) {\r\n    let scope = this.currentScope();\r\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\r\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\r\n      if (bindingType & BIND_SCOPE_FUNCTION) {\r\n        scope.functions.add(name);\r\n      } else {\r\n        scope.lexical.add(name);\r\n      }\r\n      if (bindingType & BIND_SCOPE_LEXICAL) {\r\n        this.maybeExportDefined(scope, name);\r\n      }\r\n    } else if (bindingType & BIND_SCOPE_VAR) {\r\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\r\n        scope = this.scopeStack[i];\r\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\r\n        scope.var.add(name);\r\n        this.maybeExportDefined(scope, name);\r\n        if (scope.flags & SCOPE_VAR) break;\r\n      }\r\n    }\r\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\r\n      this.undefinedExports.delete(name);\r\n    }\r\n  }\r\n  maybeExportDefined(scope, name) {\r\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\r\n      this.undefinedExports.delete(name);\r\n    }\r\n  }\r\n  checkRedeclarationInScope(scope, name, bindingType, loc) {\r\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\r\n      this.parser.raise(Errors.VarRedeclaration, {\r\n        at: loc,\r\n        identifierName: name\r\n      });\r\n    }\r\n  }\r\n  isRedeclaredInScope(scope, name, bindingType) {\r\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\r\n    if (bindingType & BIND_SCOPE_LEXICAL) {\r\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\r\n    }\r\n    if (bindingType & BIND_SCOPE_FUNCTION) {\r\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\r\n    }\r\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\r\n  }\r\n  checkLocalExport(id) {\r\n    const {\r\n      name\r\n    } = id;\r\n    const topLevelScope = this.scopeStack[0];\r\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\r\n      this.undefinedExports.set(name, id.loc.start);\r\n    }\r\n  }\r\n  currentScope() {\r\n    return this.scopeStack[this.scopeStack.length - 1];\r\n  }\r\n  currentVarScopeFlags() {\r\n    for (let i = this.scopeStack.length - 1;; i--) {\r\n      const {\r\n        flags\r\n      } = this.scopeStack[i];\r\n      if (flags & SCOPE_VAR) {\r\n        return flags;\r\n      }\r\n    }\r\n  }\r\n  currentThisScopeFlags() {\r\n    for (let i = this.scopeStack.length - 1;; i--) {\r\n      const {\r\n        flags\r\n      } = this.scopeStack[i];\r\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\r\n        return flags;\r\n      }\r\n    }\r\n  }\r\n}\r\nclass FlowScope extends Scope {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.declareFunctions = new Set();\r\n  }\r\n}\r\nclass FlowScopeHandler extends ScopeHandler {\r\n  createScope(flags) {\r\n    return new FlowScope(flags);\r\n  }\r\n  declareName(name, bindingType, loc) {\r\n    const scope = this.currentScope();\r\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\r\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\r\n      this.maybeExportDefined(scope, name);\r\n      scope.declareFunctions.add(name);\r\n      return;\r\n    }\r\n    super.declareName(name, bindingType, loc);\r\n  }\r\n  isRedeclaredInScope(scope, name, bindingType) {\r\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\r\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\r\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\r\n    }\r\n    return false;\r\n  }\r\n  checkLocalExport(id) {\r\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\r\n      super.checkLocalExport(id);\r\n    }\r\n  }\r\n}\r\nclass BaseParser {\r\n  constructor() {\r\n    this.sawUnambiguousESM = false;\r\n    this.ambiguousScriptDifferentAst = false;\r\n  }\r\n  hasPlugin(pluginConfig) {\r\n    if (typeof pluginConfig === \"string\") {\r\n      return this.plugins.has(pluginConfig);\r\n    } else {\r\n      const [pluginName, pluginOptions] = pluginConfig;\r\n      if (!this.hasPlugin(pluginName)) {\r\n        return false;\r\n      }\r\n      const actualOptions = this.plugins.get(pluginName);\r\n      for (const key of Object.keys(pluginOptions)) {\r\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n  getPluginOption(plugin, name) {\r\n    var _this$plugins$get;\r\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\r\n  }\r\n}\r\nfunction setTrailingComments(node, comments) {\r\n  if (node.trailingComments === undefined) {\r\n    node.trailingComments = comments;\r\n  } else {\r\n    node.trailingComments.unshift(...comments);\r\n  }\r\n}\r\nfunction setLeadingComments(node, comments) {\r\n  if (node.leadingComments === undefined) {\r\n    node.leadingComments = comments;\r\n  } else {\r\n    node.leadingComments.unshift(...comments);\r\n  }\r\n}\r\nfunction setInnerComments(node, comments) {\r\n  if (node.innerComments === undefined) {\r\n    node.innerComments = comments;\r\n  } else {\r\n    node.innerComments.unshift(...comments);\r\n  }\r\n}\r\nfunction adjustInnerComments(node, elements, commentWS) {\r\n  let lastElement = null;\r\n  let i = elements.length;\r\n  while (lastElement === null && i > 0) {\r\n    lastElement = elements[--i];\r\n  }\r\n  if (lastElement === null || lastElement.start > commentWS.start) {\r\n    setInnerComments(node, commentWS.comments);\r\n  } else {\r\n    setTrailingComments(lastElement, commentWS.comments);\r\n  }\r\n}\r\nclass CommentsParser extends BaseParser {\r\n  addComment(comment) {\r\n    if (this.filename) comment.loc.filename = this.filename;\r\n    this.state.comments.push(comment);\r\n  }\r\n  processComment(node) {\r\n    const {\r\n      commentStack\r\n    } = this.state;\r\n    const commentStackLength = commentStack.length;\r\n    if (commentStackLength === 0) return;\r\n    let i = commentStackLength - 1;\r\n    const lastCommentWS = commentStack[i];\r\n    if (lastCommentWS.start === node.end) {\r\n      lastCommentWS.leadingNode = node;\r\n      i--;\r\n    }\r\n    const {\r\n      start: nodeStart\r\n    } = node;\r\n    for (; i >= 0; i--) {\r\n      const commentWS = commentStack[i];\r\n      const commentEnd = commentWS.end;\r\n      if (commentEnd > nodeStart) {\r\n        commentWS.containingNode = node;\r\n        this.finalizeComment(commentWS);\r\n        commentStack.splice(i, 1);\r\n      } else {\r\n        if (commentEnd === nodeStart) {\r\n          commentWS.trailingNode = node;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  finalizeComment(commentWS) {\r\n    const {\r\n      comments\r\n    } = commentWS;\r\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\r\n      if (commentWS.leadingNode !== null) {\r\n        setTrailingComments(commentWS.leadingNode, comments);\r\n      }\r\n      if (commentWS.trailingNode !== null) {\r\n        setLeadingComments(commentWS.trailingNode, comments);\r\n      }\r\n    } else {\r\n      const {\r\n        containingNode: node,\r\n        start: commentStart\r\n      } = commentWS;\r\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\r\n        switch (node.type) {\r\n          case \"ObjectExpression\":\r\n          case \"ObjectPattern\":\r\n          case \"RecordExpression\":\r\n            adjustInnerComments(node, node.properties, commentWS);\r\n            break;\r\n          case \"CallExpression\":\r\n          case \"OptionalCallExpression\":\r\n            adjustInnerComments(node, node.arguments, commentWS);\r\n            break;\r\n          case \"FunctionDeclaration\":\r\n          case \"FunctionExpression\":\r\n          case \"ArrowFunctionExpression\":\r\n          case \"ObjectMethod\":\r\n          case \"ClassMethod\":\r\n          case \"ClassPrivateMethod\":\r\n            adjustInnerComments(node, node.params, commentWS);\r\n            break;\r\n          case \"ArrayExpression\":\r\n          case \"ArrayPattern\":\r\n          case \"TupleExpression\":\r\n            adjustInnerComments(node, node.elements, commentWS);\r\n            break;\r\n          case \"ExportNamedDeclaration\":\r\n          case \"ImportDeclaration\":\r\n            adjustInnerComments(node, node.specifiers, commentWS);\r\n            break;\r\n          default:\r\n            {\r\n              setInnerComments(node, comments);\r\n            }\r\n        }\r\n      } else {\r\n        setInnerComments(node, comments);\r\n      }\r\n    }\r\n  }\r\n  finalizeRemainingComments() {\r\n    const {\r\n      commentStack\r\n    } = this.state;\r\n    for (let i = commentStack.length - 1; i >= 0; i--) {\r\n      this.finalizeComment(commentStack[i]);\r\n    }\r\n    this.state.commentStack = [];\r\n  }\r\n  resetPreviousNodeTrailingComments(node) {\r\n    const {\r\n      commentStack\r\n    } = this.state;\r\n    const {\r\n      length\r\n    } = commentStack;\r\n    if (length === 0) return;\r\n    const commentWS = commentStack[length - 1];\r\n    if (commentWS.leadingNode === node) {\r\n      commentWS.leadingNode = null;\r\n    }\r\n  }\r\n  takeSurroundingComments(node, start, end) {\r\n    const {\r\n      commentStack\r\n    } = this.state;\r\n    const commentStackLength = commentStack.length;\r\n    if (commentStackLength === 0) return;\r\n    let i = commentStackLength - 1;\r\n    for (; i >= 0; i--) {\r\n      const commentWS = commentStack[i];\r\n      const commentEnd = commentWS.end;\r\n      const commentStart = commentWS.start;\r\n      if (commentStart === end) {\r\n        commentWS.leadingNode = node;\r\n      } else if (commentEnd === start) {\r\n        commentWS.trailingNode = node;\r\n      } else if (commentEnd < start) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\r\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\r\nfunction isNewLine(code) {\r\n  switch (code) {\r\n    case 10:\r\n    case 13:\r\n    case 8232:\r\n    case 8233:\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\r\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\r\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\r\nfunction isWhitespace(code) {\r\n  switch (code) {\r\n    case 0x0009:\r\n    case 0x000b:\r\n    case 0x000c:\r\n    case 32:\r\n    case 160:\r\n    case 5760:\r\n    case 0x2000:\r\n    case 0x2001:\r\n    case 0x2002:\r\n    case 0x2003:\r\n    case 0x2004:\r\n    case 0x2005:\r\n    case 0x2006:\r\n    case 0x2007:\r\n    case 0x2008:\r\n    case 0x2009:\r\n    case 0x200a:\r\n    case 0x202f:\r\n    case 0x205f:\r\n    case 0x3000:\r\n    case 0xfeff:\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\nclass State {\r\n  constructor() {\r\n    this.strict = void 0;\r\n    this.curLine = void 0;\r\n    this.lineStart = void 0;\r\n    this.startLoc = void 0;\r\n    this.endLoc = void 0;\r\n    this.errors = [];\r\n    this.potentialArrowAt = -1;\r\n    this.noArrowAt = [];\r\n    this.noArrowParamsConversionAt = [];\r\n    this.maybeInArrowParameters = false;\r\n    this.inType = false;\r\n    this.noAnonFunctionType = false;\r\n    this.hasFlowComment = false;\r\n    this.isAmbientContext = false;\r\n    this.inAbstractClass = false;\r\n    this.inDisallowConditionalTypesContext = false;\r\n    this.topicContext = {\r\n      maxNumOfResolvableTopics: 0,\r\n      maxTopicIndex: null\r\n    };\r\n    this.soloAwait = false;\r\n    this.inFSharpPipelineDirectBody = false;\r\n    this.labels = [];\r\n    this.comments = [];\r\n    this.commentStack = [];\r\n    this.pos = 0;\r\n    this.type = 137;\r\n    this.value = null;\r\n    this.start = 0;\r\n    this.end = 0;\r\n    this.lastTokEndLoc = null;\r\n    this.lastTokStartLoc = null;\r\n    this.lastTokStart = 0;\r\n    this.context = [types$1.brace];\r\n    this.canStartJSXElement = true;\r\n    this.containsEsc = false;\r\n    this.firstInvalidTemplateEscapePos = null;\r\n    this.strictErrors = new Map();\r\n    this.tokensLength = 0;\r\n  }\r\n  init({\r\n    strictMode,\r\n    sourceType,\r\n    startLine,\r\n    startColumn\r\n  }) {\r\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\r\n    this.curLine = startLine;\r\n    this.lineStart = -startColumn;\r\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\r\n  }\r\n  curPosition() {\r\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\r\n  }\r\n  clone(skipArrays) {\r\n    const state = new State();\r\n    const keys = Object.keys(this);\r\n    for (let i = 0, length = keys.length; i < length; i++) {\r\n      const key = keys[i];\r\n      let val = this[key];\r\n      if (!skipArrays && Array.isArray(val)) {\r\n        val = val.slice();\r\n      }\r\n      state[key] = val;\r\n    }\r\n    return state;\r\n  }\r\n}\r\nvar _isDigit = function isDigit(code) {\r\n  return code >= 48 && code <= 57;\r\n};\r\nconst forbiddenNumericSeparatorSiblings = {\r\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\r\n  hex: new Set([46, 88, 95, 120])\r\n};\r\nconst isAllowedNumericSeparatorSibling = {\r\n  bin: ch => ch === 48 || ch === 49,\r\n  oct: ch => ch >= 48 && ch <= 55,\r\n  dec: ch => ch >= 48 && ch <= 57,\r\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\r\n};\r\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\r\n  const initialPos = pos;\r\n  const initialLineStart = lineStart;\r\n  const initialCurLine = curLine;\r\n  let out = \"\";\r\n  let firstInvalidLoc = null;\r\n  let chunkStart = pos;\r\n  const {\r\n    length\r\n  } = input;\r\n  for (;;) {\r\n    if (pos >= length) {\r\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\r\n      out += input.slice(chunkStart, pos);\r\n      break;\r\n    }\r\n    const ch = input.charCodeAt(pos);\r\n    if (isStringEnd(type, ch, input, pos)) {\r\n      out += input.slice(chunkStart, pos);\r\n      break;\r\n    }\r\n    if (ch === 92) {\r\n      out += input.slice(chunkStart, pos);\r\n      const res = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors);\r\n      if (res.ch === null && !firstInvalidLoc) {\r\n        firstInvalidLoc = {\r\n          pos,\r\n          lineStart,\r\n          curLine\r\n        };\r\n      } else {\r\n        out += res.ch;\r\n      }\r\n      ({\r\n        pos,\r\n        lineStart,\r\n        curLine\r\n      } = res);\r\n      chunkStart = pos;\r\n    } else if (ch === 8232 || ch === 8233) {\r\n      ++pos;\r\n      ++curLine;\r\n      lineStart = pos;\r\n    } else if (ch === 10 || ch === 13) {\r\n      if (type === \"template\") {\r\n        out += input.slice(chunkStart, pos) + \"\\n\";\r\n        ++pos;\r\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\r\n          ++pos;\r\n        }\r\n        ++curLine;\r\n        chunkStart = lineStart = pos;\r\n      } else {\r\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\r\n      }\r\n    } else {\r\n      ++pos;\r\n    }\r\n  }\r\n  return {\r\n    pos,\r\n    str: out,\r\n    firstInvalidLoc,\r\n    lineStart,\r\n    curLine,\r\n    containsInvalid: !!firstInvalidLoc\r\n  };\r\n}\r\nfunction isStringEnd(type, ch, input, pos) {\r\n  if (type === \"template\") {\r\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\r\n  }\r\n  return ch === (type === \"double\" ? 34 : 39);\r\n}\r\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\r\n  const throwOnInvalid = !inTemplate;\r\n  pos++;\r\n  const res = ch => ({\r\n    pos,\r\n    ch,\r\n    lineStart,\r\n    curLine\r\n  });\r\n  const ch = input.charCodeAt(pos++);\r\n  switch (ch) {\r\n    case 110:\r\n      return res(\"\\n\");\r\n    case 114:\r\n      return res(\"\\r\");\r\n    case 120:\r\n      {\r\n        let code;\r\n        ({\r\n          code,\r\n          pos\r\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\r\n        return res(code === null ? null : String.fromCharCode(code));\r\n      }\r\n    case 117:\r\n      {\r\n        let code;\r\n        ({\r\n          code,\r\n          pos\r\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\r\n        return res(code === null ? null : String.fromCodePoint(code));\r\n      }\r\n    case 116:\r\n      return res(\"\\t\");\r\n    case 98:\r\n      return res(\"\\b\");\r\n    case 118:\r\n      return res(\"\\u000b\");\r\n    case 102:\r\n      return res(\"\\f\");\r\n    case 13:\r\n      if (input.charCodeAt(pos) === 10) {\r\n        ++pos;\r\n      }\r\n    case 10:\r\n      lineStart = pos;\r\n      ++curLine;\r\n    case 8232:\r\n    case 8233:\r\n      return res(\"\");\r\n    case 56:\r\n    case 57:\r\n      if (inTemplate) {\r\n        return res(null);\r\n      } else {\r\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\r\n      }\r\n    default:\r\n      if (ch >= 48 && ch <= 55) {\r\n        const startPos = pos - 1;\r\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\r\n        let octalStr = match[0];\r\n        let octal = parseInt(octalStr, 8);\r\n        if (octal > 255) {\r\n          octalStr = octalStr.slice(0, -1);\r\n          octal = parseInt(octalStr, 8);\r\n        }\r\n        pos += octalStr.length - 1;\r\n        const next = input.charCodeAt(pos);\r\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\r\n          if (inTemplate) {\r\n            return res(null);\r\n          } else {\r\n            errors.strictNumericEscape(startPos, lineStart, curLine);\r\n          }\r\n        }\r\n        return res(String.fromCharCode(octal));\r\n      }\r\n      return res(String.fromCharCode(ch));\r\n  }\r\n}\r\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\r\n  const initialPos = pos;\r\n  let n;\r\n  ({\r\n    n,\r\n    pos\r\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors, !throwOnInvalid));\r\n  if (n === null) {\r\n    if (throwOnInvalid) {\r\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\r\n    } else {\r\n      pos = initialPos - 1;\r\n    }\r\n  }\r\n  return {\r\n    code: n,\r\n    pos\r\n  };\r\n}\r\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors, bailOnError) {\r\n  const start = pos;\r\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\r\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\r\n  let invalid = false;\r\n  let total = 0;\r\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\r\n    const code = input.charCodeAt(pos);\r\n    let val;\r\n    if (code === 95 && allowNumSeparator !== \"bail\") {\r\n      const prev = input.charCodeAt(pos - 1);\r\n      const next = input.charCodeAt(pos + 1);\r\n      if (!allowNumSeparator) {\r\n        if (bailOnError) return {\r\n          n: null,\r\n          pos\r\n        };\r\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\r\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\r\n        if (bailOnError) return {\r\n          n: null,\r\n          pos\r\n        };\r\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\r\n      }\r\n      ++pos;\r\n      continue;\r\n    }\r\n    if (code >= 97) {\r\n      val = code - 97 + 10;\r\n    } else if (code >= 65) {\r\n      val = code - 65 + 10;\r\n    } else if (_isDigit(code)) {\r\n      val = code - 48;\r\n    } else {\r\n      val = Infinity;\r\n    }\r\n    if (val >= radix) {\r\n      if (val <= 9 && bailOnError) {\r\n        return {\r\n          n: null,\r\n          pos\r\n        };\r\n      } else if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\r\n        val = 0;\r\n      } else if (forceLen) {\r\n        val = 0;\r\n        invalid = true;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    ++pos;\r\n    total = total * radix + val;\r\n  }\r\n  if (pos === start || len != null && pos - start !== len || invalid) {\r\n    return {\r\n      n: null,\r\n      pos\r\n    };\r\n  }\r\n  return {\r\n    n: total,\r\n    pos\r\n  };\r\n}\r\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\r\n  const ch = input.charCodeAt(pos);\r\n  let code;\r\n  if (ch === 123) {\r\n    ++pos;\r\n    ({\r\n      code,\r\n      pos\r\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\r\n    ++pos;\r\n    if (code !== null && code > 0x10ffff) {\r\n      if (throwOnInvalid) {\r\n        errors.invalidCodePoint(pos, lineStart, curLine);\r\n      } else {\r\n        return {\r\n          code: null,\r\n          pos\r\n        };\r\n      }\r\n    }\r\n  } else {\r\n    ({\r\n      code,\r\n      pos\r\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\r\n  }\r\n  return {\r\n    code,\r\n    pos\r\n  };\r\n}\r\nconst _excluded = [\"at\"],\r\n  _excluded2 = [\"at\"];\r\nfunction buildPosition(pos, lineStart, curLine) {\r\n  return new Position(curLine, pos - lineStart, pos);\r\n}\r\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100, 118]);\r\nclass Token {\r\n  constructor(state) {\r\n    this.type = state.type;\r\n    this.value = state.value;\r\n    this.start = state.start;\r\n    this.end = state.end;\r\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\r\n  }\r\n}\r\nclass Tokenizer extends CommentsParser {\r\n  constructor(options, input) {\r\n    super();\r\n    this.isLookahead = void 0;\r\n    this.tokens = [];\r\n    this.errorHandlers_readInt = {\r\n      invalidDigit: (pos, lineStart, curLine, radix) => {\r\n        if (!this.options.errorRecovery) return false;\r\n        this.raise(Errors.InvalidDigit, {\r\n          at: buildPosition(pos, lineStart, curLine),\r\n          radix\r\n        });\r\n        return true;\r\n      },\r\n      numericSeparatorInEscapeSequence: this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),\r\n      unexpectedNumericSeparator: this.errorBuilder(Errors.UnexpectedNumericSeparator)\r\n    };\r\n    this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {\r\n      invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\r\n      invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint)\r\n    });\r\n    this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {\r\n      strictNumericEscape: (pos, lineStart, curLine) => {\r\n        this.recordStrictModeErrors(Errors.StrictNumericEscape, {\r\n          at: buildPosition(pos, lineStart, curLine)\r\n        });\r\n      },\r\n      unterminated: (pos, lineStart, curLine) => {\r\n        throw this.raise(Errors.UnterminatedString, {\r\n          at: buildPosition(pos - 1, lineStart, curLine)\r\n        });\r\n      }\r\n    });\r\n    this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {\r\n      strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\r\n      unterminated: (pos, lineStart, curLine) => {\r\n        throw this.raise(Errors.UnterminatedTemplate, {\r\n          at: buildPosition(pos, lineStart, curLine)\r\n        });\r\n      }\r\n    });\r\n    this.state = new State();\r\n    this.state.init(options);\r\n    this.input = input;\r\n    this.length = input.length;\r\n    this.isLookahead = false;\r\n  }\r\n  pushToken(token) {\r\n    this.tokens.length = this.state.tokensLength;\r\n    this.tokens.push(token);\r\n    ++this.state.tokensLength;\r\n  }\r\n  next() {\r\n    this.checkKeywordEscapes();\r\n    if (this.options.tokens) {\r\n      this.pushToken(new Token(this.state));\r\n    }\r\n    this.state.lastTokStart = this.state.start;\r\n    this.state.lastTokEndLoc = this.state.endLoc;\r\n    this.state.lastTokStartLoc = this.state.startLoc;\r\n    this.nextToken();\r\n  }\r\n  eat(type) {\r\n    if (this.match(type)) {\r\n      this.next();\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  match(type) {\r\n    return this.state.type === type;\r\n  }\r\n  createLookaheadState(state) {\r\n    return {\r\n      pos: state.pos,\r\n      value: null,\r\n      type: state.type,\r\n      start: state.start,\r\n      end: state.end,\r\n      context: [this.curContext()],\r\n      inType: state.inType,\r\n      startLoc: state.startLoc,\r\n      lastTokEndLoc: state.lastTokEndLoc,\r\n      curLine: state.curLine,\r\n      lineStart: state.lineStart,\r\n      curPosition: state.curPosition\r\n    };\r\n  }\r\n  lookahead() {\r\n    const old = this.state;\r\n    this.state = this.createLookaheadState(old);\r\n    this.isLookahead = true;\r\n    this.nextToken();\r\n    this.isLookahead = false;\r\n    const curr = this.state;\r\n    this.state = old;\r\n    return curr;\r\n  }\r\n  nextTokenStart() {\r\n    return this.nextTokenStartSince(this.state.pos);\r\n  }\r\n  nextTokenStartSince(pos) {\r\n    skipWhiteSpace.lastIndex = pos;\r\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\r\n  }\r\n  lookaheadCharCode() {\r\n    return this.input.charCodeAt(this.nextTokenStart());\r\n  }\r\n  codePointAtPos(pos) {\r\n    let cp = this.input.charCodeAt(pos);\r\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\r\n      const trail = this.input.charCodeAt(pos);\r\n      if ((trail & 0xfc00) === 0xdc00) {\r\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\r\n      }\r\n    }\r\n    return cp;\r\n  }\r\n  setStrict(strict) {\r\n    this.state.strict = strict;\r\n    if (strict) {\r\n      this.state.strictErrors.forEach(([toParseError, at]) => this.raise(toParseError, {\r\n        at\r\n      }));\r\n      this.state.strictErrors.clear();\r\n    }\r\n  }\r\n  curContext() {\r\n    return this.state.context[this.state.context.length - 1];\r\n  }\r\n  nextToken() {\r\n    this.skipSpace();\r\n    this.state.start = this.state.pos;\r\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\r\n    if (this.state.pos >= this.length) {\r\n      this.finishToken(137);\r\n      return;\r\n    }\r\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\r\n  }\r\n  skipBlockComment(commentEnd) {\r\n    let startLoc;\r\n    if (!this.isLookahead) startLoc = this.state.curPosition();\r\n    const start = this.state.pos;\r\n    const end = this.input.indexOf(commentEnd, start + 2);\r\n    if (end === -1) {\r\n      throw this.raise(Errors.UnterminatedComment, {\r\n        at: this.state.curPosition()\r\n      });\r\n    }\r\n    this.state.pos = end + commentEnd.length;\r\n    lineBreakG.lastIndex = start + 2;\r\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\r\n      ++this.state.curLine;\r\n      this.state.lineStart = lineBreakG.lastIndex;\r\n    }\r\n    if (this.isLookahead) return;\r\n    const comment = {\r\n      type: \"CommentBlock\",\r\n      value: this.input.slice(start + 2, end),\r\n      start,\r\n      end: end + commentEnd.length,\r\n      loc: new SourceLocation(startLoc, this.state.curPosition())\r\n    };\r\n    if (this.options.tokens) this.pushToken(comment);\r\n    return comment;\r\n  }\r\n  skipLineComment(startSkip) {\r\n    const start = this.state.pos;\r\n    let startLoc;\r\n    if (!this.isLookahead) startLoc = this.state.curPosition();\r\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\r\n    if (this.state.pos < this.length) {\r\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\r\n        ch = this.input.charCodeAt(this.state.pos);\r\n      }\r\n    }\r\n    if (this.isLookahead) return;\r\n    const end = this.state.pos;\r\n    const value = this.input.slice(start + startSkip, end);\r\n    const comment = {\r\n      type: \"CommentLine\",\r\n      value,\r\n      start,\r\n      end,\r\n      loc: new SourceLocation(startLoc, this.state.curPosition())\r\n    };\r\n    if (this.options.tokens) this.pushToken(comment);\r\n    return comment;\r\n  }\r\n  skipSpace() {\r\n    const spaceStart = this.state.pos;\r\n    const comments = [];\r\n    loop: while (this.state.pos < this.length) {\r\n      const ch = this.input.charCodeAt(this.state.pos);\r\n      switch (ch) {\r\n        case 32:\r\n        case 160:\r\n        case 9:\r\n          ++this.state.pos;\r\n          break;\r\n        case 13:\r\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\r\n            ++this.state.pos;\r\n          }\r\n        case 10:\r\n        case 8232:\r\n        case 8233:\r\n          ++this.state.pos;\r\n          ++this.state.curLine;\r\n          this.state.lineStart = this.state.pos;\r\n          break;\r\n        case 47:\r\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\r\n            case 42:\r\n              {\r\n                const comment = this.skipBlockComment(\"*/\");\r\n                if (comment !== undefined) {\r\n                  this.addComment(comment);\r\n                  if (this.options.attachComment) comments.push(comment);\r\n                }\r\n                break;\r\n              }\r\n            case 47:\r\n              {\r\n                const comment = this.skipLineComment(2);\r\n                if (comment !== undefined) {\r\n                  this.addComment(comment);\r\n                  if (this.options.attachComment) comments.push(comment);\r\n                }\r\n                break;\r\n              }\r\n            default:\r\n              break loop;\r\n          }\r\n          break;\r\n        default:\r\n          if (isWhitespace(ch)) {\r\n            ++this.state.pos;\r\n          } else if (ch === 45 && !this.inModule && this.options.annexB) {\r\n            const pos = this.state.pos;\r\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\r\n              const comment = this.skipLineComment(3);\r\n              if (comment !== undefined) {\r\n                this.addComment(comment);\r\n                if (this.options.attachComment) comments.push(comment);\r\n              }\r\n            } else {\r\n              break loop;\r\n            }\r\n          } else if (ch === 60 && !this.inModule && this.options.annexB) {\r\n            const pos = this.state.pos;\r\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\r\n              const comment = this.skipLineComment(4);\r\n              if (comment !== undefined) {\r\n                this.addComment(comment);\r\n                if (this.options.attachComment) comments.push(comment);\r\n              }\r\n            } else {\r\n              break loop;\r\n            }\r\n          } else {\r\n            break loop;\r\n          }\r\n      }\r\n    }\r\n    if (comments.length > 0) {\r\n      const end = this.state.pos;\r\n      const commentWhitespace = {\r\n        start: spaceStart,\r\n        end,\r\n        comments,\r\n        leadingNode: null,\r\n        trailingNode: null,\r\n        containingNode: null\r\n      };\r\n      this.state.commentStack.push(commentWhitespace);\r\n    }\r\n  }\r\n  finishToken(type, val) {\r\n    this.state.end = this.state.pos;\r\n    this.state.endLoc = this.state.curPosition();\r\n    const prevType = this.state.type;\r\n    this.state.type = type;\r\n    this.state.value = val;\r\n    if (!this.isLookahead) {\r\n      this.updateContext(prevType);\r\n    }\r\n  }\r\n  replaceToken(type) {\r\n    this.state.type = type;\r\n    this.updateContext();\r\n  }\r\n  readToken_numberSign() {\r\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\r\n      return;\r\n    }\r\n    const nextPos = this.state.pos + 1;\r\n    const next = this.codePointAtPos(nextPos);\r\n    if (next >= 48 && next <= 57) {\r\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\r\n        at: this.state.curPosition()\r\n      });\r\n    }\r\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\r\n      this.expectPlugin(\"recordAndTuple\");\r\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\r\n        throw this.raise(next === 123 ? Errors.RecordExpressionHashIncorrectStartSyntaxType : Errors.TupleExpressionHashIncorrectStartSyntaxType, {\r\n          at: this.state.curPosition()\r\n        });\r\n      }\r\n      this.state.pos += 2;\r\n      if (next === 123) {\r\n        this.finishToken(7);\r\n      } else {\r\n        this.finishToken(1);\r\n      }\r\n    } else if (isIdentifierStart(next)) {\r\n      ++this.state.pos;\r\n      this.finishToken(136, this.readWord1(next));\r\n    } else if (next === 92) {\r\n      ++this.state.pos;\r\n      this.finishToken(136, this.readWord1());\r\n    } else {\r\n      this.finishOp(27, 1);\r\n    }\r\n  }\r\n  readToken_dot() {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (next >= 48 && next <= 57) {\r\n      this.readNumber(true);\r\n      return;\r\n    }\r\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\r\n      this.state.pos += 3;\r\n      this.finishToken(21);\r\n    } else {\r\n      ++this.state.pos;\r\n      this.finishToken(16);\r\n    }\r\n  }\r\n  readToken_slash() {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (next === 61) {\r\n      this.finishOp(31, 2);\r\n    } else {\r\n      this.finishOp(56, 1);\r\n    }\r\n  }\r\n  readToken_interpreter() {\r\n    if (this.state.pos !== 0 || this.length < 2) return false;\r\n    let ch = this.input.charCodeAt(this.state.pos + 1);\r\n    if (ch !== 33) return false;\r\n    const start = this.state.pos;\r\n    this.state.pos += 1;\r\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\r\n      ch = this.input.charCodeAt(this.state.pos);\r\n    }\r\n    const value = this.input.slice(start + 2, this.state.pos);\r\n    this.finishToken(28, value);\r\n    return true;\r\n  }\r\n  readToken_mult_modulo(code) {\r\n    let type = code === 42 ? 55 : 54;\r\n    let width = 1;\r\n    let next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (code === 42 && next === 42) {\r\n      width++;\r\n      next = this.input.charCodeAt(this.state.pos + 2);\r\n      type = 57;\r\n    }\r\n    if (next === 61 && !this.state.inType) {\r\n      width++;\r\n      type = code === 37 ? 33 : 30;\r\n    }\r\n    this.finishOp(type, width);\r\n  }\r\n  readToken_pipe_amp(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (next === code) {\r\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\r\n        this.finishOp(30, 3);\r\n      } else {\r\n        this.finishOp(code === 124 ? 41 : 42, 2);\r\n      }\r\n      return;\r\n    }\r\n    if (code === 124) {\r\n      if (next === 62) {\r\n        this.finishOp(39, 2);\r\n        return;\r\n      }\r\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\r\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\r\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\r\n            at: this.state.curPosition()\r\n          });\r\n        }\r\n        this.state.pos += 2;\r\n        this.finishToken(9);\r\n        return;\r\n      }\r\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\r\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\r\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\r\n            at: this.state.curPosition()\r\n          });\r\n        }\r\n        this.state.pos += 2;\r\n        this.finishToken(4);\r\n        return;\r\n      }\r\n    }\r\n    if (next === 61) {\r\n      this.finishOp(30, 2);\r\n      return;\r\n    }\r\n    this.finishOp(code === 124 ? 43 : 45, 1);\r\n  }\r\n  readToken_caret() {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (next === 61 && !this.state.inType) {\r\n      this.finishOp(32, 2);\r\n    } else if (next === 94 && this.hasPlugin([\"pipelineOperator\", {\r\n      proposal: \"hack\",\r\n      topicToken: \"^^\"\r\n    }])) {\r\n      this.finishOp(37, 2);\r\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\r\n      if (lookaheadCh === 94) {\r\n        this.unexpected();\r\n      }\r\n    } else {\r\n      this.finishOp(44, 1);\r\n    }\r\n  }\r\n  readToken_atSign() {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (next === 64 && this.hasPlugin([\"pipelineOperator\", {\r\n      proposal: \"hack\",\r\n      topicToken: \"@@\"\r\n    }])) {\r\n      this.finishOp(38, 2);\r\n    } else {\r\n      this.finishOp(26, 1);\r\n    }\r\n  }\r\n  readToken_plus_min(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (next === code) {\r\n      this.finishOp(34, 2);\r\n      return;\r\n    }\r\n    if (next === 61) {\r\n      this.finishOp(30, 2);\r\n    } else {\r\n      this.finishOp(53, 1);\r\n    }\r\n  }\r\n  readToken_lt() {\r\n    const {\r\n      pos\r\n    } = this.state;\r\n    const next = this.input.charCodeAt(pos + 1);\r\n    if (next === 60) {\r\n      if (this.input.charCodeAt(pos + 2) === 61) {\r\n        this.finishOp(30, 3);\r\n        return;\r\n      }\r\n      this.finishOp(51, 2);\r\n      return;\r\n    }\r\n    if (next === 61) {\r\n      this.finishOp(49, 2);\r\n      return;\r\n    }\r\n    this.finishOp(47, 1);\r\n  }\r\n  readToken_gt() {\r\n    const {\r\n      pos\r\n    } = this.state;\r\n    const next = this.input.charCodeAt(pos + 1);\r\n    if (next === 62) {\r\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\r\n      if (this.input.charCodeAt(pos + size) === 61) {\r\n        this.finishOp(30, size + 1);\r\n        return;\r\n      }\r\n      this.finishOp(52, size);\r\n      return;\r\n    }\r\n    if (next === 61) {\r\n      this.finishOp(49, 2);\r\n      return;\r\n    }\r\n    this.finishOp(48, 1);\r\n  }\r\n  readToken_eq_excl(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (next === 61) {\r\n      this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\r\n      return;\r\n    }\r\n    if (code === 61 && next === 62) {\r\n      this.state.pos += 2;\r\n      this.finishToken(19);\r\n      return;\r\n    }\r\n    this.finishOp(code === 61 ? 29 : 35, 1);\r\n  }\r\n  readToken_question() {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\r\n    if (next === 63) {\r\n      if (next2 === 61) {\r\n        this.finishOp(30, 3);\r\n      } else {\r\n        this.finishOp(40, 2);\r\n      }\r\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\r\n      this.state.pos += 2;\r\n      this.finishToken(18);\r\n    } else {\r\n      ++this.state.pos;\r\n      this.finishToken(17);\r\n    }\r\n  }\r\n  getTokenFromCode(code) {\r\n    switch (code) {\r\n      case 46:\r\n        this.readToken_dot();\r\n        return;\r\n      case 40:\r\n        ++this.state.pos;\r\n        this.finishToken(10);\r\n        return;\r\n      case 41:\r\n        ++this.state.pos;\r\n        this.finishToken(11);\r\n        return;\r\n      case 59:\r\n        ++this.state.pos;\r\n        this.finishToken(13);\r\n        return;\r\n      case 44:\r\n        ++this.state.pos;\r\n        this.finishToken(12);\r\n        return;\r\n      case 91:\r\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\r\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\r\n            throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType, {\r\n              at: this.state.curPosition()\r\n            });\r\n          }\r\n          this.state.pos += 2;\r\n          this.finishToken(2);\r\n        } else {\r\n          ++this.state.pos;\r\n          this.finishToken(0);\r\n        }\r\n        return;\r\n      case 93:\r\n        ++this.state.pos;\r\n        this.finishToken(3);\r\n        return;\r\n      case 123:\r\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\r\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\r\n            throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType, {\r\n              at: this.state.curPosition()\r\n            });\r\n          }\r\n          this.state.pos += 2;\r\n          this.finishToken(6);\r\n        } else {\r\n          ++this.state.pos;\r\n          this.finishToken(5);\r\n        }\r\n        return;\r\n      case 125:\r\n        ++this.state.pos;\r\n        this.finishToken(8);\r\n        return;\r\n      case 58:\r\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\r\n          this.finishOp(15, 2);\r\n        } else {\r\n          ++this.state.pos;\r\n          this.finishToken(14);\r\n        }\r\n        return;\r\n      case 63:\r\n        this.readToken_question();\r\n        return;\r\n      case 96:\r\n        this.readTemplateToken();\r\n        return;\r\n      case 48:\r\n        {\r\n          const next = this.input.charCodeAt(this.state.pos + 1);\r\n          if (next === 120 || next === 88) {\r\n            this.readRadixNumber(16);\r\n            return;\r\n          }\r\n          if (next === 111 || next === 79) {\r\n            this.readRadixNumber(8);\r\n            return;\r\n          }\r\n          if (next === 98 || next === 66) {\r\n            this.readRadixNumber(2);\r\n            return;\r\n          }\r\n        }\r\n      case 49:\r\n      case 50:\r\n      case 51:\r\n      case 52:\r\n      case 53:\r\n      case 54:\r\n      case 55:\r\n      case 56:\r\n      case 57:\r\n        this.readNumber(false);\r\n        return;\r\n      case 34:\r\n      case 39:\r\n        this.readString(code);\r\n        return;\r\n      case 47:\r\n        this.readToken_slash();\r\n        return;\r\n      case 37:\r\n      case 42:\r\n        this.readToken_mult_modulo(code);\r\n        return;\r\n      case 124:\r\n      case 38:\r\n        this.readToken_pipe_amp(code);\r\n        return;\r\n      case 94:\r\n        this.readToken_caret();\r\n        return;\r\n      case 43:\r\n      case 45:\r\n        this.readToken_plus_min(code);\r\n        return;\r\n      case 60:\r\n        this.readToken_lt();\r\n        return;\r\n      case 62:\r\n        this.readToken_gt();\r\n        return;\r\n      case 61:\r\n      case 33:\r\n        this.readToken_eq_excl(code);\r\n        return;\r\n      case 126:\r\n        this.finishOp(36, 1);\r\n        return;\r\n      case 64:\r\n        this.readToken_atSign();\r\n        return;\r\n      case 35:\r\n        this.readToken_numberSign();\r\n        return;\r\n      case 92:\r\n        this.readWord();\r\n        return;\r\n      default:\r\n        if (isIdentifierStart(code)) {\r\n          this.readWord(code);\r\n          return;\r\n        }\r\n    }\r\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\r\n      at: this.state.curPosition(),\r\n      unexpected: String.fromCodePoint(code)\r\n    });\r\n  }\r\n  finishOp(type, size) {\r\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\r\n    this.state.pos += size;\r\n    this.finishToken(type, str);\r\n  }\r\n  readRegexp() {\r\n    const startLoc = this.state.startLoc;\r\n    const start = this.state.start + 1;\r\n    let escaped, inClass;\r\n    let {\r\n      pos\r\n    } = this.state;\r\n    for (;; ++pos) {\r\n      if (pos >= this.length) {\r\n        throw this.raise(Errors.UnterminatedRegExp, {\r\n          at: createPositionWithColumnOffset(startLoc, 1)\r\n        });\r\n      }\r\n      const ch = this.input.charCodeAt(pos);\r\n      if (isNewLine(ch)) {\r\n        throw this.raise(Errors.UnterminatedRegExp, {\r\n          at: createPositionWithColumnOffset(startLoc, 1)\r\n        });\r\n      }\r\n      if (escaped) {\r\n        escaped = false;\r\n      } else {\r\n        if (ch === 91) {\r\n          inClass = true;\r\n        } else if (ch === 93 && inClass) {\r\n          inClass = false;\r\n        } else if (ch === 47 && !inClass) {\r\n          break;\r\n        }\r\n        escaped = ch === 92;\r\n      }\r\n    }\r\n    const content = this.input.slice(start, pos);\r\n    ++pos;\r\n    let mods = \"\";\r\n    const nextPos = () => createPositionWithColumnOffset(startLoc, pos + 2 - start);\r\n    while (pos < this.length) {\r\n      const cp = this.codePointAtPos(pos);\r\n      const char = String.fromCharCode(cp);\r\n      if (VALID_REGEX_FLAGS.has(cp)) {\r\n        if (cp === 118) {\r\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\r\n          if (mods.includes(\"u\")) {\r\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\r\n              at: nextPos()\r\n            });\r\n          }\r\n        } else if (cp === 117) {\r\n          if (mods.includes(\"v\")) {\r\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\r\n              at: nextPos()\r\n            });\r\n          }\r\n        }\r\n        if (mods.includes(char)) {\r\n          this.raise(Errors.DuplicateRegExpFlags, {\r\n            at: nextPos()\r\n          });\r\n        }\r\n      } else if (isIdentifierChar(cp) || cp === 92) {\r\n        this.raise(Errors.MalformedRegExpFlags, {\r\n          at: nextPos()\r\n        });\r\n      } else {\r\n        break;\r\n      }\r\n      ++pos;\r\n      mods += char;\r\n    }\r\n    this.state.pos = pos;\r\n    this.finishToken(135, {\r\n      pattern: content,\r\n      flags: mods\r\n    });\r\n  }\r\n  readInt(radix, len, forceLen = false, allowNumSeparator = true) {\r\n    const {\r\n      n,\r\n      pos\r\n    } = readInt(this.input, this.state.pos, this.state.lineStart, this.state.curLine, radix, len, forceLen, allowNumSeparator, this.errorHandlers_readInt, false);\r\n    this.state.pos = pos;\r\n    return n;\r\n  }\r\n  readRadixNumber(radix) {\r\n    const startLoc = this.state.curPosition();\r\n    let isBigInt = false;\r\n    this.state.pos += 2;\r\n    const val = this.readInt(radix);\r\n    if (val == null) {\r\n      this.raise(Errors.InvalidDigit, {\r\n        at: createPositionWithColumnOffset(startLoc, 2),\r\n        radix\r\n      });\r\n    }\r\n    const next = this.input.charCodeAt(this.state.pos);\r\n    if (next === 110) {\r\n      ++this.state.pos;\r\n      isBigInt = true;\r\n    } else if (next === 109) {\r\n      throw this.raise(Errors.InvalidDecimal, {\r\n        at: startLoc\r\n      });\r\n    }\r\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\r\n      throw this.raise(Errors.NumberIdentifier, {\r\n        at: this.state.curPosition()\r\n      });\r\n    }\r\n    if (isBigInt) {\r\n      const str = this.input.slice(startLoc.index, this.state.pos).replace(/[_n]/g, \"\");\r\n      this.finishToken(133, str);\r\n      return;\r\n    }\r\n    this.finishToken(132, val);\r\n  }\r\n  readNumber(startsWithDot) {\r\n    const start = this.state.pos;\r\n    const startLoc = this.state.curPosition();\r\n    let isFloat = false;\r\n    let isBigInt = false;\r\n    let isDecimal = false;\r\n    let hasExponent = false;\r\n    let isOctal = false;\r\n    if (!startsWithDot && this.readInt(10) === null) {\r\n      this.raise(Errors.InvalidNumber, {\r\n        at: this.state.curPosition()\r\n      });\r\n    }\r\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\r\n    if (hasLeadingZero) {\r\n      const integer = this.input.slice(start, this.state.pos);\r\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, {\r\n        at: startLoc\r\n      });\r\n      if (!this.state.strict) {\r\n        const underscorePos = integer.indexOf(\"_\");\r\n        if (underscorePos > 0) {\r\n          this.raise(Errors.ZeroDigitNumericSeparator, {\r\n            at: createPositionWithColumnOffset(startLoc, underscorePos)\r\n          });\r\n        }\r\n      }\r\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\r\n    }\r\n    let next = this.input.charCodeAt(this.state.pos);\r\n    if (next === 46 && !isOctal) {\r\n      ++this.state.pos;\r\n      this.readInt(10);\r\n      isFloat = true;\r\n      next = this.input.charCodeAt(this.state.pos);\r\n    }\r\n    if ((next === 69 || next === 101) && !isOctal) {\r\n      next = this.input.charCodeAt(++this.state.pos);\r\n      if (next === 43 || next === 45) {\r\n        ++this.state.pos;\r\n      }\r\n      if (this.readInt(10) === null) {\r\n        this.raise(Errors.InvalidOrMissingExponent, {\r\n          at: startLoc\r\n        });\r\n      }\r\n      isFloat = true;\r\n      hasExponent = true;\r\n      next = this.input.charCodeAt(this.state.pos);\r\n    }\r\n    if (next === 110) {\r\n      if (isFloat || hasLeadingZero) {\r\n        this.raise(Errors.InvalidBigIntLiteral, {\r\n          at: startLoc\r\n        });\r\n      }\r\n      ++this.state.pos;\r\n      isBigInt = true;\r\n    }\r\n    if (next === 109) {\r\n      this.expectPlugin(\"decimal\", this.state.curPosition());\r\n      if (hasExponent || hasLeadingZero) {\r\n        this.raise(Errors.InvalidDecimal, {\r\n          at: startLoc\r\n        });\r\n      }\r\n      ++this.state.pos;\r\n      isDecimal = true;\r\n    }\r\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\r\n      throw this.raise(Errors.NumberIdentifier, {\r\n        at: this.state.curPosition()\r\n      });\r\n    }\r\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\r\n    if (isBigInt) {\r\n      this.finishToken(133, str);\r\n      return;\r\n    }\r\n    if (isDecimal) {\r\n      this.finishToken(134, str);\r\n      return;\r\n    }\r\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\r\n    this.finishToken(132, val);\r\n  }\r\n  readCodePoint(throwOnInvalid) {\r\n    const {\r\n      code,\r\n      pos\r\n    } = readCodePoint(this.input, this.state.pos, this.state.lineStart, this.state.curLine, throwOnInvalid, this.errorHandlers_readCodePoint);\r\n    this.state.pos = pos;\r\n    return code;\r\n  }\r\n  readString(quote) {\r\n    const {\r\n      str,\r\n      pos,\r\n      curLine,\r\n      lineStart\r\n    } = readStringContents(quote === 34 ? \"double\" : \"single\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);\r\n    this.state.pos = pos + 1;\r\n    this.state.lineStart = lineStart;\r\n    this.state.curLine = curLine;\r\n    this.finishToken(131, str);\r\n  }\r\n  readTemplateContinuation() {\r\n    if (!this.match(8)) {\r\n      this.unexpected(null, 8);\r\n    }\r\n    this.state.pos--;\r\n    this.readTemplateToken();\r\n  }\r\n  readTemplateToken() {\r\n    const opening = this.input[this.state.pos];\r\n    const {\r\n      str,\r\n      firstInvalidLoc,\r\n      pos,\r\n      curLine,\r\n      lineStart\r\n    } = readStringContents(\"template\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);\r\n    this.state.pos = pos + 1;\r\n    this.state.lineStart = lineStart;\r\n    this.state.curLine = curLine;\r\n    if (firstInvalidLoc) {\r\n      this.state.firstInvalidTemplateEscapePos = new Position(firstInvalidLoc.curLine, firstInvalidLoc.pos - firstInvalidLoc.lineStart, firstInvalidLoc.pos);\r\n    }\r\n    if (this.input.codePointAt(pos) === 96) {\r\n      this.finishToken(24, firstInvalidLoc ? null : opening + str + \"`\");\r\n    } else {\r\n      this.state.pos++;\r\n      this.finishToken(25, firstInvalidLoc ? null : opening + str + \"${\");\r\n    }\r\n  }\r\n  recordStrictModeErrors(toParseError, {\r\n    at\r\n  }) {\r\n    const index = at.index;\r\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\r\n      this.raise(toParseError, {\r\n        at\r\n      });\r\n    } else {\r\n      this.state.strictErrors.set(index, [toParseError, at]);\r\n    }\r\n  }\r\n  readWord1(firstCode) {\r\n    this.state.containsEsc = false;\r\n    let word = \"\";\r\n    const start = this.state.pos;\r\n    let chunkStart = this.state.pos;\r\n    if (firstCode !== undefined) {\r\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\r\n    }\r\n    while (this.state.pos < this.length) {\r\n      const ch = this.codePointAtPos(this.state.pos);\r\n      if (isIdentifierChar(ch)) {\r\n        this.state.pos += ch <= 0xffff ? 1 : 2;\r\n      } else if (ch === 92) {\r\n        this.state.containsEsc = true;\r\n        word += this.input.slice(chunkStart, this.state.pos);\r\n        const escStart = this.state.curPosition();\r\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\r\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\r\n          this.raise(Errors.MissingUnicodeEscape, {\r\n            at: this.state.curPosition()\r\n          });\r\n          chunkStart = this.state.pos - 1;\r\n          continue;\r\n        }\r\n        ++this.state.pos;\r\n        const esc = this.readCodePoint(true);\r\n        if (esc !== null) {\r\n          if (!identifierCheck(esc)) {\r\n            this.raise(Errors.EscapedCharNotAnIdentifier, {\r\n              at: escStart\r\n            });\r\n          }\r\n          word += String.fromCodePoint(esc);\r\n        }\r\n        chunkStart = this.state.pos;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return word + this.input.slice(chunkStart, this.state.pos);\r\n  }\r\n  readWord(firstCode) {\r\n    const word = this.readWord1(firstCode);\r\n    const type = keywords$1.get(word);\r\n    if (type !== undefined) {\r\n      this.finishToken(type, tokenLabelName(type));\r\n    } else {\r\n      this.finishToken(130, word);\r\n    }\r\n  }\r\n  checkKeywordEscapes() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\r\n      this.raise(Errors.InvalidEscapedReservedWord, {\r\n        at: this.state.startLoc,\r\n        reservedWord: tokenLabelName(type)\r\n      });\r\n    }\r\n  }\r\n  raise(toParseError, raiseProperties) {\r\n    const {\r\n        at\r\n      } = raiseProperties,\r\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded);\r\n    const loc = at instanceof Position ? at : at.loc.start;\r\n    const error = toParseError({\r\n      loc,\r\n      details\r\n    });\r\n    if (!this.options.errorRecovery) throw error;\r\n    if (!this.isLookahead) this.state.errors.push(error);\r\n    return error;\r\n  }\r\n  raiseOverwrite(toParseError, raiseProperties) {\r\n    const {\r\n        at\r\n      } = raiseProperties,\r\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded2);\r\n    const loc = at instanceof Position ? at : at.loc.start;\r\n    const pos = loc.index;\r\n    const errors = this.state.errors;\r\n    for (let i = errors.length - 1; i >= 0; i--) {\r\n      const error = errors[i];\r\n      if (error.loc.index === pos) {\r\n        return errors[i] = toParseError({\r\n          loc,\r\n          details\r\n        });\r\n      }\r\n      if (error.loc.index < pos) break;\r\n    }\r\n    return this.raise(toParseError, raiseProperties);\r\n  }\r\n  updateContext(prevType) {}\r\n  unexpected(loc, type) {\r\n    throw this.raise(Errors.UnexpectedToken, {\r\n      expected: type ? tokenLabelName(type) : null,\r\n      at: loc != null ? loc : this.state.startLoc\r\n    });\r\n  }\r\n  expectPlugin(pluginName, loc) {\r\n    if (this.hasPlugin(pluginName)) {\r\n      return true;\r\n    }\r\n    throw this.raise(Errors.MissingPlugin, {\r\n      at: loc != null ? loc : this.state.startLoc,\r\n      missingPlugin: [pluginName]\r\n    });\r\n  }\r\n  expectOnePlugin(pluginNames) {\r\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\r\n      throw this.raise(Errors.MissingOneOfPlugins, {\r\n        at: this.state.startLoc,\r\n        missingPlugin: pluginNames\r\n      });\r\n    }\r\n  }\r\n  errorBuilder(error) {\r\n    return (pos, lineStart, curLine) => {\r\n      this.raise(error, {\r\n        at: buildPosition(pos, lineStart, curLine)\r\n      });\r\n    };\r\n  }\r\n}\r\nclass ClassScope {\r\n  constructor() {\r\n    this.privateNames = new Set();\r\n    this.loneAccessors = new Map();\r\n    this.undefinedPrivateNames = new Map();\r\n  }\r\n}\r\nclass ClassScopeHandler {\r\n  constructor(parser) {\r\n    this.parser = void 0;\r\n    this.stack = [];\r\n    this.undefinedPrivateNames = new Map();\r\n    this.parser = parser;\r\n  }\r\n  current() {\r\n    return this.stack[this.stack.length - 1];\r\n  }\r\n  enter() {\r\n    this.stack.push(new ClassScope());\r\n  }\r\n  exit() {\r\n    const oldClassScope = this.stack.pop();\r\n    const current = this.current();\r\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\r\n      if (current) {\r\n        if (!current.undefinedPrivateNames.has(name)) {\r\n          current.undefinedPrivateNames.set(name, loc);\r\n        }\r\n      } else {\r\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\r\n          at: loc,\r\n          identifierName: name\r\n        });\r\n      }\r\n    }\r\n  }\r\n  declarePrivateName(name, elementType, loc) {\r\n    const {\r\n      privateNames,\r\n      loneAccessors,\r\n      undefinedPrivateNames\r\n    } = this.current();\r\n    let redefined = privateNames.has(name);\r\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\r\n      const accessor = redefined && loneAccessors.get(name);\r\n      if (accessor) {\r\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\r\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\r\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\r\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\r\n        redefined = oldKind === newKind || oldStatic !== newStatic;\r\n        if (!redefined) loneAccessors.delete(name);\r\n      } else if (!redefined) {\r\n        loneAccessors.set(name, elementType);\r\n      }\r\n    }\r\n    if (redefined) {\r\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\r\n        at: loc,\r\n        identifierName: name\r\n      });\r\n    }\r\n    privateNames.add(name);\r\n    undefinedPrivateNames.delete(name);\r\n  }\r\n  usePrivateName(name, loc) {\r\n    let classScope;\r\n    for (classScope of this.stack) {\r\n      if (classScope.privateNames.has(name)) return;\r\n    }\r\n    if (classScope) {\r\n      classScope.undefinedPrivateNames.set(name, loc);\r\n    } else {\r\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\r\n        at: loc,\r\n        identifierName: name\r\n      });\r\n    }\r\n  }\r\n}\r\nconst kExpression = 0,\r\n  kMaybeArrowParameterDeclaration = 1,\r\n  kMaybeAsyncArrowParameterDeclaration = 2,\r\n  kParameterDeclaration = 3;\r\nclass ExpressionScope {\r\n  constructor(type = kExpression) {\r\n    this.type = void 0;\r\n    this.type = type;\r\n  }\r\n  canBeArrowParameterDeclaration() {\r\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\r\n  }\r\n  isCertainlyParameterDeclaration() {\r\n    return this.type === kParameterDeclaration;\r\n  }\r\n}\r\nclass ArrowHeadParsingScope extends ExpressionScope {\r\n  constructor(type) {\r\n    super(type);\r\n    this.declarationErrors = new Map();\r\n  }\r\n  recordDeclarationError(ParsingErrorClass, {\r\n    at\r\n  }) {\r\n    const index = at.index;\r\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\r\n  }\r\n  clearDeclarationError(index) {\r\n    this.declarationErrors.delete(index);\r\n  }\r\n  iterateErrors(iterator) {\r\n    this.declarationErrors.forEach(iterator);\r\n  }\r\n}\r\nclass ExpressionScopeHandler {\r\n  constructor(parser) {\r\n    this.parser = void 0;\r\n    this.stack = [new ExpressionScope()];\r\n    this.parser = parser;\r\n  }\r\n  enter(scope) {\r\n    this.stack.push(scope);\r\n  }\r\n  exit() {\r\n    this.stack.pop();\r\n  }\r\n  recordParameterInitializerError(toParseError, {\r\n    at: node\r\n  }) {\r\n    const origin = {\r\n      at: node.loc.start\r\n    };\r\n    const {\r\n      stack\r\n    } = this;\r\n    let i = stack.length - 1;\r\n    let scope = stack[i];\r\n    while (!scope.isCertainlyParameterDeclaration()) {\r\n      if (scope.canBeArrowParameterDeclaration()) {\r\n        scope.recordDeclarationError(toParseError, origin);\r\n      } else {\r\n        return;\r\n      }\r\n      scope = stack[--i];\r\n    }\r\n    this.parser.raise(toParseError, origin);\r\n  }\r\n  recordArrowParameterBindingError(error, {\r\n    at: node\r\n  }) {\r\n    const {\r\n      stack\r\n    } = this;\r\n    const scope = stack[stack.length - 1];\r\n    const origin = {\r\n      at: node.loc.start\r\n    };\r\n    if (scope.isCertainlyParameterDeclaration()) {\r\n      this.parser.raise(error, origin);\r\n    } else if (scope.canBeArrowParameterDeclaration()) {\r\n      scope.recordDeclarationError(error, origin);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  recordAsyncArrowParametersError({\r\n    at\r\n  }) {\r\n    const {\r\n      stack\r\n    } = this;\r\n    let i = stack.length - 1;\r\n    let scope = stack[i];\r\n    while (scope.canBeArrowParameterDeclaration()) {\r\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\r\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, {\r\n          at\r\n        });\r\n      }\r\n      scope = stack[--i];\r\n    }\r\n  }\r\n  validateAsPattern() {\r\n    const {\r\n      stack\r\n    } = this;\r\n    const currentScope = stack[stack.length - 1];\r\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\r\n    currentScope.iterateErrors(([toParseError, loc]) => {\r\n      this.parser.raise(toParseError, {\r\n        at: loc\r\n      });\r\n      let i = stack.length - 2;\r\n      let scope = stack[i];\r\n      while (scope.canBeArrowParameterDeclaration()) {\r\n        scope.clearDeclarationError(loc.index);\r\n        scope = stack[--i];\r\n      }\r\n    });\r\n  }\r\n}\r\nfunction newParameterDeclarationScope() {\r\n  return new ExpressionScope(kParameterDeclaration);\r\n}\r\nfunction newArrowHeadScope() {\r\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\r\n}\r\nfunction newAsyncArrowScope() {\r\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\r\n}\r\nfunction newExpressionScope() {\r\n  return new ExpressionScope();\r\n}\r\nconst PARAM = 0b0000,\r\n  PARAM_YIELD = 0b0001,\r\n  PARAM_AWAIT = 0b0010,\r\n  PARAM_RETURN = 0b0100,\r\n  PARAM_IN = 0b1000;\r\nclass ProductionParameterHandler {\r\n  constructor() {\r\n    this.stacks = [];\r\n  }\r\n  enter(flags) {\r\n    this.stacks.push(flags);\r\n  }\r\n  exit() {\r\n    this.stacks.pop();\r\n  }\r\n  currentFlags() {\r\n    return this.stacks[this.stacks.length - 1];\r\n  }\r\n  get hasAwait() {\r\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\r\n  }\r\n  get hasYield() {\r\n    return (this.currentFlags() & PARAM_YIELD) > 0;\r\n  }\r\n  get hasReturn() {\r\n    return (this.currentFlags() & PARAM_RETURN) > 0;\r\n  }\r\n  get hasIn() {\r\n    return (this.currentFlags() & PARAM_IN) > 0;\r\n  }\r\n}\r\nfunction functionFlags(isAsync, isGenerator) {\r\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\r\n}\r\nclass UtilParser extends Tokenizer {\r\n  addExtra(node, key, value, enumerable = true) {\r\n    if (!node) return;\r\n    const extra = node.extra = node.extra || {};\r\n    if (enumerable) {\r\n      extra[key] = value;\r\n    } else {\r\n      Object.defineProperty(extra, key, {\r\n        enumerable,\r\n        value\r\n      });\r\n    }\r\n  }\r\n  isContextual(token) {\r\n    return this.state.type === token && !this.state.containsEsc;\r\n  }\r\n  isUnparsedContextual(nameStart, name) {\r\n    const nameEnd = nameStart + name.length;\r\n    if (this.input.slice(nameStart, nameEnd) === name) {\r\n      const nextCh = this.input.charCodeAt(nameEnd);\r\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\r\n    }\r\n    return false;\r\n  }\r\n  isLookaheadContextual(name) {\r\n    const next = this.nextTokenStart();\r\n    return this.isUnparsedContextual(next, name);\r\n  }\r\n  eatContextual(token) {\r\n    if (this.isContextual(token)) {\r\n      this.next();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  expectContextual(token, toParseError) {\r\n    if (!this.eatContextual(token)) {\r\n      if (toParseError != null) {\r\n        throw this.raise(toParseError, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      this.unexpected(null, token);\r\n    }\r\n  }\r\n  canInsertSemicolon() {\r\n    return this.match(137) || this.match(8) || this.hasPrecedingLineBreak();\r\n  }\r\n  hasPrecedingLineBreak() {\r\n    return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));\r\n  }\r\n  hasFollowingLineBreak() {\r\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\r\n    return skipWhiteSpaceToLineBreak.test(this.input);\r\n  }\r\n  isLineTerminator() {\r\n    return this.eat(13) || this.canInsertSemicolon();\r\n  }\r\n  semicolon(allowAsi = true) {\r\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\r\n    this.raise(Errors.MissingSemicolon, {\r\n      at: this.state.lastTokEndLoc\r\n    });\r\n  }\r\n  expect(type, loc) {\r\n    this.eat(type) || this.unexpected(loc, type);\r\n  }\r\n  tryParse(fn, oldState = this.state.clone()) {\r\n    const abortSignal = {\r\n      node: null\r\n    };\r\n    try {\r\n      const node = fn((node = null) => {\r\n        abortSignal.node = node;\r\n        throw abortSignal;\r\n      });\r\n      if (this.state.errors.length > oldState.errors.length) {\r\n        const failState = this.state;\r\n        this.state = oldState;\r\n        this.state.tokensLength = failState.tokensLength;\r\n        return {\r\n          node,\r\n          error: failState.errors[oldState.errors.length],\r\n          thrown: false,\r\n          aborted: false,\r\n          failState\r\n        };\r\n      }\r\n      return {\r\n        node,\r\n        error: null,\r\n        thrown: false,\r\n        aborted: false,\r\n        failState: null\r\n      };\r\n    } catch (error) {\r\n      const failState = this.state;\r\n      this.state = oldState;\r\n      if (error instanceof SyntaxError) {\r\n        return {\r\n          node: null,\r\n          error,\r\n          thrown: true,\r\n          aborted: false,\r\n          failState\r\n        };\r\n      }\r\n      if (error === abortSignal) {\r\n        return {\r\n          node: abortSignal.node,\r\n          error: null,\r\n          thrown: false,\r\n          aborted: true,\r\n          failState\r\n        };\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n  checkExpressionErrors(refExpressionErrors, andThrow) {\r\n    if (!refExpressionErrors) return false;\r\n    const {\r\n      shorthandAssignLoc,\r\n      doubleProtoLoc,\r\n      privateKeyLoc,\r\n      optionalParametersLoc\r\n    } = refExpressionErrors;\r\n    const hasErrors = !!shorthandAssignLoc || !!doubleProtoLoc || !!optionalParametersLoc || !!privateKeyLoc;\r\n    if (!andThrow) {\r\n      return hasErrors;\r\n    }\r\n    if (shorthandAssignLoc != null) {\r\n      this.raise(Errors.InvalidCoverInitializedName, {\r\n        at: shorthandAssignLoc\r\n      });\r\n    }\r\n    if (doubleProtoLoc != null) {\r\n      this.raise(Errors.DuplicateProto, {\r\n        at: doubleProtoLoc\r\n      });\r\n    }\r\n    if (privateKeyLoc != null) {\r\n      this.raise(Errors.UnexpectedPrivateField, {\r\n        at: privateKeyLoc\r\n      });\r\n    }\r\n    if (optionalParametersLoc != null) {\r\n      this.unexpected(optionalParametersLoc);\r\n    }\r\n  }\r\n  isLiteralPropertyName() {\r\n    return tokenIsLiteralPropertyName(this.state.type);\r\n  }\r\n  isPrivateName(node) {\r\n    return node.type === \"PrivateName\";\r\n  }\r\n  getPrivateNameSV(node) {\r\n    return node.id.name;\r\n  }\r\n  hasPropertyAsPrivateName(node) {\r\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\r\n  }\r\n  isObjectProperty(node) {\r\n    return node.type === \"ObjectProperty\";\r\n  }\r\n  isObjectMethod(node) {\r\n    return node.type === \"ObjectMethod\";\r\n  }\r\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\r\n    const oldLabels = this.state.labels;\r\n    this.state.labels = [];\r\n    const oldExportedIdentifiers = this.exportedIdentifiers;\r\n    this.exportedIdentifiers = new Set();\r\n    const oldInModule = this.inModule;\r\n    this.inModule = inModule;\r\n    const oldScope = this.scope;\r\n    const ScopeHandler = this.getScopeHandler();\r\n    this.scope = new ScopeHandler(this, inModule);\r\n    const oldProdParam = this.prodParam;\r\n    this.prodParam = new ProductionParameterHandler();\r\n    const oldClassScope = this.classScope;\r\n    this.classScope = new ClassScopeHandler(this);\r\n    const oldExpressionScope = this.expressionScope;\r\n    this.expressionScope = new ExpressionScopeHandler(this);\r\n    return () => {\r\n      this.state.labels = oldLabels;\r\n      this.exportedIdentifiers = oldExportedIdentifiers;\r\n      this.inModule = oldInModule;\r\n      this.scope = oldScope;\r\n      this.prodParam = oldProdParam;\r\n      this.classScope = oldClassScope;\r\n      this.expressionScope = oldExpressionScope;\r\n    };\r\n  }\r\n  enterInitialScopes() {\r\n    let paramFlags = PARAM;\r\n    if (this.inModule) {\r\n      paramFlags |= PARAM_AWAIT;\r\n    }\r\n    this.scope.enter(SCOPE_PROGRAM);\r\n    this.prodParam.enter(paramFlags);\r\n  }\r\n  checkDestructuringPrivate(refExpressionErrors) {\r\n    const {\r\n      privateKeyLoc\r\n    } = refExpressionErrors;\r\n    if (privateKeyLoc !== null) {\r\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\r\n    }\r\n  }\r\n}\r\nclass ExpressionErrors {\r\n  constructor() {\r\n    this.shorthandAssignLoc = null;\r\n    this.doubleProtoLoc = null;\r\n    this.privateKeyLoc = null;\r\n    this.optionalParametersLoc = null;\r\n  }\r\n}\r\nlet Node$5 = class Node {\r\n  constructor(parser, pos, loc) {\r\n    this.type = \"\";\r\n    this.start = pos;\r\n    this.end = 0;\r\n    this.loc = new SourceLocation(loc);\r\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\r\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\r\n  }\r\n};\r\nconst NodePrototype = Node$5.prototype;\r\n{\r\n  NodePrototype.__clone = function () {\r\n    const newNode = new Node$5(undefined, this.start, this.loc.start);\r\n    const keys = Object.keys(this);\r\n    for (let i = 0, length = keys.length; i < length; i++) {\r\n      const key = keys[i];\r\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\r\n        newNode[key] = this[key];\r\n      }\r\n    }\r\n    return newNode;\r\n  };\r\n}\r\nfunction clonePlaceholder(node) {\r\n  return cloneIdentifier(node);\r\n}\r\nfunction cloneIdentifier(node) {\r\n  const {\r\n    type,\r\n    start,\r\n    end,\r\n    loc,\r\n    range,\r\n    extra,\r\n    name\r\n  } = node;\r\n  const cloned = Object.create(NodePrototype);\r\n  cloned.type = type;\r\n  cloned.start = start;\r\n  cloned.end = end;\r\n  cloned.loc = loc;\r\n  cloned.range = range;\r\n  cloned.extra = extra;\r\n  cloned.name = name;\r\n  if (type === \"Placeholder\") {\r\n    cloned.expectedNode = node.expectedNode;\r\n  }\r\n  return cloned;\r\n}\r\nfunction cloneStringLiteral(node) {\r\n  const {\r\n    type,\r\n    start,\r\n    end,\r\n    loc,\r\n    range,\r\n    extra\r\n  } = node;\r\n  if (type === \"Placeholder\") {\r\n    return clonePlaceholder(node);\r\n  }\r\n  const cloned = Object.create(NodePrototype);\r\n  cloned.type = type;\r\n  cloned.start = start;\r\n  cloned.end = end;\r\n  cloned.loc = loc;\r\n  cloned.range = range;\r\n  if (node.raw !== undefined) {\r\n    cloned.raw = node.raw;\r\n  } else {\r\n    cloned.extra = extra;\r\n  }\r\n  cloned.value = node.value;\r\n  return cloned;\r\n}\r\nclass NodeUtils extends UtilParser {\r\n  startNode() {\r\n    return new Node$5(this, this.state.start, this.state.startLoc);\r\n  }\r\n  startNodeAt(loc) {\r\n    return new Node$5(this, loc.index, loc);\r\n  }\r\n  startNodeAtNode(type) {\r\n    return this.startNodeAt(type.loc.start);\r\n  }\r\n  finishNode(node, type) {\r\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\r\n  }\r\n  finishNodeAt(node, type, endLoc) {\r\n    node.type = type;\r\n    node.end = endLoc.index;\r\n    node.loc.end = endLoc;\r\n    if (this.options.ranges) node.range[1] = endLoc.index;\r\n    if (this.options.attachComment) this.processComment(node);\r\n    return node;\r\n  }\r\n  resetStartLocation(node, startLoc) {\r\n    node.start = startLoc.index;\r\n    node.loc.start = startLoc;\r\n    if (this.options.ranges) node.range[0] = startLoc.index;\r\n  }\r\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\r\n    node.end = endLoc.index;\r\n    node.loc.end = endLoc;\r\n    if (this.options.ranges) node.range[1] = endLoc.index;\r\n  }\r\n  resetStartLocationFromNode(node, locationNode) {\r\n    this.resetStartLocation(node, locationNode.loc.start);\r\n  }\r\n}\r\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\r\nconst FlowErrors = ParseErrorEnum`flow`({\r\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\r\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\r\n  AssignReservedType: ({\r\n    reservedType\r\n  }) => `Cannot overwrite reserved type ${reservedType}.`,\r\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\r\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\r\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\r\n  EnumBooleanMemberNotInitialized: ({\r\n    memberName,\r\n    enumName\r\n  }) => `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\r\n  EnumDuplicateMemberName: ({\r\n    memberName,\r\n    enumName\r\n  }) => `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\r\n  EnumInconsistentMemberValues: ({\r\n    enumName\r\n  }) => `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\r\n  EnumInvalidExplicitType: ({\r\n    invalidEnumType,\r\n    enumName\r\n  }) => `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\r\n  EnumInvalidExplicitTypeUnknownSupplied: ({\r\n    enumName\r\n  }) => `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\r\n  EnumInvalidMemberInitializerPrimaryType: ({\r\n    enumName,\r\n    memberName,\r\n    explicitType\r\n  }) => `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\r\n  EnumInvalidMemberInitializerSymbolType: ({\r\n    enumName,\r\n    memberName\r\n  }) => `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\r\n  EnumInvalidMemberInitializerUnknownType: ({\r\n    enumName,\r\n    memberName\r\n  }) => `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\r\n  EnumInvalidMemberName: ({\r\n    enumName,\r\n    memberName,\r\n    suggestion\r\n  }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\r\n  EnumNumberMemberNotInitialized: ({\r\n    enumName,\r\n    memberName\r\n  }) => `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\r\n  EnumStringMemberInconsistentlyInitailized: ({\r\n    enumName\r\n  }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\r\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\r\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` or `typeof` keyword.\",\r\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\r\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\r\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\r\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\r\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\r\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\r\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\r\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\r\n  PatternIsOptional: Object.assign({\r\n    message: \"A binding pattern parameter cannot be optional in an implementation signature.\"\r\n  }, {\r\n    reasonCode: \"OptionalBindingPattern\"\r\n  }),\r\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\r\n  SpreadVariance: \"Spread properties cannot have variance.\",\r\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\r\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\r\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\r\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\r\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\r\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\r\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\r\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\r\n  UnexpectedReservedType: ({\r\n    reservedType\r\n  }) => `Unexpected reserved type ${reservedType}.`,\r\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\r\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\r\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\r\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\r\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\r\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\r\n  UnsupportedDeclareExportKind: ({\r\n    unsupportedExportKind,\r\n    suggestion\r\n  }) => `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\r\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\r\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\r\n});\r\nfunction isEsModuleType(bodyElement) {\r\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\r\n}\r\nfunction hasTypeImportKind(node) {\r\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\r\n}\r\nfunction isMaybeDefaultImport(type) {\r\n  return tokenIsKeywordOrIdentifier(type) && type !== 97;\r\n}\r\nconst exportSuggestions = {\r\n  const: \"declare export var\",\r\n  let: \"declare export var\",\r\n  type: \"export type\",\r\n  interface: \"export interface\"\r\n};\r\nfunction partition(list, test) {\r\n  const list1 = [];\r\n  const list2 = [];\r\n  for (let i = 0; i < list.length; i++) {\r\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\r\n  }\r\n  return [list1, list2];\r\n}\r\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\r\nvar flow = superClass => class FlowParserMixin extends superClass {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.flowPragma = undefined;\r\n  }\r\n  getScopeHandler() {\r\n    return FlowScopeHandler;\r\n  }\r\n  shouldParseTypes() {\r\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\r\n  }\r\n  shouldParseEnums() {\r\n    return !!this.getPluginOption(\"flow\", \"enums\");\r\n  }\r\n  finishToken(type, val) {\r\n    if (type !== 131 && type !== 13 && type !== 28) {\r\n      if (this.flowPragma === undefined) {\r\n        this.flowPragma = null;\r\n      }\r\n    }\r\n    super.finishToken(type, val);\r\n  }\r\n  addComment(comment) {\r\n    if (this.flowPragma === undefined) {\r\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\r\n      if (!matches) ;else if (matches[1] === \"flow\") {\r\n        this.flowPragma = \"flow\";\r\n      } else if (matches[1] === \"noflow\") {\r\n        this.flowPragma = \"noflow\";\r\n      } else {\r\n        throw new Error(\"Unexpected flow pragma\");\r\n      }\r\n    }\r\n    super.addComment(comment);\r\n  }\r\n  flowParseTypeInitialiser(tok) {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n    this.expect(tok || 14);\r\n    const type = this.flowParseType();\r\n    this.state.inType = oldInType;\r\n    return type;\r\n  }\r\n  flowParsePredicate() {\r\n    const node = this.startNode();\r\n    const moduloLoc = this.state.startLoc;\r\n    this.next();\r\n    this.expectContextual(108);\r\n    if (this.state.lastTokStart > moduloLoc.index + 1) {\r\n      this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\r\n        at: moduloLoc\r\n      });\r\n    }\r\n    if (this.eat(10)) {\r\n      node.value = super.parseExpression();\r\n      this.expect(11);\r\n      return this.finishNode(node, \"DeclaredPredicate\");\r\n    } else {\r\n      return this.finishNode(node, \"InferredPredicate\");\r\n    }\r\n  }\r\n  flowParseTypeAndPredicateInitialiser() {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n    this.expect(14);\r\n    let type = null;\r\n    let predicate = null;\r\n    if (this.match(54)) {\r\n      this.state.inType = oldInType;\r\n      predicate = this.flowParsePredicate();\r\n    } else {\r\n      type = this.flowParseType();\r\n      this.state.inType = oldInType;\r\n      if (this.match(54)) {\r\n        predicate = this.flowParsePredicate();\r\n      }\r\n    }\r\n    return [type, predicate];\r\n  }\r\n  flowParseDeclareClass(node) {\r\n    this.next();\r\n    this.flowParseInterfaceish(node, true);\r\n    return this.finishNode(node, \"DeclareClass\");\r\n  }\r\n  flowParseDeclareFunction(node) {\r\n    this.next();\r\n    const id = node.id = this.parseIdentifier();\r\n    const typeNode = this.startNode();\r\n    const typeContainer = this.startNode();\r\n    if (this.match(47)) {\r\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    } else {\r\n      typeNode.typeParameters = null;\r\n    }\r\n    this.expect(10);\r\n    const tmp = this.flowParseFunctionTypeParams();\r\n    typeNode.params = tmp.params;\r\n    typeNode.rest = tmp.rest;\r\n    typeNode.this = tmp._this;\r\n    this.expect(11);\r\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\r\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\r\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\r\n    this.resetEndLocation(id);\r\n    this.semicolon();\r\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.loc.start);\r\n    return this.finishNode(node, \"DeclareFunction\");\r\n  }\r\n  flowParseDeclare(node, insideModule) {\r\n    if (this.match(80)) {\r\n      return this.flowParseDeclareClass(node);\r\n    } else if (this.match(68)) {\r\n      return this.flowParseDeclareFunction(node);\r\n    } else if (this.match(74)) {\r\n      return this.flowParseDeclareVariable(node);\r\n    } else if (this.eatContextual(125)) {\r\n      if (this.match(16)) {\r\n        return this.flowParseDeclareModuleExports(node);\r\n      } else {\r\n        if (insideModule) {\r\n          this.raise(FlowErrors.NestedDeclareModule, {\r\n            at: this.state.lastTokStartLoc\r\n          });\r\n        }\r\n        return this.flowParseDeclareModule(node);\r\n      }\r\n    } else if (this.isContextual(128)) {\r\n      return this.flowParseDeclareTypeAlias(node);\r\n    } else if (this.isContextual(129)) {\r\n      return this.flowParseDeclareOpaqueType(node);\r\n    } else if (this.isContextual(127)) {\r\n      return this.flowParseDeclareInterface(node);\r\n    } else if (this.match(82)) {\r\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n  }\r\n  flowParseDeclareVariable(node) {\r\n    this.next();\r\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\r\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"DeclareVariable\");\r\n  }\r\n  flowParseDeclareModule(node) {\r\n    this.scope.enter(SCOPE_OTHER);\r\n    if (this.match(131)) {\r\n      node.id = super.parseExprAtom();\r\n    } else {\r\n      node.id = this.parseIdentifier();\r\n    }\r\n    const bodyNode = node.body = this.startNode();\r\n    const body = bodyNode.body = [];\r\n    this.expect(5);\r\n    while (!this.match(8)) {\r\n      let bodyNode = this.startNode();\r\n      if (this.match(83)) {\r\n        this.next();\r\n        if (!this.isContextual(128) && !this.match(87)) {\r\n          this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\r\n            at: this.state.lastTokStartLoc\r\n          });\r\n        }\r\n        super.parseImport(bodyNode);\r\n      } else {\r\n        this.expectContextual(123, FlowErrors.UnsupportedStatementInDeclareModule);\r\n        bodyNode = this.flowParseDeclare(bodyNode, true);\r\n      }\r\n      body.push(bodyNode);\r\n    }\r\n    this.scope.exit();\r\n    this.expect(8);\r\n    this.finishNode(bodyNode, \"BlockStatement\");\r\n    let kind = null;\r\n    let hasModuleExport = false;\r\n    body.forEach(bodyElement => {\r\n      if (isEsModuleType(bodyElement)) {\r\n        if (kind === \"CommonJS\") {\r\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\r\n            at: bodyElement\r\n          });\r\n        }\r\n        kind = \"ES\";\r\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\r\n        if (hasModuleExport) {\r\n          this.raise(FlowErrors.DuplicateDeclareModuleExports, {\r\n            at: bodyElement\r\n          });\r\n        }\r\n        if (kind === \"ES\") {\r\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\r\n            at: bodyElement\r\n          });\r\n        }\r\n        kind = \"CommonJS\";\r\n        hasModuleExport = true;\r\n      }\r\n    });\r\n    node.kind = kind || \"CommonJS\";\r\n    return this.finishNode(node, \"DeclareModule\");\r\n  }\r\n  flowParseDeclareExportDeclaration(node, insideModule) {\r\n    this.expect(82);\r\n    if (this.eat(65)) {\r\n      if (this.match(68) || this.match(80)) {\r\n        node.declaration = this.flowParseDeclare(this.startNode());\r\n      } else {\r\n        node.declaration = this.flowParseType();\r\n        this.semicolon();\r\n      }\r\n      node.default = true;\r\n      return this.finishNode(node, \"DeclareExportDeclaration\");\r\n    } else {\r\n      if (this.match(75) || this.isLet() || (this.isContextual(128) || this.isContextual(127)) && !insideModule) {\r\n        const label = this.state.value;\r\n        throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\r\n          at: this.state.startLoc,\r\n          unsupportedExportKind: label,\r\n          suggestion: exportSuggestions[label]\r\n        });\r\n      }\r\n      if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(129)) {\r\n        node.declaration = this.flowParseDeclare(this.startNode());\r\n        node.default = false;\r\n        return this.finishNode(node, \"DeclareExportDeclaration\");\r\n      } else if (this.match(55) || this.match(5) || this.isContextual(127) || this.isContextual(128) || this.isContextual(129)) {\r\n        node = this.parseExport(node, null);\r\n        if (node.type === \"ExportNamedDeclaration\") {\r\n          node.type = \"ExportDeclaration\";\r\n          node.default = false;\r\n          delete node.exportKind;\r\n        }\r\n        node.type = \"Declare\" + node.type;\r\n        return node;\r\n      }\r\n    }\r\n    this.unexpected();\r\n  }\r\n  flowParseDeclareModuleExports(node) {\r\n    this.next();\r\n    this.expectContextual(109);\r\n    node.typeAnnotation = this.flowParseTypeAnnotation();\r\n    this.semicolon();\r\n    return this.finishNode(node, \"DeclareModuleExports\");\r\n  }\r\n  flowParseDeclareTypeAlias(node) {\r\n    this.next();\r\n    const finished = this.flowParseTypeAlias(node);\r\n    finished.type = \"DeclareTypeAlias\";\r\n    return finished;\r\n  }\r\n  flowParseDeclareOpaqueType(node) {\r\n    this.next();\r\n    const finished = this.flowParseOpaqueType(node, true);\r\n    finished.type = \"DeclareOpaqueType\";\r\n    return finished;\r\n  }\r\n  flowParseDeclareInterface(node) {\r\n    this.next();\r\n    this.flowParseInterfaceish(node, false);\r\n    return this.finishNode(node, \"DeclareInterface\");\r\n  }\r\n  flowParseInterfaceish(node, isClass) {\r\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\r\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.loc.start);\r\n    if (this.match(47)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    } else {\r\n      node.typeParameters = null;\r\n    }\r\n    node.extends = [];\r\n    node.implements = [];\r\n    node.mixins = [];\r\n    if (this.eat(81)) {\r\n      do {\r\n        node.extends.push(this.flowParseInterfaceExtends());\r\n      } while (!isClass && this.eat(12));\r\n    }\r\n    if (isClass) {\r\n      if (this.eatContextual(115)) {\r\n        do {\r\n          node.mixins.push(this.flowParseInterfaceExtends());\r\n        } while (this.eat(12));\r\n      }\r\n      if (this.eatContextual(111)) {\r\n        do {\r\n          node.implements.push(this.flowParseInterfaceExtends());\r\n        } while (this.eat(12));\r\n      }\r\n    }\r\n    node.body = this.flowParseObjectType({\r\n      allowStatic: isClass,\r\n      allowExact: false,\r\n      allowSpread: false,\r\n      allowProto: isClass,\r\n      allowInexact: false\r\n    });\r\n  }\r\n  flowParseInterfaceExtends() {\r\n    const node = this.startNode();\r\n    node.id = this.flowParseQualifiedTypeIdentifier();\r\n    if (this.match(47)) {\r\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\r\n    } else {\r\n      node.typeParameters = null;\r\n    }\r\n    return this.finishNode(node, \"InterfaceExtends\");\r\n  }\r\n  flowParseInterface(node) {\r\n    this.flowParseInterfaceish(node, false);\r\n    return this.finishNode(node, \"InterfaceDeclaration\");\r\n  }\r\n  checkNotUnderscore(word) {\r\n    if (word === \"_\") {\r\n      this.raise(FlowErrors.UnexpectedReservedUnderscore, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n  }\r\n  checkReservedType(word, startLoc, declaration) {\r\n    if (!reservedTypes.has(word)) return;\r\n    this.raise(declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, {\r\n      at: startLoc,\r\n      reservedType: word\r\n    });\r\n  }\r\n  flowParseRestrictedIdentifier(liberal, declaration) {\r\n    this.checkReservedType(this.state.value, this.state.startLoc, declaration);\r\n    return this.parseIdentifier(liberal);\r\n  }\r\n  flowParseTypeAlias(node) {\r\n    node.id = this.flowParseRestrictedIdentifier(false, true);\r\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\r\n    if (this.match(47)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    } else {\r\n      node.typeParameters = null;\r\n    }\r\n    node.right = this.flowParseTypeInitialiser(29);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"TypeAlias\");\r\n  }\r\n  flowParseOpaqueType(node, declare) {\r\n    this.expectContextual(128);\r\n    node.id = this.flowParseRestrictedIdentifier(true, true);\r\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\r\n    if (this.match(47)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    } else {\r\n      node.typeParameters = null;\r\n    }\r\n    node.supertype = null;\r\n    if (this.match(14)) {\r\n      node.supertype = this.flowParseTypeInitialiser(14);\r\n    }\r\n    node.impltype = null;\r\n    if (!declare) {\r\n      node.impltype = this.flowParseTypeInitialiser(29);\r\n    }\r\n    this.semicolon();\r\n    return this.finishNode(node, \"OpaqueType\");\r\n  }\r\n  flowParseTypeParameter(requireDefault = false) {\r\n    const nodeStartLoc = this.state.startLoc;\r\n    const node = this.startNode();\r\n    const variance = this.flowParseVariance();\r\n    const ident = this.flowParseTypeAnnotatableIdentifier();\r\n    node.name = ident.name;\r\n    node.variance = variance;\r\n    node.bound = ident.typeAnnotation;\r\n    if (this.match(29)) {\r\n      this.eat(29);\r\n      node.default = this.flowParseType();\r\n    } else {\r\n      if (requireDefault) {\r\n        this.raise(FlowErrors.MissingTypeParamDefault, {\r\n          at: nodeStartLoc\r\n        });\r\n      }\r\n    }\r\n    return this.finishNode(node, \"TypeParameter\");\r\n  }\r\n  flowParseTypeParameterDeclaration() {\r\n    const oldInType = this.state.inType;\r\n    const node = this.startNode();\r\n    node.params = [];\r\n    this.state.inType = true;\r\n    if (this.match(47) || this.match(140)) {\r\n      this.next();\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n    let defaultRequired = false;\r\n    do {\r\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\r\n      node.params.push(typeParameter);\r\n      if (typeParameter.default) {\r\n        defaultRequired = true;\r\n      }\r\n      if (!this.match(48)) {\r\n        this.expect(12);\r\n      }\r\n    } while (!this.match(48));\r\n    this.expect(48);\r\n    this.state.inType = oldInType;\r\n    return this.finishNode(node, \"TypeParameterDeclaration\");\r\n  }\r\n  flowParseTypeParameterInstantiation() {\r\n    const node = this.startNode();\r\n    const oldInType = this.state.inType;\r\n    node.params = [];\r\n    this.state.inType = true;\r\n    this.expect(47);\r\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\r\n    this.state.noAnonFunctionType = false;\r\n    while (!this.match(48)) {\r\n      node.params.push(this.flowParseType());\r\n      if (!this.match(48)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n    this.expect(48);\r\n    this.state.inType = oldInType;\r\n    return this.finishNode(node, \"TypeParameterInstantiation\");\r\n  }\r\n  flowParseTypeParameterInstantiationCallOrNew() {\r\n    const node = this.startNode();\r\n    const oldInType = this.state.inType;\r\n    node.params = [];\r\n    this.state.inType = true;\r\n    this.expect(47);\r\n    while (!this.match(48)) {\r\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\r\n      if (!this.match(48)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n    this.expect(48);\r\n    this.state.inType = oldInType;\r\n    return this.finishNode(node, \"TypeParameterInstantiation\");\r\n  }\r\n  flowParseInterfaceType() {\r\n    const node = this.startNode();\r\n    this.expectContextual(127);\r\n    node.extends = [];\r\n    if (this.eat(81)) {\r\n      do {\r\n        node.extends.push(this.flowParseInterfaceExtends());\r\n      } while (this.eat(12));\r\n    }\r\n    node.body = this.flowParseObjectType({\r\n      allowStatic: false,\r\n      allowExact: false,\r\n      allowSpread: false,\r\n      allowProto: false,\r\n      allowInexact: false\r\n    });\r\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\r\n  }\r\n  flowParseObjectPropertyKey() {\r\n    return this.match(132) || this.match(131) ? super.parseExprAtom() : this.parseIdentifier(true);\r\n  }\r\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\r\n    node.static = isStatic;\r\n    if (this.lookahead().type === 14) {\r\n      node.id = this.flowParseObjectPropertyKey();\r\n      node.key = this.flowParseTypeInitialiser();\r\n    } else {\r\n      node.id = null;\r\n      node.key = this.flowParseType();\r\n    }\r\n    this.expect(3);\r\n    node.value = this.flowParseTypeInitialiser();\r\n    node.variance = variance;\r\n    return this.finishNode(node, \"ObjectTypeIndexer\");\r\n  }\r\n  flowParseObjectTypeInternalSlot(node, isStatic) {\r\n    node.static = isStatic;\r\n    node.id = this.flowParseObjectPropertyKey();\r\n    this.expect(3);\r\n    this.expect(3);\r\n    if (this.match(47) || this.match(10)) {\r\n      node.method = true;\r\n      node.optional = false;\r\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\r\n    } else {\r\n      node.method = false;\r\n      if (this.eat(17)) {\r\n        node.optional = true;\r\n      }\r\n      node.value = this.flowParseTypeInitialiser();\r\n    }\r\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\r\n  }\r\n  flowParseObjectTypeMethodish(node) {\r\n    node.params = [];\r\n    node.rest = null;\r\n    node.typeParameters = null;\r\n    node.this = null;\r\n    if (this.match(47)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n    this.expect(10);\r\n    if (this.match(78)) {\r\n      node.this = this.flowParseFunctionTypeParam(true);\r\n      node.this.name = null;\r\n      if (!this.match(11)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n    while (!this.match(11) && !this.match(21)) {\r\n      node.params.push(this.flowParseFunctionTypeParam(false));\r\n      if (!this.match(11)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n    if (this.eat(21)) {\r\n      node.rest = this.flowParseFunctionTypeParam(false);\r\n    }\r\n    this.expect(11);\r\n    node.returnType = this.flowParseTypeInitialiser();\r\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\r\n  }\r\n  flowParseObjectTypeCallProperty(node, isStatic) {\r\n    const valueNode = this.startNode();\r\n    node.static = isStatic;\r\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\r\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\r\n  }\r\n  flowParseObjectType({\r\n    allowStatic,\r\n    allowExact,\r\n    allowSpread,\r\n    allowProto,\r\n    allowInexact\r\n  }) {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n    const nodeStart = this.startNode();\r\n    nodeStart.callProperties = [];\r\n    nodeStart.properties = [];\r\n    nodeStart.indexers = [];\r\n    nodeStart.internalSlots = [];\r\n    let endDelim;\r\n    let exact;\r\n    let inexact = false;\r\n    if (allowExact && this.match(6)) {\r\n      this.expect(6);\r\n      endDelim = 9;\r\n      exact = true;\r\n    } else {\r\n      this.expect(5);\r\n      endDelim = 8;\r\n      exact = false;\r\n    }\r\n    nodeStart.exact = exact;\r\n    while (!this.match(endDelim)) {\r\n      let isStatic = false;\r\n      let protoStartLoc = null;\r\n      let inexactStartLoc = null;\r\n      const node = this.startNode();\r\n      if (allowProto && this.isContextual(116)) {\r\n        const lookahead = this.lookahead();\r\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\r\n          this.next();\r\n          protoStartLoc = this.state.startLoc;\r\n          allowStatic = false;\r\n        }\r\n      }\r\n      if (allowStatic && this.isContextual(104)) {\r\n        const lookahead = this.lookahead();\r\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\r\n          this.next();\r\n          isStatic = true;\r\n        }\r\n      }\r\n      const variance = this.flowParseVariance();\r\n      if (this.eat(0)) {\r\n        if (protoStartLoc != null) {\r\n          this.unexpected(protoStartLoc);\r\n        }\r\n        if (this.eat(0)) {\r\n          if (variance) {\r\n            this.unexpected(variance.loc.start);\r\n          }\r\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\r\n        } else {\r\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\r\n        }\r\n      } else if (this.match(10) || this.match(47)) {\r\n        if (protoStartLoc != null) {\r\n          this.unexpected(protoStartLoc);\r\n        }\r\n        if (variance) {\r\n          this.unexpected(variance.loc.start);\r\n        }\r\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\r\n      } else {\r\n        let kind = \"init\";\r\n        if (this.isContextual(98) || this.isContextual(103)) {\r\n          const lookahead = this.lookahead();\r\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\r\n            kind = this.state.value;\r\n            this.next();\r\n          }\r\n        }\r\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\r\n        if (propOrInexact === null) {\r\n          inexact = true;\r\n          inexactStartLoc = this.state.lastTokStartLoc;\r\n        } else {\r\n          nodeStart.properties.push(propOrInexact);\r\n        }\r\n      }\r\n      this.flowObjectTypeSemicolon();\r\n      if (inexactStartLoc && !this.match(8) && !this.match(9)) {\r\n        this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\r\n          at: inexactStartLoc\r\n        });\r\n      }\r\n    }\r\n    this.expect(endDelim);\r\n    if (allowSpread) {\r\n      nodeStart.inexact = inexact;\r\n    }\r\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\r\n    this.state.inType = oldInType;\r\n    return out;\r\n  }\r\n  flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact) {\r\n    if (this.eat(21)) {\r\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\r\n      if (isInexactToken) {\r\n        if (!allowSpread) {\r\n          this.raise(FlowErrors.InexactInsideNonObject, {\r\n            at: this.state.lastTokStartLoc\r\n          });\r\n        } else if (!allowInexact) {\r\n          this.raise(FlowErrors.InexactInsideExact, {\r\n            at: this.state.lastTokStartLoc\r\n          });\r\n        }\r\n        if (variance) {\r\n          this.raise(FlowErrors.InexactVariance, {\r\n            at: variance\r\n          });\r\n        }\r\n        return null;\r\n      }\r\n      if (!allowSpread) {\r\n        this.raise(FlowErrors.UnexpectedSpreadType, {\r\n          at: this.state.lastTokStartLoc\r\n        });\r\n      }\r\n      if (protoStartLoc != null) {\r\n        this.unexpected(protoStartLoc);\r\n      }\r\n      if (variance) {\r\n        this.raise(FlowErrors.SpreadVariance, {\r\n          at: variance\r\n        });\r\n      }\r\n      node.argument = this.flowParseType();\r\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\r\n    } else {\r\n      node.key = this.flowParseObjectPropertyKey();\r\n      node.static = isStatic;\r\n      node.proto = protoStartLoc != null;\r\n      node.kind = kind;\r\n      let optional = false;\r\n      if (this.match(47) || this.match(10)) {\r\n        node.method = true;\r\n        if (protoStartLoc != null) {\r\n          this.unexpected(protoStartLoc);\r\n        }\r\n        if (variance) {\r\n          this.unexpected(variance.loc.start);\r\n        }\r\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\r\n        if (kind === \"get\" || kind === \"set\") {\r\n          this.flowCheckGetterSetterParams(node);\r\n        }\r\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\r\n          this.raise(FlowErrors.ThisParamBannedInConstructor, {\r\n            at: node.value.this\r\n          });\r\n        }\r\n      } else {\r\n        if (kind !== \"init\") this.unexpected();\r\n        node.method = false;\r\n        if (this.eat(17)) {\r\n          optional = true;\r\n        }\r\n        node.value = this.flowParseTypeInitialiser();\r\n        node.variance = variance;\r\n      }\r\n      node.optional = optional;\r\n      return this.finishNode(node, \"ObjectTypeProperty\");\r\n    }\r\n  }\r\n  flowCheckGetterSetterParams(property) {\r\n    const paramCount = property.kind === \"get\" ? 0 : 1;\r\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\r\n    if (property.value.this) {\r\n      this.raise(property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam, {\r\n        at: property.value.this\r\n      });\r\n    }\r\n    if (length !== paramCount) {\r\n      this.raise(property.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\r\n        at: property\r\n      });\r\n    }\r\n    if (property.kind === \"set\" && property.value.rest) {\r\n      this.raise(Errors.BadSetterRestParameter, {\r\n        at: property\r\n      });\r\n    }\r\n  }\r\n  flowObjectTypeSemicolon() {\r\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\r\n      this.unexpected();\r\n    }\r\n  }\r\n  flowParseQualifiedTypeIdentifier(startLoc, id) {\r\n    var _startLoc;\r\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\r\n    let node = id || this.flowParseRestrictedIdentifier(true);\r\n    while (this.eat(16)) {\r\n      const node2 = this.startNodeAt(startLoc);\r\n      node2.qualification = node;\r\n      node2.id = this.flowParseRestrictedIdentifier(true);\r\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\r\n    }\r\n    return node;\r\n  }\r\n  flowParseGenericType(startLoc, id) {\r\n    const node = this.startNodeAt(startLoc);\r\n    node.typeParameters = null;\r\n    node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\r\n    if (this.match(47)) {\r\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\r\n    }\r\n    return this.finishNode(node, \"GenericTypeAnnotation\");\r\n  }\r\n  flowParseTypeofType() {\r\n    const node = this.startNode();\r\n    this.expect(87);\r\n    node.argument = this.flowParsePrimaryType();\r\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\r\n  }\r\n  flowParseTupleType() {\r\n    const node = this.startNode();\r\n    node.types = [];\r\n    this.expect(0);\r\n    while (this.state.pos < this.length && !this.match(3)) {\r\n      node.types.push(this.flowParseType());\r\n      if (this.match(3)) break;\r\n      this.expect(12);\r\n    }\r\n    this.expect(3);\r\n    return this.finishNode(node, \"TupleTypeAnnotation\");\r\n  }\r\n  flowParseFunctionTypeParam(first) {\r\n    let name = null;\r\n    let optional = false;\r\n    let typeAnnotation = null;\r\n    const node = this.startNode();\r\n    const lh = this.lookahead();\r\n    const isThis = this.state.type === 78;\r\n    if (lh.type === 14 || lh.type === 17) {\r\n      if (isThis && !first) {\r\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\r\n          at: node\r\n        });\r\n      }\r\n      name = this.parseIdentifier(isThis);\r\n      if (this.eat(17)) {\r\n        optional = true;\r\n        if (isThis) {\r\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, {\r\n            at: node\r\n          });\r\n        }\r\n      }\r\n      typeAnnotation = this.flowParseTypeInitialiser();\r\n    } else {\r\n      typeAnnotation = this.flowParseType();\r\n    }\r\n    node.name = name;\r\n    node.optional = optional;\r\n    node.typeAnnotation = typeAnnotation;\r\n    return this.finishNode(node, \"FunctionTypeParam\");\r\n  }\r\n  reinterpretTypeAsFunctionTypeParam(type) {\r\n    const node = this.startNodeAt(type.loc.start);\r\n    node.name = null;\r\n    node.optional = false;\r\n    node.typeAnnotation = type;\r\n    return this.finishNode(node, \"FunctionTypeParam\");\r\n  }\r\n  flowParseFunctionTypeParams(params = []) {\r\n    let rest = null;\r\n    let _this = null;\r\n    if (this.match(78)) {\r\n      _this = this.flowParseFunctionTypeParam(true);\r\n      _this.name = null;\r\n      if (!this.match(11)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n    while (!this.match(11) && !this.match(21)) {\r\n      params.push(this.flowParseFunctionTypeParam(false));\r\n      if (!this.match(11)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n    if (this.eat(21)) {\r\n      rest = this.flowParseFunctionTypeParam(false);\r\n    }\r\n    return {\r\n      params,\r\n      rest,\r\n      _this\r\n    };\r\n  }\r\n  flowIdentToTypeAnnotation(startLoc, node, id) {\r\n    switch (id.name) {\r\n      case \"any\":\r\n        return this.finishNode(node, \"AnyTypeAnnotation\");\r\n      case \"bool\":\r\n      case \"boolean\":\r\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\r\n      case \"mixed\":\r\n        return this.finishNode(node, \"MixedTypeAnnotation\");\r\n      case \"empty\":\r\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\r\n      case \"number\":\r\n        return this.finishNode(node, \"NumberTypeAnnotation\");\r\n      case \"string\":\r\n        return this.finishNode(node, \"StringTypeAnnotation\");\r\n      case \"symbol\":\r\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\r\n      default:\r\n        this.checkNotUnderscore(id.name);\r\n        return this.flowParseGenericType(startLoc, id);\r\n    }\r\n  }\r\n  flowParsePrimaryType() {\r\n    const startLoc = this.state.startLoc;\r\n    const node = this.startNode();\r\n    let tmp;\r\n    let type;\r\n    let isGroupedType = false;\r\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\r\n    switch (this.state.type) {\r\n      case 5:\r\n        return this.flowParseObjectType({\r\n          allowStatic: false,\r\n          allowExact: false,\r\n          allowSpread: true,\r\n          allowProto: false,\r\n          allowInexact: true\r\n        });\r\n      case 6:\r\n        return this.flowParseObjectType({\r\n          allowStatic: false,\r\n          allowExact: true,\r\n          allowSpread: true,\r\n          allowProto: false,\r\n          allowInexact: false\r\n        });\r\n      case 0:\r\n        this.state.noAnonFunctionType = false;\r\n        type = this.flowParseTupleType();\r\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n        return type;\r\n      case 47:\r\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n        this.expect(10);\r\n        tmp = this.flowParseFunctionTypeParams();\r\n        node.params = tmp.params;\r\n        node.rest = tmp.rest;\r\n        node.this = tmp._this;\r\n        this.expect(11);\r\n        this.expect(19);\r\n        node.returnType = this.flowParseType();\r\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\r\n      case 10:\r\n        this.next();\r\n        if (!this.match(11) && !this.match(21)) {\r\n          if (tokenIsIdentifier(this.state.type) || this.match(78)) {\r\n            const token = this.lookahead().type;\r\n            isGroupedType = token !== 17 && token !== 14;\r\n          } else {\r\n            isGroupedType = true;\r\n          }\r\n        }\r\n        if (isGroupedType) {\r\n          this.state.noAnonFunctionType = false;\r\n          type = this.flowParseType();\r\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\r\n            this.expect(11);\r\n            return type;\r\n          } else {\r\n            this.eat(12);\r\n          }\r\n        }\r\n        if (type) {\r\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\r\n        } else {\r\n          tmp = this.flowParseFunctionTypeParams();\r\n        }\r\n        node.params = tmp.params;\r\n        node.rest = tmp.rest;\r\n        node.this = tmp._this;\r\n        this.expect(11);\r\n        this.expect(19);\r\n        node.returnType = this.flowParseType();\r\n        node.typeParameters = null;\r\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\r\n      case 131:\r\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\r\n      case 85:\r\n      case 86:\r\n        node.value = this.match(85);\r\n        this.next();\r\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\r\n      case 53:\r\n        if (this.state.value === \"-\") {\r\n          this.next();\r\n          if (this.match(132)) {\r\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\r\n          }\r\n          if (this.match(133)) {\r\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\r\n          }\r\n          throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\r\n            at: this.state.startLoc\r\n          });\r\n        }\r\n        this.unexpected();\r\n        return;\r\n      case 132:\r\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\r\n      case 133:\r\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\r\n      case 88:\r\n        this.next();\r\n        return this.finishNode(node, \"VoidTypeAnnotation\");\r\n      case 84:\r\n        this.next();\r\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\r\n      case 78:\r\n        this.next();\r\n        return this.finishNode(node, \"ThisTypeAnnotation\");\r\n      case 55:\r\n        this.next();\r\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\r\n      case 87:\r\n        return this.flowParseTypeofType();\r\n      default:\r\n        if (tokenIsKeyword(this.state.type)) {\r\n          const label = tokenLabelName(this.state.type);\r\n          this.next();\r\n          return super.createIdentifier(node, label);\r\n        } else if (tokenIsIdentifier(this.state.type)) {\r\n          if (this.isContextual(127)) {\r\n            return this.flowParseInterfaceType();\r\n          }\r\n          return this.flowIdentToTypeAnnotation(startLoc, node, this.parseIdentifier());\r\n        }\r\n    }\r\n    this.unexpected();\r\n  }\r\n  flowParsePostfixType() {\r\n    const startLoc = this.state.startLoc;\r\n    let type = this.flowParsePrimaryType();\r\n    let seenOptionalIndexedAccess = false;\r\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\r\n      const node = this.startNodeAt(startLoc);\r\n      const optional = this.eat(18);\r\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\r\n      this.expect(0);\r\n      if (!optional && this.match(3)) {\r\n        node.elementType = type;\r\n        this.next();\r\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\r\n      } else {\r\n        node.objectType = type;\r\n        node.indexType = this.flowParseType();\r\n        this.expect(3);\r\n        if (seenOptionalIndexedAccess) {\r\n          node.optional = optional;\r\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\r\n        } else {\r\n          type = this.finishNode(node, \"IndexedAccessType\");\r\n        }\r\n      }\r\n    }\r\n    return type;\r\n  }\r\n  flowParsePrefixType() {\r\n    const node = this.startNode();\r\n    if (this.eat(17)) {\r\n      node.typeAnnotation = this.flowParsePrefixType();\r\n      return this.finishNode(node, \"NullableTypeAnnotation\");\r\n    } else {\r\n      return this.flowParsePostfixType();\r\n    }\r\n  }\r\n  flowParseAnonFunctionWithoutParens() {\r\n    const param = this.flowParsePrefixType();\r\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\r\n      const node = this.startNodeAt(param.loc.start);\r\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\r\n      node.rest = null;\r\n      node.this = null;\r\n      node.returnType = this.flowParseType();\r\n      node.typeParameters = null;\r\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\r\n    }\r\n    return param;\r\n  }\r\n  flowParseIntersectionType() {\r\n    const node = this.startNode();\r\n    this.eat(45);\r\n    const type = this.flowParseAnonFunctionWithoutParens();\r\n    node.types = [type];\r\n    while (this.eat(45)) {\r\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\r\n    }\r\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\r\n  }\r\n  flowParseUnionType() {\r\n    const node = this.startNode();\r\n    this.eat(43);\r\n    const type = this.flowParseIntersectionType();\r\n    node.types = [type];\r\n    while (this.eat(43)) {\r\n      node.types.push(this.flowParseIntersectionType());\r\n    }\r\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\r\n  }\r\n  flowParseType() {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n    const type = this.flowParseUnionType();\r\n    this.state.inType = oldInType;\r\n    return type;\r\n  }\r\n  flowParseTypeOrImplicitInstantiation() {\r\n    if (this.state.type === 130 && this.state.value === \"_\") {\r\n      const startLoc = this.state.startLoc;\r\n      const node = this.parseIdentifier();\r\n      return this.flowParseGenericType(startLoc, node);\r\n    } else {\r\n      return this.flowParseType();\r\n    }\r\n  }\r\n  flowParseTypeAnnotation() {\r\n    const node = this.startNode();\r\n    node.typeAnnotation = this.flowParseTypeInitialiser();\r\n    return this.finishNode(node, \"TypeAnnotation\");\r\n  }\r\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\r\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\r\n    if (this.match(14)) {\r\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\r\n      this.resetEndLocation(ident);\r\n    }\r\n    return ident;\r\n  }\r\n  typeCastToParameter(node) {\r\n    node.expression.typeAnnotation = node.typeAnnotation;\r\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\r\n    return node.expression;\r\n  }\r\n  flowParseVariance() {\r\n    let variance = null;\r\n    if (this.match(53)) {\r\n      variance = this.startNode();\r\n      if (this.state.value === \"+\") {\r\n        variance.kind = \"plus\";\r\n      } else {\r\n        variance.kind = \"minus\";\r\n      }\r\n      this.next();\r\n      return this.finishNode(variance, \"Variance\");\r\n    }\r\n    return variance;\r\n  }\r\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\r\n    if (allowExpressionBody) {\r\n      this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\r\n      return;\r\n    }\r\n    super.parseFunctionBody(node, false, isMethod);\r\n  }\r\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\r\n    if (this.match(14)) {\r\n      const typeNode = this.startNode();\r\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\r\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\r\n    }\r\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\r\n  }\r\n  parseStatementLike(flags) {\r\n    if (this.state.strict && this.isContextual(127)) {\r\n      const lookahead = this.lookahead();\r\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\r\n        const node = this.startNode();\r\n        this.next();\r\n        return this.flowParseInterface(node);\r\n      }\r\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\r\n      const node = this.startNode();\r\n      this.next();\r\n      return this.flowParseEnumDeclaration(node);\r\n    }\r\n    const stmt = super.parseStatementLike(flags);\r\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\r\n      this.flowPragma = null;\r\n    }\r\n    return stmt;\r\n  }\r\n  parseExpressionStatement(node, expr, decorators) {\r\n    if (expr.type === \"Identifier\") {\r\n      if (expr.name === \"declare\") {\r\n        if (this.match(80) || tokenIsIdentifier(this.state.type) || this.match(68) || this.match(74) || this.match(82)) {\r\n          return this.flowParseDeclare(node);\r\n        }\r\n      } else if (tokenIsIdentifier(this.state.type)) {\r\n        if (expr.name === \"interface\") {\r\n          return this.flowParseInterface(node);\r\n        } else if (expr.name === \"type\") {\r\n          return this.flowParseTypeAlias(node);\r\n        } else if (expr.name === \"opaque\") {\r\n          return this.flowParseOpaqueType(node, false);\r\n        }\r\n      }\r\n    }\r\n    return super.parseExpressionStatement(node, expr, decorators);\r\n  }\r\n  shouldParseExportDeclaration() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\r\n      return !this.state.containsEsc;\r\n    }\r\n    return super.shouldParseExportDeclaration();\r\n  }\r\n  isExportDefaultSpecifier() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\r\n      return this.state.containsEsc;\r\n    }\r\n    return super.isExportDefaultSpecifier();\r\n  }\r\n  parseExportDefaultExpression() {\r\n    if (this.shouldParseEnums() && this.isContextual(124)) {\r\n      const node = this.startNode();\r\n      this.next();\r\n      return this.flowParseEnumDeclaration(node);\r\n    }\r\n    return super.parseExportDefaultExpression();\r\n  }\r\n  parseConditional(expr, startLoc, refExpressionErrors) {\r\n    if (!this.match(17)) return expr;\r\n    if (this.state.maybeInArrowParameters) {\r\n      const nextCh = this.lookaheadCharCode();\r\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\r\n        this.setOptionalParametersError(refExpressionErrors);\r\n        return expr;\r\n      }\r\n    }\r\n    this.expect(17);\r\n    const state = this.state.clone();\r\n    const originalNoArrowAt = this.state.noArrowAt;\r\n    const node = this.startNodeAt(startLoc);\r\n    let {\r\n      consequent,\r\n      failed\r\n    } = this.tryParseConditionalConsequent();\r\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\r\n    if (failed || invalid.length > 0) {\r\n      const noArrowAt = [...originalNoArrowAt];\r\n      if (invalid.length > 0) {\r\n        this.state = state;\r\n        this.state.noArrowAt = noArrowAt;\r\n        for (let i = 0; i < invalid.length; i++) {\r\n          noArrowAt.push(invalid[i].start);\r\n        }\r\n        ({\r\n          consequent,\r\n          failed\r\n        } = this.tryParseConditionalConsequent());\r\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\r\n      }\r\n      if (failed && valid.length > 1) {\r\n        this.raise(FlowErrors.AmbiguousConditionalArrow, {\r\n          at: state.startLoc\r\n        });\r\n      }\r\n      if (failed && valid.length === 1) {\r\n        this.state = state;\r\n        noArrowAt.push(valid[0].start);\r\n        this.state.noArrowAt = noArrowAt;\r\n        ({\r\n          consequent,\r\n          failed\r\n        } = this.tryParseConditionalConsequent());\r\n      }\r\n    }\r\n    this.getArrowLikeExpressions(consequent, true);\r\n    this.state.noArrowAt = originalNoArrowAt;\r\n    this.expect(14);\r\n    node.test = expr;\r\n    node.consequent = consequent;\r\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\r\n    return this.finishNode(node, \"ConditionalExpression\");\r\n  }\r\n  tryParseConditionalConsequent() {\r\n    this.state.noArrowParamsConversionAt.push(this.state.start);\r\n    const consequent = this.parseMaybeAssignAllowIn();\r\n    const failed = !this.match(14);\r\n    this.state.noArrowParamsConversionAt.pop();\r\n    return {\r\n      consequent,\r\n      failed\r\n    };\r\n  }\r\n  getArrowLikeExpressions(node, disallowInvalid) {\r\n    const stack = [node];\r\n    const arrows = [];\r\n    while (stack.length !== 0) {\r\n      const node = stack.pop();\r\n      if (node.type === \"ArrowFunctionExpression\") {\r\n        if (node.typeParameters || !node.returnType) {\r\n          this.finishArrowValidation(node);\r\n        } else {\r\n          arrows.push(node);\r\n        }\r\n        stack.push(node.body);\r\n      } else if (node.type === \"ConditionalExpression\") {\r\n        stack.push(node.consequent);\r\n        stack.push(node.alternate);\r\n      }\r\n    }\r\n    if (disallowInvalid) {\r\n      arrows.forEach(node => this.finishArrowValidation(node));\r\n      return [arrows, []];\r\n    }\r\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\r\n  }\r\n  finishArrowValidation(node) {\r\n    var _node$extra;\r\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingCommaLoc, false);\r\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\r\n    super.checkParams(node, false, true);\r\n    this.scope.exit();\r\n  }\r\n  forwardNoArrowParamsConversionAt(node, parse) {\r\n    let result;\r\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\r\n      this.state.noArrowParamsConversionAt.push(this.state.start);\r\n      result = parse();\r\n      this.state.noArrowParamsConversionAt.pop();\r\n    } else {\r\n      result = parse();\r\n    }\r\n    return result;\r\n  }\r\n  parseParenItem(node, startLoc) {\r\n    node = super.parseParenItem(node, startLoc);\r\n    if (this.eat(17)) {\r\n      node.optional = true;\r\n      this.resetEndLocation(node);\r\n    }\r\n    if (this.match(14)) {\r\n      const typeCastNode = this.startNodeAt(startLoc);\r\n      typeCastNode.expression = node;\r\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\r\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\r\n    }\r\n    return node;\r\n  }\r\n  assertModuleNodeAllowed(node) {\r\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\r\n      return;\r\n    }\r\n    super.assertModuleNodeAllowed(node);\r\n  }\r\n  parseExport(node, decorators) {\r\n    const decl = super.parseExport(node, decorators);\r\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\r\n      decl.exportKind = decl.exportKind || \"value\";\r\n    }\r\n    return decl;\r\n  }\r\n  parseExportDeclaration(node) {\r\n    if (this.isContextual(128)) {\r\n      node.exportKind = \"type\";\r\n      const declarationNode = this.startNode();\r\n      this.next();\r\n      if (this.match(5)) {\r\n        node.specifiers = this.parseExportSpecifiers(true);\r\n        super.parseExportFrom(node);\r\n        return null;\r\n      } else {\r\n        return this.flowParseTypeAlias(declarationNode);\r\n      }\r\n    } else if (this.isContextual(129)) {\r\n      node.exportKind = \"type\";\r\n      const declarationNode = this.startNode();\r\n      this.next();\r\n      return this.flowParseOpaqueType(declarationNode, false);\r\n    } else if (this.isContextual(127)) {\r\n      node.exportKind = \"type\";\r\n      const declarationNode = this.startNode();\r\n      this.next();\r\n      return this.flowParseInterface(declarationNode);\r\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\r\n      node.exportKind = \"value\";\r\n      const declarationNode = this.startNode();\r\n      this.next();\r\n      return this.flowParseEnumDeclaration(declarationNode);\r\n    } else {\r\n      return super.parseExportDeclaration(node);\r\n    }\r\n  }\r\n  eatExportStar(node) {\r\n    if (super.eatExportStar(node)) return true;\r\n    if (this.isContextual(128) && this.lookahead().type === 55) {\r\n      node.exportKind = \"type\";\r\n      this.next();\r\n      this.next();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  maybeParseExportNamespaceSpecifier(node) {\r\n    const {\r\n      startLoc\r\n    } = this.state;\r\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\r\n    if (hasNamespace && node.exportKind === \"type\") {\r\n      this.unexpected(startLoc);\r\n    }\r\n    return hasNamespace;\r\n  }\r\n  parseClassId(node, isStatement, optionalId) {\r\n    super.parseClassId(node, isStatement, optionalId);\r\n    if (this.match(47)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n  }\r\n  parseClassMember(classBody, member, state) {\r\n    const {\r\n      startLoc\r\n    } = this.state;\r\n    if (this.isContextual(123)) {\r\n      if (super.parseClassMemberFromModifier(classBody, member)) {\r\n        return;\r\n      }\r\n      member.declare = true;\r\n    }\r\n    super.parseClassMember(classBody, member, state);\r\n    if (member.declare) {\r\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\r\n        this.raise(FlowErrors.DeclareClassElement, {\r\n          at: startLoc\r\n        });\r\n      } else if (member.value) {\r\n        this.raise(FlowErrors.DeclareClassFieldInitializer, {\r\n          at: member.value\r\n        });\r\n      }\r\n    }\r\n  }\r\n  isIterator(word) {\r\n    return word === \"iterator\" || word === \"asyncIterator\";\r\n  }\r\n  readIterator() {\r\n    const word = super.readWord1();\r\n    const fullWord = \"@@\" + word;\r\n    if (!this.isIterator(word) || !this.state.inType) {\r\n      this.raise(Errors.InvalidIdentifier, {\r\n        at: this.state.curPosition(),\r\n        identifierName: fullWord\r\n      });\r\n    }\r\n    this.finishToken(130, fullWord);\r\n  }\r\n  getTokenFromCode(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (code === 123 && next === 124) {\r\n      this.finishOp(6, 2);\r\n    } else if (this.state.inType && (code === 62 || code === 60)) {\r\n      this.finishOp(code === 62 ? 48 : 47, 1);\r\n    } else if (this.state.inType && code === 63) {\r\n      if (next === 46) {\r\n        this.finishOp(18, 2);\r\n      } else {\r\n        this.finishOp(17, 1);\r\n      }\r\n    } else if (isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))) {\r\n      this.state.pos += 2;\r\n      this.readIterator();\r\n    } else {\r\n      super.getTokenFromCode(code);\r\n    }\r\n  }\r\n  isAssignable(node, isBinding) {\r\n    if (node.type === \"TypeCastExpression\") {\r\n      return this.isAssignable(node.expression, isBinding);\r\n    } else {\r\n      return super.isAssignable(node, isBinding);\r\n    }\r\n  }\r\n  toAssignable(node, isLHS = false) {\r\n    if (!isLHS && node.type === \"AssignmentExpression\" && node.left.type === \"TypeCastExpression\") {\r\n      node.left = this.typeCastToParameter(node.left);\r\n    }\r\n    super.toAssignable(node, isLHS);\r\n  }\r\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\r\n    for (let i = 0; i < exprList.length; i++) {\r\n      const expr = exprList[i];\r\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\r\n        exprList[i] = this.typeCastToParameter(expr);\r\n      }\r\n    }\r\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\r\n  }\r\n  toReferencedList(exprList, isParenthesizedExpr) {\r\n    for (let i = 0; i < exprList.length; i++) {\r\n      var _expr$extra;\r\n      const expr = exprList[i];\r\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\r\n        this.raise(FlowErrors.TypeCastInPattern, {\r\n          at: expr.typeAnnotation\r\n        });\r\n      }\r\n    }\r\n    return exprList;\r\n  }\r\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\r\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\r\n    if (canBePattern && !this.state.maybeInArrowParameters) {\r\n      this.toReferencedList(node.elements);\r\n    }\r\n    return node;\r\n  }\r\n  isValidLVal(type, isParenthesized, binding) {\r\n    return type === \"TypeCastExpression\" || super.isValidLVal(type, isParenthesized, binding);\r\n  }\r\n  parseClassProperty(node) {\r\n    if (this.match(14)) {\r\n      node.typeAnnotation = this.flowParseTypeAnnotation();\r\n    }\r\n    return super.parseClassProperty(node);\r\n  }\r\n  parseClassPrivateProperty(node) {\r\n    if (this.match(14)) {\r\n      node.typeAnnotation = this.flowParseTypeAnnotation();\r\n    }\r\n    return super.parseClassPrivateProperty(node);\r\n  }\r\n  isClassMethod() {\r\n    return this.match(47) || super.isClassMethod();\r\n  }\r\n  isClassProperty() {\r\n    return this.match(14) || super.isClassProperty();\r\n  }\r\n  isNonstaticConstructor(method) {\r\n    return !this.match(14) && super.isNonstaticConstructor(method);\r\n  }\r\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\r\n    if (method.variance) {\r\n      this.unexpected(method.variance.loc.start);\r\n    }\r\n    delete method.variance;\r\n    if (this.match(47)) {\r\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\r\n    if (method.params && isConstructor) {\r\n      const params = method.params;\r\n      if (params.length > 0 && this.isThisParam(params[0])) {\r\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\r\n          at: method\r\n        });\r\n      }\r\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\r\n      const params = method.value.params;\r\n      if (params.length > 0 && this.isThisParam(params[0])) {\r\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\r\n          at: method\r\n        });\r\n      }\r\n    }\r\n  }\r\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\r\n    if (method.variance) {\r\n      this.unexpected(method.variance.loc.start);\r\n    }\r\n    delete method.variance;\r\n    if (this.match(47)) {\r\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\r\n  }\r\n  parseClassSuper(node) {\r\n    super.parseClassSuper(node);\r\n    if (node.superClass && this.match(47)) {\r\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\r\n    }\r\n    if (this.isContextual(111)) {\r\n      this.next();\r\n      const implemented = node.implements = [];\r\n      do {\r\n        const node = this.startNode();\r\n        node.id = this.flowParseRestrictedIdentifier(true);\r\n        if (this.match(47)) {\r\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\r\n        } else {\r\n          node.typeParameters = null;\r\n        }\r\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\r\n      } while (this.eat(12));\r\n    }\r\n  }\r\n  checkGetterSetterParams(method) {\r\n    super.checkGetterSetterParams(method);\r\n    const params = this.getObjectOrClassMethodParams(method);\r\n    if (params.length > 0) {\r\n      const param = params[0];\r\n      if (this.isThisParam(param) && method.kind === \"get\") {\r\n        this.raise(FlowErrors.GetterMayNotHaveThisParam, {\r\n          at: param\r\n        });\r\n      } else if (this.isThisParam(param)) {\r\n        this.raise(FlowErrors.SetterMayNotHaveThisParam, {\r\n          at: param\r\n        });\r\n      }\r\n    }\r\n  }\r\n  parsePropertyNamePrefixOperator(node) {\r\n    node.variance = this.flowParseVariance();\r\n  }\r\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\r\n    if (prop.variance) {\r\n      this.unexpected(prop.variance.loc.start);\r\n    }\r\n    delete prop.variance;\r\n    let typeParameters;\r\n    if (this.match(47) && !isAccessor) {\r\n      typeParameters = this.flowParseTypeParameterDeclaration();\r\n      if (!this.match(10)) this.unexpected();\r\n    }\r\n    const result = super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\r\n    if (typeParameters) {\r\n      (result.value || result).typeParameters = typeParameters;\r\n    }\r\n    return result;\r\n  }\r\n  parseAssignableListItemTypes(param) {\r\n    if (this.eat(17)) {\r\n      if (param.type !== \"Identifier\") {\r\n        this.raise(FlowErrors.PatternIsOptional, {\r\n          at: param\r\n        });\r\n      }\r\n      if (this.isThisParam(param)) {\r\n        this.raise(FlowErrors.ThisParamMayNotBeOptional, {\r\n          at: param\r\n        });\r\n      }\r\n      param.optional = true;\r\n    }\r\n    if (this.match(14)) {\r\n      param.typeAnnotation = this.flowParseTypeAnnotation();\r\n    } else if (this.isThisParam(param)) {\r\n      this.raise(FlowErrors.ThisParamAnnotationRequired, {\r\n        at: param\r\n      });\r\n    }\r\n    if (this.match(29) && this.isThisParam(param)) {\r\n      this.raise(FlowErrors.ThisParamNoDefault, {\r\n        at: param\r\n      });\r\n    }\r\n    this.resetEndLocation(param);\r\n    return param;\r\n  }\r\n  parseMaybeDefault(startLoc, left) {\r\n    const node = super.parseMaybeDefault(startLoc, left);\r\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\r\n      this.raise(FlowErrors.TypeBeforeInitializer, {\r\n        at: node.typeAnnotation\r\n      });\r\n    }\r\n    return node;\r\n  }\r\n  shouldParseDefaultImport(node) {\r\n    if (!hasTypeImportKind(node)) {\r\n      return super.shouldParseDefaultImport(node);\r\n    }\r\n    return isMaybeDefaultImport(this.state.type);\r\n  }\r\n  checkImportReflection(node) {\r\n    super.checkImportReflection(node);\r\n    if (node.module && node.importKind !== \"value\") {\r\n      this.raise(FlowErrors.ImportReflectionHasImportType, {\r\n        at: node.specifiers[0].loc.start\r\n      });\r\n    }\r\n  }\r\n  parseImportSpecifierLocal(node, specifier, type) {\r\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\r\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\r\n  }\r\n  maybeParseDefaultImportSpecifier(node) {\r\n    node.importKind = \"value\";\r\n    let kind = null;\r\n    if (this.match(87)) {\r\n      kind = \"typeof\";\r\n    } else if (this.isContextual(128)) {\r\n      kind = \"type\";\r\n    }\r\n    if (kind) {\r\n      const lh = this.lookahead();\r\n      const {\r\n        type\r\n      } = lh;\r\n      if (kind === \"type\" && type === 55) {\r\n        this.unexpected(null, lh.type);\r\n      }\r\n      if (isMaybeDefaultImport(type) || type === 5 || type === 55) {\r\n        this.next();\r\n        node.importKind = kind;\r\n      }\r\n    }\r\n    return super.maybeParseDefaultImportSpecifier(node);\r\n  }\r\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\r\n    const firstIdent = specifier.imported;\r\n    let specifierTypeKind = null;\r\n    if (firstIdent.type === \"Identifier\") {\r\n      if (firstIdent.name === \"type\") {\r\n        specifierTypeKind = \"type\";\r\n      } else if (firstIdent.name === \"typeof\") {\r\n        specifierTypeKind = \"typeof\";\r\n      }\r\n    }\r\n    let isBinding = false;\r\n    if (this.isContextual(93) && !this.isLookaheadContextual(\"as\")) {\r\n      const as_ident = this.parseIdentifier(true);\r\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\r\n        specifier.imported = as_ident;\r\n        specifier.importKind = specifierTypeKind;\r\n        specifier.local = cloneIdentifier(as_ident);\r\n      } else {\r\n        specifier.imported = firstIdent;\r\n        specifier.importKind = null;\r\n        specifier.local = this.parseIdentifier();\r\n      }\r\n    } else {\r\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\r\n        specifier.imported = this.parseIdentifier(true);\r\n        specifier.importKind = specifierTypeKind;\r\n      } else {\r\n        if (importedIsString) {\r\n          throw this.raise(Errors.ImportBindingIsString, {\r\n            at: specifier,\r\n            importName: firstIdent.value\r\n          });\r\n        }\r\n        specifier.imported = firstIdent;\r\n        specifier.importKind = null;\r\n      }\r\n      if (this.eatContextual(93)) {\r\n        specifier.local = this.parseIdentifier();\r\n      } else {\r\n        isBinding = true;\r\n        specifier.local = cloneIdentifier(specifier.imported);\r\n      }\r\n    }\r\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\r\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\r\n      this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\r\n        at: specifier\r\n      });\r\n    }\r\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\r\n      this.checkReservedType(specifier.local.name, specifier.local.loc.start, true);\r\n    }\r\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\r\n      this.checkReservedWord(specifier.local.name, specifier.loc.start, true, true);\r\n    }\r\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\r\n  }\r\n  parseBindingAtom() {\r\n    switch (this.state.type) {\r\n      case 78:\r\n        return this.parseIdentifier(true);\r\n      default:\r\n        return super.parseBindingAtom();\r\n    }\r\n  }\r\n  parseFunctionParams(node, isConstructor) {\r\n    const kind = node.kind;\r\n    if (kind !== \"get\" && kind !== \"set\" && this.match(47)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n    super.parseFunctionParams(node, isConstructor);\r\n  }\r\n  parseVarId(decl, kind) {\r\n    super.parseVarId(decl, kind);\r\n    if (this.match(14)) {\r\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\r\n      this.resetEndLocation(decl.id);\r\n    }\r\n  }\r\n  parseAsyncArrowFromCallExpression(node, call) {\r\n    if (this.match(14)) {\r\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\r\n      this.state.noAnonFunctionType = true;\r\n      node.returnType = this.flowParseTypeAnnotation();\r\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n    }\r\n    return super.parseAsyncArrowFromCallExpression(node, call);\r\n  }\r\n  shouldParseAsyncArrow() {\r\n    return this.match(14) || super.shouldParseAsyncArrow();\r\n  }\r\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\r\n    var _jsx;\r\n    let state = null;\r\n    let jsx;\r\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\r\n      state = this.state.clone();\r\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\r\n      if (!jsx.error) return jsx.node;\r\n      const {\r\n        context\r\n      } = this.state;\r\n      const currentContext = context[context.length - 1];\r\n      if (currentContext === types$1.j_oTag || currentContext === types$1.j_expr) {\r\n        context.pop();\r\n      }\r\n    }\r\n    if ((_jsx = jsx) != null && _jsx.error || this.match(47)) {\r\n      var _jsx2, _jsx3;\r\n      state = state || this.state.clone();\r\n      let typeParameters;\r\n      const arrow = this.tryParse(abort => {\r\n        var _arrowExpression$extr;\r\n        typeParameters = this.flowParseTypeParameterDeclaration();\r\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\r\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\r\n          this.resetStartLocationFromNode(result, typeParameters);\r\n          return result;\r\n        });\r\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\r\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\r\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\r\n        expr.typeParameters = typeParameters;\r\n        this.resetStartLocationFromNode(expr, typeParameters);\r\n        return arrowExpression;\r\n      }, state);\r\n      let arrowExpression = null;\r\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\r\n        if (!arrow.error && !arrow.aborted) {\r\n          if (arrow.node.async) {\r\n            this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction, {\r\n              at: typeParameters\r\n            });\r\n          }\r\n          return arrow.node;\r\n        }\r\n        arrowExpression = arrow.node;\r\n      }\r\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\r\n        this.state = jsx.failState;\r\n        return jsx.node;\r\n      }\r\n      if (arrowExpression) {\r\n        this.state = arrow.failState;\r\n        return arrowExpression;\r\n      }\r\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\r\n      if (arrow.thrown) throw arrow.error;\r\n      throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\r\n        at: typeParameters\r\n      });\r\n    }\r\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\r\n  }\r\n  parseArrow(node) {\r\n    if (this.match(14)) {\r\n      const result = this.tryParse(() => {\r\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\r\n        this.state.noAnonFunctionType = true;\r\n        const typeNode = this.startNode();\r\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\r\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n        if (this.canInsertSemicolon()) this.unexpected();\r\n        if (!this.match(19)) this.unexpected();\r\n        return typeNode;\r\n      });\r\n      if (result.thrown) return null;\r\n      if (result.error) this.state = result.failState;\r\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\r\n    }\r\n    return super.parseArrow(node);\r\n  }\r\n  shouldParseArrow(params) {\r\n    return this.match(14) || super.shouldParseArrow(params);\r\n  }\r\n  setArrowFunctionParameters(node, params) {\r\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\r\n      node.params = params;\r\n    } else {\r\n      super.setArrowFunctionParameters(node, params);\r\n    }\r\n  }\r\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\r\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\r\n      return;\r\n    }\r\n    for (let i = 0; i < node.params.length; i++) {\r\n      if (this.isThisParam(node.params[i]) && i > 0) {\r\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\r\n          at: node.params[i]\r\n        });\r\n      }\r\n    }\r\n    super.checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged);\r\n  }\r\n  parseParenAndDistinguishExpression(canBeArrow) {\r\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\r\n  }\r\n  parseSubscripts(base, startLoc, noCalls) {\r\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startLoc.index) !== -1) {\r\n      this.next();\r\n      const node = this.startNodeAt(startLoc);\r\n      node.callee = base;\r\n      node.arguments = super.parseCallExpressionArguments(11, false);\r\n      base = this.finishNode(node, \"CallExpression\");\r\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(47)) {\r\n      const state = this.state.clone();\r\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(), state);\r\n      if (!arrow.error && !arrow.aborted) return arrow.node;\r\n      const result = this.tryParse(() => super.parseSubscripts(base, startLoc, noCalls), state);\r\n      if (result.node && !result.error) return result.node;\r\n      if (arrow.node) {\r\n        this.state = arrow.failState;\r\n        return arrow.node;\r\n      }\r\n      if (result.node) {\r\n        this.state = result.failState;\r\n        return result.node;\r\n      }\r\n      throw arrow.error || result.error;\r\n    }\r\n    return super.parseSubscripts(base, startLoc, noCalls);\r\n  }\r\n  parseSubscript(base, startLoc, noCalls, subscriptState) {\r\n    if (this.match(18) && this.isLookaheadToken_lt()) {\r\n      subscriptState.optionalChainMember = true;\r\n      if (noCalls) {\r\n        subscriptState.stop = true;\r\n        return base;\r\n      }\r\n      this.next();\r\n      const node = this.startNodeAt(startLoc);\r\n      node.callee = base;\r\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\r\n      this.expect(10);\r\n      node.arguments = this.parseCallExpressionArguments(11, false);\r\n      node.optional = true;\r\n      return this.finishCallExpression(node, true);\r\n    } else if (!noCalls && this.shouldParseTypes() && this.match(47)) {\r\n      const node = this.startNodeAt(startLoc);\r\n      node.callee = base;\r\n      const result = this.tryParse(() => {\r\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\r\n        this.expect(10);\r\n        node.arguments = super.parseCallExpressionArguments(11, false);\r\n        if (subscriptState.optionalChainMember) {\r\n          node.optional = false;\r\n        }\r\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\r\n      });\r\n      if (result.node) {\r\n        if (result.error) this.state = result.failState;\r\n        return result.node;\r\n      }\r\n    }\r\n    return super.parseSubscript(base, startLoc, noCalls, subscriptState);\r\n  }\r\n  parseNewCallee(node) {\r\n    super.parseNewCallee(node);\r\n    let targs = null;\r\n    if (this.shouldParseTypes() && this.match(47)) {\r\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\r\n    }\r\n    node.typeArguments = targs;\r\n  }\r\n  parseAsyncArrowWithTypeParameters(startLoc) {\r\n    const node = this.startNodeAt(startLoc);\r\n    this.parseFunctionParams(node, false);\r\n    if (!this.parseArrow(node)) return;\r\n    return super.parseArrowExpression(node, undefined, true);\r\n  }\r\n  readToken_mult_modulo(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\r\n      this.state.hasFlowComment = false;\r\n      this.state.pos += 2;\r\n      this.nextToken();\r\n      return;\r\n    }\r\n    super.readToken_mult_modulo(code);\r\n  }\r\n  readToken_pipe_amp(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    if (code === 124 && next === 125) {\r\n      this.finishOp(9, 2);\r\n      return;\r\n    }\r\n    super.readToken_pipe_amp(code);\r\n  }\r\n  parseTopLevel(file, program) {\r\n    const fileNode = super.parseTopLevel(file, program);\r\n    if (this.state.hasFlowComment) {\r\n      this.raise(FlowErrors.UnterminatedFlowComment, {\r\n        at: this.state.curPosition()\r\n      });\r\n    }\r\n    return fileNode;\r\n  }\r\n  skipBlockComment() {\r\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\r\n      if (this.state.hasFlowComment) {\r\n        throw this.raise(FlowErrors.NestedFlowComment, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      this.hasFlowCommentCompletion();\r\n      const commentSkip = this.skipFlowComment();\r\n      if (commentSkip) {\r\n        this.state.pos += commentSkip;\r\n        this.state.hasFlowComment = true;\r\n      }\r\n      return;\r\n    }\r\n    return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\r\n  }\r\n  skipFlowComment() {\r\n    const {\r\n      pos\r\n    } = this.state;\r\n    let shiftToFirstNonWhiteSpace = 2;\r\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\r\n      shiftToFirstNonWhiteSpace++;\r\n    }\r\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\r\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\r\n    if (ch2 === 58 && ch3 === 58) {\r\n      return shiftToFirstNonWhiteSpace + 2;\r\n    }\r\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\r\n      return shiftToFirstNonWhiteSpace + 12;\r\n    }\r\n    if (ch2 === 58 && ch3 !== 58) {\r\n      return shiftToFirstNonWhiteSpace;\r\n    }\r\n    return false;\r\n  }\r\n  hasFlowCommentCompletion() {\r\n    const end = this.input.indexOf(\"*/\", this.state.pos);\r\n    if (end === -1) {\r\n      throw this.raise(Errors.UnterminatedComment, {\r\n        at: this.state.curPosition()\r\n      });\r\n    }\r\n  }\r\n  flowEnumErrorBooleanMemberNotInitialized(loc, {\r\n    enumName,\r\n    memberName\r\n  }) {\r\n    this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\r\n      at: loc,\r\n      memberName,\r\n      enumName\r\n    });\r\n  }\r\n  flowEnumErrorInvalidMemberInitializer(loc, enumContext) {\r\n    return this.raise(!enumContext.explicitType ? FlowErrors.EnumInvalidMemberInitializerUnknownType : enumContext.explicitType === \"symbol\" ? FlowErrors.EnumInvalidMemberInitializerSymbolType : FlowErrors.EnumInvalidMemberInitializerPrimaryType, Object.assign({\r\n      at: loc\r\n    }, enumContext));\r\n  }\r\n  flowEnumErrorNumberMemberNotInitialized(loc, {\r\n    enumName,\r\n    memberName\r\n  }) {\r\n    this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\r\n      at: loc,\r\n      enumName,\r\n      memberName\r\n    });\r\n  }\r\n  flowEnumErrorStringMemberInconsistentlyInitailized(node, {\r\n    enumName\r\n  }) {\r\n    this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\r\n      at: node,\r\n      enumName\r\n    });\r\n  }\r\n  flowEnumMemberInit() {\r\n    const startLoc = this.state.startLoc;\r\n    const endOfInit = () => this.match(12) || this.match(8);\r\n    switch (this.state.type) {\r\n      case 132:\r\n        {\r\n          const literal = this.parseNumericLiteral(this.state.value);\r\n          if (endOfInit()) {\r\n            return {\r\n              type: \"number\",\r\n              loc: literal.loc.start,\r\n              value: literal\r\n            };\r\n          }\r\n          return {\r\n            type: \"invalid\",\r\n            loc: startLoc\r\n          };\r\n        }\r\n      case 131:\r\n        {\r\n          const literal = this.parseStringLiteral(this.state.value);\r\n          if (endOfInit()) {\r\n            return {\r\n              type: \"string\",\r\n              loc: literal.loc.start,\r\n              value: literal\r\n            };\r\n          }\r\n          return {\r\n            type: \"invalid\",\r\n            loc: startLoc\r\n          };\r\n        }\r\n      case 85:\r\n      case 86:\r\n        {\r\n          const literal = this.parseBooleanLiteral(this.match(85));\r\n          if (endOfInit()) {\r\n            return {\r\n              type: \"boolean\",\r\n              loc: literal.loc.start,\r\n              value: literal\r\n            };\r\n          }\r\n          return {\r\n            type: \"invalid\",\r\n            loc: startLoc\r\n          };\r\n        }\r\n      default:\r\n        return {\r\n          type: \"invalid\",\r\n          loc: startLoc\r\n        };\r\n    }\r\n  }\r\n  flowEnumMemberRaw() {\r\n    const loc = this.state.startLoc;\r\n    const id = this.parseIdentifier(true);\r\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\r\n      type: \"none\",\r\n      loc\r\n    };\r\n    return {\r\n      id,\r\n      init\r\n    };\r\n  }\r\n  flowEnumCheckExplicitTypeMismatch(loc, context, expectedType) {\r\n    const {\r\n      explicitType\r\n    } = context;\r\n    if (explicitType === null) {\r\n      return;\r\n    }\r\n    if (explicitType !== expectedType) {\r\n      this.flowEnumErrorInvalidMemberInitializer(loc, context);\r\n    }\r\n  }\r\n  flowEnumMembers({\r\n    enumName,\r\n    explicitType\r\n  }) {\r\n    const seenNames = new Set();\r\n    const members = {\r\n      booleanMembers: [],\r\n      numberMembers: [],\r\n      stringMembers: [],\r\n      defaultedMembers: []\r\n    };\r\n    let hasUnknownMembers = false;\r\n    while (!this.match(8)) {\r\n      if (this.eat(21)) {\r\n        hasUnknownMembers = true;\r\n        break;\r\n      }\r\n      const memberNode = this.startNode();\r\n      const {\r\n        id,\r\n        init\r\n      } = this.flowEnumMemberRaw();\r\n      const memberName = id.name;\r\n      if (memberName === \"\") {\r\n        continue;\r\n      }\r\n      if (/^[a-z]/.test(memberName)) {\r\n        this.raise(FlowErrors.EnumInvalidMemberName, {\r\n          at: id,\r\n          memberName,\r\n          suggestion: memberName[0].toUpperCase() + memberName.slice(1),\r\n          enumName\r\n        });\r\n      }\r\n      if (seenNames.has(memberName)) {\r\n        this.raise(FlowErrors.EnumDuplicateMemberName, {\r\n          at: id,\r\n          memberName,\r\n          enumName\r\n        });\r\n      }\r\n      seenNames.add(memberName);\r\n      const context = {\r\n        enumName,\r\n        explicitType,\r\n        memberName\r\n      };\r\n      memberNode.id = id;\r\n      switch (init.type) {\r\n        case \"boolean\":\r\n          {\r\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"boolean\");\r\n            memberNode.init = init.value;\r\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\r\n            break;\r\n          }\r\n        case \"number\":\r\n          {\r\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\r\n            memberNode.init = init.value;\r\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\r\n            break;\r\n          }\r\n        case \"string\":\r\n          {\r\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\r\n            memberNode.init = init.value;\r\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\r\n            break;\r\n          }\r\n        case \"invalid\":\r\n          {\r\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\r\n          }\r\n        case \"none\":\r\n          {\r\n            switch (explicitType) {\r\n              case \"boolean\":\r\n                this.flowEnumErrorBooleanMemberNotInitialized(init.loc, context);\r\n                break;\r\n              case \"number\":\r\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\r\n                break;\r\n              default:\r\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\r\n            }\r\n          }\r\n      }\r\n      if (!this.match(8)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n    return {\r\n      members,\r\n      hasUnknownMembers\r\n    };\r\n  }\r\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\r\n    enumName\r\n  }) {\r\n    if (initializedMembers.length === 0) {\r\n      return defaultedMembers;\r\n    } else if (defaultedMembers.length === 0) {\r\n      return initializedMembers;\r\n    } else if (defaultedMembers.length > initializedMembers.length) {\r\n      for (const member of initializedMembers) {\r\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\r\n          enumName\r\n        });\r\n      }\r\n      return defaultedMembers;\r\n    } else {\r\n      for (const member of defaultedMembers) {\r\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\r\n          enumName\r\n        });\r\n      }\r\n      return initializedMembers;\r\n    }\r\n  }\r\n  flowEnumParseExplicitType({\r\n    enumName\r\n  }) {\r\n    if (!this.eatContextual(101)) return null;\r\n    if (!tokenIsIdentifier(this.state.type)) {\r\n      throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\r\n        at: this.state.startLoc,\r\n        enumName\r\n      });\r\n    }\r\n    const {\r\n      value\r\n    } = this.state;\r\n    this.next();\r\n    if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\r\n      this.raise(FlowErrors.EnumInvalidExplicitType, {\r\n        at: this.state.startLoc,\r\n        enumName,\r\n        invalidEnumType: value\r\n      });\r\n    }\r\n    return value;\r\n  }\r\n  flowEnumBody(node, id) {\r\n    const enumName = id.name;\r\n    const nameLoc = id.loc.start;\r\n    const explicitType = this.flowEnumParseExplicitType({\r\n      enumName\r\n    });\r\n    this.expect(5);\r\n    const {\r\n      members,\r\n      hasUnknownMembers\r\n    } = this.flowEnumMembers({\r\n      enumName,\r\n      explicitType\r\n    });\r\n    node.hasUnknownMembers = hasUnknownMembers;\r\n    switch (explicitType) {\r\n      case \"boolean\":\r\n        node.explicitType = true;\r\n        node.members = members.booleanMembers;\r\n        this.expect(8);\r\n        return this.finishNode(node, \"EnumBooleanBody\");\r\n      case \"number\":\r\n        node.explicitType = true;\r\n        node.members = members.numberMembers;\r\n        this.expect(8);\r\n        return this.finishNode(node, \"EnumNumberBody\");\r\n      case \"string\":\r\n        node.explicitType = true;\r\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\r\n          enumName\r\n        });\r\n        this.expect(8);\r\n        return this.finishNode(node, \"EnumStringBody\");\r\n      case \"symbol\":\r\n        node.members = members.defaultedMembers;\r\n        this.expect(8);\r\n        return this.finishNode(node, \"EnumSymbolBody\");\r\n      default:\r\n        {\r\n          const empty = () => {\r\n            node.members = [];\r\n            this.expect(8);\r\n            return this.finishNode(node, \"EnumStringBody\");\r\n          };\r\n          node.explicitType = false;\r\n          const boolsLen = members.booleanMembers.length;\r\n          const numsLen = members.numberMembers.length;\r\n          const strsLen = members.stringMembers.length;\r\n          const defaultedLen = members.defaultedMembers.length;\r\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\r\n            return empty();\r\n          } else if (!boolsLen && !numsLen) {\r\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\r\n              enumName\r\n            });\r\n            this.expect(8);\r\n            return this.finishNode(node, \"EnumStringBody\");\r\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\r\n            for (const member of members.defaultedMembers) {\r\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\r\n                enumName,\r\n                memberName: member.id.name\r\n              });\r\n            }\r\n            node.members = members.booleanMembers;\r\n            this.expect(8);\r\n            return this.finishNode(node, \"EnumBooleanBody\");\r\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\r\n            for (const member of members.defaultedMembers) {\r\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\r\n                enumName,\r\n                memberName: member.id.name\r\n              });\r\n            }\r\n            node.members = members.numberMembers;\r\n            this.expect(8);\r\n            return this.finishNode(node, \"EnumNumberBody\");\r\n          } else {\r\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\r\n              at: nameLoc,\r\n              enumName\r\n            });\r\n            return empty();\r\n          }\r\n        }\r\n    }\r\n  }\r\n  flowParseEnumDeclaration(node) {\r\n    const id = this.parseIdentifier();\r\n    node.id = id;\r\n    node.body = this.flowEnumBody(this.startNode(), id);\r\n    return this.finishNode(node, \"EnumDeclaration\");\r\n  }\r\n  isLookaheadToken_lt() {\r\n    const next = this.nextTokenStart();\r\n    if (this.input.charCodeAt(next) === 60) {\r\n      const afterNext = this.input.charCodeAt(next + 1);\r\n      return afterNext !== 60 && afterNext !== 61;\r\n    }\r\n    return false;\r\n  }\r\n  maybeUnwrapTypeCastExpression(node) {\r\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\r\n  }\r\n};\r\nconst entities = {\r\n  __proto__: null,\r\n  quot: \"\\u0022\",\r\n  amp: \"&\",\r\n  apos: \"\\u0027\",\r\n  lt: \"<\",\r\n  gt: \">\",\r\n  nbsp: \"\\u00A0\",\r\n  iexcl: \"\\u00A1\",\r\n  cent: \"\\u00A2\",\r\n  pound: \"\\u00A3\",\r\n  curren: \"\\u00A4\",\r\n  yen: \"\\u00A5\",\r\n  brvbar: \"\\u00A6\",\r\n  sect: \"\\u00A7\",\r\n  uml: \"\\u00A8\",\r\n  copy: \"\\u00A9\",\r\n  ordf: \"\\u00AA\",\r\n  laquo: \"\\u00AB\",\r\n  not: \"\\u00AC\",\r\n  shy: \"\\u00AD\",\r\n  reg: \"\\u00AE\",\r\n  macr: \"\\u00AF\",\r\n  deg: \"\\u00B0\",\r\n  plusmn: \"\\u00B1\",\r\n  sup2: \"\\u00B2\",\r\n  sup3: \"\\u00B3\",\r\n  acute: \"\\u00B4\",\r\n  micro: \"\\u00B5\",\r\n  para: \"\\u00B6\",\r\n  middot: \"\\u00B7\",\r\n  cedil: \"\\u00B8\",\r\n  sup1: \"\\u00B9\",\r\n  ordm: \"\\u00BA\",\r\n  raquo: \"\\u00BB\",\r\n  frac14: \"\\u00BC\",\r\n  frac12: \"\\u00BD\",\r\n  frac34: \"\\u00BE\",\r\n  iquest: \"\\u00BF\",\r\n  Agrave: \"\\u00C0\",\r\n  Aacute: \"\\u00C1\",\r\n  Acirc: \"\\u00C2\",\r\n  Atilde: \"\\u00C3\",\r\n  Auml: \"\\u00C4\",\r\n  Aring: \"\\u00C5\",\r\n  AElig: \"\\u00C6\",\r\n  Ccedil: \"\\u00C7\",\r\n  Egrave: \"\\u00C8\",\r\n  Eacute: \"\\u00C9\",\r\n  Ecirc: \"\\u00CA\",\r\n  Euml: \"\\u00CB\",\r\n  Igrave: \"\\u00CC\",\r\n  Iacute: \"\\u00CD\",\r\n  Icirc: \"\\u00CE\",\r\n  Iuml: \"\\u00CF\",\r\n  ETH: \"\\u00D0\",\r\n  Ntilde: \"\\u00D1\",\r\n  Ograve: \"\\u00D2\",\r\n  Oacute: \"\\u00D3\",\r\n  Ocirc: \"\\u00D4\",\r\n  Otilde: \"\\u00D5\",\r\n  Ouml: \"\\u00D6\",\r\n  times: \"\\u00D7\",\r\n  Oslash: \"\\u00D8\",\r\n  Ugrave: \"\\u00D9\",\r\n  Uacute: \"\\u00DA\",\r\n  Ucirc: \"\\u00DB\",\r\n  Uuml: \"\\u00DC\",\r\n  Yacute: \"\\u00DD\",\r\n  THORN: \"\\u00DE\",\r\n  szlig: \"\\u00DF\",\r\n  agrave: \"\\u00E0\",\r\n  aacute: \"\\u00E1\",\r\n  acirc: \"\\u00E2\",\r\n  atilde: \"\\u00E3\",\r\n  auml: \"\\u00E4\",\r\n  aring: \"\\u00E5\",\r\n  aelig: \"\\u00E6\",\r\n  ccedil: \"\\u00E7\",\r\n  egrave: \"\\u00E8\",\r\n  eacute: \"\\u00E9\",\r\n  ecirc: \"\\u00EA\",\r\n  euml: \"\\u00EB\",\r\n  igrave: \"\\u00EC\",\r\n  iacute: \"\\u00ED\",\r\n  icirc: \"\\u00EE\",\r\n  iuml: \"\\u00EF\",\r\n  eth: \"\\u00F0\",\r\n  ntilde: \"\\u00F1\",\r\n  ograve: \"\\u00F2\",\r\n  oacute: \"\\u00F3\",\r\n  ocirc: \"\\u00F4\",\r\n  otilde: \"\\u00F5\",\r\n  ouml: \"\\u00F6\",\r\n  divide: \"\\u00F7\",\r\n  oslash: \"\\u00F8\",\r\n  ugrave: \"\\u00F9\",\r\n  uacute: \"\\u00FA\",\r\n  ucirc: \"\\u00FB\",\r\n  uuml: \"\\u00FC\",\r\n  yacute: \"\\u00FD\",\r\n  thorn: \"\\u00FE\",\r\n  yuml: \"\\u00FF\",\r\n  OElig: \"\\u0152\",\r\n  oelig: \"\\u0153\",\r\n  Scaron: \"\\u0160\",\r\n  scaron: \"\\u0161\",\r\n  Yuml: \"\\u0178\",\r\n  fnof: \"\\u0192\",\r\n  circ: \"\\u02C6\",\r\n  tilde: \"\\u02DC\",\r\n  Alpha: \"\\u0391\",\r\n  Beta: \"\\u0392\",\r\n  Gamma: \"\\u0393\",\r\n  Delta: \"\\u0394\",\r\n  Epsilon: \"\\u0395\",\r\n  Zeta: \"\\u0396\",\r\n  Eta: \"\\u0397\",\r\n  Theta: \"\\u0398\",\r\n  Iota: \"\\u0399\",\r\n  Kappa: \"\\u039A\",\r\n  Lambda: \"\\u039B\",\r\n  Mu: \"\\u039C\",\r\n  Nu: \"\\u039D\",\r\n  Xi: \"\\u039E\",\r\n  Omicron: \"\\u039F\",\r\n  Pi: \"\\u03A0\",\r\n  Rho: \"\\u03A1\",\r\n  Sigma: \"\\u03A3\",\r\n  Tau: \"\\u03A4\",\r\n  Upsilon: \"\\u03A5\",\r\n  Phi: \"\\u03A6\",\r\n  Chi: \"\\u03A7\",\r\n  Psi: \"\\u03A8\",\r\n  Omega: \"\\u03A9\",\r\n  alpha: \"\\u03B1\",\r\n  beta: \"\\u03B2\",\r\n  gamma: \"\\u03B3\",\r\n  delta: \"\\u03B4\",\r\n  epsilon: \"\\u03B5\",\r\n  zeta: \"\\u03B6\",\r\n  eta: \"\\u03B7\",\r\n  theta: \"\\u03B8\",\r\n  iota: \"\\u03B9\",\r\n  kappa: \"\\u03BA\",\r\n  lambda: \"\\u03BB\",\r\n  mu: \"\\u03BC\",\r\n  nu: \"\\u03BD\",\r\n  xi: \"\\u03BE\",\r\n  omicron: \"\\u03BF\",\r\n  pi: \"\\u03C0\",\r\n  rho: \"\\u03C1\",\r\n  sigmaf: \"\\u03C2\",\r\n  sigma: \"\\u03C3\",\r\n  tau: \"\\u03C4\",\r\n  upsilon: \"\\u03C5\",\r\n  phi: \"\\u03C6\",\r\n  chi: \"\\u03C7\",\r\n  psi: \"\\u03C8\",\r\n  omega: \"\\u03C9\",\r\n  thetasym: \"\\u03D1\",\r\n  upsih: \"\\u03D2\",\r\n  piv: \"\\u03D6\",\r\n  ensp: \"\\u2002\",\r\n  emsp: \"\\u2003\",\r\n  thinsp: \"\\u2009\",\r\n  zwnj: \"\\u200C\",\r\n  zwj: \"\\u200D\",\r\n  lrm: \"\\u200E\",\r\n  rlm: \"\\u200F\",\r\n  ndash: \"\\u2013\",\r\n  mdash: \"\\u2014\",\r\n  lsquo: \"\\u2018\",\r\n  rsquo: \"\\u2019\",\r\n  sbquo: \"\\u201A\",\r\n  ldquo: \"\\u201C\",\r\n  rdquo: \"\\u201D\",\r\n  bdquo: \"\\u201E\",\r\n  dagger: \"\\u2020\",\r\n  Dagger: \"\\u2021\",\r\n  bull: \"\\u2022\",\r\n  hellip: \"\\u2026\",\r\n  permil: \"\\u2030\",\r\n  prime: \"\\u2032\",\r\n  Prime: \"\\u2033\",\r\n  lsaquo: \"\\u2039\",\r\n  rsaquo: \"\\u203A\",\r\n  oline: \"\\u203E\",\r\n  frasl: \"\\u2044\",\r\n  euro: \"\\u20AC\",\r\n  image: \"\\u2111\",\r\n  weierp: \"\\u2118\",\r\n  real: \"\\u211C\",\r\n  trade: \"\\u2122\",\r\n  alefsym: \"\\u2135\",\r\n  larr: \"\\u2190\",\r\n  uarr: \"\\u2191\",\r\n  rarr: \"\\u2192\",\r\n  darr: \"\\u2193\",\r\n  harr: \"\\u2194\",\r\n  crarr: \"\\u21B5\",\r\n  lArr: \"\\u21D0\",\r\n  uArr: \"\\u21D1\",\r\n  rArr: \"\\u21D2\",\r\n  dArr: \"\\u21D3\",\r\n  hArr: \"\\u21D4\",\r\n  forall: \"\\u2200\",\r\n  part: \"\\u2202\",\r\n  exist: \"\\u2203\",\r\n  empty: \"\\u2205\",\r\n  nabla: \"\\u2207\",\r\n  isin: \"\\u2208\",\r\n  notin: \"\\u2209\",\r\n  ni: \"\\u220B\",\r\n  prod: \"\\u220F\",\r\n  sum: \"\\u2211\",\r\n  minus: \"\\u2212\",\r\n  lowast: \"\\u2217\",\r\n  radic: \"\\u221A\",\r\n  prop: \"\\u221D\",\r\n  infin: \"\\u221E\",\r\n  ang: \"\\u2220\",\r\n  and: \"\\u2227\",\r\n  or: \"\\u2228\",\r\n  cap: \"\\u2229\",\r\n  cup: \"\\u222A\",\r\n  int: \"\\u222B\",\r\n  there4: \"\\u2234\",\r\n  sim: \"\\u223C\",\r\n  cong: \"\\u2245\",\r\n  asymp: \"\\u2248\",\r\n  ne: \"\\u2260\",\r\n  equiv: \"\\u2261\",\r\n  le: \"\\u2264\",\r\n  ge: \"\\u2265\",\r\n  sub: \"\\u2282\",\r\n  sup: \"\\u2283\",\r\n  nsub: \"\\u2284\",\r\n  sube: \"\\u2286\",\r\n  supe: \"\\u2287\",\r\n  oplus: \"\\u2295\",\r\n  otimes: \"\\u2297\",\r\n  perp: \"\\u22A5\",\r\n  sdot: \"\\u22C5\",\r\n  lceil: \"\\u2308\",\r\n  rceil: \"\\u2309\",\r\n  lfloor: \"\\u230A\",\r\n  rfloor: \"\\u230B\",\r\n  lang: \"\\u2329\",\r\n  rang: \"\\u232A\",\r\n  loz: \"\\u25CA\",\r\n  spades: \"\\u2660\",\r\n  clubs: \"\\u2663\",\r\n  hearts: \"\\u2665\",\r\n  diams: \"\\u2666\"\r\n};\r\nconst JsxErrors = ParseErrorEnum`jsx`({\r\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\r\n  MissingClosingTagElement: ({\r\n    openingTagName\r\n  }) => `Expected corresponding JSX closing tag for <${openingTagName}>.`,\r\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\r\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\r\n  UnexpectedToken: ({\r\n    unexpected,\r\n    HTMLEntity\r\n  }) => `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\r\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\r\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\r\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\r\n});\r\nfunction isFragment(object) {\r\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\r\n}\r\nfunction getQualifiedJSXName(object) {\r\n  if (object.type === \"JSXIdentifier\") {\r\n    return object.name;\r\n  }\r\n  if (object.type === \"JSXNamespacedName\") {\r\n    return object.namespace.name + \":\" + object.name.name;\r\n  }\r\n  if (object.type === \"JSXMemberExpression\") {\r\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\r\n  }\r\n  throw new Error(\"Node had unexpected type: \" + object.type);\r\n}\r\nvar jsx = superClass => class JSXParserMixin extends superClass {\r\n  jsxReadToken() {\r\n    let out = \"\";\r\n    let chunkStart = this.state.pos;\r\n    for (;;) {\r\n      if (this.state.pos >= this.length) {\r\n        throw this.raise(JsxErrors.UnterminatedJsxContent, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      const ch = this.input.charCodeAt(this.state.pos);\r\n      switch (ch) {\r\n        case 60:\r\n        case 123:\r\n          if (this.state.pos === this.state.start) {\r\n            if (ch === 60 && this.state.canStartJSXElement) {\r\n              ++this.state.pos;\r\n              this.finishToken(140);\r\n            } else {\r\n              super.getTokenFromCode(ch);\r\n            }\r\n            return;\r\n          }\r\n          out += this.input.slice(chunkStart, this.state.pos);\r\n          this.finishToken(139, out);\r\n          return;\r\n        case 38:\r\n          out += this.input.slice(chunkStart, this.state.pos);\r\n          out += this.jsxReadEntity();\r\n          chunkStart = this.state.pos;\r\n          break;\r\n        case 62:\r\n        case 125:\r\n        default:\r\n          if (isNewLine(ch)) {\r\n            out += this.input.slice(chunkStart, this.state.pos);\r\n            out += this.jsxReadNewLine(true);\r\n            chunkStart = this.state.pos;\r\n          } else {\r\n            ++this.state.pos;\r\n          }\r\n      }\r\n    }\r\n  }\r\n  jsxReadNewLine(normalizeCRLF) {\r\n    const ch = this.input.charCodeAt(this.state.pos);\r\n    let out;\r\n    ++this.state.pos;\r\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\r\n      ++this.state.pos;\r\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\r\n    } else {\r\n      out = String.fromCharCode(ch);\r\n    }\r\n    ++this.state.curLine;\r\n    this.state.lineStart = this.state.pos;\r\n    return out;\r\n  }\r\n  jsxReadString(quote) {\r\n    let out = \"\";\r\n    let chunkStart = ++this.state.pos;\r\n    for (;;) {\r\n      if (this.state.pos >= this.length) {\r\n        throw this.raise(Errors.UnterminatedString, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      const ch = this.input.charCodeAt(this.state.pos);\r\n      if (ch === quote) break;\r\n      if (ch === 38) {\r\n        out += this.input.slice(chunkStart, this.state.pos);\r\n        out += this.jsxReadEntity();\r\n        chunkStart = this.state.pos;\r\n      } else if (isNewLine(ch)) {\r\n        out += this.input.slice(chunkStart, this.state.pos);\r\n        out += this.jsxReadNewLine(false);\r\n        chunkStart = this.state.pos;\r\n      } else {\r\n        ++this.state.pos;\r\n      }\r\n    }\r\n    out += this.input.slice(chunkStart, this.state.pos++);\r\n    this.finishToken(131, out);\r\n  }\r\n  jsxReadEntity() {\r\n    const startPos = ++this.state.pos;\r\n    if (this.codePointAtPos(this.state.pos) === 35) {\r\n      ++this.state.pos;\r\n      let radix = 10;\r\n      if (this.codePointAtPos(this.state.pos) === 120) {\r\n        radix = 16;\r\n        ++this.state.pos;\r\n      }\r\n      const codePoint = this.readInt(radix, undefined, false, \"bail\");\r\n      if (codePoint !== null && this.codePointAtPos(this.state.pos) === 59) {\r\n        ++this.state.pos;\r\n        return String.fromCodePoint(codePoint);\r\n      }\r\n    } else {\r\n      let count = 0;\r\n      let semi = false;\r\n      while (count++ < 10 && this.state.pos < this.length && !(semi = this.codePointAtPos(this.state.pos) == 59)) {\r\n        ++this.state.pos;\r\n      }\r\n      if (semi) {\r\n        const desc = this.input.slice(startPos, this.state.pos);\r\n        const entity = entities[desc];\r\n        ++this.state.pos;\r\n        if (entity) {\r\n          return entity;\r\n        }\r\n      }\r\n    }\r\n    this.state.pos = startPos;\r\n    return \"&\";\r\n  }\r\n  jsxReadWord() {\r\n    let ch;\r\n    const start = this.state.pos;\r\n    do {\r\n      ch = this.input.charCodeAt(++this.state.pos);\r\n    } while (isIdentifierChar(ch) || ch === 45);\r\n    this.finishToken(138, this.input.slice(start, this.state.pos));\r\n  }\r\n  jsxParseIdentifier() {\r\n    const node = this.startNode();\r\n    if (this.match(138)) {\r\n      node.name = this.state.value;\r\n    } else if (tokenIsKeyword(this.state.type)) {\r\n      node.name = tokenLabelName(this.state.type);\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n    this.next();\r\n    return this.finishNode(node, \"JSXIdentifier\");\r\n  }\r\n  jsxParseNamespacedName() {\r\n    const startLoc = this.state.startLoc;\r\n    const name = this.jsxParseIdentifier();\r\n    if (!this.eat(14)) return name;\r\n    const node = this.startNodeAt(startLoc);\r\n    node.namespace = name;\r\n    node.name = this.jsxParseIdentifier();\r\n    return this.finishNode(node, \"JSXNamespacedName\");\r\n  }\r\n  jsxParseElementName() {\r\n    const startLoc = this.state.startLoc;\r\n    let node = this.jsxParseNamespacedName();\r\n    if (node.type === \"JSXNamespacedName\") {\r\n      return node;\r\n    }\r\n    while (this.eat(16)) {\r\n      const newNode = this.startNodeAt(startLoc);\r\n      newNode.object = node;\r\n      newNode.property = this.jsxParseIdentifier();\r\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\r\n    }\r\n    return node;\r\n  }\r\n  jsxParseAttributeValue() {\r\n    let node;\r\n    switch (this.state.type) {\r\n      case 5:\r\n        node = this.startNode();\r\n        this.setContext(types$1.brace);\r\n        this.next();\r\n        node = this.jsxParseExpressionContainer(node, types$1.j_oTag);\r\n        if (node.expression.type === \"JSXEmptyExpression\") {\r\n          this.raise(JsxErrors.AttributeIsEmpty, {\r\n            at: node\r\n          });\r\n        }\r\n        return node;\r\n      case 140:\r\n      case 131:\r\n        return this.parseExprAtom();\r\n      default:\r\n        throw this.raise(JsxErrors.UnsupportedJsxValue, {\r\n          at: this.state.startLoc\r\n        });\r\n    }\r\n  }\r\n  jsxParseEmptyExpression() {\r\n    const node = this.startNodeAt(this.state.lastTokEndLoc);\r\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\r\n  }\r\n  jsxParseSpreadChild(node) {\r\n    this.next();\r\n    node.expression = this.parseExpression();\r\n    this.setContext(types$1.j_expr);\r\n    this.state.canStartJSXElement = true;\r\n    this.expect(8);\r\n    return this.finishNode(node, \"JSXSpreadChild\");\r\n  }\r\n  jsxParseExpressionContainer(node, previousContext) {\r\n    if (this.match(8)) {\r\n      node.expression = this.jsxParseEmptyExpression();\r\n    } else {\r\n      const expression = this.parseExpression();\r\n      node.expression = expression;\r\n    }\r\n    this.setContext(previousContext);\r\n    this.state.canStartJSXElement = true;\r\n    this.expect(8);\r\n    return this.finishNode(node, \"JSXExpressionContainer\");\r\n  }\r\n  jsxParseAttribute() {\r\n    const node = this.startNode();\r\n    if (this.match(5)) {\r\n      this.setContext(types$1.brace);\r\n      this.next();\r\n      this.expect(21);\r\n      node.argument = this.parseMaybeAssignAllowIn();\r\n      this.setContext(types$1.j_oTag);\r\n      this.state.canStartJSXElement = true;\r\n      this.expect(8);\r\n      return this.finishNode(node, \"JSXSpreadAttribute\");\r\n    }\r\n    node.name = this.jsxParseNamespacedName();\r\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\r\n    return this.finishNode(node, \"JSXAttribute\");\r\n  }\r\n  jsxParseOpeningElementAt(startLoc) {\r\n    const node = this.startNodeAt(startLoc);\r\n    if (this.eat(141)) {\r\n      return this.finishNode(node, \"JSXOpeningFragment\");\r\n    }\r\n    node.name = this.jsxParseElementName();\r\n    return this.jsxParseOpeningElementAfterName(node);\r\n  }\r\n  jsxParseOpeningElementAfterName(node) {\r\n    const attributes = [];\r\n    while (!this.match(56) && !this.match(141)) {\r\n      attributes.push(this.jsxParseAttribute());\r\n    }\r\n    node.attributes = attributes;\r\n    node.selfClosing = this.eat(56);\r\n    this.expect(141);\r\n    return this.finishNode(node, \"JSXOpeningElement\");\r\n  }\r\n  jsxParseClosingElementAt(startLoc) {\r\n    const node = this.startNodeAt(startLoc);\r\n    if (this.eat(141)) {\r\n      return this.finishNode(node, \"JSXClosingFragment\");\r\n    }\r\n    node.name = this.jsxParseElementName();\r\n    this.expect(141);\r\n    return this.finishNode(node, \"JSXClosingElement\");\r\n  }\r\n  jsxParseElementAt(startLoc) {\r\n    const node = this.startNodeAt(startLoc);\r\n    const children = [];\r\n    const openingElement = this.jsxParseOpeningElementAt(startLoc);\r\n    let closingElement = null;\r\n    if (!openingElement.selfClosing) {\r\n      contents: for (;;) {\r\n        switch (this.state.type) {\r\n          case 140:\r\n            startLoc = this.state.startLoc;\r\n            this.next();\r\n            if (this.eat(56)) {\r\n              closingElement = this.jsxParseClosingElementAt(startLoc);\r\n              break contents;\r\n            }\r\n            children.push(this.jsxParseElementAt(startLoc));\r\n            break;\r\n          case 139:\r\n            children.push(this.parseExprAtom());\r\n            break;\r\n          case 5:\r\n            {\r\n              const node = this.startNode();\r\n              this.setContext(types$1.brace);\r\n              this.next();\r\n              if (this.match(21)) {\r\n                children.push(this.jsxParseSpreadChild(node));\r\n              } else {\r\n                children.push(this.jsxParseExpressionContainer(node, types$1.j_expr));\r\n              }\r\n              break;\r\n            }\r\n          default:\r\n            this.unexpected();\r\n        }\r\n      }\r\n      if (isFragment(openingElement) && !isFragment(closingElement) && closingElement !== null) {\r\n        this.raise(JsxErrors.MissingClosingTagFragment, {\r\n          at: closingElement\r\n        });\r\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\r\n        this.raise(JsxErrors.MissingClosingTagElement, {\r\n          at: closingElement,\r\n          openingTagName: getQualifiedJSXName(openingElement.name)\r\n        });\r\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\r\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\r\n          this.raise(JsxErrors.MissingClosingTagElement, {\r\n            at: closingElement,\r\n            openingTagName: getQualifiedJSXName(openingElement.name)\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (isFragment(openingElement)) {\r\n      node.openingFragment = openingElement;\r\n      node.closingFragment = closingElement;\r\n    } else {\r\n      node.openingElement = openingElement;\r\n      node.closingElement = closingElement;\r\n    }\r\n    node.children = children;\r\n    if (this.match(47)) {\r\n      throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\r\n  }\r\n  jsxParseElement() {\r\n    const startLoc = this.state.startLoc;\r\n    this.next();\r\n    return this.jsxParseElementAt(startLoc);\r\n  }\r\n  setContext(newContext) {\r\n    const {\r\n      context\r\n    } = this.state;\r\n    context[context.length - 1] = newContext;\r\n  }\r\n  parseExprAtom(refExpressionErrors) {\r\n    if (this.match(139)) {\r\n      return this.parseLiteral(this.state.value, \"JSXText\");\r\n    } else if (this.match(140)) {\r\n      return this.jsxParseElement();\r\n    } else if (this.match(47) && this.input.charCodeAt(this.state.pos) !== 33) {\r\n      this.replaceToken(140);\r\n      return this.jsxParseElement();\r\n    } else {\r\n      return super.parseExprAtom(refExpressionErrors);\r\n    }\r\n  }\r\n  skipSpace() {\r\n    const curContext = this.curContext();\r\n    if (!curContext.preserveSpace) super.skipSpace();\r\n  }\r\n  getTokenFromCode(code) {\r\n    const context = this.curContext();\r\n    if (context === types$1.j_expr) {\r\n      this.jsxReadToken();\r\n      return;\r\n    }\r\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\r\n      if (isIdentifierStart(code)) {\r\n        this.jsxReadWord();\r\n        return;\r\n      }\r\n      if (code === 62) {\r\n        ++this.state.pos;\r\n        this.finishToken(141);\r\n        return;\r\n      }\r\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\r\n        this.jsxReadString(code);\r\n        return;\r\n      }\r\n    }\r\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\r\n      ++this.state.pos;\r\n      this.finishToken(140);\r\n      return;\r\n    }\r\n    super.getTokenFromCode(code);\r\n  }\r\n  updateContext(prevType) {\r\n    const {\r\n      context,\r\n      type\r\n    } = this.state;\r\n    if (type === 56 && prevType === 140) {\r\n      context.splice(-2, 2, types$1.j_cTag);\r\n      this.state.canStartJSXElement = false;\r\n    } else if (type === 140) {\r\n      context.push(types$1.j_oTag);\r\n    } else if (type === 141) {\r\n      const out = context[context.length - 1];\r\n      if (out === types$1.j_oTag && prevType === 56 || out === types$1.j_cTag) {\r\n        context.pop();\r\n        this.state.canStartJSXElement = context[context.length - 1] === types$1.j_expr;\r\n      } else {\r\n        this.setContext(types$1.j_expr);\r\n        this.state.canStartJSXElement = true;\r\n      }\r\n    } else {\r\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\r\n    }\r\n  }\r\n};\r\nclass TypeScriptScope extends Scope {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.types = new Set();\r\n    this.enums = new Set();\r\n    this.constEnums = new Set();\r\n    this.classes = new Set();\r\n    this.exportOnlyBindings = new Set();\r\n  }\r\n}\r\nclass TypeScriptScopeHandler extends ScopeHandler {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.importsStack = [];\r\n  }\r\n  createScope(flags) {\r\n    this.importsStack.push(new Set());\r\n    return new TypeScriptScope(flags);\r\n  }\r\n  enter(flags) {\r\n    if (flags == SCOPE_TS_MODULE) {\r\n      this.importsStack.push(new Set());\r\n    }\r\n    super.enter(flags);\r\n  }\r\n  exit() {\r\n    const flags = super.exit();\r\n    if (flags == SCOPE_TS_MODULE) {\r\n      this.importsStack.pop();\r\n    }\r\n    return flags;\r\n  }\r\n  hasImport(name, allowShadow) {\r\n    const len = this.importsStack.length;\r\n    if (this.importsStack[len - 1].has(name)) {\r\n      return true;\r\n    }\r\n    if (!allowShadow && len > 1) {\r\n      for (let i = 0; i < len - 1; i++) {\r\n        if (this.importsStack[i].has(name)) return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  declareName(name, bindingType, loc) {\r\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\r\n      if (this.hasImport(name, true)) {\r\n        this.parser.raise(Errors.VarRedeclaration, {\r\n          at: loc,\r\n          identifierName: name\r\n        });\r\n      }\r\n      this.importsStack[this.importsStack.length - 1].add(name);\r\n      return;\r\n    }\r\n    const scope = this.currentScope();\r\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\r\n      this.maybeExportDefined(scope, name);\r\n      scope.exportOnlyBindings.add(name);\r\n      return;\r\n    }\r\n    super.declareName(name, bindingType, loc);\r\n    if (bindingType & BIND_KIND_TYPE) {\r\n      if (!(bindingType & BIND_KIND_VALUE)) {\r\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\r\n        this.maybeExportDefined(scope, name);\r\n      }\r\n      scope.types.add(name);\r\n    }\r\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\r\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\r\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\r\n  }\r\n  isRedeclaredInScope(scope, name, bindingType) {\r\n    if (scope.enums.has(name)) {\r\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\r\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\r\n        const wasConst = scope.constEnums.has(name);\r\n        return isConst !== wasConst;\r\n      }\r\n      return true;\r\n    }\r\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\r\n      if (scope.lexical.has(name)) {\r\n        return !!(bindingType & BIND_KIND_VALUE);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\r\n      return true;\r\n    }\r\n    return super.isRedeclaredInScope(scope, name, bindingType);\r\n  }\r\n  checkLocalExport(id) {\r\n    const {\r\n      name\r\n    } = id;\r\n    if (this.hasImport(name)) return;\r\n    const len = this.scopeStack.length;\r\n    for (let i = len - 1; i >= 0; i--) {\r\n      const scope = this.scopeStack[i];\r\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\r\n    }\r\n    super.checkLocalExport(id);\r\n  }\r\n}\r\nconst getOwn$1 = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\r\nconst unwrapParenthesizedExpression = node => {\r\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\r\n};\r\nclass LValParser extends NodeUtils {\r\n  toAssignable(node, isLHS = false) {\r\n    var _node$extra, _node$extra3;\r\n    let parenthesized = undefined;\r\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\r\n      parenthesized = unwrapParenthesizedExpression(node);\r\n      if (isLHS) {\r\n        if (parenthesized.type === \"Identifier\") {\r\n          this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment, {\r\n            at: node\r\n          });\r\n        } else if (parenthesized.type !== \"MemberExpression\") {\r\n          this.raise(Errors.InvalidParenthesizedAssignment, {\r\n            at: node\r\n          });\r\n        }\r\n      } else {\r\n        this.raise(Errors.InvalidParenthesizedAssignment, {\r\n          at: node\r\n        });\r\n      }\r\n    }\r\n    switch (node.type) {\r\n      case \"Identifier\":\r\n      case \"ObjectPattern\":\r\n      case \"ArrayPattern\":\r\n      case \"AssignmentPattern\":\r\n      case \"RestElement\":\r\n        break;\r\n      case \"ObjectExpression\":\r\n        node.type = \"ObjectPattern\";\r\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\r\n          var _node$extra2;\r\n          const prop = node.properties[i];\r\n          const isLast = i === last;\r\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\r\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingCommaLoc) {\r\n            this.raise(Errors.RestTrailingComma, {\r\n              at: node.extra.trailingCommaLoc\r\n            });\r\n          }\r\n        }\r\n        break;\r\n      case \"ObjectProperty\":\r\n        {\r\n          const {\r\n            key,\r\n            value\r\n          } = node;\r\n          if (this.isPrivateName(key)) {\r\n            this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\r\n          }\r\n          this.toAssignable(value, isLHS);\r\n          break;\r\n        }\r\n      case \"SpreadElement\":\r\n        {\r\n          throw new Error(\"Internal @babel/parser error (this is a bug, please report it).\" + \" SpreadElement should be converted by .toAssignable's caller.\");\r\n        }\r\n      case \"ArrayExpression\":\r\n        node.type = \"ArrayPattern\";\r\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingCommaLoc, isLHS);\r\n        break;\r\n      case \"AssignmentExpression\":\r\n        if (node.operator !== \"=\") {\r\n          this.raise(Errors.MissingEqInAssignment, {\r\n            at: node.left.loc.end\r\n          });\r\n        }\r\n        node.type = \"AssignmentPattern\";\r\n        delete node.operator;\r\n        this.toAssignable(node.left, isLHS);\r\n        break;\r\n      case \"ParenthesizedExpression\":\r\n        this.toAssignable(parenthesized, isLHS);\r\n        break;\r\n    }\r\n  }\r\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\r\n    if (prop.type === \"ObjectMethod\") {\r\n      this.raise(prop.kind === \"get\" || prop.kind === \"set\" ? Errors.PatternHasAccessor : Errors.PatternHasMethod, {\r\n        at: prop.key\r\n      });\r\n    } else if (prop.type === \"SpreadElement\") {\r\n      prop.type = \"RestElement\";\r\n      const arg = prop.argument;\r\n      this.checkToRestConversion(arg, false);\r\n      this.toAssignable(arg, isLHS);\r\n      if (!isLast) {\r\n        this.raise(Errors.RestTrailingComma, {\r\n          at: prop\r\n        });\r\n      }\r\n    } else {\r\n      this.toAssignable(prop, isLHS);\r\n    }\r\n  }\r\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\r\n    const end = exprList.length - 1;\r\n    for (let i = 0; i <= end; i++) {\r\n      const elt = exprList[i];\r\n      if (!elt) continue;\r\n      if (elt.type === \"SpreadElement\") {\r\n        elt.type = \"RestElement\";\r\n        const arg = elt.argument;\r\n        this.checkToRestConversion(arg, true);\r\n        this.toAssignable(arg, isLHS);\r\n      } else {\r\n        this.toAssignable(elt, isLHS);\r\n      }\r\n      if (elt.type === \"RestElement\") {\r\n        if (i < end) {\r\n          this.raise(Errors.RestTrailingComma, {\r\n            at: elt\r\n          });\r\n        } else if (trailingCommaLoc) {\r\n          this.raise(Errors.RestTrailingComma, {\r\n            at: trailingCommaLoc\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  isAssignable(node, isBinding) {\r\n    switch (node.type) {\r\n      case \"Identifier\":\r\n      case \"ObjectPattern\":\r\n      case \"ArrayPattern\":\r\n      case \"AssignmentPattern\":\r\n      case \"RestElement\":\r\n        return true;\r\n      case \"ObjectExpression\":\r\n        {\r\n          const last = node.properties.length - 1;\r\n          return node.properties.every((prop, i) => {\r\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\r\n          });\r\n        }\r\n      case \"ObjectProperty\":\r\n        return this.isAssignable(node.value);\r\n      case \"SpreadElement\":\r\n        return this.isAssignable(node.argument);\r\n      case \"ArrayExpression\":\r\n        return node.elements.every(element => element === null || this.isAssignable(element));\r\n      case \"AssignmentExpression\":\r\n        return node.operator === \"=\";\r\n      case \"ParenthesizedExpression\":\r\n        return this.isAssignable(node.expression);\r\n      case \"MemberExpression\":\r\n      case \"OptionalMemberExpression\":\r\n        return !isBinding;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n  toReferencedList(exprList, isParenthesizedExpr) {\r\n    return exprList;\r\n  }\r\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\r\n    this.toReferencedList(exprList, isParenthesizedExpr);\r\n    for (const expr of exprList) {\r\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\r\n        this.toReferencedListDeep(expr.elements);\r\n      }\r\n    }\r\n  }\r\n  parseSpread(refExpressionErrors) {\r\n    const node = this.startNode();\r\n    this.next();\r\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined);\r\n    return this.finishNode(node, \"SpreadElement\");\r\n  }\r\n  parseRestBinding() {\r\n    const node = this.startNode();\r\n    this.next();\r\n    node.argument = this.parseBindingAtom();\r\n    return this.finishNode(node, \"RestElement\");\r\n  }\r\n  parseBindingAtom() {\r\n    switch (this.state.type) {\r\n      case 0:\r\n        {\r\n          const node = this.startNode();\r\n          this.next();\r\n          node.elements = this.parseBindingList(3, 93, 1);\r\n          return this.finishNode(node, \"ArrayPattern\");\r\n        }\r\n      case 5:\r\n        return this.parseObjectLike(8, true);\r\n    }\r\n    return this.parseIdentifier();\r\n  }\r\n  parseBindingList(close, closeCharCode, flags) {\r\n    const allowEmpty = flags & 1;\r\n    const elts = [];\r\n    let first = true;\r\n    while (!this.eat(close)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n      }\r\n      if (allowEmpty && this.match(12)) {\r\n        elts.push(null);\r\n      } else if (this.eat(close)) {\r\n        break;\r\n      } else if (this.match(21)) {\r\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding(), flags));\r\n        if (!this.checkCommaAfterRest(closeCharCode)) {\r\n          this.expect(close);\r\n          break;\r\n        }\r\n      } else {\r\n        const decorators = [];\r\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\r\n          this.raise(Errors.UnsupportedParameterDecorator, {\r\n            at: this.state.startLoc\r\n          });\r\n        }\r\n        while (this.match(26)) {\r\n          decorators.push(this.parseDecorator());\r\n        }\r\n        elts.push(this.parseAssignableListItem(flags, decorators));\r\n      }\r\n    }\r\n    return elts;\r\n  }\r\n  parseBindingRestProperty(prop) {\r\n    this.next();\r\n    prop.argument = this.parseIdentifier();\r\n    this.checkCommaAfterRest(125);\r\n    return this.finishNode(prop, \"RestElement\");\r\n  }\r\n  parseBindingProperty() {\r\n    const prop = this.startNode();\r\n    const {\r\n      type,\r\n      startLoc\r\n    } = this.state;\r\n    if (type === 21) {\r\n      return this.parseBindingRestProperty(prop);\r\n    } else if (type === 136) {\r\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\r\n      this.classScope.usePrivateName(this.state.value, startLoc);\r\n      prop.key = this.parsePrivateName();\r\n    } else {\r\n      this.parsePropertyName(prop);\r\n    }\r\n    prop.method = false;\r\n    return this.parseObjPropValue(prop, startLoc, false, false, true, false);\r\n  }\r\n  parseAssignableListItem(flags, decorators) {\r\n    const left = this.parseMaybeDefault();\r\n    this.parseAssignableListItemTypes(left, flags);\r\n    const elt = this.parseMaybeDefault(left.loc.start, left);\r\n    if (decorators.length) {\r\n      left.decorators = decorators;\r\n    }\r\n    return elt;\r\n  }\r\n  parseAssignableListItemTypes(param, flags) {\r\n    return param;\r\n  }\r\n  parseMaybeDefault(startLoc, left) {\r\n    var _startLoc, _left;\r\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\r\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\r\n    if (!this.eat(29)) return left;\r\n    const node = this.startNodeAt(startLoc);\r\n    node.left = left;\r\n    node.right = this.parseMaybeAssignAllowIn();\r\n    return this.finishNode(node, \"AssignmentPattern\");\r\n  }\r\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\r\n    return getOwn$1({\r\n      AssignmentPattern: \"left\",\r\n      RestElement: \"argument\",\r\n      ObjectProperty: \"value\",\r\n      ParenthesizedExpression: \"expression\",\r\n      ArrayPattern: \"elements\",\r\n      ObjectPattern: \"properties\"\r\n    }, type);\r\n  }\r\n  checkLVal(expression, {\r\n    in: ancestor,\r\n    binding = BIND_NONE,\r\n    checkClashes = false,\r\n    strictModeChanged = false,\r\n    hasParenthesizedAncestor = false\r\n  }) {\r\n    var _expression$extra;\r\n    const type = expression.type;\r\n    if (this.isObjectMethod(expression)) return;\r\n    if (type === \"MemberExpression\") {\r\n      if (binding !== BIND_NONE) {\r\n        this.raise(Errors.InvalidPropertyBindingPattern, {\r\n          at: expression\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    if (type === \"Identifier\") {\r\n      this.checkIdentifier(expression, binding, strictModeChanged);\r\n      const {\r\n        name\r\n      } = expression;\r\n      if (checkClashes) {\r\n        if (checkClashes.has(name)) {\r\n          this.raise(Errors.ParamDupe, {\r\n            at: expression\r\n          });\r\n        } else {\r\n          checkClashes.add(name);\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    const validity = this.isValidLVal(type, !(hasParenthesizedAncestor || (_expression$extra = expression.extra) != null && _expression$extra.parenthesized) && ancestor.type === \"AssignmentExpression\", binding);\r\n    if (validity === true) return;\r\n    if (validity === false) {\r\n      const ParseErrorClass = binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\r\n      this.raise(ParseErrorClass, {\r\n        at: expression,\r\n        ancestor\r\n      });\r\n      return;\r\n    }\r\n    const [key, isParenthesizedExpression] = Array.isArray(validity) ? validity : [validity, type === \"ParenthesizedExpression\"];\r\n    const nextAncestor = type === \"ArrayPattern\" || type === \"ObjectPattern\" || type === \"ParenthesizedExpression\" ? {\r\n      type\r\n    } : ancestor;\r\n    for (const child of [].concat(expression[key])) {\r\n      if (child) {\r\n        this.checkLVal(child, {\r\n          in: nextAncestor,\r\n          binding,\r\n          checkClashes,\r\n          strictModeChanged,\r\n          hasParenthesizedAncestor: isParenthesizedExpression\r\n        });\r\n      }\r\n    }\r\n  }\r\n  checkIdentifier(at, bindingType, strictModeChanged = false) {\r\n    if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(at.name, this.inModule) : isStrictBindOnlyReservedWord(at.name))) {\r\n      if (bindingType === BIND_NONE) {\r\n        this.raise(Errors.StrictEvalArguments, {\r\n          at,\r\n          referenceName: at.name\r\n        });\r\n      } else {\r\n        this.raise(Errors.StrictEvalArgumentsBinding, {\r\n          at,\r\n          bindingName: at.name\r\n        });\r\n      }\r\n    }\r\n    if (bindingType & BIND_FLAGS_NO_LET_IN_LEXICAL && at.name === \"let\") {\r\n      this.raise(Errors.LetInLexicalBinding, {\r\n        at\r\n      });\r\n    }\r\n    if (!(bindingType & BIND_NONE)) {\r\n      this.declareNameFromIdentifier(at, bindingType);\r\n    }\r\n  }\r\n  declareNameFromIdentifier(identifier, binding) {\r\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\r\n  }\r\n  checkToRestConversion(node, allowPattern) {\r\n    switch (node.type) {\r\n      case \"ParenthesizedExpression\":\r\n        this.checkToRestConversion(node.expression, allowPattern);\r\n        break;\r\n      case \"Identifier\":\r\n      case \"MemberExpression\":\r\n        break;\r\n      case \"ArrayExpression\":\r\n      case \"ObjectExpression\":\r\n        if (allowPattern) break;\r\n      default:\r\n        this.raise(Errors.InvalidRestAssignmentPattern, {\r\n          at: node\r\n        });\r\n    }\r\n  }\r\n  checkCommaAfterRest(close) {\r\n    if (!this.match(12)) {\r\n      return false;\r\n    }\r\n    this.raise(this.lookaheadCharCode() === close ? Errors.RestTrailingComma : Errors.ElementAfterRest, {\r\n      at: this.state.startLoc\r\n    });\r\n    return true;\r\n  }\r\n}\r\nconst getOwn = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\r\nfunction nonNull(x) {\r\n  if (x == null) {\r\n    throw new Error(`Unexpected ${x} value.`);\r\n  }\r\n  return x;\r\n}\r\nfunction assert$1(x) {\r\n  if (!x) {\r\n    throw new Error(\"Assert fail\");\r\n  }\r\n}\r\nconst TSErrors = ParseErrorEnum`typescript`({\r\n  AbstractMethodHasImplementation: ({\r\n    methodName\r\n  }) => `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\r\n  AbstractPropertyHasInitializer: ({\r\n    propertyName\r\n  }) => `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\r\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\r\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\r\n  AccessorCannotBeOptional: \"An 'accessor' property cannot be declared optional.\",\r\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\r\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\r\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\r\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\r\n  DeclareAccessor: ({\r\n    kind\r\n  }) => `'declare' is not allowed in ${kind}ters.`,\r\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\r\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\r\n  DuplicateAccessibilityModifier: ({\r\n    modifier\r\n  }) => `Accessibility modifier already seen.`,\r\n  DuplicateModifier: ({\r\n    modifier\r\n  }) => `Duplicate modifier: '${modifier}'.`,\r\n  EmptyHeritageClauseType: ({\r\n    token\r\n  }) => `'${token}' list cannot be empty.`,\r\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\r\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\r\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\r\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\r\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` modifier\",\r\n  IncompatibleModifiers: ({\r\n    modifiers\r\n  }) => `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\r\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\r\n  IndexSignatureHasAccessibility: ({\r\n    modifier\r\n  }) => `Index signatures cannot have an accessibility modifier ('${modifier}').`,\r\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\r\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\r\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\r\n  InitializerNotAllowedInAmbientContext: \"Initializers are not allowed in ambient contexts.\",\r\n  InvalidModifierOnTypeMember: ({\r\n    modifier\r\n  }) => `'${modifier}' modifier cannot appear on a type member.`,\r\n  InvalidModifierOnTypeParameter: ({\r\n    modifier\r\n  }) => `'${modifier}' modifier cannot appear on a type parameter.`,\r\n  InvalidModifierOnTypeParameterPositions: ({\r\n    modifier\r\n  }) => `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\r\n  InvalidModifiersOrder: ({\r\n    orderedModifiers\r\n  }) => `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\r\n  InvalidPropertyAccessAfterInstantiationExpression: \"Invalid property access after an instantiation expression. \" + \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\r\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\r\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\r\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\r\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\r\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\r\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\r\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\r\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\r\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\r\n  PrivateElementHasAccessibility: ({\r\n    modifier\r\n  }) => `Private elements cannot have an accessibility modifier ('${modifier}').`,\r\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\r\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\r\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\r\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\r\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\r\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\r\n  SingleTypeParameterWithoutTrailingComma: ({\r\n    typeParameterName\r\n  }) => `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\r\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\r\n  TupleOptionalAfterType: \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\r\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\r\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\r\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\r\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\r\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\r\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\r\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\r\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\r\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\r\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\r\n  UnsupportedSignatureParameterKind: ({\r\n    type\r\n  }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`\r\n});\r\nfunction keywordTypeFromName(value) {\r\n  switch (value) {\r\n    case \"any\":\r\n      return \"TSAnyKeyword\";\r\n    case \"boolean\":\r\n      return \"TSBooleanKeyword\";\r\n    case \"bigint\":\r\n      return \"TSBigIntKeyword\";\r\n    case \"never\":\r\n      return \"TSNeverKeyword\";\r\n    case \"number\":\r\n      return \"TSNumberKeyword\";\r\n    case \"object\":\r\n      return \"TSObjectKeyword\";\r\n    case \"string\":\r\n      return \"TSStringKeyword\";\r\n    case \"symbol\":\r\n      return \"TSSymbolKeyword\";\r\n    case \"undefined\":\r\n      return \"TSUndefinedKeyword\";\r\n    case \"unknown\":\r\n      return \"TSUnknownKeyword\";\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\nfunction tsIsAccessModifier(modifier) {\r\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\r\n}\r\nfunction tsIsVarianceAnnotations(modifier) {\r\n  return modifier === \"in\" || modifier === \"out\";\r\n}\r\nvar typescript = superClass => class TypeScriptParserMixin extends superClass {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\r\n      allowedModifiers: [\"in\", \"out\"],\r\n      disallowedModifiers: [\"const\", \"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\r\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\r\n    });\r\n    this.tsParseConstModifier = this.tsParseModifiers.bind(this, {\r\n      allowedModifiers: [\"const\"],\r\n      disallowedModifiers: [\"in\", \"out\"],\r\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\r\n    });\r\n    this.tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\r\n      allowedModifiers: [\"in\", \"out\", \"const\"],\r\n      disallowedModifiers: [\"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\r\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\r\n    });\r\n  }\r\n  getScopeHandler() {\r\n    return TypeScriptScopeHandler;\r\n  }\r\n  tsIsIdentifier() {\r\n    return tokenIsIdentifier(this.state.type);\r\n  }\r\n  tsTokenCanFollowModifier() {\r\n    return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(136) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\r\n  }\r\n  tsNextTokenCanFollowModifier() {\r\n    this.next();\r\n    return this.tsTokenCanFollowModifier();\r\n  }\r\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\r\n    if (!tokenIsIdentifier(this.state.type) && this.state.type !== 58 && this.state.type !== 75) {\r\n      return undefined;\r\n    }\r\n    const modifier = this.state.value;\r\n    if (allowedModifiers.indexOf(modifier) !== -1) {\r\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\r\n        return undefined;\r\n      }\r\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\r\n        return modifier;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n  tsParseModifiers({\r\n    allowedModifiers,\r\n    disallowedModifiers,\r\n    stopOnStartOfClassStaticBlock,\r\n    errorTemplate = TSErrors.InvalidModifierOnTypeMember\r\n  }, modified) {\r\n    const enforceOrder = (loc, modifier, before, after) => {\r\n      if (modifier === before && modified[after]) {\r\n        this.raise(TSErrors.InvalidModifiersOrder, {\r\n          at: loc,\r\n          orderedModifiers: [before, after]\r\n        });\r\n      }\r\n    };\r\n    const incompatible = (loc, modifier, mod1, mod2) => {\r\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\r\n        this.raise(TSErrors.IncompatibleModifiers, {\r\n          at: loc,\r\n          modifiers: [mod1, mod2]\r\n        });\r\n      }\r\n    };\r\n    for (;;) {\r\n      const {\r\n        startLoc\r\n      } = this.state;\r\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\r\n      if (!modifier) break;\r\n      if (tsIsAccessModifier(modifier)) {\r\n        if (modified.accessibility) {\r\n          this.raise(TSErrors.DuplicateAccessibilityModifier, {\r\n            at: startLoc,\r\n            modifier\r\n          });\r\n        } else {\r\n          enforceOrder(startLoc, modifier, modifier, \"override\");\r\n          enforceOrder(startLoc, modifier, modifier, \"static\");\r\n          enforceOrder(startLoc, modifier, modifier, \"readonly\");\r\n          modified.accessibility = modifier;\r\n        }\r\n      } else if (tsIsVarianceAnnotations(modifier)) {\r\n        if (modified[modifier]) {\r\n          this.raise(TSErrors.DuplicateModifier, {\r\n            at: startLoc,\r\n            modifier\r\n          });\r\n        }\r\n        modified[modifier] = true;\r\n        enforceOrder(startLoc, modifier, \"in\", \"out\");\r\n      } else {\r\n        if (Object.hasOwnProperty.call(modified, modifier)) {\r\n          this.raise(TSErrors.DuplicateModifier, {\r\n            at: startLoc,\r\n            modifier\r\n          });\r\n        } else {\r\n          enforceOrder(startLoc, modifier, \"static\", \"readonly\");\r\n          enforceOrder(startLoc, modifier, \"static\", \"override\");\r\n          enforceOrder(startLoc, modifier, \"override\", \"readonly\");\r\n          enforceOrder(startLoc, modifier, \"abstract\", \"override\");\r\n          incompatible(startLoc, modifier, \"declare\", \"override\");\r\n          incompatible(startLoc, modifier, \"static\", \"abstract\");\r\n        }\r\n        modified[modifier] = true;\r\n      }\r\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\r\n        this.raise(errorTemplate, {\r\n          at: startLoc,\r\n          modifier\r\n        });\r\n      }\r\n    }\r\n  }\r\n  tsIsListTerminator(kind) {\r\n    switch (kind) {\r\n      case \"EnumMembers\":\r\n      case \"TypeMembers\":\r\n        return this.match(8);\r\n      case \"HeritageClauseElement\":\r\n        return this.match(5);\r\n      case \"TupleElementTypes\":\r\n        return this.match(3);\r\n      case \"TypeParametersOrArguments\":\r\n        return this.match(48);\r\n    }\r\n  }\r\n  tsParseList(kind, parseElement) {\r\n    const result = [];\r\n    while (!this.tsIsListTerminator(kind)) {\r\n      result.push(parseElement());\r\n    }\r\n    return result;\r\n  }\r\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\r\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\r\n  }\r\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\r\n    const result = [];\r\n    let trailingCommaPos = -1;\r\n    for (;;) {\r\n      if (this.tsIsListTerminator(kind)) {\r\n        break;\r\n      }\r\n      trailingCommaPos = -1;\r\n      const element = parseElement();\r\n      if (element == null) {\r\n        return undefined;\r\n      }\r\n      result.push(element);\r\n      if (this.eat(12)) {\r\n        trailingCommaPos = this.state.lastTokStart;\r\n        continue;\r\n      }\r\n      if (this.tsIsListTerminator(kind)) {\r\n        break;\r\n      }\r\n      if (expectSuccess) {\r\n        this.expect(12);\r\n      }\r\n      return undefined;\r\n    }\r\n    if (refTrailingCommaPos) {\r\n      refTrailingCommaPos.value = trailingCommaPos;\r\n    }\r\n    return result;\r\n  }\r\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\r\n    if (!skipFirstToken) {\r\n      if (bracket) {\r\n        this.expect(0);\r\n      } else {\r\n        this.expect(47);\r\n      }\r\n    }\r\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\r\n    if (bracket) {\r\n      this.expect(3);\r\n    } else {\r\n      this.expect(48);\r\n    }\r\n    return result;\r\n  }\r\n  tsParseImportType() {\r\n    const node = this.startNode();\r\n    this.expect(83);\r\n    this.expect(10);\r\n    if (!this.match(131)) {\r\n      this.raise(TSErrors.UnsupportedImportTypeArgument, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    node.argument = super.parseExprAtom();\r\n    this.expect(11);\r\n    if (this.eat(16)) {\r\n      node.qualifier = this.tsParseEntityName();\r\n    }\r\n    if (this.match(47)) {\r\n      node.typeParameters = this.tsParseTypeArguments();\r\n    }\r\n    return this.finishNode(node, \"TSImportType\");\r\n  }\r\n  tsParseEntityName(allowReservedWords = true) {\r\n    let entity = this.parseIdentifier(allowReservedWords);\r\n    while (this.eat(16)) {\r\n      const node = this.startNodeAtNode(entity);\r\n      node.left = entity;\r\n      node.right = this.parseIdentifier(allowReservedWords);\r\n      entity = this.finishNode(node, \"TSQualifiedName\");\r\n    }\r\n    return entity;\r\n  }\r\n  tsParseTypeReference() {\r\n    const node = this.startNode();\r\n    node.typeName = this.tsParseEntityName();\r\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\r\n      node.typeParameters = this.tsParseTypeArguments();\r\n    }\r\n    return this.finishNode(node, \"TSTypeReference\");\r\n  }\r\n  tsParseThisTypePredicate(lhs) {\r\n    this.next();\r\n    const node = this.startNodeAtNode(lhs);\r\n    node.parameterName = lhs;\r\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\r\n    node.asserts = false;\r\n    return this.finishNode(node, \"TSTypePredicate\");\r\n  }\r\n  tsParseThisTypeNode() {\r\n    const node = this.startNode();\r\n    this.next();\r\n    return this.finishNode(node, \"TSThisType\");\r\n  }\r\n  tsParseTypeQuery() {\r\n    const node = this.startNode();\r\n    this.expect(87);\r\n    if (this.match(83)) {\r\n      node.exprName = this.tsParseImportType();\r\n    } else {\r\n      node.exprName = this.tsParseEntityName();\r\n    }\r\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\r\n      node.typeParameters = this.tsParseTypeArguments();\r\n    }\r\n    return this.finishNode(node, \"TSTypeQuery\");\r\n  }\r\n  tsParseTypeParameter(parseModifiers) {\r\n    const node = this.startNode();\r\n    parseModifiers(node);\r\n    node.name = this.tsParseTypeParameterName();\r\n    node.constraint = this.tsEatThenParseType(81);\r\n    node.default = this.tsEatThenParseType(29);\r\n    return this.finishNode(node, \"TSTypeParameter\");\r\n  }\r\n  tsTryParseTypeParameters(parseModifiers) {\r\n    if (this.match(47)) {\r\n      return this.tsParseTypeParameters(parseModifiers);\r\n    }\r\n  }\r\n  tsParseTypeParameters(parseModifiers) {\r\n    const node = this.startNode();\r\n    if (this.match(47) || this.match(140)) {\r\n      this.next();\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n    const refTrailingCommaPos = {\r\n      value: -1\r\n    };\r\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this, parseModifiers), false, true, refTrailingCommaPos);\r\n    if (node.params.length === 0) {\r\n      this.raise(TSErrors.EmptyTypeParameters, {\r\n        at: node\r\n      });\r\n    }\r\n    if (refTrailingCommaPos.value !== -1) {\r\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\r\n    }\r\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\r\n  }\r\n  tsFillSignature(returnToken, signature) {\r\n    const returnTokenRequired = returnToken === 19;\r\n    const paramsKey = \"parameters\";\r\n    const returnTypeKey = \"typeAnnotation\";\r\n    signature.typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\r\n    this.expect(10);\r\n    signature[paramsKey] = this.tsParseBindingListForSignature();\r\n    if (returnTokenRequired) {\r\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\r\n    } else if (this.match(returnToken)) {\r\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\r\n    }\r\n  }\r\n  tsParseBindingListForSignature() {\r\n    return super.parseBindingList(11, 41, 2).map(pattern => {\r\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\r\n        this.raise(TSErrors.UnsupportedSignatureParameterKind, {\r\n          at: pattern,\r\n          type: pattern.type\r\n        });\r\n      }\r\n      return pattern;\r\n    });\r\n  }\r\n  tsParseTypeMemberSemicolon() {\r\n    if (!this.eat(12) && !this.isLineTerminator()) {\r\n      this.expect(13);\r\n    }\r\n  }\r\n  tsParseSignatureMember(kind, node) {\r\n    this.tsFillSignature(14, node);\r\n    this.tsParseTypeMemberSemicolon();\r\n    return this.finishNode(node, kind);\r\n  }\r\n  tsIsUnambiguouslyIndexSignature() {\r\n    this.next();\r\n    if (tokenIsIdentifier(this.state.type)) {\r\n      this.next();\r\n      return this.match(14);\r\n    }\r\n    return false;\r\n  }\r\n  tsTryParseIndexSignature(node) {\r\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\r\n      return undefined;\r\n    }\r\n    this.expect(0);\r\n    const id = this.parseIdentifier();\r\n    id.typeAnnotation = this.tsParseTypeAnnotation();\r\n    this.resetEndLocation(id);\r\n    this.expect(3);\r\n    node.parameters = [id];\r\n    const type = this.tsTryParseTypeAnnotation();\r\n    if (type) node.typeAnnotation = type;\r\n    this.tsParseTypeMemberSemicolon();\r\n    return this.finishNode(node, \"TSIndexSignature\");\r\n  }\r\n  tsParsePropertyOrMethodSignature(node, readonly) {\r\n    if (this.eat(17)) node.optional = true;\r\n    const nodeAny = node;\r\n    if (this.match(10) || this.match(47)) {\r\n      if (readonly) {\r\n        this.raise(TSErrors.ReadonlyForMethodSignature, {\r\n          at: node\r\n        });\r\n      }\r\n      const method = nodeAny;\r\n      if (method.kind && this.match(47)) {\r\n        this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\r\n          at: this.state.curPosition()\r\n        });\r\n      }\r\n      this.tsFillSignature(14, method);\r\n      this.tsParseTypeMemberSemicolon();\r\n      const paramsKey = \"parameters\";\r\n      const returnTypeKey = \"typeAnnotation\";\r\n      if (method.kind === \"get\") {\r\n        if (method[paramsKey].length > 0) {\r\n          this.raise(Errors.BadGetterArity, {\r\n            at: this.state.curPosition()\r\n          });\r\n          if (this.isThisParam(method[paramsKey][0])) {\r\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\r\n              at: this.state.curPosition()\r\n            });\r\n          }\r\n        }\r\n      } else if (method.kind === \"set\") {\r\n        if (method[paramsKey].length !== 1) {\r\n          this.raise(Errors.BadSetterArity, {\r\n            at: this.state.curPosition()\r\n          });\r\n        } else {\r\n          const firstParameter = method[paramsKey][0];\r\n          if (this.isThisParam(firstParameter)) {\r\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\r\n              at: this.state.curPosition()\r\n            });\r\n          }\r\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\r\n            this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\r\n              at: this.state.curPosition()\r\n            });\r\n          }\r\n          if (firstParameter.type === \"RestElement\") {\r\n            this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\r\n              at: this.state.curPosition()\r\n            });\r\n          }\r\n        }\r\n        if (method[returnTypeKey]) {\r\n          this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\r\n            at: method[returnTypeKey]\r\n          });\r\n        }\r\n      } else {\r\n        method.kind = \"method\";\r\n      }\r\n      return this.finishNode(method, \"TSMethodSignature\");\r\n    } else {\r\n      const property = nodeAny;\r\n      if (readonly) property.readonly = true;\r\n      const type = this.tsTryParseTypeAnnotation();\r\n      if (type) property.typeAnnotation = type;\r\n      this.tsParseTypeMemberSemicolon();\r\n      return this.finishNode(property, \"TSPropertySignature\");\r\n    }\r\n  }\r\n  tsParseTypeMember() {\r\n    const node = this.startNode();\r\n    if (this.match(10) || this.match(47)) {\r\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\r\n    }\r\n    if (this.match(77)) {\r\n      const id = this.startNode();\r\n      this.next();\r\n      if (this.match(10) || this.match(47)) {\r\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\r\n      } else {\r\n        node.key = this.createIdentifier(id, \"new\");\r\n        return this.tsParsePropertyOrMethodSignature(node, false);\r\n      }\r\n    }\r\n    this.tsParseModifiers({\r\n      allowedModifiers: [\"readonly\"],\r\n      disallowedModifiers: [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"]\r\n    }, node);\r\n    const idx = this.tsTryParseIndexSignature(node);\r\n    if (idx) {\r\n      return idx;\r\n    }\r\n    super.parsePropertyName(node);\r\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\r\n      node.kind = node.key.name;\r\n      super.parsePropertyName(node);\r\n    }\r\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\r\n  }\r\n  tsParseTypeLiteral() {\r\n    const node = this.startNode();\r\n    node.members = this.tsParseObjectTypeMembers();\r\n    return this.finishNode(node, \"TSTypeLiteral\");\r\n  }\r\n  tsParseObjectTypeMembers() {\r\n    this.expect(5);\r\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\r\n    this.expect(8);\r\n    return members;\r\n  }\r\n  tsIsStartOfMappedType() {\r\n    this.next();\r\n    if (this.eat(53)) {\r\n      return this.isContextual(120);\r\n    }\r\n    if (this.isContextual(120)) {\r\n      this.next();\r\n    }\r\n    if (!this.match(0)) {\r\n      return false;\r\n    }\r\n    this.next();\r\n    if (!this.tsIsIdentifier()) {\r\n      return false;\r\n    }\r\n    this.next();\r\n    return this.match(58);\r\n  }\r\n  tsParseMappedTypeParameter() {\r\n    const node = this.startNode();\r\n    node.name = this.tsParseTypeParameterName();\r\n    node.constraint = this.tsExpectThenParseType(58);\r\n    return this.finishNode(node, \"TSTypeParameter\");\r\n  }\r\n  tsParseMappedType() {\r\n    const node = this.startNode();\r\n    this.expect(5);\r\n    if (this.match(53)) {\r\n      node.readonly = this.state.value;\r\n      this.next();\r\n      this.expectContextual(120);\r\n    } else if (this.eatContextual(120)) {\r\n      node.readonly = true;\r\n    }\r\n    this.expect(0);\r\n    node.typeParameter = this.tsParseMappedTypeParameter();\r\n    node.nameType = this.eatContextual(93) ? this.tsParseType() : null;\r\n    this.expect(3);\r\n    if (this.match(53)) {\r\n      node.optional = this.state.value;\r\n      this.next();\r\n      this.expect(17);\r\n    } else if (this.eat(17)) {\r\n      node.optional = true;\r\n    }\r\n    node.typeAnnotation = this.tsTryParseType();\r\n    this.semicolon();\r\n    this.expect(8);\r\n    return this.finishNode(node, \"TSMappedType\");\r\n  }\r\n  tsParseTupleType() {\r\n    const node = this.startNode();\r\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\r\n    let seenOptionalElement = false;\r\n    let labeledElements = null;\r\n    node.elementTypes.forEach(elementNode => {\r\n      var _labeledElements;\r\n      const {\r\n        type\r\n      } = elementNode;\r\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\r\n        this.raise(TSErrors.OptionalTypeBeforeRequired, {\r\n          at: elementNode\r\n        });\r\n      }\r\n      seenOptionalElement || (seenOptionalElement = type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\");\r\n      let checkType = type;\r\n      if (type === \"TSRestType\") {\r\n        elementNode = elementNode.typeAnnotation;\r\n        checkType = elementNode.type;\r\n      }\r\n      const isLabeled = checkType === \"TSNamedTupleMember\";\r\n      (_labeledElements = labeledElements) != null ? _labeledElements : labeledElements = isLabeled;\r\n      if (labeledElements !== isLabeled) {\r\n        this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\r\n          at: elementNode\r\n        });\r\n      }\r\n    });\r\n    return this.finishNode(node, \"TSTupleType\");\r\n  }\r\n  tsParseTupleElementType() {\r\n    const {\r\n      startLoc\r\n    } = this.state;\r\n    const rest = this.eat(21);\r\n    let labeled;\r\n    let label;\r\n    let optional;\r\n    let type;\r\n    const isWord = tokenIsKeywordOrIdentifier(this.state.type);\r\n    const chAfterWord = isWord ? this.lookaheadCharCode() : null;\r\n    if (chAfterWord === 58) {\r\n      labeled = true;\r\n      optional = false;\r\n      label = this.parseIdentifier(true);\r\n      this.expect(14);\r\n      type = this.tsParseType();\r\n    } else if (chAfterWord === 63) {\r\n      optional = true;\r\n      const startLoc = this.state.startLoc;\r\n      const wordName = this.state.value;\r\n      const typeOrLabel = this.tsParseNonArrayType();\r\n      if (this.lookaheadCharCode() === 58) {\r\n        labeled = true;\r\n        label = this.createIdentifier(this.startNodeAt(startLoc), wordName);\r\n        this.expect(17);\r\n        this.expect(14);\r\n        type = this.tsParseType();\r\n      } else {\r\n        labeled = false;\r\n        type = typeOrLabel;\r\n        this.expect(17);\r\n      }\r\n    } else {\r\n      type = this.tsParseType();\r\n      optional = this.eat(17);\r\n      labeled = this.eat(14);\r\n    }\r\n    if (labeled) {\r\n      let labeledNode;\r\n      if (label) {\r\n        labeledNode = this.startNodeAtNode(label);\r\n        labeledNode.optional = optional;\r\n        labeledNode.label = label;\r\n        labeledNode.elementType = type;\r\n        if (this.eat(17)) {\r\n          labeledNode.optional = true;\r\n          this.raise(TSErrors.TupleOptionalAfterType, {\r\n            at: this.state.lastTokStartLoc\r\n          });\r\n        }\r\n      } else {\r\n        labeledNode = this.startNodeAtNode(type);\r\n        labeledNode.optional = optional;\r\n        this.raise(TSErrors.InvalidTupleMemberLabel, {\r\n          at: type\r\n        });\r\n        labeledNode.label = type;\r\n        labeledNode.elementType = this.tsParseType();\r\n      }\r\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\r\n    } else if (optional) {\r\n      const optionalTypeNode = this.startNodeAtNode(type);\r\n      optionalTypeNode.typeAnnotation = type;\r\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\r\n    }\r\n    if (rest) {\r\n      const restNode = this.startNodeAt(startLoc);\r\n      restNode.typeAnnotation = type;\r\n      type = this.finishNode(restNode, \"TSRestType\");\r\n    }\r\n    return type;\r\n  }\r\n  tsParseParenthesizedType() {\r\n    const node = this.startNode();\r\n    this.expect(10);\r\n    node.typeAnnotation = this.tsParseType();\r\n    this.expect(11);\r\n    return this.finishNode(node, \"TSParenthesizedType\");\r\n  }\r\n  tsParseFunctionOrConstructorType(type, abstract) {\r\n    const node = this.startNode();\r\n    if (type === \"TSConstructorType\") {\r\n      node.abstract = !!abstract;\r\n      if (abstract) this.next();\r\n      this.next();\r\n    }\r\n    this.tsInAllowConditionalTypesContext(() => this.tsFillSignature(19, node));\r\n    return this.finishNode(node, type);\r\n  }\r\n  tsParseLiteralTypeNode() {\r\n    const node = this.startNode();\r\n    node.literal = (() => {\r\n      switch (this.state.type) {\r\n        case 132:\r\n        case 133:\r\n        case 131:\r\n        case 85:\r\n        case 86:\r\n          return super.parseExprAtom();\r\n        default:\r\n          this.unexpected();\r\n      }\r\n    })();\r\n    return this.finishNode(node, \"TSLiteralType\");\r\n  }\r\n  tsParseTemplateLiteralType() {\r\n    const node = this.startNode();\r\n    node.literal = super.parseTemplate(false);\r\n    return this.finishNode(node, \"TSLiteralType\");\r\n  }\r\n  parseTemplateSubstitution() {\r\n    if (this.state.inType) return this.tsParseType();\r\n    return super.parseTemplateSubstitution();\r\n  }\r\n  tsParseThisTypeOrThisTypePredicate() {\r\n    const thisKeyword = this.tsParseThisTypeNode();\r\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\r\n      return this.tsParseThisTypePredicate(thisKeyword);\r\n    } else {\r\n      return thisKeyword;\r\n    }\r\n  }\r\n  tsParseNonArrayType() {\r\n    switch (this.state.type) {\r\n      case 131:\r\n      case 132:\r\n      case 133:\r\n      case 85:\r\n      case 86:\r\n        return this.tsParseLiteralTypeNode();\r\n      case 53:\r\n        if (this.state.value === \"-\") {\r\n          const node = this.startNode();\r\n          const nextToken = this.lookahead();\r\n          if (nextToken.type !== 132 && nextToken.type !== 133) {\r\n            this.unexpected();\r\n          }\r\n          node.literal = this.parseMaybeUnary();\r\n          return this.finishNode(node, \"TSLiteralType\");\r\n        }\r\n        break;\r\n      case 78:\r\n        return this.tsParseThisTypeOrThisTypePredicate();\r\n      case 87:\r\n        return this.tsParseTypeQuery();\r\n      case 83:\r\n        return this.tsParseImportType();\r\n      case 5:\r\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\r\n      case 0:\r\n        return this.tsParseTupleType();\r\n      case 10:\r\n        return this.tsParseParenthesizedType();\r\n      case 25:\r\n      case 24:\r\n        return this.tsParseTemplateLiteralType();\r\n      default:\r\n        {\r\n          const {\r\n            type\r\n          } = this.state;\r\n          if (tokenIsIdentifier(type) || type === 88 || type === 84) {\r\n            const nodeType = type === 88 ? \"TSVoidKeyword\" : type === 84 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\r\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\r\n              const node = this.startNode();\r\n              this.next();\r\n              return this.finishNode(node, nodeType);\r\n            }\r\n            return this.tsParseTypeReference();\r\n          }\r\n        }\r\n    }\r\n    this.unexpected();\r\n  }\r\n  tsParseArrayTypeOrHigher() {\r\n    let type = this.tsParseNonArrayType();\r\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\r\n      if (this.match(3)) {\r\n        const node = this.startNodeAtNode(type);\r\n        node.elementType = type;\r\n        this.expect(3);\r\n        type = this.finishNode(node, \"TSArrayType\");\r\n      } else {\r\n        const node = this.startNodeAtNode(type);\r\n        node.objectType = type;\r\n        node.indexType = this.tsParseType();\r\n        this.expect(3);\r\n        type = this.finishNode(node, \"TSIndexedAccessType\");\r\n      }\r\n    }\r\n    return type;\r\n  }\r\n  tsParseTypeOperator() {\r\n    const node = this.startNode();\r\n    const operator = this.state.value;\r\n    this.next();\r\n    node.operator = operator;\r\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\r\n    if (operator === \"readonly\") {\r\n      this.tsCheckTypeAnnotationForReadOnly(node);\r\n    }\r\n    return this.finishNode(node, \"TSTypeOperator\");\r\n  }\r\n  tsCheckTypeAnnotationForReadOnly(node) {\r\n    switch (node.typeAnnotation.type) {\r\n      case \"TSTupleType\":\r\n      case \"TSArrayType\":\r\n        return;\r\n      default:\r\n        this.raise(TSErrors.UnexpectedReadonly, {\r\n          at: node\r\n        });\r\n    }\r\n  }\r\n  tsParseInferType() {\r\n    const node = this.startNode();\r\n    this.expectContextual(113);\r\n    const typeParameter = this.startNode();\r\n    typeParameter.name = this.tsParseTypeParameterName();\r\n    typeParameter.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType());\r\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\r\n    return this.finishNode(node, \"TSInferType\");\r\n  }\r\n  tsParseConstraintForInferType() {\r\n    if (this.eat(81)) {\r\n      const constraint = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());\r\n      if (this.state.inDisallowConditionalTypesContext || !this.match(17)) {\r\n        return constraint;\r\n      }\r\n    }\r\n  }\r\n  tsParseTypeOperatorOrHigher() {\r\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\r\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(113) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());\r\n  }\r\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\r\n    const node = this.startNode();\r\n    const hasLeadingOperator = this.eat(operator);\r\n    const types = [];\r\n    do {\r\n      types.push(parseConstituentType());\r\n    } while (this.eat(operator));\r\n    if (types.length === 1 && !hasLeadingOperator) {\r\n      return types[0];\r\n    }\r\n    node.types = types;\r\n    return this.finishNode(node, kind);\r\n  }\r\n  tsParseIntersectionTypeOrHigher() {\r\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 45);\r\n  }\r\n  tsParseUnionTypeOrHigher() {\r\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 43);\r\n  }\r\n  tsIsStartOfFunctionType() {\r\n    if (this.match(47)) {\r\n      return true;\r\n    }\r\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\r\n  }\r\n  tsSkipParameterStart() {\r\n    if (tokenIsIdentifier(this.state.type) || this.match(78)) {\r\n      this.next();\r\n      return true;\r\n    }\r\n    if (this.match(5)) {\r\n      const {\r\n        errors\r\n      } = this.state;\r\n      const previousErrorCount = errors.length;\r\n      try {\r\n        this.parseObjectLike(8, true);\r\n        return errors.length === previousErrorCount;\r\n      } catch (_unused) {\r\n        return false;\r\n      }\r\n    }\r\n    if (this.match(0)) {\r\n      this.next();\r\n      const {\r\n        errors\r\n      } = this.state;\r\n      const previousErrorCount = errors.length;\r\n      try {\r\n        super.parseBindingList(3, 93, 1);\r\n        return errors.length === previousErrorCount;\r\n      } catch (_unused2) {\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  tsIsUnambiguouslyStartOfFunctionType() {\r\n    this.next();\r\n    if (this.match(11) || this.match(21)) {\r\n      return true;\r\n    }\r\n    if (this.tsSkipParameterStart()) {\r\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\r\n        return true;\r\n      }\r\n      if (this.match(11)) {\r\n        this.next();\r\n        if (this.match(19)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\r\n    return this.tsInType(() => {\r\n      const t = this.startNode();\r\n      this.expect(returnToken);\r\n      const node = this.startNode();\r\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\r\n      if (asserts && this.match(78)) {\r\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\r\n        if (thisTypePredicate.type === \"TSThisType\") {\r\n          node.parameterName = thisTypePredicate;\r\n          node.asserts = true;\r\n          node.typeAnnotation = null;\r\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\r\n        } else {\r\n          this.resetStartLocationFromNode(thisTypePredicate, node);\r\n          thisTypePredicate.asserts = true;\r\n        }\r\n        t.typeAnnotation = thisTypePredicate;\r\n        return this.finishNode(t, \"TSTypeAnnotation\");\r\n      }\r\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\r\n      if (!typePredicateVariable) {\r\n        if (!asserts) {\r\n          return this.tsParseTypeAnnotation(false, t);\r\n        }\r\n        node.parameterName = this.parseIdentifier();\r\n        node.asserts = asserts;\r\n        node.typeAnnotation = null;\r\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\r\n        return this.finishNode(t, \"TSTypeAnnotation\");\r\n      }\r\n      const type = this.tsParseTypeAnnotation(false);\r\n      node.parameterName = typePredicateVariable;\r\n      node.typeAnnotation = type;\r\n      node.asserts = asserts;\r\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\r\n      return this.finishNode(t, \"TSTypeAnnotation\");\r\n    });\r\n  }\r\n  tsTryParseTypeOrTypePredicateAnnotation() {\r\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\r\n  }\r\n  tsTryParseTypeAnnotation() {\r\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\r\n  }\r\n  tsTryParseType() {\r\n    return this.tsEatThenParseType(14);\r\n  }\r\n  tsParseTypePredicatePrefix() {\r\n    const id = this.parseIdentifier();\r\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\r\n      this.next();\r\n      return id;\r\n    }\r\n  }\r\n  tsParseTypePredicateAsserts() {\r\n    if (this.state.type !== 107) {\r\n      return false;\r\n    }\r\n    const containsEsc = this.state.containsEsc;\r\n    this.next();\r\n    if (!tokenIsIdentifier(this.state.type) && !this.match(78)) {\r\n      return false;\r\n    }\r\n    if (containsEsc) {\r\n      this.raise(Errors.InvalidEscapedReservedWord, {\r\n        at: this.state.lastTokStartLoc,\r\n        reservedWord: \"asserts\"\r\n      });\r\n    }\r\n    return true;\r\n  }\r\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\r\n    this.tsInType(() => {\r\n      if (eatColon) this.expect(14);\r\n      t.typeAnnotation = this.tsParseType();\r\n    });\r\n    return this.finishNode(t, \"TSTypeAnnotation\");\r\n  }\r\n  tsParseType() {\r\n    assert$1(this.state.inType);\r\n    const type = this.tsParseNonConditionalType();\r\n    if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) {\r\n      return type;\r\n    }\r\n    const node = this.startNodeAtNode(type);\r\n    node.checkType = type;\r\n    node.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType());\r\n    this.expect(17);\r\n    node.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\r\n    this.expect(14);\r\n    node.falseType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\r\n    return this.finishNode(node, \"TSConditionalType\");\r\n  }\r\n  isAbstractConstructorSignature() {\r\n    return this.isContextual(122) && this.lookahead().type === 77;\r\n  }\r\n  tsParseNonConditionalType() {\r\n    if (this.tsIsStartOfFunctionType()) {\r\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\r\n    }\r\n    if (this.match(77)) {\r\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\r\n    } else if (this.isAbstractConstructorSignature()) {\r\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\r\n    }\r\n    return this.tsParseUnionTypeOrHigher();\r\n  }\r\n  tsParseTypeAssertion() {\r\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\r\n      this.raise(TSErrors.ReservedTypeAssertion, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    const node = this.startNode();\r\n    node.typeAnnotation = this.tsInType(() => {\r\n      this.next();\r\n      return this.match(75) ? this.tsParseTypeReference() : this.tsParseType();\r\n    });\r\n    this.expect(48);\r\n    node.expression = this.parseMaybeUnary();\r\n    return this.finishNode(node, \"TSTypeAssertion\");\r\n  }\r\n  tsParseHeritageClause(token) {\r\n    const originalStartLoc = this.state.startLoc;\r\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", () => {\r\n      const node = this.startNode();\r\n      node.expression = this.tsParseEntityName();\r\n      if (this.match(47)) {\r\n        node.typeParameters = this.tsParseTypeArguments();\r\n      }\r\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\r\n    });\r\n    if (!delimitedList.length) {\r\n      this.raise(TSErrors.EmptyHeritageClauseType, {\r\n        at: originalStartLoc,\r\n        token\r\n      });\r\n    }\r\n    return delimitedList;\r\n  }\r\n  tsParseInterfaceDeclaration(node, properties = {}) {\r\n    if (this.hasFollowingLineBreak()) return null;\r\n    this.expectContextual(127);\r\n    if (properties.declare) node.declare = true;\r\n    if (tokenIsIdentifier(this.state.type)) {\r\n      node.id = this.parseIdentifier();\r\n      this.checkIdentifier(node.id, BIND_TS_INTERFACE);\r\n    } else {\r\n      node.id = null;\r\n      this.raise(TSErrors.MissingInterfaceName, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\r\n    if (this.eat(81)) {\r\n      node.extends = this.tsParseHeritageClause(\"extends\");\r\n    }\r\n    const body = this.startNode();\r\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\r\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\r\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\r\n  }\r\n  tsParseTypeAliasDeclaration(node) {\r\n    node.id = this.parseIdentifier();\r\n    this.checkIdentifier(node.id, BIND_TS_TYPE);\r\n    node.typeAnnotation = this.tsInType(() => {\r\n      node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers);\r\n      this.expect(29);\r\n      if (this.isContextual(112) && this.lookahead().type !== 16) {\r\n        const node = this.startNode();\r\n        this.next();\r\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\r\n      }\r\n      return this.tsParseType();\r\n    });\r\n    this.semicolon();\r\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\r\n  }\r\n  tsInNoContext(cb) {\r\n    const oldContext = this.state.context;\r\n    this.state.context = [oldContext[0]];\r\n    try {\r\n      return cb();\r\n    } finally {\r\n      this.state.context = oldContext;\r\n    }\r\n  }\r\n  tsInType(cb) {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n    try {\r\n      return cb();\r\n    } finally {\r\n      this.state.inType = oldInType;\r\n    }\r\n  }\r\n  tsInDisallowConditionalTypesContext(cb) {\r\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\r\n    this.state.inDisallowConditionalTypesContext = true;\r\n    try {\r\n      return cb();\r\n    } finally {\r\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\r\n    }\r\n  }\r\n  tsInAllowConditionalTypesContext(cb) {\r\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\r\n    this.state.inDisallowConditionalTypesContext = false;\r\n    try {\r\n      return cb();\r\n    } finally {\r\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\r\n    }\r\n  }\r\n  tsEatThenParseType(token) {\r\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\r\n  }\r\n  tsExpectThenParseType(token) {\r\n    return this.tsDoThenParseType(() => this.expect(token));\r\n  }\r\n  tsNextThenParseType() {\r\n    return this.tsDoThenParseType(() => this.next());\r\n  }\r\n  tsDoThenParseType(cb) {\r\n    return this.tsInType(() => {\r\n      cb();\r\n      return this.tsParseType();\r\n    });\r\n  }\r\n  tsParseEnumMember() {\r\n    const node = this.startNode();\r\n    node.id = this.match(131) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(true);\r\n    if (this.eat(29)) {\r\n      node.initializer = super.parseMaybeAssignAllowIn();\r\n    }\r\n    return this.finishNode(node, \"TSEnumMember\");\r\n  }\r\n  tsParseEnumDeclaration(node, properties = {}) {\r\n    if (properties.const) node.const = true;\r\n    if (properties.declare) node.declare = true;\r\n    this.expectContextual(124);\r\n    node.id = this.parseIdentifier();\r\n    this.checkIdentifier(node.id, node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\r\n    this.expect(5);\r\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\r\n    this.expect(8);\r\n    return this.finishNode(node, \"TSEnumDeclaration\");\r\n  }\r\n  tsParseModuleBlock() {\r\n    const node = this.startNode();\r\n    this.scope.enter(SCOPE_OTHER);\r\n    this.expect(5);\r\n    super.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\r\n    this.scope.exit();\r\n    return this.finishNode(node, \"TSModuleBlock\");\r\n  }\r\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\r\n    node.id = this.parseIdentifier();\r\n    if (!nested) {\r\n      this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\r\n    }\r\n    if (this.eat(16)) {\r\n      const inner = this.startNode();\r\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\r\n      node.body = inner;\r\n    } else {\r\n      this.scope.enter(SCOPE_TS_MODULE);\r\n      this.prodParam.enter(PARAM);\r\n      node.body = this.tsParseModuleBlock();\r\n      this.prodParam.exit();\r\n      this.scope.exit();\r\n    }\r\n    return this.finishNode(node, \"TSModuleDeclaration\");\r\n  }\r\n  tsParseAmbientExternalModuleDeclaration(node) {\r\n    if (this.isContextual(110)) {\r\n      node.global = true;\r\n      node.id = this.parseIdentifier();\r\n    } else if (this.match(131)) {\r\n      node.id = super.parseStringLiteral(this.state.value);\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n    if (this.match(5)) {\r\n      this.scope.enter(SCOPE_TS_MODULE);\r\n      this.prodParam.enter(PARAM);\r\n      node.body = this.tsParseModuleBlock();\r\n      this.prodParam.exit();\r\n      this.scope.exit();\r\n    } else {\r\n      this.semicolon();\r\n    }\r\n    return this.finishNode(node, \"TSModuleDeclaration\");\r\n  }\r\n  tsParseImportEqualsDeclaration(node, isExport) {\r\n    node.isExport = isExport || false;\r\n    node.id = this.parseIdentifier();\r\n    this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\r\n    this.expect(29);\r\n    const moduleReference = this.tsParseModuleReference();\r\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\r\n      this.raise(TSErrors.ImportAliasHasImportType, {\r\n        at: moduleReference\r\n      });\r\n    }\r\n    node.moduleReference = moduleReference;\r\n    this.semicolon();\r\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\r\n  }\r\n  tsIsExternalModuleReference() {\r\n    return this.isContextual(117) && this.lookaheadCharCode() === 40;\r\n  }\r\n  tsParseModuleReference() {\r\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\r\n  }\r\n  tsParseExternalModuleReference() {\r\n    const node = this.startNode();\r\n    this.expectContextual(117);\r\n    this.expect(10);\r\n    if (!this.match(131)) {\r\n      this.unexpected();\r\n    }\r\n    node.expression = super.parseExprAtom();\r\n    this.expect(11);\r\n    return this.finishNode(node, \"TSExternalModuleReference\");\r\n  }\r\n  tsLookAhead(f) {\r\n    const state = this.state.clone();\r\n    const res = f();\r\n    this.state = state;\r\n    return res;\r\n  }\r\n  tsTryParseAndCatch(f) {\r\n    const result = this.tryParse(abort => f() || abort());\r\n    if (result.aborted || !result.node) return undefined;\r\n    if (result.error) this.state = result.failState;\r\n    return result.node;\r\n  }\r\n  tsTryParse(f) {\r\n    const state = this.state.clone();\r\n    const result = f();\r\n    if (result !== undefined && result !== false) {\r\n      return result;\r\n    } else {\r\n      this.state = state;\r\n      return undefined;\r\n    }\r\n  }\r\n  tsTryParseDeclare(nany) {\r\n    if (this.isLineTerminator()) {\r\n      return;\r\n    }\r\n    let starttype = this.state.type;\r\n    let kind;\r\n    if (this.isContextual(99)) {\r\n      starttype = 74;\r\n      kind = \"let\";\r\n    }\r\n    return this.tsInAmbientContext(() => {\r\n      if (starttype === 68) {\r\n        nany.declare = true;\r\n        return super.parseFunctionStatement(nany, false, false);\r\n      }\r\n      if (starttype === 80) {\r\n        nany.declare = true;\r\n        return this.parseClass(nany, true, false);\r\n      }\r\n      if (starttype === 124) {\r\n        return this.tsParseEnumDeclaration(nany, {\r\n          declare: true\r\n        });\r\n      }\r\n      if (starttype === 110) {\r\n        return this.tsParseAmbientExternalModuleDeclaration(nany);\r\n      }\r\n      if (starttype === 75 || starttype === 74) {\r\n        if (!this.match(75) || !this.isLookaheadContextual(\"enum\")) {\r\n          nany.declare = true;\r\n          return this.parseVarStatement(nany, kind || this.state.value, true);\r\n        }\r\n        this.expect(75);\r\n        return this.tsParseEnumDeclaration(nany, {\r\n          const: true,\r\n          declare: true\r\n        });\r\n      }\r\n      if (starttype === 127) {\r\n        const result = this.tsParseInterfaceDeclaration(nany, {\r\n          declare: true\r\n        });\r\n        if (result) return result;\r\n      }\r\n      if (tokenIsIdentifier(starttype)) {\r\n        return this.tsParseDeclaration(nany, this.state.value, true, null);\r\n      }\r\n    });\r\n  }\r\n  tsTryParseExportDeclaration() {\r\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true, null);\r\n  }\r\n  tsParseExpressionStatement(node, expr, decorators) {\r\n    switch (expr.name) {\r\n      case \"declare\":\r\n        {\r\n          const declaration = this.tsTryParseDeclare(node);\r\n          if (declaration) {\r\n            declaration.declare = true;\r\n            return declaration;\r\n          }\r\n          break;\r\n        }\r\n      case \"global\":\r\n        if (this.match(5)) {\r\n          this.scope.enter(SCOPE_TS_MODULE);\r\n          this.prodParam.enter(PARAM);\r\n          const mod = node;\r\n          mod.global = true;\r\n          mod.id = expr;\r\n          mod.body = this.tsParseModuleBlock();\r\n          this.scope.exit();\r\n          this.prodParam.exit();\r\n          return this.finishNode(mod, \"TSModuleDeclaration\");\r\n        }\r\n        break;\r\n      default:\r\n        return this.tsParseDeclaration(node, expr.name, false, decorators);\r\n    }\r\n  }\r\n  tsParseDeclaration(node, value, next, decorators) {\r\n    switch (value) {\r\n      case \"abstract\":\r\n        if (this.tsCheckLineTerminator(next) && (this.match(80) || tokenIsIdentifier(this.state.type))) {\r\n          return this.tsParseAbstractDeclaration(node, decorators);\r\n        }\r\n        break;\r\n      case \"module\":\r\n        if (this.tsCheckLineTerminator(next)) {\r\n          if (this.match(131)) {\r\n            return this.tsParseAmbientExternalModuleDeclaration(node);\r\n          } else if (tokenIsIdentifier(this.state.type)) {\r\n            return this.tsParseModuleOrNamespaceDeclaration(node);\r\n          }\r\n        }\r\n        break;\r\n      case \"namespace\":\r\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\r\n          return this.tsParseModuleOrNamespaceDeclaration(node);\r\n        }\r\n        break;\r\n      case \"type\":\r\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\r\n          return this.tsParseTypeAliasDeclaration(node);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  tsCheckLineTerminator(next) {\r\n    if (next) {\r\n      if (this.hasFollowingLineBreak()) return false;\r\n      this.next();\r\n      return true;\r\n    }\r\n    return !this.isLineTerminator();\r\n  }\r\n  tsTryParseGenericAsyncArrowFunction(startLoc) {\r\n    if (!this.match(47)) {\r\n      return undefined;\r\n    }\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n    this.state.maybeInArrowParameters = true;\r\n    const res = this.tsTryParseAndCatch(() => {\r\n      const node = this.startNodeAt(startLoc);\r\n      node.typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\r\n      super.parseFunctionParams(node);\r\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\r\n      this.expect(19);\r\n      return node;\r\n    });\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n    if (!res) {\r\n      return undefined;\r\n    }\r\n    return super.parseArrowExpression(res, null, true);\r\n  }\r\n  tsParseTypeArgumentsInExpression() {\r\n    if (this.reScan_lt() !== 47) {\r\n      return undefined;\r\n    }\r\n    return this.tsParseTypeArguments();\r\n  }\r\n  tsParseTypeArguments() {\r\n    const node = this.startNode();\r\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\r\n      this.expect(47);\r\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\r\n    }));\r\n    if (node.params.length === 0) {\r\n      this.raise(TSErrors.EmptyTypeArguments, {\r\n        at: node\r\n      });\r\n    }\r\n    this.expect(48);\r\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\r\n  }\r\n  tsIsDeclarationStart() {\r\n    return tokenIsTSDeclarationStart(this.state.type);\r\n  }\r\n  isExportDefaultSpecifier() {\r\n    if (this.tsIsDeclarationStart()) return false;\r\n    return super.isExportDefaultSpecifier();\r\n  }\r\n  parseAssignableListItem(flags, decorators) {\r\n    const startLoc = this.state.startLoc;\r\n    const modified = {};\r\n    this.tsParseModifiers({\r\n      allowedModifiers: [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]\r\n    }, modified);\r\n    const accessibility = modified.accessibility;\r\n    const override = modified.override;\r\n    const readonly = modified.readonly;\r\n    if (!(flags & 4) && (accessibility || readonly || override)) {\r\n      this.raise(TSErrors.UnexpectedParameterModifier, {\r\n        at: startLoc\r\n      });\r\n    }\r\n    const left = this.parseMaybeDefault();\r\n    this.parseAssignableListItemTypes(left, flags);\r\n    const elt = this.parseMaybeDefault(left.loc.start, left);\r\n    if (accessibility || readonly || override) {\r\n      const pp = this.startNodeAt(startLoc);\r\n      if (decorators.length) {\r\n        pp.decorators = decorators;\r\n      }\r\n      if (accessibility) pp.accessibility = accessibility;\r\n      if (readonly) pp.readonly = readonly;\r\n      if (override) pp.override = override;\r\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\r\n        this.raise(TSErrors.UnsupportedParameterPropertyKind, {\r\n          at: pp\r\n        });\r\n      }\r\n      pp.parameter = elt;\r\n      return this.finishNode(pp, \"TSParameterProperty\");\r\n    }\r\n    if (decorators.length) {\r\n      left.decorators = decorators;\r\n    }\r\n    return elt;\r\n  }\r\n  isSimpleParameter(node) {\r\n    return node.type === \"TSParameterProperty\" && super.isSimpleParameter(node.parameter) || super.isSimpleParameter(node);\r\n  }\r\n  tsDisallowOptionalPattern(node) {\r\n    for (const param of node.params) {\r\n      if (param.type !== \"Identifier\" && param.optional && !this.state.isAmbientContext) {\r\n        this.raise(TSErrors.PatternIsOptional, {\r\n          at: param\r\n        });\r\n      }\r\n    }\r\n  }\r\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\r\n    super.setArrowFunctionParameters(node, params, trailingCommaLoc);\r\n    this.tsDisallowOptionalPattern(node);\r\n  }\r\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\r\n    if (this.match(14)) {\r\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\r\n    }\r\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\r\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\r\n      return this.finishNode(node, bodilessType);\r\n    }\r\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\r\n      this.raise(TSErrors.DeclareFunctionHasImplementation, {\r\n        at: node\r\n      });\r\n      if (node.declare) {\r\n        return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\r\n      }\r\n    }\r\n    this.tsDisallowOptionalPattern(node);\r\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\r\n  }\r\n  registerFunctionStatementId(node) {\r\n    if (!node.body && node.id) {\r\n      this.checkIdentifier(node.id, BIND_TS_AMBIENT);\r\n    } else {\r\n      super.registerFunctionStatementId(node);\r\n    }\r\n  }\r\n  tsCheckForInvalidTypeCasts(items) {\r\n    items.forEach(node => {\r\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\r\n        this.raise(TSErrors.UnexpectedTypeAnnotation, {\r\n          at: node.typeAnnotation\r\n        });\r\n      }\r\n    });\r\n  }\r\n  toReferencedList(exprList, isInParens) {\r\n    this.tsCheckForInvalidTypeCasts(exprList);\r\n    return exprList;\r\n  }\r\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\r\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\r\n    if (node.type === \"ArrayExpression\") {\r\n      this.tsCheckForInvalidTypeCasts(node.elements);\r\n    }\r\n    return node;\r\n  }\r\n  parseSubscript(base, startLoc, noCalls, state) {\r\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\r\n      this.state.canStartJSXElement = false;\r\n      this.next();\r\n      const nonNullExpression = this.startNodeAt(startLoc);\r\n      nonNullExpression.expression = base;\r\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\r\n    }\r\n    let isOptionalCall = false;\r\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\r\n      if (noCalls) {\r\n        state.stop = true;\r\n        return base;\r\n      }\r\n      state.optionalChainMember = isOptionalCall = true;\r\n      this.next();\r\n    }\r\n    if (this.match(47) || this.match(51)) {\r\n      let missingParenErrorLoc;\r\n      const result = this.tsTryParseAndCatch(() => {\r\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\r\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startLoc);\r\n          if (asyncArrowFn) {\r\n            return asyncArrowFn;\r\n          }\r\n        }\r\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\r\n        if (!typeArguments) return;\r\n        if (isOptionalCall && !this.match(10)) {\r\n          missingParenErrorLoc = this.state.curPosition();\r\n          return;\r\n        }\r\n        if (tokenIsTemplate(this.state.type)) {\r\n          const result = super.parseTaggedTemplateExpression(base, startLoc, state);\r\n          result.typeParameters = typeArguments;\r\n          return result;\r\n        }\r\n        if (!noCalls && this.eat(10)) {\r\n          const node = this.startNodeAt(startLoc);\r\n          node.callee = base;\r\n          node.arguments = this.parseCallExpressionArguments(11, false);\r\n          this.tsCheckForInvalidTypeCasts(node.arguments);\r\n          node.typeParameters = typeArguments;\r\n          if (state.optionalChainMember) {\r\n            node.optional = isOptionalCall;\r\n          }\r\n          return this.finishCallExpression(node, state.optionalChainMember);\r\n        }\r\n        const tokenType = this.state.type;\r\n        if (tokenType === 48 || tokenType === 52 || tokenType !== 10 && tokenCanStartExpression(tokenType) && !this.hasPrecedingLineBreak()) {\r\n          return;\r\n        }\r\n        const node = this.startNodeAt(startLoc);\r\n        node.expression = base;\r\n        node.typeParameters = typeArguments;\r\n        return this.finishNode(node, \"TSInstantiationExpression\");\r\n      });\r\n      if (missingParenErrorLoc) {\r\n        this.unexpected(missingParenErrorLoc, 10);\r\n      }\r\n      if (result) {\r\n        if (result.type === \"TSInstantiationExpression\" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40)) {\r\n          this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression, {\r\n            at: this.state.startLoc\r\n          });\r\n        }\r\n        return result;\r\n      }\r\n    }\r\n    return super.parseSubscript(base, startLoc, noCalls, state);\r\n  }\r\n  parseNewCallee(node) {\r\n    var _callee$extra;\r\n    super.parseNewCallee(node);\r\n    const {\r\n      callee\r\n    } = node;\r\n    if (callee.type === \"TSInstantiationExpression\" && !((_callee$extra = callee.extra) != null && _callee$extra.parenthesized)) {\r\n      node.typeParameters = callee.typeParameters;\r\n      node.callee = callee.expression;\r\n    }\r\n  }\r\n  parseExprOp(left, leftStartLoc, minPrec) {\r\n    let isSatisfies;\r\n    if (tokenOperatorPrecedence(58) > minPrec && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (isSatisfies = this.isContextual(118)))) {\r\n      const node = this.startNodeAt(leftStartLoc);\r\n      node.expression = left;\r\n      node.typeAnnotation = this.tsInType(() => {\r\n        this.next();\r\n        if (this.match(75)) {\r\n          if (isSatisfies) {\r\n            this.raise(Errors.UnexpectedKeyword, {\r\n              at: this.state.startLoc,\r\n              keyword: \"const\"\r\n            });\r\n          }\r\n          return this.tsParseTypeReference();\r\n        }\r\n        return this.tsParseType();\r\n      });\r\n      this.finishNode(node, isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\");\r\n      this.reScan_lt_gt();\r\n      return this.parseExprOp(node, leftStartLoc, minPrec);\r\n    }\r\n    return super.parseExprOp(left, leftStartLoc, minPrec);\r\n  }\r\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\r\n    if (!this.state.isAmbientContext) {\r\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\r\n    }\r\n  }\r\n  checkImportReflection(node) {\r\n    super.checkImportReflection(node);\r\n    if (node.module && node.importKind !== \"value\") {\r\n      this.raise(TSErrors.ImportReflectionHasImportType, {\r\n        at: node.specifiers[0].loc.start\r\n      });\r\n    }\r\n  }\r\n  checkDuplicateExports() {}\r\n  parseImport(node) {\r\n    node.importKind = \"value\";\r\n    if (tokenIsIdentifier(this.state.type) || this.match(55) || this.match(5)) {\r\n      let ahead = this.lookahead();\r\n      if (this.isContextual(128) && ahead.type !== 12 && ahead.type !== 97 && ahead.type !== 29) {\r\n        node.importKind = \"type\";\r\n        this.next();\r\n        ahead = this.lookahead();\r\n      }\r\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 29) {\r\n        return this.tsParseImportEqualsDeclaration(node);\r\n      }\r\n    }\r\n    const importNode = super.parseImport(node);\r\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\r\n      this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\r\n        at: importNode\r\n      });\r\n    }\r\n    return importNode;\r\n  }\r\n  parseExport(node, decorators) {\r\n    if (this.match(83)) {\r\n      this.next();\r\n      if (this.isContextual(128) && this.lookaheadCharCode() !== 61) {\r\n        node.importKind = \"type\";\r\n        this.next();\r\n      } else {\r\n        node.importKind = \"value\";\r\n      }\r\n      return this.tsParseImportEqualsDeclaration(node, true);\r\n    } else if (this.eat(29)) {\r\n      const assign = node;\r\n      assign.expression = super.parseExpression();\r\n      this.semicolon();\r\n      return this.finishNode(assign, \"TSExportAssignment\");\r\n    } else if (this.eatContextual(93)) {\r\n      const decl = node;\r\n      this.expectContextual(126);\r\n      decl.id = this.parseIdentifier();\r\n      this.semicolon();\r\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\r\n    } else {\r\n      node.exportKind = \"value\";\r\n      if (this.isContextual(128)) {\r\n        const ch = this.lookaheadCharCode();\r\n        if (ch === 123 || ch === 42) {\r\n          this.next();\r\n          node.exportKind = \"type\";\r\n        }\r\n      }\r\n      return super.parseExport(node, decorators);\r\n    }\r\n  }\r\n  isAbstractClass() {\r\n    return this.isContextual(122) && this.lookahead().type === 80;\r\n  }\r\n  parseExportDefaultExpression() {\r\n    if (this.isAbstractClass()) {\r\n      const cls = this.startNode();\r\n      this.next();\r\n      cls.abstract = true;\r\n      return this.parseClass(cls, true, true);\r\n    }\r\n    if (this.match(127)) {\r\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\r\n      if (result) return result;\r\n    }\r\n    return super.parseExportDefaultExpression();\r\n  }\r\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\r\n    const {\r\n      isAmbientContext\r\n    } = this.state;\r\n    const declaration = super.parseVarStatement(node, kind, allowMissingInitializer || isAmbientContext);\r\n    if (!isAmbientContext) return declaration;\r\n    for (const {\r\n      id,\r\n      init\r\n    } of declaration.declarations) {\r\n      if (!init) continue;\r\n      if (kind !== \"const\" || !!id.typeAnnotation) {\r\n        this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\r\n          at: init\r\n        });\r\n      } else if (!isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))) {\r\n        this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, {\r\n          at: init\r\n        });\r\n      }\r\n    }\r\n    return declaration;\r\n  }\r\n  parseStatementContent(flags, decorators) {\r\n    if (this.match(75) && this.isLookaheadContextual(\"enum\")) {\r\n      const node = this.startNode();\r\n      this.expect(75);\r\n      return this.tsParseEnumDeclaration(node, {\r\n        const: true\r\n      });\r\n    }\r\n    if (this.isContextual(124)) {\r\n      return this.tsParseEnumDeclaration(this.startNode());\r\n    }\r\n    if (this.isContextual(127)) {\r\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\r\n      if (result) return result;\r\n    }\r\n    return super.parseStatementContent(flags, decorators);\r\n  }\r\n  parseAccessModifier() {\r\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\r\n  }\r\n  tsHasSomeModifiers(member, modifiers) {\r\n    return modifiers.some(modifier => {\r\n      if (tsIsAccessModifier(modifier)) {\r\n        return member.accessibility === modifier;\r\n      }\r\n      return !!member[modifier];\r\n    });\r\n  }\r\n  tsIsStartOfStaticBlocks() {\r\n    return this.isContextual(104) && this.lookaheadCharCode() === 123;\r\n  }\r\n  parseClassMember(classBody, member, state) {\r\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\r\n    this.tsParseModifiers({\r\n      allowedModifiers: modifiers,\r\n      disallowedModifiers: [\"in\", \"out\"],\r\n      stopOnStartOfClassStaticBlock: true,\r\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\r\n    }, member);\r\n    const callParseClassMemberWithIsStatic = () => {\r\n      if (this.tsIsStartOfStaticBlocks()) {\r\n        this.next();\r\n        this.next();\r\n        if (this.tsHasSomeModifiers(member, modifiers)) {\r\n          this.raise(TSErrors.StaticBlockCannotHaveModifier, {\r\n            at: this.state.curPosition()\r\n          });\r\n        }\r\n        super.parseClassStaticBlock(classBody, member);\r\n      } else {\r\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\r\n      }\r\n    };\r\n    if (member.declare) {\r\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\r\n    } else {\r\n      callParseClassMemberWithIsStatic();\r\n    }\r\n  }\r\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\r\n    const idx = this.tsTryParseIndexSignature(member);\r\n    if (idx) {\r\n      classBody.body.push(idx);\r\n      if (member.abstract) {\r\n        this.raise(TSErrors.IndexSignatureHasAbstract, {\r\n          at: member\r\n        });\r\n      }\r\n      if (member.accessibility) {\r\n        this.raise(TSErrors.IndexSignatureHasAccessibility, {\r\n          at: member,\r\n          modifier: member.accessibility\r\n        });\r\n      }\r\n      if (member.declare) {\r\n        this.raise(TSErrors.IndexSignatureHasDeclare, {\r\n          at: member\r\n        });\r\n      }\r\n      if (member.override) {\r\n        this.raise(TSErrors.IndexSignatureHasOverride, {\r\n          at: member\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    if (!this.state.inAbstractClass && member.abstract) {\r\n      this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\r\n        at: member\r\n      });\r\n    }\r\n    if (member.override) {\r\n      if (!state.hadSuperClass) {\r\n        this.raise(TSErrors.OverrideNotInSubClass, {\r\n          at: member\r\n        });\r\n      }\r\n    }\r\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\r\n  }\r\n  parsePostMemberNameModifiers(methodOrProp) {\r\n    const optional = this.eat(17);\r\n    if (optional) methodOrProp.optional = true;\r\n    if (methodOrProp.readonly && this.match(10)) {\r\n      this.raise(TSErrors.ClassMethodHasReadonly, {\r\n        at: methodOrProp\r\n      });\r\n    }\r\n    if (methodOrProp.declare && this.match(10)) {\r\n      this.raise(TSErrors.ClassMethodHasDeclare, {\r\n        at: methodOrProp\r\n      });\r\n    }\r\n  }\r\n  parseExpressionStatement(node, expr, decorators) {\r\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr, decorators) : undefined;\r\n    return decl || super.parseExpressionStatement(node, expr, decorators);\r\n  }\r\n  shouldParseExportDeclaration() {\r\n    if (this.tsIsDeclarationStart()) return true;\r\n    return super.shouldParseExportDeclaration();\r\n  }\r\n  parseConditional(expr, startLoc, refExpressionErrors) {\r\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\r\n      return super.parseConditional(expr, startLoc, refExpressionErrors);\r\n    }\r\n    const result = this.tryParse(() => super.parseConditional(expr, startLoc));\r\n    if (!result.node) {\r\n      if (result.error) {\r\n        super.setOptionalParametersError(refExpressionErrors, result.error);\r\n      }\r\n      return expr;\r\n    }\r\n    if (result.error) this.state = result.failState;\r\n    return result.node;\r\n  }\r\n  parseParenItem(node, startLoc) {\r\n    node = super.parseParenItem(node, startLoc);\r\n    if (this.eat(17)) {\r\n      node.optional = true;\r\n      this.resetEndLocation(node);\r\n    }\r\n    if (this.match(14)) {\r\n      const typeCastNode = this.startNodeAt(startLoc);\r\n      typeCastNode.expression = node;\r\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\r\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\r\n    }\r\n    return node;\r\n  }\r\n  parseExportDeclaration(node) {\r\n    if (!this.state.isAmbientContext && this.isContextual(123)) {\r\n      return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\r\n    }\r\n    const startLoc = this.state.startLoc;\r\n    const isDeclare = this.eatContextual(123);\r\n    if (isDeclare && (this.isContextual(123) || !this.shouldParseExportDeclaration())) {\r\n      throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    const isIdentifier = tokenIsIdentifier(this.state.type);\r\n    const declaration = isIdentifier && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(node);\r\n    if (!declaration) return null;\r\n    if (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare) {\r\n      node.exportKind = \"type\";\r\n    }\r\n    if (isDeclare) {\r\n      this.resetStartLocation(declaration, startLoc);\r\n      declaration.declare = true;\r\n    }\r\n    return declaration;\r\n  }\r\n  parseClassId(node, isStatement, optionalId, bindingType) {\r\n    if ((!isStatement || optionalId) && this.isContextual(111)) {\r\n      return;\r\n    }\r\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\r\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\r\n    if (typeParameters) node.typeParameters = typeParameters;\r\n  }\r\n  parseClassPropertyAnnotation(node) {\r\n    if (!node.optional) {\r\n      if (this.eat(35)) {\r\n        node.definite = true;\r\n      } else if (this.eat(17)) {\r\n        node.optional = true;\r\n      }\r\n    }\r\n    const type = this.tsTryParseTypeAnnotation();\r\n    if (type) node.typeAnnotation = type;\r\n  }\r\n  parseClassProperty(node) {\r\n    this.parseClassPropertyAnnotation(node);\r\n    if (this.state.isAmbientContext && !(node.readonly && !node.typeAnnotation) && this.match(29)) {\r\n      this.raise(TSErrors.DeclareClassFieldHasInitializer, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    if (node.abstract && this.match(29)) {\r\n      const {\r\n        key\r\n      } = node;\r\n      this.raise(TSErrors.AbstractPropertyHasInitializer, {\r\n        at: this.state.startLoc,\r\n        propertyName: key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\r\n      });\r\n    }\r\n    return super.parseClassProperty(node);\r\n  }\r\n  parseClassPrivateProperty(node) {\r\n    if (node.abstract) {\r\n      this.raise(TSErrors.PrivateElementHasAbstract, {\r\n        at: node\r\n      });\r\n    }\r\n    if (node.accessibility) {\r\n      this.raise(TSErrors.PrivateElementHasAccessibility, {\r\n        at: node,\r\n        modifier: node.accessibility\r\n      });\r\n    }\r\n    this.parseClassPropertyAnnotation(node);\r\n    return super.parseClassPrivateProperty(node);\r\n  }\r\n  parseClassAccessorProperty(node) {\r\n    this.parseClassPropertyAnnotation(node);\r\n    if (node.optional) {\r\n      this.raise(TSErrors.AccessorCannotBeOptional, {\r\n        at: node\r\n      });\r\n    }\r\n    return super.parseClassAccessorProperty(node);\r\n  }\r\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\r\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\r\n    if (typeParameters && isConstructor) {\r\n      this.raise(TSErrors.ConstructorHasTypeParameters, {\r\n        at: typeParameters\r\n      });\r\n    }\r\n    const {\r\n      declare = false,\r\n      kind\r\n    } = method;\r\n    if (declare && (kind === \"get\" || kind === \"set\")) {\r\n      this.raise(TSErrors.DeclareAccessor, {\r\n        at: method,\r\n        kind\r\n      });\r\n    }\r\n    if (typeParameters) method.typeParameters = typeParameters;\r\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\r\n  }\r\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\r\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\r\n    if (typeParameters) method.typeParameters = typeParameters;\r\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\r\n  }\r\n  declareClassPrivateMethodInScope(node, kind) {\r\n    if (node.type === \"TSDeclareMethod\") return;\r\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\r\n    super.declareClassPrivateMethodInScope(node, kind);\r\n  }\r\n  parseClassSuper(node) {\r\n    super.parseClassSuper(node);\r\n    if (node.superClass && (this.match(47) || this.match(51))) {\r\n      node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\r\n    }\r\n    if (this.eatContextual(111)) {\r\n      node.implements = this.tsParseHeritageClause(\"implements\");\r\n    }\r\n  }\r\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\r\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\r\n    if (typeParameters) prop.typeParameters = typeParameters;\r\n    return super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\r\n  }\r\n  parseFunctionParams(node, isConstructor) {\r\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\r\n    if (typeParameters) node.typeParameters = typeParameters;\r\n    super.parseFunctionParams(node, isConstructor);\r\n  }\r\n  parseVarId(decl, kind) {\r\n    super.parseVarId(decl, kind);\r\n    if (decl.id.type === \"Identifier\" && !this.hasPrecedingLineBreak() && this.eat(35)) {\r\n      decl.definite = true;\r\n    }\r\n    const type = this.tsTryParseTypeAnnotation();\r\n    if (type) {\r\n      decl.id.typeAnnotation = type;\r\n      this.resetEndLocation(decl.id);\r\n    }\r\n  }\r\n  parseAsyncArrowFromCallExpression(node, call) {\r\n    if (this.match(14)) {\r\n      node.returnType = this.tsParseTypeAnnotation();\r\n    }\r\n    return super.parseAsyncArrowFromCallExpression(node, call);\r\n  }\r\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\r\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\r\n    let state;\r\n    let jsx;\r\n    let typeCast;\r\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\r\n      state = this.state.clone();\r\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\r\n      if (!jsx.error) return jsx.node;\r\n      const {\r\n        context\r\n      } = this.state;\r\n      const currentContext = context[context.length - 1];\r\n      if (currentContext === types$1.j_oTag || currentContext === types$1.j_expr) {\r\n        context.pop();\r\n      }\r\n    }\r\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(47)) {\r\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\r\n    }\r\n    if (!state || state === this.state) state = this.state.clone();\r\n    let typeParameters;\r\n    const arrow = this.tryParse(abort => {\r\n      var _expr$extra, _typeParameters;\r\n      typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\r\n      const expr = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\r\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\r\n        abort();\r\n      }\r\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\r\n        this.resetStartLocationFromNode(expr, typeParameters);\r\n      }\r\n      expr.typeParameters = typeParameters;\r\n      return expr;\r\n    }, state);\r\n    if (!arrow.error && !arrow.aborted) {\r\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\r\n      return arrow.node;\r\n    }\r\n    if (!jsx) {\r\n      assert$1(!this.hasPlugin(\"jsx\"));\r\n      typeCast = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\r\n      if (!typeCast.error) return typeCast.node;\r\n    }\r\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\r\n      this.state = jsx.failState;\r\n      return jsx.node;\r\n    }\r\n    if (arrow.node) {\r\n      this.state = arrow.failState;\r\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\r\n      return arrow.node;\r\n    }\r\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\r\n      this.state = typeCast.failState;\r\n      return typeCast.node;\r\n    }\r\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\r\n    if (arrow.thrown) throw arrow.error;\r\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\r\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\r\n  }\r\n  reportReservedArrowTypeParam(node) {\r\n    var _node$extra;\r\n    if (node.params.length === 1 && !node.params[0].constraint && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\r\n      this.raise(TSErrors.ReservedArrowTypeParam, {\r\n        at: node\r\n      });\r\n    }\r\n  }\r\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\r\n    if (!this.hasPlugin(\"jsx\") && this.match(47)) {\r\n      return this.tsParseTypeAssertion();\r\n    } else {\r\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\r\n    }\r\n  }\r\n  parseArrow(node) {\r\n    if (this.match(14)) {\r\n      const result = this.tryParse(abort => {\r\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\r\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\r\n        return returnType;\r\n      });\r\n      if (result.aborted) return;\r\n      if (!result.thrown) {\r\n        if (result.error) this.state = result.failState;\r\n        node.returnType = result.node;\r\n      }\r\n    }\r\n    return super.parseArrow(node);\r\n  }\r\n  parseAssignableListItemTypes(param, flags) {\r\n    if (!(flags & 2)) return param;\r\n    if (this.eat(17)) {\r\n      param.optional = true;\r\n    }\r\n    const type = this.tsTryParseTypeAnnotation();\r\n    if (type) param.typeAnnotation = type;\r\n    this.resetEndLocation(param);\r\n    return param;\r\n  }\r\n  isAssignable(node, isBinding) {\r\n    switch (node.type) {\r\n      case \"TSTypeCastExpression\":\r\n        return this.isAssignable(node.expression, isBinding);\r\n      case \"TSParameterProperty\":\r\n        return true;\r\n      default:\r\n        return super.isAssignable(node, isBinding);\r\n    }\r\n  }\r\n  toAssignable(node, isLHS = false) {\r\n    switch (node.type) {\r\n      case \"ParenthesizedExpression\":\r\n        this.toAssignableParenthesizedExpression(node, isLHS);\r\n        break;\r\n      case \"TSAsExpression\":\r\n      case \"TSSatisfiesExpression\":\r\n      case \"TSNonNullExpression\":\r\n      case \"TSTypeAssertion\":\r\n        if (isLHS) {\r\n          this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter, {\r\n            at: node\r\n          });\r\n        } else {\r\n          this.raise(TSErrors.UnexpectedTypeCastInParameter, {\r\n            at: node\r\n          });\r\n        }\r\n        this.toAssignable(node.expression, isLHS);\r\n        break;\r\n      case \"AssignmentExpression\":\r\n        if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\r\n          node.left = this.typeCastToParameter(node.left);\r\n        }\r\n      default:\r\n        super.toAssignable(node, isLHS);\r\n    }\r\n  }\r\n  toAssignableParenthesizedExpression(node, isLHS) {\r\n    switch (node.expression.type) {\r\n      case \"TSAsExpression\":\r\n      case \"TSSatisfiesExpression\":\r\n      case \"TSNonNullExpression\":\r\n      case \"TSTypeAssertion\":\r\n      case \"ParenthesizedExpression\":\r\n        this.toAssignable(node.expression, isLHS);\r\n        break;\r\n      default:\r\n        super.toAssignable(node, isLHS);\r\n    }\r\n  }\r\n  checkToRestConversion(node, allowPattern) {\r\n    switch (node.type) {\r\n      case \"TSAsExpression\":\r\n      case \"TSSatisfiesExpression\":\r\n      case \"TSTypeAssertion\":\r\n      case \"TSNonNullExpression\":\r\n        this.checkToRestConversion(node.expression, false);\r\n        break;\r\n      default:\r\n        super.checkToRestConversion(node, allowPattern);\r\n    }\r\n  }\r\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\r\n    return getOwn({\r\n      TSTypeCastExpression: true,\r\n      TSParameterProperty: \"parameter\",\r\n      TSNonNullExpression: \"expression\",\r\n      TSAsExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\r\n      TSSatisfiesExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\r\n      TSTypeAssertion: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true]\r\n    }, type) || super.isValidLVal(type, isUnparenthesizedInAssign, binding);\r\n  }\r\n  parseBindingAtom() {\r\n    switch (this.state.type) {\r\n      case 78:\r\n        return this.parseIdentifier(true);\r\n      default:\r\n        return super.parseBindingAtom();\r\n    }\r\n  }\r\n  parseMaybeDecoratorArguments(expr) {\r\n    if (this.match(47) || this.match(51)) {\r\n      const typeArguments = this.tsParseTypeArgumentsInExpression();\r\n      if (this.match(10)) {\r\n        const call = super.parseMaybeDecoratorArguments(expr);\r\n        call.typeParameters = typeArguments;\r\n        return call;\r\n      }\r\n      this.unexpected(null, 10);\r\n    }\r\n    return super.parseMaybeDecoratorArguments(expr);\r\n  }\r\n  checkCommaAfterRest(close) {\r\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\r\n      this.next();\r\n      return false;\r\n    } else {\r\n      return super.checkCommaAfterRest(close);\r\n    }\r\n  }\r\n  isClassMethod() {\r\n    return this.match(47) || super.isClassMethod();\r\n  }\r\n  isClassProperty() {\r\n    return this.match(35) || this.match(14) || super.isClassProperty();\r\n  }\r\n  parseMaybeDefault(startLoc, left) {\r\n    const node = super.parseMaybeDefault(startLoc, left);\r\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\r\n      this.raise(TSErrors.TypeAnnotationAfterAssign, {\r\n        at: node.typeAnnotation\r\n      });\r\n    }\r\n    return node;\r\n  }\r\n  getTokenFromCode(code) {\r\n    if (this.state.inType) {\r\n      if (code === 62) {\r\n        this.finishOp(48, 1);\r\n        return;\r\n      }\r\n      if (code === 60) {\r\n        this.finishOp(47, 1);\r\n        return;\r\n      }\r\n    }\r\n    super.getTokenFromCode(code);\r\n  }\r\n  reScan_lt_gt() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n    if (type === 47) {\r\n      this.state.pos -= 1;\r\n      this.readToken_lt();\r\n    } else if (type === 48) {\r\n      this.state.pos -= 1;\r\n      this.readToken_gt();\r\n    }\r\n  }\r\n  reScan_lt() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n    if (type === 51) {\r\n      this.state.pos -= 2;\r\n      this.finishOp(47, 1);\r\n      return 47;\r\n    }\r\n    return type;\r\n  }\r\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\r\n    for (let i = 0; i < exprList.length; i++) {\r\n      const expr = exprList[i];\r\n      if ((expr == null ? void 0 : expr.type) === \"TSTypeCastExpression\") {\r\n        exprList[i] = this.typeCastToParameter(expr);\r\n      }\r\n    }\r\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\r\n  }\r\n  typeCastToParameter(node) {\r\n    node.expression.typeAnnotation = node.typeAnnotation;\r\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\r\n    return node.expression;\r\n  }\r\n  shouldParseArrow(params) {\r\n    if (this.match(14)) {\r\n      return params.every(expr => this.isAssignable(expr, true));\r\n    }\r\n    return super.shouldParseArrow(params);\r\n  }\r\n  shouldParseAsyncArrow() {\r\n    return this.match(14) || super.shouldParseAsyncArrow();\r\n  }\r\n  canHaveLeadingDecorator() {\r\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\r\n  }\r\n  jsxParseOpeningElementAfterName(node) {\r\n    if (this.match(47) || this.match(51)) {\r\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());\r\n      if (typeArguments) node.typeParameters = typeArguments;\r\n    }\r\n    return super.jsxParseOpeningElementAfterName(node);\r\n  }\r\n  getGetterSetterExpectedParamCount(method) {\r\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\r\n    const params = this.getObjectOrClassMethodParams(method);\r\n    const firstParam = params[0];\r\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\r\n    return hasContextParam ? baseCount + 1 : baseCount;\r\n  }\r\n  parseCatchClauseParam() {\r\n    const param = super.parseCatchClauseParam();\r\n    const type = this.tsTryParseTypeAnnotation();\r\n    if (type) {\r\n      param.typeAnnotation = type;\r\n      this.resetEndLocation(param);\r\n    }\r\n    return param;\r\n  }\r\n  tsInAmbientContext(cb) {\r\n    const oldIsAmbientContext = this.state.isAmbientContext;\r\n    this.state.isAmbientContext = true;\r\n    try {\r\n      return cb();\r\n    } finally {\r\n      this.state.isAmbientContext = oldIsAmbientContext;\r\n    }\r\n  }\r\n  parseClass(node, isStatement, optionalId) {\r\n    const oldInAbstractClass = this.state.inAbstractClass;\r\n    this.state.inAbstractClass = !!node.abstract;\r\n    try {\r\n      return super.parseClass(node, isStatement, optionalId);\r\n    } finally {\r\n      this.state.inAbstractClass = oldInAbstractClass;\r\n    }\r\n  }\r\n  tsParseAbstractDeclaration(node, decorators) {\r\n    if (this.match(80)) {\r\n      node.abstract = true;\r\n      return this.maybeTakeDecorators(decorators, this.parseClass(node, true, false));\r\n    } else if (this.isContextual(127)) {\r\n      if (!this.hasFollowingLineBreak()) {\r\n        node.abstract = true;\r\n        this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\r\n          at: node\r\n        });\r\n        return this.tsParseInterfaceDeclaration(node);\r\n      }\r\n    } else {\r\n      this.unexpected(null, 80);\r\n    }\r\n  }\r\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope) {\r\n    const method = super.parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\r\n    if (method.abstract) {\r\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\r\n      if (hasBody) {\r\n        const {\r\n          key\r\n        } = method;\r\n        this.raise(TSErrors.AbstractMethodHasImplementation, {\r\n          at: method,\r\n          methodName: key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\r\n        });\r\n      }\r\n    }\r\n    return method;\r\n  }\r\n  tsParseTypeParameterName() {\r\n    const typeName = this.parseIdentifier();\r\n    return typeName.name;\r\n  }\r\n  shouldParseAsAmbientContext() {\r\n    return !!this.getPluginOption(\"typescript\", \"dts\");\r\n  }\r\n  parse() {\r\n    if (this.shouldParseAsAmbientContext()) {\r\n      this.state.isAmbientContext = true;\r\n    }\r\n    return super.parse();\r\n  }\r\n  getExpression() {\r\n    if (this.shouldParseAsAmbientContext()) {\r\n      this.state.isAmbientContext = true;\r\n    }\r\n    return super.getExpression();\r\n  }\r\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\r\n    if (!isString && isMaybeTypeOnly) {\r\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\r\n      return this.finishNode(node, \"ExportSpecifier\");\r\n    }\r\n    node.exportKind = \"value\";\r\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\r\n  }\r\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\r\n    if (!importedIsString && isMaybeTypeOnly) {\r\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\r\n      return this.finishNode(specifier, \"ImportSpecifier\");\r\n    }\r\n    specifier.importKind = \"value\";\r\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\r\n  }\r\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\r\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\r\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\r\n    let leftOfAs = node[leftOfAsKey];\r\n    let rightOfAs;\r\n    let hasTypeSpecifier = false;\r\n    let canParseAsKeyword = true;\r\n    const loc = leftOfAs.loc.start;\r\n    if (this.isContextual(93)) {\r\n      const firstAs = this.parseIdentifier();\r\n      if (this.isContextual(93)) {\r\n        const secondAs = this.parseIdentifier();\r\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\r\n          hasTypeSpecifier = true;\r\n          leftOfAs = firstAs;\r\n          rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\r\n          canParseAsKeyword = false;\r\n        } else {\r\n          rightOfAs = secondAs;\r\n          canParseAsKeyword = false;\r\n        }\r\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\r\n        canParseAsKeyword = false;\r\n        rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\r\n      } else {\r\n        hasTypeSpecifier = true;\r\n        leftOfAs = firstAs;\r\n      }\r\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\r\n      hasTypeSpecifier = true;\r\n      if (isImport) {\r\n        leftOfAs = this.parseIdentifier(true);\r\n        if (!this.isContextual(93)) {\r\n          this.checkReservedWord(leftOfAs.name, leftOfAs.loc.start, true, true);\r\n        }\r\n      } else {\r\n        leftOfAs = this.parseModuleExportName();\r\n      }\r\n    }\r\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\r\n      this.raise(isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports, {\r\n        at: loc\r\n      });\r\n    }\r\n    node[leftOfAsKey] = leftOfAs;\r\n    node[rightOfAsKey] = rightOfAs;\r\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\r\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\r\n    if (canParseAsKeyword && this.eatContextual(93)) {\r\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\r\n    }\r\n    if (!node[rightOfAsKey]) {\r\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\r\n    }\r\n    if (isImport) {\r\n      this.checkIdentifier(node[rightOfAsKey], hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\r\n    }\r\n  }\r\n};\r\nfunction isPossiblyLiteralEnum(expression) {\r\n  if (expression.type !== \"MemberExpression\") return false;\r\n  const {\r\n    computed,\r\n    property\r\n  } = expression;\r\n  if (computed && property.type !== \"StringLiteral\" && (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)) {\r\n    return false;\r\n  }\r\n  return isUncomputedMemberExpressionChain(expression.object);\r\n}\r\nfunction isValidAmbientConstInitializer(expression, estree) {\r\n  var _expression$extra;\r\n  const {\r\n    type\r\n  } = expression;\r\n  if ((_expression$extra = expression.extra) != null && _expression$extra.parenthesized) {\r\n    return false;\r\n  }\r\n  if (estree) {\r\n    if (type === \"Literal\") {\r\n      const {\r\n        value\r\n      } = expression;\r\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\r\n        return true;\r\n      }\r\n    }\r\n  } else {\r\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\r\n      return true;\r\n    }\r\n  }\r\n  if (isNumber$1(expression, estree) || isNegativeNumber(expression, estree)) {\r\n    return true;\r\n  }\r\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\r\n    return true;\r\n  }\r\n  if (isPossiblyLiteralEnum(expression)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction isNumber$1(expression, estree) {\r\n  if (estree) {\r\n    return expression.type === \"Literal\" && (typeof expression.value === \"number\" || \"bigint\" in expression);\r\n  } else {\r\n    return expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\";\r\n  }\r\n}\r\nfunction isNegativeNumber(expression, estree) {\r\n  if (expression.type === \"UnaryExpression\") {\r\n    const {\r\n      operator,\r\n      argument\r\n    } = expression;\r\n    if (operator === \"-\" && isNumber$1(argument, estree)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction isUncomputedMemberExpressionChain(expression) {\r\n  if (expression.type === \"Identifier\") return true;\r\n  if (expression.type !== \"MemberExpression\") return false;\r\n  if (expression.computed) return false;\r\n  return isUncomputedMemberExpressionChain(expression.object);\r\n}\r\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\r\n  ClassNameIsRequired: \"A class name is required.\",\r\n  UnexpectedSpace: \"Unexpected space in placeholder.\"\r\n});\r\nvar placeholders = superClass => class PlaceholdersParserMixin extends superClass {\r\n  parsePlaceholder(expectedNode) {\r\n    if (this.match(142)) {\r\n      const node = this.startNode();\r\n      this.next();\r\n      this.assertNoSpace();\r\n      node.name = super.parseIdentifier(true);\r\n      this.assertNoSpace();\r\n      this.expect(142);\r\n      return this.finishPlaceholder(node, expectedNode);\r\n    }\r\n  }\r\n  finishPlaceholder(node, expectedNode) {\r\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\r\n    node.expectedNode = expectedNode;\r\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\r\n  }\r\n  getTokenFromCode(code) {\r\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\r\n      this.finishOp(142, 2);\r\n    } else {\r\n      super.getTokenFromCode(code);\r\n    }\r\n  }\r\n  parseExprAtom(refExpressionErrors) {\r\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(refExpressionErrors);\r\n  }\r\n  parseIdentifier(liberal) {\r\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal);\r\n  }\r\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\r\n    if (word !== undefined) {\r\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\r\n    }\r\n  }\r\n  parseBindingAtom() {\r\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\r\n  }\r\n  isValidLVal(type, isParenthesized, binding) {\r\n    return type === \"Placeholder\" || super.isValidLVal(type, isParenthesized, binding);\r\n  }\r\n  toAssignable(node, isLHS) {\r\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\r\n      node.expectedNode = \"Pattern\";\r\n    } else {\r\n      super.toAssignable(node, isLHS);\r\n    }\r\n  }\r\n  chStartsBindingIdentifier(ch, pos) {\r\n    if (super.chStartsBindingIdentifier(ch, pos)) {\r\n      return true;\r\n    }\r\n    const nextToken = this.lookahead();\r\n    if (nextToken.type === 142) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  verifyBreakContinue(node, isBreak) {\r\n    if (node.label && node.label.type === \"Placeholder\") return;\r\n    super.verifyBreakContinue(node, isBreak);\r\n  }\r\n  parseExpressionStatement(node, expr) {\r\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\r\n      return super.parseExpressionStatement(node, expr);\r\n    }\r\n    if (this.match(14)) {\r\n      const stmt = node;\r\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\r\n      this.next();\r\n      stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\r\n      return this.finishNode(stmt, \"LabeledStatement\");\r\n    }\r\n    this.semicolon();\r\n    node.name = expr.name;\r\n    return this.finishPlaceholder(node, \"Statement\");\r\n  }\r\n  parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse) {\r\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse);\r\n  }\r\n  parseFunctionId(requireId) {\r\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId);\r\n  }\r\n  parseClass(node, isStatement, optionalId) {\r\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\r\n    this.next();\r\n    const oldStrict = this.state.strict;\r\n    const placeholder = this.parsePlaceholder(\"Identifier\");\r\n    if (placeholder) {\r\n      if (this.match(81) || this.match(142) || this.match(5)) {\r\n        node.id = placeholder;\r\n      } else if (optionalId || !isStatement) {\r\n        node.id = null;\r\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\r\n        return this.finishNode(node, type);\r\n      } else {\r\n        throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n    } else {\r\n      this.parseClassId(node, isStatement, optionalId);\r\n    }\r\n    super.parseClassSuper(node);\r\n    node.body = this.parsePlaceholder(\"ClassBody\") || super.parseClassBody(!!node.superClass, oldStrict);\r\n    return this.finishNode(node, type);\r\n  }\r\n  parseExport(node, decorators) {\r\n    const placeholder = this.parsePlaceholder(\"Identifier\");\r\n    if (!placeholder) return super.parseExport(node, decorators);\r\n    if (!this.isContextual(97) && !this.match(12)) {\r\n      node.specifiers = [];\r\n      node.source = null;\r\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\r\n      return this.finishNode(node, \"ExportNamedDeclaration\");\r\n    }\r\n    this.expectPlugin(\"exportDefaultFrom\");\r\n    const specifier = this.startNode();\r\n    specifier.exported = placeholder;\r\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\r\n    return super.parseExport(node, decorators);\r\n  }\r\n  isExportDefaultSpecifier() {\r\n    if (this.match(65)) {\r\n      const next = this.nextTokenStart();\r\n      if (this.isUnparsedContextual(next, \"from\")) {\r\n        if (this.input.startsWith(tokenLabelName(142), this.nextTokenStartSince(next + 4))) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return super.isExportDefaultSpecifier();\r\n  }\r\n  maybeParseExportDefaultSpecifier(node) {\r\n    if (node.specifiers && node.specifiers.length > 0) {\r\n      return true;\r\n    }\r\n    return super.maybeParseExportDefaultSpecifier(node);\r\n  }\r\n  checkExport(node) {\r\n    const {\r\n      specifiers\r\n    } = node;\r\n    if (specifiers != null && specifiers.length) {\r\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\r\n    }\r\n    super.checkExport(node);\r\n    node.specifiers = specifiers;\r\n  }\r\n  parseImport(node) {\r\n    const placeholder = this.parsePlaceholder(\"Identifier\");\r\n    if (!placeholder) return super.parseImport(node);\r\n    node.specifiers = [];\r\n    if (!this.isContextual(97) && !this.match(12)) {\r\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\r\n      this.semicolon();\r\n      return this.finishNode(node, \"ImportDeclaration\");\r\n    }\r\n    const specifier = this.startNodeAtNode(placeholder);\r\n    specifier.local = placeholder;\r\n    node.specifiers.push(this.finishNode(specifier, \"ImportDefaultSpecifier\"));\r\n    if (this.eat(12)) {\r\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\r\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\r\n    }\r\n    this.expectContextual(97);\r\n    node.source = this.parseImportSource();\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ImportDeclaration\");\r\n  }\r\n  parseImportSource() {\r\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource();\r\n  }\r\n  assertNoSpace() {\r\n    if (this.state.start > this.state.lastTokEndLoc.index) {\r\n      this.raise(PlaceholderErrors.UnexpectedSpace, {\r\n        at: this.state.lastTokEndLoc\r\n      });\r\n    }\r\n  }\r\n};\r\nvar v8intrinsic = superClass => class V8IntrinsicMixin extends superClass {\r\n  parseV8Intrinsic() {\r\n    if (this.match(54)) {\r\n      const v8IntrinsicStartLoc = this.state.startLoc;\r\n      const node = this.startNode();\r\n      this.next();\r\n      if (tokenIsIdentifier(this.state.type)) {\r\n        const name = this.parseIdentifierName();\r\n        const identifier = this.createIdentifier(node, name);\r\n        identifier.type = \"V8IntrinsicIdentifier\";\r\n        if (this.match(10)) {\r\n          return identifier;\r\n        }\r\n      }\r\n      this.unexpected(v8IntrinsicStartLoc);\r\n    }\r\n  }\r\n  parseExprAtom(refExpressionErrors) {\r\n    return this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors);\r\n  }\r\n};\r\nfunction hasPlugin(plugins, expectedConfig) {\r\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\r\n  const expectedKeys = Object.keys(expectedOptions);\r\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\r\n  return plugins.some(p => {\r\n    if (typeof p === \"string\") {\r\n      return expectedOptionsIsEmpty && p === expectedName;\r\n    } else {\r\n      const [pluginName, pluginOptions] = p;\r\n      if (pluginName !== expectedName) {\r\n        return false;\r\n      }\r\n      for (const key of expectedKeys) {\r\n        if (pluginOptions[key] !== expectedOptions[key]) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  });\r\n}\r\nfunction getPluginOption(plugins, name, option) {\r\n  const plugin = plugins.find(plugin => {\r\n    if (Array.isArray(plugin)) {\r\n      return plugin[0] === name;\r\n    } else {\r\n      return plugin === name;\r\n    }\r\n  });\r\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\r\n    return plugin[1][option];\r\n  }\r\n  return null;\r\n}\r\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\r\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\r\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\r\nfunction validatePlugins(plugins) {\r\n  if (hasPlugin(plugins, \"decorators\")) {\r\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\r\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\r\n    }\r\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\r\n    if (decoratorsBeforeExport != null && typeof decoratorsBeforeExport !== \"boolean\") {\r\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean, if specified.\");\r\n    }\r\n    const allowCallParenthesized = getPluginOption(plugins, \"decorators\", \"allowCallParenthesized\");\r\n    if (allowCallParenthesized != null && typeof allowCallParenthesized !== \"boolean\") {\r\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\r\n    }\r\n  }\r\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\r\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\r\n  }\r\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\r\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\r\n  }\r\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\r\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\r\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\r\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\r\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\r\n    }\r\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\r\n      syntaxType: \"hash\"\r\n    }]);\r\n    if (proposal === \"hack\") {\r\n      if (hasPlugin(plugins, \"placeholders\")) {\r\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\r\n      }\r\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\r\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\r\n      }\r\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\r\n      if (!TOPIC_TOKENS.includes(topicToken)) {\r\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\r\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\r\n      }\r\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\r\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\r\n      }\r\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\r\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\r\n    }\r\n  }\r\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\r\n    {\r\n      if (hasPlugin(plugins, \"importAssertions\")) {\r\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\r\n      }\r\n      const moduleAttributesVersionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\r\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\r\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\r\n      }\r\n    }\r\n  }\r\n  if (hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\r\n    throw new Error(\"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\r\n  }\r\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\r\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\r\n    error.missingPlugins = \"doExpressions\";\r\n    throw error;\r\n  }\r\n}\r\nconst mixinPlugins = {\r\n  estree,\r\n  jsx,\r\n  flow,\r\n  typescript,\r\n  v8intrinsic,\r\n  placeholders\r\n};\r\nconst mixinPluginNames = Object.keys(mixinPlugins);\r\nclass ExpressionParser extends LValParser {\r\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\r\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\r\n      return;\r\n    }\r\n    const key = prop.key;\r\n    const name = key.type === \"Identifier\" ? key.name : key.value;\r\n    if (name === \"__proto__\") {\r\n      if (isRecord) {\r\n        this.raise(Errors.RecordNoProto, {\r\n          at: key\r\n        });\r\n        return;\r\n      }\r\n      if (protoRef.used) {\r\n        if (refExpressionErrors) {\r\n          if (refExpressionErrors.doubleProtoLoc === null) {\r\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\r\n          }\r\n        } else {\r\n          this.raise(Errors.DuplicateProto, {\r\n            at: key\r\n          });\r\n        }\r\n      }\r\n      protoRef.used = true;\r\n    }\r\n  }\r\n  shouldExitDescending(expr, potentialArrowAt) {\r\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\r\n  }\r\n  getExpression() {\r\n    this.enterInitialScopes();\r\n    this.nextToken();\r\n    const expr = this.parseExpression();\r\n    if (!this.match(137)) {\r\n      this.unexpected();\r\n    }\r\n    this.finalizeRemainingComments();\r\n    expr.comments = this.state.comments;\r\n    expr.errors = this.state.errors;\r\n    if (this.options.tokens) {\r\n      expr.tokens = this.tokens;\r\n    }\r\n    return expr;\r\n  }\r\n  parseExpression(disallowIn, refExpressionErrors) {\r\n    if (disallowIn) {\r\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\r\n    }\r\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\r\n  }\r\n  parseExpressionBase(refExpressionErrors) {\r\n    const startLoc = this.state.startLoc;\r\n    const expr = this.parseMaybeAssign(refExpressionErrors);\r\n    if (this.match(12)) {\r\n      const node = this.startNodeAt(startLoc);\r\n      node.expressions = [expr];\r\n      while (this.eat(12)) {\r\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\r\n      }\r\n      this.toReferencedList(node.expressions);\r\n      return this.finishNode(node, \"SequenceExpression\");\r\n    }\r\n    return expr;\r\n  }\r\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\r\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\r\n  }\r\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\r\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\r\n  }\r\n  setOptionalParametersError(refExpressionErrors, resultError) {\r\n    var _resultError$loc;\r\n    refExpressionErrors.optionalParametersLoc = (_resultError$loc = resultError == null ? void 0 : resultError.loc) != null ? _resultError$loc : this.state.startLoc;\r\n  }\r\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\r\n    const startLoc = this.state.startLoc;\r\n    if (this.isContextual(106)) {\r\n      if (this.prodParam.hasYield) {\r\n        let left = this.parseYield();\r\n        if (afterLeftParse) {\r\n          left = afterLeftParse.call(this, left, startLoc);\r\n        }\r\n        return left;\r\n      }\r\n    }\r\n    let ownExpressionErrors;\r\n    if (refExpressionErrors) {\r\n      ownExpressionErrors = false;\r\n    } else {\r\n      refExpressionErrors = new ExpressionErrors();\r\n      ownExpressionErrors = true;\r\n    }\r\n    const {\r\n      type\r\n    } = this.state;\r\n    if (type === 10 || tokenIsIdentifier(type)) {\r\n      this.state.potentialArrowAt = this.state.start;\r\n    }\r\n    let left = this.parseMaybeConditional(refExpressionErrors);\r\n    if (afterLeftParse) {\r\n      left = afterLeftParse.call(this, left, startLoc);\r\n    }\r\n    if (tokenIsAssignment(this.state.type)) {\r\n      const node = this.startNodeAt(startLoc);\r\n      const operator = this.state.value;\r\n      node.operator = operator;\r\n      if (this.match(29)) {\r\n        this.toAssignable(left, true);\r\n        node.left = left;\r\n        const startIndex = startLoc.index;\r\n        if (refExpressionErrors.doubleProtoLoc != null && refExpressionErrors.doubleProtoLoc.index >= startIndex) {\r\n          refExpressionErrors.doubleProtoLoc = null;\r\n        }\r\n        if (refExpressionErrors.shorthandAssignLoc != null && refExpressionErrors.shorthandAssignLoc.index >= startIndex) {\r\n          refExpressionErrors.shorthandAssignLoc = null;\r\n        }\r\n        if (refExpressionErrors.privateKeyLoc != null && refExpressionErrors.privateKeyLoc.index >= startIndex) {\r\n          this.checkDestructuringPrivate(refExpressionErrors);\r\n          refExpressionErrors.privateKeyLoc = null;\r\n        }\r\n      } else {\r\n        node.left = left;\r\n      }\r\n      this.next();\r\n      node.right = this.parseMaybeAssign();\r\n      this.checkLVal(left, {\r\n        in: this.finishNode(node, \"AssignmentExpression\")\r\n      });\r\n      return node;\r\n    } else if (ownExpressionErrors) {\r\n      this.checkExpressionErrors(refExpressionErrors, true);\r\n    }\r\n    return left;\r\n  }\r\n  parseMaybeConditional(refExpressionErrors) {\r\n    const startLoc = this.state.startLoc;\r\n    const potentialArrowAt = this.state.potentialArrowAt;\r\n    const expr = this.parseExprOps(refExpressionErrors);\r\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\r\n      return expr;\r\n    }\r\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\r\n  }\r\n  parseConditional(expr, startLoc, refExpressionErrors) {\r\n    if (this.eat(17)) {\r\n      const node = this.startNodeAt(startLoc);\r\n      node.test = expr;\r\n      node.consequent = this.parseMaybeAssignAllowIn();\r\n      this.expect(14);\r\n      node.alternate = this.parseMaybeAssign();\r\n      return this.finishNode(node, \"ConditionalExpression\");\r\n    }\r\n    return expr;\r\n  }\r\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\r\n    return this.match(136) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\r\n  }\r\n  parseExprOps(refExpressionErrors) {\r\n    const startLoc = this.state.startLoc;\r\n    const potentialArrowAt = this.state.potentialArrowAt;\r\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\r\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\r\n      return expr;\r\n    }\r\n    return this.parseExprOp(expr, startLoc, -1);\r\n  }\r\n  parseExprOp(left, leftStartLoc, minPrec) {\r\n    if (this.isPrivateName(left)) {\r\n      const value = this.getPrivateNameSV(left);\r\n      if (minPrec >= tokenOperatorPrecedence(58) || !this.prodParam.hasIn || !this.match(58)) {\r\n        this.raise(Errors.PrivateInExpectedIn, {\r\n          at: left,\r\n          identifierName: value\r\n        });\r\n      }\r\n      this.classScope.usePrivateName(value, left.loc.start);\r\n    }\r\n    const op = this.state.type;\r\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(58))) {\r\n      let prec = tokenOperatorPrecedence(op);\r\n      if (prec > minPrec) {\r\n        if (op === 39) {\r\n          this.expectPlugin(\"pipelineOperator\");\r\n          if (this.state.inFSharpPipelineDirectBody) {\r\n            return left;\r\n          }\r\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\r\n        }\r\n        const node = this.startNodeAt(leftStartLoc);\r\n        node.left = left;\r\n        node.operator = this.state.value;\r\n        const logical = op === 41 || op === 42;\r\n        const coalesce = op === 40;\r\n        if (coalesce) {\r\n          prec = tokenOperatorPrecedence(42);\r\n        }\r\n        this.next();\r\n        if (op === 39 && this.hasPlugin([\"pipelineOperator\", {\r\n          proposal: \"minimal\"\r\n        }])) {\r\n          if (this.state.type === 96 && this.prodParam.hasAwait) {\r\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\r\n              at: this.state.startLoc\r\n            });\r\n          }\r\n        }\r\n        node.right = this.parseExprOpRightExpr(op, prec);\r\n        const finishedNode = this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\r\n        const nextOp = this.state.type;\r\n        if (coalesce && (nextOp === 41 || nextOp === 42) || logical && nextOp === 40) {\r\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\r\n            at: this.state.startLoc\r\n          });\r\n        }\r\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\r\n      }\r\n    }\r\n    return left;\r\n  }\r\n  parseExprOpRightExpr(op, prec) {\r\n    const startLoc = this.state.startLoc;\r\n    switch (op) {\r\n      case 39:\r\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\r\n          case \"hack\":\r\n            return this.withTopicBindingContext(() => {\r\n              return this.parseHackPipeBody();\r\n            });\r\n          case \"smart\":\r\n            return this.withTopicBindingContext(() => {\r\n              if (this.prodParam.hasYield && this.isContextual(106)) {\r\n                throw this.raise(Errors.PipeBodyIsTighter, {\r\n                  at: this.state.startLoc\r\n                });\r\n              }\r\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startLoc);\r\n            });\r\n          case \"fsharp\":\r\n            return this.withSoloAwaitPermittingContext(() => {\r\n              return this.parseFSharpPipelineBody(prec);\r\n            });\r\n        }\r\n      default:\r\n        return this.parseExprOpBaseRightExpr(op, prec);\r\n    }\r\n  }\r\n  parseExprOpBaseRightExpr(op, prec) {\r\n    const startLoc = this.state.startLoc;\r\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\r\n  }\r\n  parseHackPipeBody() {\r\n    var _body$extra;\r\n    const {\r\n      startLoc\r\n    } = this.state;\r\n    const body = this.parseMaybeAssign();\r\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(body.type);\r\n    if (requiredParentheses && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\r\n      this.raise(Errors.PipeUnparenthesizedBody, {\r\n        at: startLoc,\r\n        type: body.type\r\n      });\r\n    }\r\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\r\n      this.raise(Errors.PipeTopicUnused, {\r\n        at: startLoc\r\n      });\r\n    }\r\n    return body;\r\n  }\r\n  checkExponentialAfterUnary(node) {\r\n    if (this.match(57)) {\r\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\r\n        at: node.argument\r\n      });\r\n    }\r\n  }\r\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\r\n    const startLoc = this.state.startLoc;\r\n    const isAwait = this.isContextual(96);\r\n    if (isAwait && this.isAwaitAllowed()) {\r\n      this.next();\r\n      const expr = this.parseAwait(startLoc);\r\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\r\n      return expr;\r\n    }\r\n    const update = this.match(34);\r\n    const node = this.startNode();\r\n    if (tokenIsPrefix(this.state.type)) {\r\n      node.operator = this.state.value;\r\n      node.prefix = true;\r\n      if (this.match(72)) {\r\n        this.expectPlugin(\"throwExpressions\");\r\n      }\r\n      const isDelete = this.match(89);\r\n      this.next();\r\n      node.argument = this.parseMaybeUnary(null, true);\r\n      this.checkExpressionErrors(refExpressionErrors, true);\r\n      if (this.state.strict && isDelete) {\r\n        const arg = node.argument;\r\n        if (arg.type === \"Identifier\") {\r\n          this.raise(Errors.StrictDelete, {\r\n            at: node\r\n          });\r\n        } else if (this.hasPropertyAsPrivateName(arg)) {\r\n          this.raise(Errors.DeletePrivateField, {\r\n            at: node\r\n          });\r\n        }\r\n      }\r\n      if (!update) {\r\n        if (!sawUnary) {\r\n          this.checkExponentialAfterUnary(node);\r\n        }\r\n        return this.finishNode(node, \"UnaryExpression\");\r\n      }\r\n    }\r\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\r\n    if (isAwait) {\r\n      const {\r\n        type\r\n      } = this.state;\r\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(54);\r\n      if (startsExpr && !this.isAmbiguousAwait()) {\r\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, {\r\n          at: startLoc\r\n        });\r\n        return this.parseAwait(startLoc);\r\n      }\r\n    }\r\n    return expr;\r\n  }\r\n  parseUpdate(node, update, refExpressionErrors) {\r\n    if (update) {\r\n      const updateExpressionNode = node;\r\n      this.checkLVal(updateExpressionNode.argument, {\r\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\")\r\n      });\r\n      return node;\r\n    }\r\n    const startLoc = this.state.startLoc;\r\n    let expr = this.parseExprSubscripts(refExpressionErrors);\r\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\r\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\r\n      const node = this.startNodeAt(startLoc);\r\n      node.operator = this.state.value;\r\n      node.prefix = false;\r\n      node.argument = expr;\r\n      this.next();\r\n      this.checkLVal(expr, {\r\n        in: expr = this.finishNode(node, \"UpdateExpression\")\r\n      });\r\n    }\r\n    return expr;\r\n  }\r\n  parseExprSubscripts(refExpressionErrors) {\r\n    const startLoc = this.state.startLoc;\r\n    const potentialArrowAt = this.state.potentialArrowAt;\r\n    const expr = this.parseExprAtom(refExpressionErrors);\r\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\r\n      return expr;\r\n    }\r\n    return this.parseSubscripts(expr, startLoc);\r\n  }\r\n  parseSubscripts(base, startLoc, noCalls) {\r\n    const state = {\r\n      optionalChainMember: false,\r\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\r\n      stop: false\r\n    };\r\n    do {\r\n      base = this.parseSubscript(base, startLoc, noCalls, state);\r\n      state.maybeAsyncArrow = false;\r\n    } while (!state.stop);\r\n    return base;\r\n  }\r\n  parseSubscript(base, startLoc, noCalls, state) {\r\n    const {\r\n      type\r\n    } = this.state;\r\n    if (!noCalls && type === 15) {\r\n      return this.parseBind(base, startLoc, noCalls, state);\r\n    } else if (tokenIsTemplate(type)) {\r\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\r\n    }\r\n    let optional = false;\r\n    if (type === 18) {\r\n      if (noCalls) {\r\n        this.raise(Errors.OptionalChainingNoNew, {\r\n          at: this.state.startLoc\r\n        });\r\n        if (this.lookaheadCharCode() === 40) {\r\n          state.stop = true;\r\n          return base;\r\n        }\r\n      }\r\n      state.optionalChainMember = optional = true;\r\n      this.next();\r\n    }\r\n    if (!noCalls && this.match(10)) {\r\n      return this.parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional);\r\n    } else {\r\n      const computed = this.eat(0);\r\n      if (computed || optional || this.eat(16)) {\r\n        return this.parseMember(base, startLoc, state, computed, optional);\r\n      } else {\r\n        state.stop = true;\r\n        return base;\r\n      }\r\n    }\r\n  }\r\n  parseMember(base, startLoc, state, computed, optional) {\r\n    const node = this.startNodeAt(startLoc);\r\n    node.object = base;\r\n    node.computed = computed;\r\n    if (computed) {\r\n      node.property = this.parseExpression();\r\n      this.expect(3);\r\n    } else if (this.match(136)) {\r\n      if (base.type === \"Super\") {\r\n        this.raise(Errors.SuperPrivateField, {\r\n          at: startLoc\r\n        });\r\n      }\r\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\r\n      node.property = this.parsePrivateName();\r\n    } else {\r\n      node.property = this.parseIdentifier(true);\r\n    }\r\n    if (state.optionalChainMember) {\r\n      node.optional = optional;\r\n      return this.finishNode(node, \"OptionalMemberExpression\");\r\n    } else {\r\n      return this.finishNode(node, \"MemberExpression\");\r\n    }\r\n  }\r\n  parseBind(base, startLoc, noCalls, state) {\r\n    const node = this.startNodeAt(startLoc);\r\n    node.object = base;\r\n    this.next();\r\n    node.callee = this.parseNoCallExpr();\r\n    state.stop = true;\r\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startLoc, noCalls);\r\n  }\r\n  parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional) {\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n    let refExpressionErrors = null;\r\n    this.state.maybeInArrowParameters = true;\r\n    this.next();\r\n    const node = this.startNodeAt(startLoc);\r\n    node.callee = base;\r\n    const {\r\n      maybeAsyncArrow,\r\n      optionalChainMember\r\n    } = state;\r\n    if (maybeAsyncArrow) {\r\n      this.expressionScope.enter(newAsyncArrowScope());\r\n      refExpressionErrors = new ExpressionErrors();\r\n    }\r\n    if (optionalChainMember) {\r\n      node.optional = optional;\r\n    }\r\n    if (optional) {\r\n      node.arguments = this.parseCallExpressionArguments(11);\r\n    } else {\r\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\r\n    }\r\n    let finishedNode = this.finishCallExpression(node, optionalChainMember);\r\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\r\n      state.stop = true;\r\n      this.checkDestructuringPrivate(refExpressionErrors);\r\n      this.expressionScope.validateAsPattern();\r\n      this.expressionScope.exit();\r\n      finishedNode = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc), finishedNode);\r\n    } else {\r\n      if (maybeAsyncArrow) {\r\n        this.checkExpressionErrors(refExpressionErrors, true);\r\n        this.expressionScope.exit();\r\n      }\r\n      this.toReferencedArguments(finishedNode);\r\n    }\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n    return finishedNode;\r\n  }\r\n  toReferencedArguments(node, isParenthesizedExpr) {\r\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\r\n  }\r\n  parseTaggedTemplateExpression(base, startLoc, state) {\r\n    const node = this.startNodeAt(startLoc);\r\n    node.tag = base;\r\n    node.quasi = this.parseTemplate(true);\r\n    if (state.optionalChainMember) {\r\n      this.raise(Errors.OptionalChainingNoTemplate, {\r\n        at: startLoc\r\n      });\r\n    }\r\n    return this.finishNode(node, \"TaggedTemplateExpression\");\r\n  }\r\n  atPossibleAsyncArrow(base) {\r\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEndLoc.index === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\r\n  }\r\n  finishCallExpression(node, optional) {\r\n    if (node.callee.type === \"Import\") {\r\n      if (node.arguments.length === 2) {\r\n        {\r\n          if (!this.hasPlugin(\"moduleAttributes\")) {\r\n            this.expectPlugin(\"importAssertions\");\r\n          }\r\n        }\r\n      }\r\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\r\n        this.raise(Errors.ImportCallArity, {\r\n          at: node,\r\n          maxArgumentCount: this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? 2 : 1\r\n        });\r\n      } else {\r\n        for (const arg of node.arguments) {\r\n          if (arg.type === \"SpreadElement\") {\r\n            this.raise(Errors.ImportCallSpreadArgument, {\r\n              at: arg\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\r\n  }\r\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\r\n    const elts = [];\r\n    let first = true;\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.inFSharpPipelineDirectBody = false;\r\n    while (!this.eat(close)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n        if (this.match(close)) {\r\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\r\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\r\n              at: this.state.lastTokStartLoc\r\n            });\r\n          }\r\n          if (nodeForExtra) {\r\n            this.addTrailingCommaExtraToNode(nodeForExtra);\r\n          }\r\n          this.next();\r\n          break;\r\n        }\r\n      }\r\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\r\n    }\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    return elts;\r\n  }\r\n  shouldParseAsyncArrow() {\r\n    return this.match(19) && !this.canInsertSemicolon();\r\n  }\r\n  parseAsyncArrowFromCallExpression(node, call) {\r\n    var _call$extra;\r\n    this.resetPreviousNodeTrailingComments(call);\r\n    this.expect(19);\r\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingCommaLoc);\r\n    if (call.innerComments) {\r\n      setInnerComments(node, call.innerComments);\r\n    }\r\n    if (call.callee.trailingComments) {\r\n      setInnerComments(node, call.callee.trailingComments);\r\n    }\r\n    return node;\r\n  }\r\n  parseNoCallExpr() {\r\n    const startLoc = this.state.startLoc;\r\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\r\n  }\r\n  parseExprAtom(refExpressionErrors) {\r\n    let node;\r\n    let decorators = null;\r\n    const {\r\n      type\r\n    } = this.state;\r\n    switch (type) {\r\n      case 79:\r\n        return this.parseSuper();\r\n      case 83:\r\n        node = this.startNode();\r\n        this.next();\r\n        if (this.match(16)) {\r\n          return this.parseImportMetaProperty(node);\r\n        }\r\n        if (!this.match(10)) {\r\n          this.raise(Errors.UnsupportedImport, {\r\n            at: this.state.lastTokStartLoc\r\n          });\r\n        }\r\n        return this.finishNode(node, \"Import\");\r\n      case 78:\r\n        node = this.startNode();\r\n        this.next();\r\n        return this.finishNode(node, \"ThisExpression\");\r\n      case 90:\r\n        {\r\n          return this.parseDo(this.startNode(), false);\r\n        }\r\n      case 56:\r\n      case 31:\r\n        {\r\n          this.readRegexp();\r\n          return this.parseRegExpLiteral(this.state.value);\r\n        }\r\n      case 132:\r\n        return this.parseNumericLiteral(this.state.value);\r\n      case 133:\r\n        return this.parseBigIntLiteral(this.state.value);\r\n      case 134:\r\n        return this.parseDecimalLiteral(this.state.value);\r\n      case 131:\r\n        return this.parseStringLiteral(this.state.value);\r\n      case 84:\r\n        return this.parseNullLiteral();\r\n      case 85:\r\n        return this.parseBooleanLiteral(true);\r\n      case 86:\r\n        return this.parseBooleanLiteral(false);\r\n      case 10:\r\n        {\r\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\r\n          return this.parseParenAndDistinguishExpression(canBeArrow);\r\n        }\r\n      case 2:\r\n      case 1:\r\n        {\r\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\r\n        }\r\n      case 0:\r\n        {\r\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\r\n        }\r\n      case 6:\r\n      case 7:\r\n        {\r\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\r\n        }\r\n      case 5:\r\n        {\r\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\r\n        }\r\n      case 68:\r\n        return this.parseFunctionOrFunctionSent();\r\n      case 26:\r\n        decorators = this.parseDecorators();\r\n      case 80:\r\n        return this.parseClass(this.maybeTakeDecorators(decorators, this.startNode()), false);\r\n      case 77:\r\n        return this.parseNewOrNewTarget();\r\n      case 25:\r\n      case 24:\r\n        return this.parseTemplate(false);\r\n      case 15:\r\n        {\r\n          node = this.startNode();\r\n          this.next();\r\n          node.object = null;\r\n          const callee = node.callee = this.parseNoCallExpr();\r\n          if (callee.type === \"MemberExpression\") {\r\n            return this.finishNode(node, \"BindExpression\");\r\n          } else {\r\n            throw this.raise(Errors.UnsupportedBind, {\r\n              at: callee\r\n            });\r\n          }\r\n        }\r\n      case 136:\r\n        {\r\n          this.raise(Errors.PrivateInExpectedIn, {\r\n            at: this.state.startLoc,\r\n            identifierName: this.state.value\r\n          });\r\n          return this.parsePrivateName();\r\n        }\r\n      case 33:\r\n        {\r\n          return this.parseTopicReferenceThenEqualsSign(54, \"%\");\r\n        }\r\n      case 32:\r\n        {\r\n          return this.parseTopicReferenceThenEqualsSign(44, \"^\");\r\n        }\r\n      case 37:\r\n      case 38:\r\n        {\r\n          return this.parseTopicReference(\"hack\");\r\n        }\r\n      case 44:\r\n      case 54:\r\n      case 27:\r\n        {\r\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\r\n          if (pipeProposal) {\r\n            return this.parseTopicReference(pipeProposal);\r\n          }\r\n          this.unexpected();\r\n          break;\r\n        }\r\n      case 47:\r\n        {\r\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\r\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\r\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\r\n          } else {\r\n            this.unexpected();\r\n          }\r\n          break;\r\n        }\r\n      default:\r\n        if (tokenIsIdentifier(type)) {\r\n          if (this.isContextual(125) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\r\n            return this.parseModuleExpression();\r\n          }\r\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\r\n          const containsEsc = this.state.containsEsc;\r\n          const id = this.parseIdentifier();\r\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\r\n            const {\r\n              type\r\n            } = this.state;\r\n            if (type === 68) {\r\n              this.resetPreviousNodeTrailingComments(id);\r\n              this.next();\r\n              return this.parseAsyncFunctionExpression(this.startNodeAtNode(id));\r\n            } else if (tokenIsIdentifier(type)) {\r\n              if (this.lookaheadCharCode() === 61) {\r\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\r\n              } else {\r\n                return id;\r\n              }\r\n            } else if (type === 90) {\r\n              this.resetPreviousNodeTrailingComments(id);\r\n              return this.parseDo(this.startNodeAtNode(id), true);\r\n            }\r\n          }\r\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\r\n            this.next();\r\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\r\n          }\r\n          return id;\r\n        } else {\r\n          this.unexpected();\r\n        }\r\n    }\r\n  }\r\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\r\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\r\n    if (pipeProposal) {\r\n      this.state.type = topicTokenType;\r\n      this.state.value = topicTokenValue;\r\n      this.state.pos--;\r\n      this.state.end--;\r\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\r\n      return this.parseTopicReference(pipeProposal);\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n  }\r\n  parseTopicReference(pipeProposal) {\r\n    const node = this.startNode();\r\n    const startLoc = this.state.startLoc;\r\n    const tokenType = this.state.type;\r\n    this.next();\r\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\r\n  }\r\n  finishTopicReference(node, startLoc, pipeProposal, tokenType) {\r\n    if (this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)) {\r\n      const nodeType = pipeProposal === \"smart\" ? \"PipelinePrimaryTopicReference\" : \"TopicReference\";\r\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\r\n        this.raise(pipeProposal === \"smart\" ? Errors.PrimaryTopicNotAllowed : Errors.PipeTopicUnbound, {\r\n          at: startLoc\r\n        });\r\n      }\r\n      this.registerTopicReference();\r\n      return this.finishNode(node, nodeType);\r\n    } else {\r\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\r\n        at: startLoc,\r\n        token: tokenLabelName(tokenType)\r\n      });\r\n    }\r\n  }\r\n  testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType) {\r\n    switch (pipeProposal) {\r\n      case \"hack\":\r\n        {\r\n          return this.hasPlugin([\"pipelineOperator\", {\r\n            topicToken: tokenLabelName(tokenType)\r\n          }]);\r\n        }\r\n      case \"smart\":\r\n        return tokenType === 27;\r\n      default:\r\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, {\r\n          at: startLoc\r\n        });\r\n    }\r\n  }\r\n  parseAsyncArrowUnaryFunction(node) {\r\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\r\n    const params = [this.parseIdentifier()];\r\n    this.prodParam.exit();\r\n    if (this.hasPrecedingLineBreak()) {\r\n      this.raise(Errors.LineTerminatorBeforeArrow, {\r\n        at: this.state.curPosition()\r\n      });\r\n    }\r\n    this.expect(19);\r\n    return this.parseArrowExpression(node, params, true);\r\n  }\r\n  parseDo(node, isAsync) {\r\n    this.expectPlugin(\"doExpressions\");\r\n    if (isAsync) {\r\n      this.expectPlugin(\"asyncDoExpressions\");\r\n    }\r\n    node.async = isAsync;\r\n    this.next();\r\n    const oldLabels = this.state.labels;\r\n    this.state.labels = [];\r\n    if (isAsync) {\r\n      this.prodParam.enter(PARAM_AWAIT);\r\n      node.body = this.parseBlock();\r\n      this.prodParam.exit();\r\n    } else {\r\n      node.body = this.parseBlock();\r\n    }\r\n    this.state.labels = oldLabels;\r\n    return this.finishNode(node, \"DoExpression\");\r\n  }\r\n  parseSuper() {\r\n    const node = this.startNode();\r\n    this.next();\r\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\r\n      this.raise(Errors.SuperNotAllowed, {\r\n        at: node\r\n      });\r\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\r\n      this.raise(Errors.UnexpectedSuper, {\r\n        at: node\r\n      });\r\n    }\r\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\r\n      this.raise(Errors.UnsupportedSuper, {\r\n        at: node\r\n      });\r\n    }\r\n    return this.finishNode(node, \"Super\");\r\n  }\r\n  parsePrivateName() {\r\n    const node = this.startNode();\r\n    const id = this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc, 1));\r\n    const name = this.state.value;\r\n    this.next();\r\n    node.id = this.createIdentifier(id, name);\r\n    return this.finishNode(node, \"PrivateName\");\r\n  }\r\n  parseFunctionOrFunctionSent() {\r\n    const node = this.startNode();\r\n    this.next();\r\n    if (this.prodParam.hasYield && this.match(16)) {\r\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\r\n      this.next();\r\n      if (this.match(102)) {\r\n        this.expectPlugin(\"functionSent\");\r\n      } else if (!this.hasPlugin(\"functionSent\")) {\r\n        this.unexpected();\r\n      }\r\n      return this.parseMetaProperty(node, meta, \"sent\");\r\n    }\r\n    return this.parseFunction(node);\r\n  }\r\n  parseMetaProperty(node, meta, propertyName) {\r\n    node.meta = meta;\r\n    const containsEsc = this.state.containsEsc;\r\n    node.property = this.parseIdentifier(true);\r\n    if (node.property.name !== propertyName || containsEsc) {\r\n      this.raise(Errors.UnsupportedMetaProperty, {\r\n        at: node.property,\r\n        target: meta.name,\r\n        onlyValidPropertyName: propertyName\r\n      });\r\n    }\r\n    return this.finishNode(node, \"MetaProperty\");\r\n  }\r\n  parseImportMetaProperty(node) {\r\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\r\n    this.next();\r\n    if (this.isContextual(100)) {\r\n      if (!this.inModule) {\r\n        this.raise(Errors.ImportMetaOutsideModule, {\r\n          at: id\r\n        });\r\n      }\r\n      this.sawUnambiguousESM = true;\r\n    }\r\n    return this.parseMetaProperty(node, id, \"meta\");\r\n  }\r\n  parseLiteralAtNode(value, type, node) {\r\n    this.addExtra(node, \"rawValue\", value);\r\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\r\n    node.value = value;\r\n    this.next();\r\n    return this.finishNode(node, type);\r\n  }\r\n  parseLiteral(value, type) {\r\n    const node = this.startNode();\r\n    return this.parseLiteralAtNode(value, type, node);\r\n  }\r\n  parseStringLiteral(value) {\r\n    return this.parseLiteral(value, \"StringLiteral\");\r\n  }\r\n  parseNumericLiteral(value) {\r\n    return this.parseLiteral(value, \"NumericLiteral\");\r\n  }\r\n  parseBigIntLiteral(value) {\r\n    return this.parseLiteral(value, \"BigIntLiteral\");\r\n  }\r\n  parseDecimalLiteral(value) {\r\n    return this.parseLiteral(value, \"DecimalLiteral\");\r\n  }\r\n  parseRegExpLiteral(value) {\r\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\r\n    node.pattern = value.pattern;\r\n    node.flags = value.flags;\r\n    return node;\r\n  }\r\n  parseBooleanLiteral(value) {\r\n    const node = this.startNode();\r\n    node.value = value;\r\n    this.next();\r\n    return this.finishNode(node, \"BooleanLiteral\");\r\n  }\r\n  parseNullLiteral() {\r\n    const node = this.startNode();\r\n    this.next();\r\n    return this.finishNode(node, \"NullLiteral\");\r\n  }\r\n  parseParenAndDistinguishExpression(canBeArrow) {\r\n    const startLoc = this.state.startLoc;\r\n    let val;\r\n    this.next();\r\n    this.expressionScope.enter(newArrowHeadScope());\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.maybeInArrowParameters = true;\r\n    this.state.inFSharpPipelineDirectBody = false;\r\n    const innerStartLoc = this.state.startLoc;\r\n    const exprList = [];\r\n    const refExpressionErrors = new ExpressionErrors();\r\n    let first = true;\r\n    let spreadStartLoc;\r\n    let optionalCommaStartLoc;\r\n    while (!this.match(11)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12, refExpressionErrors.optionalParametersLoc === null ? null : refExpressionErrors.optionalParametersLoc);\r\n        if (this.match(11)) {\r\n          optionalCommaStartLoc = this.state.startLoc;\r\n          break;\r\n        }\r\n      }\r\n      if (this.match(21)) {\r\n        const spreadNodeStartLoc = this.state.startLoc;\r\n        spreadStartLoc = this.state.startLoc;\r\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc));\r\n        if (!this.checkCommaAfterRest(41)) {\r\n          break;\r\n        }\r\n      } else {\r\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\r\n      }\r\n    }\r\n    const innerEndLoc = this.state.lastTokEndLoc;\r\n    this.expect(11);\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    let arrowNode = this.startNodeAt(startLoc);\r\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\r\n      this.checkDestructuringPrivate(refExpressionErrors);\r\n      this.expressionScope.validateAsPattern();\r\n      this.expressionScope.exit();\r\n      this.parseArrowExpression(arrowNode, exprList, false);\r\n      return arrowNode;\r\n    }\r\n    this.expressionScope.exit();\r\n    if (!exprList.length) {\r\n      this.unexpected(this.state.lastTokStartLoc);\r\n    }\r\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\r\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\r\n    this.checkExpressionErrors(refExpressionErrors, true);\r\n    this.toReferencedListDeep(exprList, true);\r\n    if (exprList.length > 1) {\r\n      val = this.startNodeAt(innerStartLoc);\r\n      val.expressions = exprList;\r\n      this.finishNode(val, \"SequenceExpression\");\r\n      this.resetEndLocation(val, innerEndLoc);\r\n    } else {\r\n      val = exprList[0];\r\n    }\r\n    return this.wrapParenthesis(startLoc, val);\r\n  }\r\n  wrapParenthesis(startLoc, expression) {\r\n    if (!this.options.createParenthesizedExpressions) {\r\n      this.addExtra(expression, \"parenthesized\", true);\r\n      this.addExtra(expression, \"parenStart\", startLoc.index);\r\n      this.takeSurroundingComments(expression, startLoc.index, this.state.lastTokEndLoc.index);\r\n      return expression;\r\n    }\r\n    const parenExpression = this.startNodeAt(startLoc);\r\n    parenExpression.expression = expression;\r\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\r\n  }\r\n  shouldParseArrow(params) {\r\n    return !this.canInsertSemicolon();\r\n  }\r\n  parseArrow(node) {\r\n    if (this.eat(19)) {\r\n      return node;\r\n    }\r\n  }\r\n  parseParenItem(node, startLoc) {\r\n    return node;\r\n  }\r\n  parseNewOrNewTarget() {\r\n    const node = this.startNode();\r\n    this.next();\r\n    if (this.match(16)) {\r\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\r\n      this.next();\r\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\r\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass && !this.options.allowNewTargetOutsideFunction) {\r\n        this.raise(Errors.UnexpectedNewTarget, {\r\n          at: metaProp\r\n        });\r\n      }\r\n      return metaProp;\r\n    }\r\n    return this.parseNew(node);\r\n  }\r\n  parseNew(node) {\r\n    this.parseNewCallee(node);\r\n    if (this.eat(10)) {\r\n      const args = this.parseExprList(11);\r\n      this.toReferencedList(args);\r\n      node.arguments = args;\r\n    } else {\r\n      node.arguments = [];\r\n    }\r\n    return this.finishNode(node, \"NewExpression\");\r\n  }\r\n  parseNewCallee(node) {\r\n    node.callee = this.parseNoCallExpr();\r\n    if (node.callee.type === \"Import\") {\r\n      this.raise(Errors.ImportCallNotNewExpression, {\r\n        at: node.callee\r\n      });\r\n    }\r\n  }\r\n  parseTemplateElement(isTagged) {\r\n    const {\r\n      start,\r\n      startLoc,\r\n      end,\r\n      value\r\n    } = this.state;\r\n    const elemStart = start + 1;\r\n    const elem = this.startNodeAt(createPositionWithColumnOffset(startLoc, 1));\r\n    if (value === null) {\r\n      if (!isTagged) {\r\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\r\n          at: createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos, 1)\r\n        });\r\n      }\r\n    }\r\n    const isTail = this.match(24);\r\n    const endOffset = isTail ? -1 : -2;\r\n    const elemEnd = end + endOffset;\r\n    elem.value = {\r\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\r\n      cooked: value === null ? null : value.slice(1, endOffset)\r\n    };\r\n    elem.tail = isTail;\r\n    this.next();\r\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\r\n    this.resetEndLocation(finishedNode, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\r\n    return finishedNode;\r\n  }\r\n  parseTemplate(isTagged) {\r\n    const node = this.startNode();\r\n    node.expressions = [];\r\n    let curElt = this.parseTemplateElement(isTagged);\r\n    node.quasis = [curElt];\r\n    while (!curElt.tail) {\r\n      node.expressions.push(this.parseTemplateSubstitution());\r\n      this.readTemplateContinuation();\r\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\r\n    }\r\n    return this.finishNode(node, \"TemplateLiteral\");\r\n  }\r\n  parseTemplateSubstitution() {\r\n    return this.parseExpression();\r\n  }\r\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\r\n    if (isRecord) {\r\n      this.expectPlugin(\"recordAndTuple\");\r\n    }\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.inFSharpPipelineDirectBody = false;\r\n    const propHash = Object.create(null);\r\n    let first = true;\r\n    const node = this.startNode();\r\n    node.properties = [];\r\n    this.next();\r\n    while (!this.match(close)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n        if (this.match(close)) {\r\n          this.addTrailingCommaExtraToNode(node);\r\n          break;\r\n        }\r\n      }\r\n      let prop;\r\n      if (isPattern) {\r\n        prop = this.parseBindingProperty();\r\n      } else {\r\n        prop = this.parsePropertyDefinition(refExpressionErrors);\r\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\r\n      }\r\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\r\n        this.raise(Errors.InvalidRecordProperty, {\r\n          at: prop\r\n        });\r\n      }\r\n      if (prop.shorthand) {\r\n        this.addExtra(prop, \"shorthand\", true);\r\n      }\r\n      node.properties.push(prop);\r\n    }\r\n    this.next();\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    let type = \"ObjectExpression\";\r\n    if (isPattern) {\r\n      type = \"ObjectPattern\";\r\n    } else if (isRecord) {\r\n      type = \"RecordExpression\";\r\n    }\r\n    return this.finishNode(node, type);\r\n  }\r\n  addTrailingCommaExtraToNode(node) {\r\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\r\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\r\n  }\r\n  maybeAsyncOrAccessorProp(prop) {\r\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));\r\n  }\r\n  parsePropertyDefinition(refExpressionErrors) {\r\n    let decorators = [];\r\n    if (this.match(26)) {\r\n      if (this.hasPlugin(\"decorators\")) {\r\n        this.raise(Errors.UnsupportedPropertyDecorator, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      while (this.match(26)) {\r\n        decorators.push(this.parseDecorator());\r\n      }\r\n    }\r\n    const prop = this.startNode();\r\n    let isAsync = false;\r\n    let isAccessor = false;\r\n    let startLoc;\r\n    if (this.match(21)) {\r\n      if (decorators.length) this.unexpected();\r\n      return this.parseSpread();\r\n    }\r\n    if (decorators.length) {\r\n      prop.decorators = decorators;\r\n      decorators = [];\r\n    }\r\n    prop.method = false;\r\n    if (refExpressionErrors) {\r\n      startLoc = this.state.startLoc;\r\n    }\r\n    let isGenerator = this.eat(55);\r\n    this.parsePropertyNamePrefixOperator(prop);\r\n    const containsEsc = this.state.containsEsc;\r\n    const key = this.parsePropertyName(prop, refExpressionErrors);\r\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\r\n      const keyName = key.name;\r\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\r\n        isAsync = true;\r\n        this.resetPreviousNodeTrailingComments(key);\r\n        isGenerator = this.eat(55);\r\n        this.parsePropertyName(prop);\r\n      }\r\n      if (keyName === \"get\" || keyName === \"set\") {\r\n        isAccessor = true;\r\n        this.resetPreviousNodeTrailingComments(key);\r\n        prop.kind = keyName;\r\n        if (this.match(55)) {\r\n          isGenerator = true;\r\n          this.raise(Errors.AccessorIsGenerator, {\r\n            at: this.state.curPosition(),\r\n            kind: keyName\r\n          });\r\n          this.next();\r\n        }\r\n        this.parsePropertyName(prop);\r\n      }\r\n    }\r\n    return this.parseObjPropValue(prop, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\r\n  }\r\n  getGetterSetterExpectedParamCount(method) {\r\n    return method.kind === \"get\" ? 0 : 1;\r\n  }\r\n  getObjectOrClassMethodParams(method) {\r\n    return method.params;\r\n  }\r\n  checkGetterSetterParams(method) {\r\n    var _params;\r\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\r\n    const params = this.getObjectOrClassMethodParams(method);\r\n    if (params.length !== paramCount) {\r\n      this.raise(method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\r\n        at: method\r\n      });\r\n    }\r\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\r\n      this.raise(Errors.BadSetterRestParameter, {\r\n        at: method\r\n      });\r\n    }\r\n  }\r\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\r\n    if (isAccessor) {\r\n      const finishedProp = this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\r\n      this.checkGetterSetterParams(finishedProp);\r\n      return finishedProp;\r\n    }\r\n    if (isAsync || isGenerator || this.match(10)) {\r\n      if (isPattern) this.unexpected();\r\n      prop.kind = \"method\";\r\n      prop.method = true;\r\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\r\n    }\r\n  }\r\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\r\n    prop.shorthand = false;\r\n    if (this.eat(14)) {\r\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\r\n      return this.finishNode(prop, \"ObjectProperty\");\r\n    }\r\n    if (!prop.computed && prop.key.type === \"Identifier\") {\r\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\r\n      if (isPattern) {\r\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\r\n      } else if (this.match(29)) {\r\n        const shorthandAssignLoc = this.state.startLoc;\r\n        if (refExpressionErrors != null) {\r\n          if (refExpressionErrors.shorthandAssignLoc === null) {\r\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\r\n          }\r\n        } else {\r\n          this.raise(Errors.InvalidCoverInitializedName, {\r\n            at: shorthandAssignLoc\r\n          });\r\n        }\r\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\r\n      } else {\r\n        prop.value = cloneIdentifier(prop.key);\r\n      }\r\n      prop.shorthand = true;\r\n      return this.finishNode(prop, \"ObjectProperty\");\r\n    }\r\n  }\r\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\r\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\r\n    if (!node) this.unexpected();\r\n    return node;\r\n  }\r\n  parsePropertyName(prop, refExpressionErrors) {\r\n    if (this.eat(0)) {\r\n      prop.computed = true;\r\n      prop.key = this.parseMaybeAssignAllowIn();\r\n      this.expect(3);\r\n    } else {\r\n      const {\r\n        type,\r\n        value\r\n      } = this.state;\r\n      let key;\r\n      if (tokenIsKeywordOrIdentifier(type)) {\r\n        key = this.parseIdentifier(true);\r\n      } else {\r\n        switch (type) {\r\n          case 132:\r\n            key = this.parseNumericLiteral(value);\r\n            break;\r\n          case 131:\r\n            key = this.parseStringLiteral(value);\r\n            break;\r\n          case 133:\r\n            key = this.parseBigIntLiteral(value);\r\n            break;\r\n          case 134:\r\n            key = this.parseDecimalLiteral(value);\r\n            break;\r\n          case 136:\r\n            {\r\n              const privateKeyLoc = this.state.startLoc;\r\n              if (refExpressionErrors != null) {\r\n                if (refExpressionErrors.privateKeyLoc === null) {\r\n                  refExpressionErrors.privateKeyLoc = privateKeyLoc;\r\n                }\r\n              } else {\r\n                this.raise(Errors.UnexpectedPrivateField, {\r\n                  at: privateKeyLoc\r\n                });\r\n              }\r\n              key = this.parsePrivateName();\r\n              break;\r\n            }\r\n          default:\r\n            this.unexpected();\r\n        }\r\n      }\r\n      prop.key = key;\r\n      if (type !== 136) {\r\n        prop.computed = false;\r\n      }\r\n    }\r\n    return prop.key;\r\n  }\r\n  initFunction(node, isAsync) {\r\n    node.id = null;\r\n    node.generator = false;\r\n    node.async = isAsync;\r\n  }\r\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\r\n    this.initFunction(node, isAsync);\r\n    node.generator = isGenerator;\r\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\r\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\r\n    this.parseFunctionParams(node, isConstructor);\r\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n    return finishedNode;\r\n  }\r\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\r\n    if (isTuple) {\r\n      this.expectPlugin(\"recordAndTuple\");\r\n    }\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.inFSharpPipelineDirectBody = false;\r\n    const node = this.startNode();\r\n    this.next();\r\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\r\n  }\r\n  parseArrowExpression(node, params, isAsync, trailingCommaLoc) {\r\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\r\n    let flags = functionFlags(isAsync, false);\r\n    if (!this.match(5) && this.prodParam.hasIn) {\r\n      flags |= PARAM_IN;\r\n    }\r\n    this.prodParam.enter(flags);\r\n    this.initFunction(node, isAsync);\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n    if (params) {\r\n      this.state.maybeInArrowParameters = true;\r\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\r\n    }\r\n    this.state.maybeInArrowParameters = false;\r\n    this.parseFunctionBody(node, true);\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n    return this.finishNode(node, \"ArrowFunctionExpression\");\r\n  }\r\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\r\n    this.toAssignableList(params, trailingCommaLoc, false);\r\n    node.params = params;\r\n  }\r\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\r\n    this.parseFunctionBody(node, false, isMethod);\r\n    return this.finishNode(node, type);\r\n  }\r\n  parseFunctionBody(node, allowExpression, isMethod = false) {\r\n    const isExpression = allowExpression && !this.match(5);\r\n    this.expressionScope.enter(newExpressionScope());\r\n    if (isExpression) {\r\n      node.body = this.parseMaybeAssign();\r\n      this.checkParams(node, false, allowExpression, false);\r\n    } else {\r\n      const oldStrict = this.state.strict;\r\n      const oldLabels = this.state.labels;\r\n      this.state.labels = [];\r\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\r\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\r\n        const nonSimple = !this.isSimpleParamList(node.params);\r\n        if (hasStrictModeDirective && nonSimple) {\r\n          this.raise(Errors.IllegalLanguageModeDirective, {\r\n            at: (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.loc.end : node\r\n          });\r\n        }\r\n        const strictModeChanged = !oldStrict && this.state.strict;\r\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\r\n        if (this.state.strict && node.id) {\r\n          this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\r\n        }\r\n      });\r\n      this.prodParam.exit();\r\n      this.state.labels = oldLabels;\r\n    }\r\n    this.expressionScope.exit();\r\n  }\r\n  isSimpleParameter(node) {\r\n    return node.type === \"Identifier\";\r\n  }\r\n  isSimpleParamList(params) {\r\n    for (let i = 0, len = params.length; i < len; i++) {\r\n      if (!this.isSimpleParameter(params[i])) return false;\r\n    }\r\n    return true;\r\n  }\r\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\r\n    const checkClashes = !allowDuplicates && new Set();\r\n    const formalParameters = {\r\n      type: \"FormalParameters\"\r\n    };\r\n    for (const param of node.params) {\r\n      this.checkLVal(param, {\r\n        in: formalParameters,\r\n        binding: BIND_VAR,\r\n        checkClashes,\r\n        strictModeChanged\r\n      });\r\n    }\r\n  }\r\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\r\n    const elts = [];\r\n    let first = true;\r\n    while (!this.eat(close)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n        if (this.match(close)) {\r\n          if (nodeForExtra) {\r\n            this.addTrailingCommaExtraToNode(nodeForExtra);\r\n          }\r\n          this.next();\r\n          break;\r\n        }\r\n      }\r\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\r\n    }\r\n    return elts;\r\n  }\r\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\r\n    let elt;\r\n    if (this.match(12)) {\r\n      if (!allowEmpty) {\r\n        this.raise(Errors.UnexpectedToken, {\r\n          at: this.state.curPosition(),\r\n          unexpected: \",\"\r\n        });\r\n      }\r\n      elt = null;\r\n    } else if (this.match(21)) {\r\n      const spreadNodeStartLoc = this.state.startLoc;\r\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartLoc);\r\n    } else if (this.match(17)) {\r\n      this.expectPlugin(\"partialApplication\");\r\n      if (!allowPlaceholder) {\r\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      const node = this.startNode();\r\n      this.next();\r\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\r\n    } else {\r\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\r\n    }\r\n    return elt;\r\n  }\r\n  parseIdentifier(liberal) {\r\n    const node = this.startNode();\r\n    const name = this.parseIdentifierName(liberal);\r\n    return this.createIdentifier(node, name);\r\n  }\r\n  createIdentifier(node, name) {\r\n    node.name = name;\r\n    node.loc.identifierName = name;\r\n    return this.finishNode(node, \"Identifier\");\r\n  }\r\n  parseIdentifierName(liberal) {\r\n    let name;\r\n    const {\r\n      startLoc,\r\n      type\r\n    } = this.state;\r\n    if (tokenIsKeywordOrIdentifier(type)) {\r\n      name = this.state.value;\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\r\n    if (liberal) {\r\n      if (tokenIsKeyword) {\r\n        this.replaceToken(130);\r\n      }\r\n    } else {\r\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\r\n    }\r\n    this.next();\r\n    return name;\r\n  }\r\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\r\n    if (word.length > 10) {\r\n      return;\r\n    }\r\n    if (!canBeReservedWord(word)) {\r\n      return;\r\n    }\r\n    if (checkKeywords && isKeyword(word)) {\r\n      this.raise(Errors.UnexpectedKeyword, {\r\n        at: startLoc,\r\n        keyword: word\r\n      });\r\n      return;\r\n    }\r\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\r\n    if (reservedTest(word, this.inModule)) {\r\n      this.raise(Errors.UnexpectedReservedWord, {\r\n        at: startLoc,\r\n        reservedWord: word\r\n      });\r\n      return;\r\n    } else if (word === \"yield\") {\r\n      if (this.prodParam.hasYield) {\r\n        this.raise(Errors.YieldBindingIdentifier, {\r\n          at: startLoc\r\n        });\r\n        return;\r\n      }\r\n    } else if (word === \"await\") {\r\n      if (this.prodParam.hasAwait) {\r\n        this.raise(Errors.AwaitBindingIdentifier, {\r\n          at: startLoc\r\n        });\r\n        return;\r\n      }\r\n      if (this.scope.inStaticBlock) {\r\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\r\n          at: startLoc\r\n        });\r\n        return;\r\n      }\r\n      this.expressionScope.recordAsyncArrowParametersError({\r\n        at: startLoc\r\n      });\r\n    } else if (word === \"arguments\") {\r\n      if (this.scope.inClassAndNotInNonArrowFunction) {\r\n        this.raise(Errors.ArgumentsInClass, {\r\n          at: startLoc\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  isAwaitAllowed() {\r\n    if (this.prodParam.hasAwait) return true;\r\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  parseAwait(startLoc) {\r\n    const node = this.startNodeAt(startLoc);\r\n    this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter, {\r\n      at: node\r\n    });\r\n    if (this.eat(55)) {\r\n      this.raise(Errors.ObsoleteAwaitStar, {\r\n        at: node\r\n      });\r\n    }\r\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\r\n      if (this.isAmbiguousAwait()) {\r\n        this.ambiguousScriptDifferentAst = true;\r\n      } else {\r\n        this.sawUnambiguousESM = true;\r\n      }\r\n    }\r\n    if (!this.state.soloAwait) {\r\n      node.argument = this.parseMaybeUnary(null, true);\r\n    }\r\n    return this.finishNode(node, \"AwaitExpression\");\r\n  }\r\n  isAmbiguousAwait() {\r\n    if (this.hasPrecedingLineBreak()) return true;\r\n    const {\r\n      type\r\n    } = this.state;\r\n    return type === 53 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 101 && !this.state.containsEsc || type === 135 || type === 56 || this.hasPlugin(\"v8intrinsic\") && type === 54;\r\n  }\r\n  parseYield() {\r\n    const node = this.startNode();\r\n    this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter, {\r\n      at: node\r\n    });\r\n    this.next();\r\n    let delegating = false;\r\n    let argument = null;\r\n    if (!this.hasPrecedingLineBreak()) {\r\n      delegating = this.eat(55);\r\n      switch (this.state.type) {\r\n        case 13:\r\n        case 137:\r\n        case 8:\r\n        case 11:\r\n        case 3:\r\n        case 9:\r\n        case 14:\r\n        case 12:\r\n          if (!delegating) break;\r\n        default:\r\n          argument = this.parseMaybeAssign();\r\n      }\r\n    }\r\n    node.delegate = delegating;\r\n    node.argument = argument;\r\n    return this.finishNode(node, \"YieldExpression\");\r\n  }\r\n  checkPipelineAtInfixOperator(left, leftStartLoc) {\r\n    if (this.hasPlugin([\"pipelineOperator\", {\r\n      proposal: \"smart\"\r\n    }])) {\r\n      if (left.type === \"SequenceExpression\") {\r\n        this.raise(Errors.PipelineHeadSequenceExpression, {\r\n          at: leftStartLoc\r\n        });\r\n      }\r\n    }\r\n  }\r\n  parseSmartPipelineBodyInStyle(childExpr, startLoc) {\r\n    if (this.isSimpleReference(childExpr)) {\r\n      const bodyNode = this.startNodeAt(startLoc);\r\n      bodyNode.callee = childExpr;\r\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\r\n    } else {\r\n      const bodyNode = this.startNodeAt(startLoc);\r\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\r\n      bodyNode.expression = childExpr;\r\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\r\n    }\r\n  }\r\n  isSimpleReference(expression) {\r\n    switch (expression.type) {\r\n      case \"MemberExpression\":\r\n        return !expression.computed && this.isSimpleReference(expression.object);\r\n      case \"Identifier\":\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n  checkSmartPipeTopicBodyEarlyErrors(startLoc) {\r\n    if (this.match(19)) {\r\n      throw this.raise(Errors.PipelineBodyNoArrow, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\r\n      this.raise(Errors.PipelineTopicUnused, {\r\n        at: startLoc\r\n      });\r\n    }\r\n  }\r\n  withTopicBindingContext(callback) {\r\n    const outerContextTopicState = this.state.topicContext;\r\n    this.state.topicContext = {\r\n      maxNumOfResolvableTopics: 1,\r\n      maxTopicIndex: null\r\n    };\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      this.state.topicContext = outerContextTopicState;\r\n    }\r\n  }\r\n  withSmartMixTopicForbiddingContext(callback) {\r\n    if (this.hasPlugin([\"pipelineOperator\", {\r\n      proposal: \"smart\"\r\n    }])) {\r\n      const outerContextTopicState = this.state.topicContext;\r\n      this.state.topicContext = {\r\n        maxNumOfResolvableTopics: 0,\r\n        maxTopicIndex: null\r\n      };\r\n      try {\r\n        return callback();\r\n      } finally {\r\n        this.state.topicContext = outerContextTopicState;\r\n      }\r\n    } else {\r\n      return callback();\r\n    }\r\n  }\r\n  withSoloAwaitPermittingContext(callback) {\r\n    const outerContextSoloAwaitState = this.state.soloAwait;\r\n    this.state.soloAwait = true;\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      this.state.soloAwait = outerContextSoloAwaitState;\r\n    }\r\n  }\r\n  allowInAnd(callback) {\r\n    const flags = this.prodParam.currentFlags();\r\n    const prodParamToSet = PARAM_IN & ~flags;\r\n    if (prodParamToSet) {\r\n      this.prodParam.enter(flags | PARAM_IN);\r\n      try {\r\n        return callback();\r\n      } finally {\r\n        this.prodParam.exit();\r\n      }\r\n    }\r\n    return callback();\r\n  }\r\n  disallowInAnd(callback) {\r\n    const flags = this.prodParam.currentFlags();\r\n    const prodParamToClear = PARAM_IN & flags;\r\n    if (prodParamToClear) {\r\n      this.prodParam.enter(flags & ~PARAM_IN);\r\n      try {\r\n        return callback();\r\n      } finally {\r\n        this.prodParam.exit();\r\n      }\r\n    }\r\n    return callback();\r\n  }\r\n  registerTopicReference() {\r\n    this.state.topicContext.maxTopicIndex = 0;\r\n  }\r\n  topicReferenceIsAllowedInCurrentContext() {\r\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\r\n  }\r\n  topicReferenceWasUsedInCurrentContext() {\r\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\r\n  }\r\n  parseFSharpPipelineBody(prec) {\r\n    const startLoc = this.state.startLoc;\r\n    this.state.potentialArrowAt = this.state.start;\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.inFSharpPipelineDirectBody = true;\r\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, prec);\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    return ret;\r\n  }\r\n  parseModuleExpression() {\r\n    this.expectPlugin(\"moduleBlocks\");\r\n    const node = this.startNode();\r\n    this.next();\r\n    if (!this.match(5)) {\r\n      this.unexpected(null, 5);\r\n    }\r\n    const program = this.startNodeAt(this.state.endLoc);\r\n    this.next();\r\n    const revertScopes = this.initializeScopes(true);\r\n    this.enterInitialScopes();\r\n    try {\r\n      node.body = this.parseProgram(program, 8, \"module\");\r\n    } finally {\r\n      revertScopes();\r\n    }\r\n    return this.finishNode(node, \"ModuleExpression\");\r\n  }\r\n  parsePropertyNamePrefixOperator(prop) {}\r\n}\r\nconst loopLabel = {\r\n    kind: \"loop\"\r\n  },\r\n  switchLabel = {\r\n    kind: \"switch\"\r\n  };\r\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\r\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\r\nfunction babel7CompatTokens(tokens, input) {\r\n  for (let i = 0; i < tokens.length; i++) {\r\n    const token = tokens[i];\r\n    const {\r\n      type\r\n    } = token;\r\n    if (typeof type === \"number\") {\r\n      {\r\n        if (type === 136) {\r\n          const {\r\n            loc,\r\n            start,\r\n            value,\r\n            end\r\n          } = token;\r\n          const hashEndPos = start + 1;\r\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\r\n          tokens.splice(i, 1, new Token({\r\n            type: getExportedToken(27),\r\n            value: \"#\",\r\n            start: start,\r\n            end: hashEndPos,\r\n            startLoc: loc.start,\r\n            endLoc: hashEndLoc\r\n          }), new Token({\r\n            type: getExportedToken(130),\r\n            value: value,\r\n            start: hashEndPos,\r\n            end: end,\r\n            startLoc: hashEndLoc,\r\n            endLoc: loc.end\r\n          }));\r\n          i++;\r\n          continue;\r\n        }\r\n        if (tokenIsTemplate(type)) {\r\n          const {\r\n            loc,\r\n            start,\r\n            value,\r\n            end\r\n          } = token;\r\n          const backquoteEnd = start + 1;\r\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\r\n          let startToken;\r\n          if (input.charCodeAt(start) === 96) {\r\n            startToken = new Token({\r\n              type: getExportedToken(22),\r\n              value: \"`\",\r\n              start: start,\r\n              end: backquoteEnd,\r\n              startLoc: loc.start,\r\n              endLoc: backquoteEndLoc\r\n            });\r\n          } else {\r\n            startToken = new Token({\r\n              type: getExportedToken(8),\r\n              value: \"}\",\r\n              start: start,\r\n              end: backquoteEnd,\r\n              startLoc: loc.start,\r\n              endLoc: backquoteEndLoc\r\n            });\r\n          }\r\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\r\n          if (type === 24) {\r\n            templateElementEnd = end - 1;\r\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\r\n            templateValue = value === null ? null : value.slice(1, -1);\r\n            endToken = new Token({\r\n              type: getExportedToken(22),\r\n              value: \"`\",\r\n              start: templateElementEnd,\r\n              end: end,\r\n              startLoc: templateElementEndLoc,\r\n              endLoc: loc.end\r\n            });\r\n          } else {\r\n            templateElementEnd = end - 2;\r\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\r\n            templateValue = value === null ? null : value.slice(1, -2);\r\n            endToken = new Token({\r\n              type: getExportedToken(23),\r\n              value: \"${\",\r\n              start: templateElementEnd,\r\n              end: end,\r\n              startLoc: templateElementEndLoc,\r\n              endLoc: loc.end\r\n            });\r\n          }\r\n          tokens.splice(i, 1, startToken, new Token({\r\n            type: getExportedToken(20),\r\n            value: templateValue,\r\n            start: backquoteEnd,\r\n            end: templateElementEnd,\r\n            startLoc: backquoteEndLoc,\r\n            endLoc: templateElementEndLoc\r\n          }), endToken);\r\n          i += 2;\r\n          continue;\r\n        }\r\n      }\r\n      token.type = getExportedToken(type);\r\n    }\r\n  }\r\n  return tokens;\r\n}\r\nclass StatementParser extends ExpressionParser {\r\n  parseTopLevel(file, program) {\r\n    file.program = this.parseProgram(program);\r\n    file.comments = this.state.comments;\r\n    if (this.options.tokens) {\r\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\r\n    }\r\n    return this.finishNode(file, \"File\");\r\n  }\r\n  parseProgram(program, end = 137, sourceType = this.options.sourceType) {\r\n    program.sourceType = sourceType;\r\n    program.interpreter = this.parseInterpreterDirective();\r\n    this.parseBlockBody(program, true, true, end);\r\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\r\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\r\n        this.raise(Errors.ModuleExportUndefined, {\r\n          at,\r\n          localName\r\n        });\r\n      }\r\n    }\r\n    let finishedProgram;\r\n    if (end === 137) {\r\n      finishedProgram = this.finishNode(program, \"Program\");\r\n    } else {\r\n      finishedProgram = this.finishNodeAt(program, \"Program\", createPositionWithColumnOffset(this.state.startLoc, -1));\r\n    }\r\n    return finishedProgram;\r\n  }\r\n  stmtToDirective(stmt) {\r\n    const directive = stmt;\r\n    directive.type = \"Directive\";\r\n    directive.value = directive.expression;\r\n    delete directive.expression;\r\n    const directiveLiteral = directive.value;\r\n    const expressionValue = directiveLiteral.value;\r\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\r\n    const val = directiveLiteral.value = raw.slice(1, -1);\r\n    this.addExtra(directiveLiteral, \"raw\", raw);\r\n    this.addExtra(directiveLiteral, \"rawValue\", val);\r\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\r\n    directiveLiteral.type = \"DirectiveLiteral\";\r\n    return directive;\r\n  }\r\n  parseInterpreterDirective() {\r\n    if (!this.match(28)) {\r\n      return null;\r\n    }\r\n    const node = this.startNode();\r\n    node.value = this.state.value;\r\n    this.next();\r\n    return this.finishNode(node, \"InterpreterDirective\");\r\n  }\r\n  isLet() {\r\n    if (!this.isContextual(99)) {\r\n      return false;\r\n    }\r\n    return this.hasFollowingBindingAtom();\r\n  }\r\n  chStartsBindingIdentifier(ch, pos) {\r\n    if (isIdentifierStart(ch)) {\r\n      keywordRelationalOperator.lastIndex = pos;\r\n      if (keywordRelationalOperator.test(this.input)) {\r\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\r\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    } else if (ch === 92) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  chStartsBindingPattern(ch) {\r\n    return ch === 91 || ch === 123;\r\n  }\r\n  hasFollowingBindingAtom() {\r\n    const next = this.nextTokenStart();\r\n    const nextCh = this.codePointAtPos(next);\r\n    return this.chStartsBindingPattern(nextCh) || this.chStartsBindingIdentifier(nextCh, next);\r\n  }\r\n  hasFollowingBindingIdentifier() {\r\n    const next = this.nextTokenStart();\r\n    const nextCh = this.codePointAtPos(next);\r\n    return this.chStartsBindingIdentifier(nextCh, next);\r\n  }\r\n  startsUsingForOf() {\r\n    const lookahead = this.lookahead();\r\n    if (lookahead.type === 101 && !lookahead.containsEsc) {\r\n      return false;\r\n    } else {\r\n      this.expectPlugin(\"explicitResourceManagement\");\r\n      return true;\r\n    }\r\n  }\r\n  parseModuleItem() {\r\n    return this.parseStatementLike(1 | 2 | 4 | 8);\r\n  }\r\n  parseStatementListItem() {\r\n    return this.parseStatementLike(2 | 4 | (!this.options.annexB || this.state.strict ? 0 : 8));\r\n  }\r\n  parseStatementOrSloppyAnnexBFunctionDeclaration(allowLabeledFunction = false) {\r\n    let flags = 0;\r\n    if (this.options.annexB && !this.state.strict) {\r\n      flags |= 4;\r\n      if (allowLabeledFunction) {\r\n        flags |= 8;\r\n      }\r\n    }\r\n    return this.parseStatementLike(flags);\r\n  }\r\n  parseStatement() {\r\n    return this.parseStatementLike(0);\r\n  }\r\n  parseStatementLike(flags) {\r\n    let decorators = null;\r\n    if (this.match(26)) {\r\n      decorators = this.parseDecorators(true);\r\n    }\r\n    return this.parseStatementContent(flags, decorators);\r\n  }\r\n  parseStatementContent(flags, decorators) {\r\n    const starttype = this.state.type;\r\n    const node = this.startNode();\r\n    const allowDeclaration = !!(flags & 2);\r\n    const allowFunctionDeclaration = !!(flags & 4);\r\n    const topLevel = flags & 1;\r\n    switch (starttype) {\r\n      case 60:\r\n        return this.parseBreakContinueStatement(node, true);\r\n      case 63:\r\n        return this.parseBreakContinueStatement(node, false);\r\n      case 64:\r\n        return this.parseDebuggerStatement(node);\r\n      case 90:\r\n        return this.parseDoWhileStatement(node);\r\n      case 91:\r\n        return this.parseForStatement(node);\r\n      case 68:\r\n        if (this.lookaheadCharCode() === 46) break;\r\n        if (!allowFunctionDeclaration) {\r\n          this.raise(this.state.strict ? Errors.StrictFunction : this.options.annexB ? Errors.SloppyFunctionAnnexB : Errors.SloppyFunction, {\r\n            at: this.state.startLoc\r\n          });\r\n        }\r\n        return this.parseFunctionStatement(node, false, !allowDeclaration && allowFunctionDeclaration);\r\n      case 80:\r\n        if (!allowDeclaration) this.unexpected();\r\n        return this.parseClass(this.maybeTakeDecorators(decorators, node), true);\r\n      case 69:\r\n        return this.parseIfStatement(node);\r\n      case 70:\r\n        return this.parseReturnStatement(node);\r\n      case 71:\r\n        return this.parseSwitchStatement(node);\r\n      case 72:\r\n        return this.parseThrowStatement(node);\r\n      case 73:\r\n        return this.parseTryStatement(node);\r\n      case 105:\r\n        if (this.hasFollowingLineBreak() || this.state.containsEsc || !this.hasFollowingBindingIdentifier()) {\r\n          break;\r\n        }\r\n        this.expectPlugin(\"explicitResourceManagement\");\r\n        if (!this.scope.inModule && this.scope.inTopLevel) {\r\n          this.raise(Errors.UnexpectedUsingDeclaration, {\r\n            at: this.state.startLoc\r\n          });\r\n        } else if (!allowDeclaration) {\r\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\r\n            at: this.state.startLoc\r\n          });\r\n        }\r\n        return this.parseVarStatement(node, \"using\");\r\n      case 99:\r\n        {\r\n          if (this.state.containsEsc) {\r\n            break;\r\n          }\r\n          const next = this.nextTokenStart();\r\n          const nextCh = this.codePointAtPos(next);\r\n          if (nextCh !== 91) {\r\n            if (!allowDeclaration && this.hasFollowingLineBreak()) break;\r\n            if (!this.chStartsBindingIdentifier(nextCh, next) && nextCh !== 123) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      case 75:\r\n        {\r\n          if (!allowDeclaration) {\r\n            this.raise(Errors.UnexpectedLexicalDeclaration, {\r\n              at: this.state.startLoc\r\n            });\r\n          }\r\n        }\r\n      case 74:\r\n        {\r\n          const kind = this.state.value;\r\n          return this.parseVarStatement(node, kind);\r\n        }\r\n      case 92:\r\n        return this.parseWhileStatement(node);\r\n      case 76:\r\n        return this.parseWithStatement(node);\r\n      case 5:\r\n        return this.parseBlock();\r\n      case 13:\r\n        return this.parseEmptyStatement(node);\r\n      case 83:\r\n        {\r\n          const nextTokenCharCode = this.lookaheadCharCode();\r\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\r\n            break;\r\n          }\r\n        }\r\n      case 82:\r\n        {\r\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\r\n            this.raise(Errors.UnexpectedImportExport, {\r\n              at: this.state.startLoc\r\n            });\r\n          }\r\n          this.next();\r\n          let result;\r\n          if (starttype === 83) {\r\n            result = this.parseImport(node);\r\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\r\n              this.sawUnambiguousESM = true;\r\n            }\r\n          } else {\r\n            result = this.parseExport(node, decorators);\r\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\r\n              this.sawUnambiguousESM = true;\r\n            }\r\n          }\r\n          this.assertModuleNodeAllowed(result);\r\n          return result;\r\n        }\r\n      default:\r\n        {\r\n          if (this.isAsyncFunction()) {\r\n            if (!allowDeclaration) {\r\n              this.raise(Errors.AsyncFunctionInSingleStatementContext, {\r\n                at: this.state.startLoc\r\n              });\r\n            }\r\n            this.next();\r\n            return this.parseFunctionStatement(node, true, !allowDeclaration && allowFunctionDeclaration);\r\n          }\r\n        }\r\n    }\r\n    const maybeName = this.state.value;\r\n    const expr = this.parseExpression();\r\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\r\n      return this.parseLabeledStatement(node, maybeName, expr, flags);\r\n    } else {\r\n      return this.parseExpressionStatement(node, expr, decorators);\r\n    }\r\n  }\r\n  assertModuleNodeAllowed(node) {\r\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\r\n      this.raise(Errors.ImportOutsideModule, {\r\n        at: node\r\n      });\r\n    }\r\n  }\r\n  decoratorsEnabledBeforeExport() {\r\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\r\n    return this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false;\r\n  }\r\n  maybeTakeDecorators(maybeDecorators, classNode, exportNode) {\r\n    if (maybeDecorators) {\r\n      if (classNode.decorators && classNode.decorators.length > 0) {\r\n        if (typeof this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== \"boolean\") {\r\n          this.raise(Errors.DecoratorsBeforeAfterExport, {\r\n            at: classNode.decorators[0]\r\n          });\r\n        }\r\n        classNode.decorators.unshift(...maybeDecorators);\r\n      } else {\r\n        classNode.decorators = maybeDecorators;\r\n      }\r\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\r\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\r\n    }\r\n    return classNode;\r\n  }\r\n  canHaveLeadingDecorator() {\r\n    return this.match(80);\r\n  }\r\n  parseDecorators(allowExport) {\r\n    const decorators = [];\r\n    do {\r\n      decorators.push(this.parseDecorator());\r\n    } while (this.match(26));\r\n    if (this.match(82)) {\r\n      if (!allowExport) {\r\n        this.unexpected();\r\n      }\r\n      if (!this.decoratorsEnabledBeforeExport()) {\r\n        this.raise(Errors.DecoratorExportClass, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n    } else if (!this.canHaveLeadingDecorator()) {\r\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    return decorators;\r\n  }\r\n  parseDecorator() {\r\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\r\n    const node = this.startNode();\r\n    this.next();\r\n    if (this.hasPlugin(\"decorators\")) {\r\n      const startLoc = this.state.startLoc;\r\n      let expr;\r\n      if (this.match(10)) {\r\n        const startLoc = this.state.startLoc;\r\n        this.next();\r\n        expr = this.parseExpression();\r\n        this.expect(11);\r\n        expr = this.wrapParenthesis(startLoc, expr);\r\n        const paramsStartLoc = this.state.startLoc;\r\n        node.expression = this.parseMaybeDecoratorArguments(expr);\r\n        if (this.getPluginOption(\"decorators\", \"allowCallParenthesized\") === false && node.expression !== expr) {\r\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\r\n            at: paramsStartLoc\r\n          });\r\n        }\r\n      } else {\r\n        expr = this.parseIdentifier(false);\r\n        while (this.eat(16)) {\r\n          const node = this.startNodeAt(startLoc);\r\n          node.object = expr;\r\n          if (this.match(136)) {\r\n            this.classScope.usePrivateName(this.state.value, this.state.startLoc);\r\n            node.property = this.parsePrivateName();\r\n          } else {\r\n            node.property = this.parseIdentifier(true);\r\n          }\r\n          node.computed = false;\r\n          expr = this.finishNode(node, \"MemberExpression\");\r\n        }\r\n        node.expression = this.parseMaybeDecoratorArguments(expr);\r\n      }\r\n    } else {\r\n      node.expression = this.parseExprSubscripts();\r\n    }\r\n    return this.finishNode(node, \"Decorator\");\r\n  }\r\n  parseMaybeDecoratorArguments(expr) {\r\n    if (this.eat(10)) {\r\n      const node = this.startNodeAtNode(expr);\r\n      node.callee = expr;\r\n      node.arguments = this.parseCallExpressionArguments(11, false);\r\n      this.toReferencedList(node.arguments);\r\n      return this.finishNode(node, \"CallExpression\");\r\n    }\r\n    return expr;\r\n  }\r\n  parseBreakContinueStatement(node, isBreak) {\r\n    this.next();\r\n    if (this.isLineTerminator()) {\r\n      node.label = null;\r\n    } else {\r\n      node.label = this.parseIdentifier();\r\n      this.semicolon();\r\n    }\r\n    this.verifyBreakContinue(node, isBreak);\r\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\r\n  }\r\n  verifyBreakContinue(node, isBreak) {\r\n    let i;\r\n    for (i = 0; i < this.state.labels.length; ++i) {\r\n      const lab = this.state.labels[i];\r\n      if (node.label == null || lab.name === node.label.name) {\r\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\r\n        if (node.label && isBreak) break;\r\n      }\r\n    }\r\n    if (i === this.state.labels.length) {\r\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\r\n      this.raise(Errors.IllegalBreakContinue, {\r\n        at: node,\r\n        type\r\n      });\r\n    }\r\n  }\r\n  parseDebuggerStatement(node) {\r\n    this.next();\r\n    this.semicolon();\r\n    return this.finishNode(node, \"DebuggerStatement\");\r\n  }\r\n  parseHeaderExpression() {\r\n    this.expect(10);\r\n    const val = this.parseExpression();\r\n    this.expect(11);\r\n    return val;\r\n  }\r\n  parseDoWhileStatement(node) {\r\n    this.next();\r\n    this.state.labels.push(loopLabel);\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\r\n    this.state.labels.pop();\r\n    this.expect(92);\r\n    node.test = this.parseHeaderExpression();\r\n    this.eat(13);\r\n    return this.finishNode(node, \"DoWhileStatement\");\r\n  }\r\n  parseForStatement(node) {\r\n    this.next();\r\n    this.state.labels.push(loopLabel);\r\n    let awaitAt = null;\r\n    if (this.isAwaitAllowed() && this.eatContextual(96)) {\r\n      awaitAt = this.state.lastTokStartLoc;\r\n    }\r\n    this.scope.enter(SCOPE_OTHER);\r\n    this.expect(10);\r\n    if (this.match(13)) {\r\n      if (awaitAt !== null) {\r\n        this.unexpected(awaitAt);\r\n      }\r\n      return this.parseFor(node, null);\r\n    }\r\n    const startsWithLet = this.isContextual(99);\r\n    const startsWithUsing = this.isContextual(105) && !this.hasFollowingLineBreak();\r\n    const isLetOrUsing = startsWithLet && this.hasFollowingBindingAtom() || startsWithUsing && this.hasFollowingBindingIdentifier() && this.startsUsingForOf();\r\n    if (this.match(74) || this.match(75) || isLetOrUsing) {\r\n      const initNode = this.startNode();\r\n      const kind = this.state.value;\r\n      this.next();\r\n      this.parseVar(initNode, true, kind);\r\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\r\n      const isForIn = this.match(58);\r\n      if (isForIn && startsWithUsing) {\r\n        this.raise(Errors.ForInUsing, {\r\n          at: init\r\n        });\r\n      }\r\n      if ((isForIn || this.isContextual(101)) && init.declarations.length === 1) {\r\n        return this.parseForIn(node, init, awaitAt);\r\n      }\r\n      if (awaitAt !== null) {\r\n        this.unexpected(awaitAt);\r\n      }\r\n      return this.parseFor(node, init);\r\n    }\r\n    const startsWithAsync = this.isContextual(95);\r\n    const refExpressionErrors = new ExpressionErrors();\r\n    const init = this.parseExpression(true, refExpressionErrors);\r\n    const isForOf = this.isContextual(101);\r\n    if (isForOf) {\r\n      if (startsWithLet) {\r\n        this.raise(Errors.ForOfLet, {\r\n          at: init\r\n        });\r\n      }\r\n      if (awaitAt === null && startsWithAsync && init.type === \"Identifier\") {\r\n        this.raise(Errors.ForOfAsync, {\r\n          at: init\r\n        });\r\n      }\r\n    }\r\n    if (isForOf || this.match(58)) {\r\n      this.checkDestructuringPrivate(refExpressionErrors);\r\n      this.toAssignable(init, true);\r\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\r\n      this.checkLVal(init, {\r\n        in: {\r\n          type\r\n        }\r\n      });\r\n      return this.parseForIn(node, init, awaitAt);\r\n    } else {\r\n      this.checkExpressionErrors(refExpressionErrors, true);\r\n    }\r\n    if (awaitAt !== null) {\r\n      this.unexpected(awaitAt);\r\n    }\r\n    return this.parseFor(node, init);\r\n  }\r\n  parseFunctionStatement(node, isAsync, isHangingDeclaration) {\r\n    this.next();\r\n    return this.parseFunction(node, 1 | (isHangingDeclaration ? 2 : 0) | (isAsync ? 8 : 0));\r\n  }\r\n  parseIfStatement(node) {\r\n    this.next();\r\n    node.test = this.parseHeaderExpression();\r\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\r\n    node.alternate = this.eat(66) ? this.parseStatementOrSloppyAnnexBFunctionDeclaration() : null;\r\n    return this.finishNode(node, \"IfStatement\");\r\n  }\r\n  parseReturnStatement(node) {\r\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\r\n      this.raise(Errors.IllegalReturn, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    this.next();\r\n    if (this.isLineTerminator()) {\r\n      node.argument = null;\r\n    } else {\r\n      node.argument = this.parseExpression();\r\n      this.semicolon();\r\n    }\r\n    return this.finishNode(node, \"ReturnStatement\");\r\n  }\r\n  parseSwitchStatement(node) {\r\n    this.next();\r\n    node.discriminant = this.parseHeaderExpression();\r\n    const cases = node.cases = [];\r\n    this.expect(5);\r\n    this.state.labels.push(switchLabel);\r\n    this.scope.enter(SCOPE_OTHER);\r\n    let cur;\r\n    for (let sawDefault; !this.match(8);) {\r\n      if (this.match(61) || this.match(65)) {\r\n        const isCase = this.match(61);\r\n        if (cur) this.finishNode(cur, \"SwitchCase\");\r\n        cases.push(cur = this.startNode());\r\n        cur.consequent = [];\r\n        this.next();\r\n        if (isCase) {\r\n          cur.test = this.parseExpression();\r\n        } else {\r\n          if (sawDefault) {\r\n            this.raise(Errors.MultipleDefaultsInSwitch, {\r\n              at: this.state.lastTokStartLoc\r\n            });\r\n          }\r\n          sawDefault = true;\r\n          cur.test = null;\r\n        }\r\n        this.expect(14);\r\n      } else {\r\n        if (cur) {\r\n          cur.consequent.push(this.parseStatementListItem());\r\n        } else {\r\n          this.unexpected();\r\n        }\r\n      }\r\n    }\r\n    this.scope.exit();\r\n    if (cur) this.finishNode(cur, \"SwitchCase\");\r\n    this.next();\r\n    this.state.labels.pop();\r\n    return this.finishNode(node, \"SwitchStatement\");\r\n  }\r\n  parseThrowStatement(node) {\r\n    this.next();\r\n    if (this.hasPrecedingLineBreak()) {\r\n      this.raise(Errors.NewlineAfterThrow, {\r\n        at: this.state.lastTokEndLoc\r\n      });\r\n    }\r\n    node.argument = this.parseExpression();\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ThrowStatement\");\r\n  }\r\n  parseCatchClauseParam() {\r\n    const param = this.parseBindingAtom();\r\n    this.scope.enter(this.options.annexB && param.type === \"Identifier\" ? SCOPE_SIMPLE_CATCH : 0);\r\n    this.checkLVal(param, {\r\n      in: {\r\n        type: \"CatchClause\"\r\n      },\r\n      binding: BIND_CATCH_PARAM\r\n    });\r\n    return param;\r\n  }\r\n  parseTryStatement(node) {\r\n    this.next();\r\n    node.block = this.parseBlock();\r\n    node.handler = null;\r\n    if (this.match(62)) {\r\n      const clause = this.startNode();\r\n      this.next();\r\n      if (this.match(10)) {\r\n        this.expect(10);\r\n        clause.param = this.parseCatchClauseParam();\r\n        this.expect(11);\r\n      } else {\r\n        clause.param = null;\r\n        this.scope.enter(SCOPE_OTHER);\r\n      }\r\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\r\n      this.scope.exit();\r\n      node.handler = this.finishNode(clause, \"CatchClause\");\r\n    }\r\n    node.finalizer = this.eat(67) ? this.parseBlock() : null;\r\n    if (!node.handler && !node.finalizer) {\r\n      this.raise(Errors.NoCatchOrFinally, {\r\n        at: node\r\n      });\r\n    }\r\n    return this.finishNode(node, \"TryStatement\");\r\n  }\r\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\r\n    this.next();\r\n    this.parseVar(node, false, kind, allowMissingInitializer);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"VariableDeclaration\");\r\n  }\r\n  parseWhileStatement(node) {\r\n    this.next();\r\n    node.test = this.parseHeaderExpression();\r\n    this.state.labels.push(loopLabel);\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\r\n    this.state.labels.pop();\r\n    return this.finishNode(node, \"WhileStatement\");\r\n  }\r\n  parseWithStatement(node) {\r\n    if (this.state.strict) {\r\n      this.raise(Errors.StrictWith, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    this.next();\r\n    node.object = this.parseHeaderExpression();\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\r\n    return this.finishNode(node, \"WithStatement\");\r\n  }\r\n  parseEmptyStatement(node) {\r\n    this.next();\r\n    return this.finishNode(node, \"EmptyStatement\");\r\n  }\r\n  parseLabeledStatement(node, maybeName, expr, flags) {\r\n    for (const label of this.state.labels) {\r\n      if (label.name === maybeName) {\r\n        this.raise(Errors.LabelRedeclaration, {\r\n          at: expr,\r\n          labelName: maybeName\r\n        });\r\n      }\r\n    }\r\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(71) ? \"switch\" : null;\r\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\r\n      const label = this.state.labels[i];\r\n      if (label.statementStart === node.start) {\r\n        label.statementStart = this.state.start;\r\n        label.kind = kind;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    this.state.labels.push({\r\n      name: maybeName,\r\n      kind: kind,\r\n      statementStart: this.state.start\r\n    });\r\n    node.body = flags & 8 ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true) : this.parseStatement();\r\n    this.state.labels.pop();\r\n    node.label = expr;\r\n    return this.finishNode(node, \"LabeledStatement\");\r\n  }\r\n  parseExpressionStatement(node, expr, decorators) {\r\n    node.expression = expr;\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ExpressionStatement\");\r\n  }\r\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\r\n    const node = this.startNode();\r\n    if (allowDirectives) {\r\n      this.state.strictErrors.clear();\r\n    }\r\n    this.expect(5);\r\n    if (createNewLexicalScope) {\r\n      this.scope.enter(SCOPE_OTHER);\r\n    }\r\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\r\n    if (createNewLexicalScope) {\r\n      this.scope.exit();\r\n    }\r\n    return this.finishNode(node, \"BlockStatement\");\r\n  }\r\n  isValidDirective(stmt) {\r\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\r\n  }\r\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\r\n    const body = node.body = [];\r\n    const directives = node.directives = [];\r\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\r\n  }\r\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\r\n    const oldStrict = this.state.strict;\r\n    let hasStrictModeDirective = false;\r\n    let parsedNonDirective = false;\r\n    while (!this.match(end)) {\r\n      const stmt = topLevel ? this.parseModuleItem() : this.parseStatementListItem();\r\n      if (directives && !parsedNonDirective) {\r\n        if (this.isValidDirective(stmt)) {\r\n          const directive = this.stmtToDirective(stmt);\r\n          directives.push(directive);\r\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\r\n            hasStrictModeDirective = true;\r\n            this.setStrict(true);\r\n          }\r\n          continue;\r\n        }\r\n        parsedNonDirective = true;\r\n        this.state.strictErrors.clear();\r\n      }\r\n      body.push(stmt);\r\n    }\r\n    if (afterBlockParse) {\r\n      afterBlockParse.call(this, hasStrictModeDirective);\r\n    }\r\n    if (!oldStrict) {\r\n      this.setStrict(false);\r\n    }\r\n    this.next();\r\n  }\r\n  parseFor(node, init) {\r\n    node.init = init;\r\n    this.semicolon(false);\r\n    node.test = this.match(13) ? null : this.parseExpression();\r\n    this.semicolon(false);\r\n    node.update = this.match(11) ? null : this.parseExpression();\r\n    this.expect(11);\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\r\n    this.scope.exit();\r\n    this.state.labels.pop();\r\n    return this.finishNode(node, \"ForStatement\");\r\n  }\r\n  parseForIn(node, init, awaitAt) {\r\n    const isForIn = this.match(58);\r\n    this.next();\r\n    if (isForIn) {\r\n      if (awaitAt !== null) this.unexpected(awaitAt);\r\n    } else {\r\n      node.await = awaitAt !== null;\r\n    }\r\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || !this.options.annexB || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\r\n      this.raise(Errors.ForInOfLoopInitializer, {\r\n        at: init,\r\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\"\r\n      });\r\n    }\r\n    if (init.type === \"AssignmentPattern\") {\r\n      this.raise(Errors.InvalidLhs, {\r\n        at: init,\r\n        ancestor: {\r\n          type: \"ForStatement\"\r\n        }\r\n      });\r\n    }\r\n    node.left = init;\r\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\r\n    this.expect(11);\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\r\n    this.scope.exit();\r\n    this.state.labels.pop();\r\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\r\n  }\r\n  parseVar(node, isFor, kind, allowMissingInitializer = false) {\r\n    const declarations = node.declarations = [];\r\n    node.kind = kind;\r\n    for (;;) {\r\n      const decl = this.startNode();\r\n      this.parseVarId(decl, kind);\r\n      decl.init = !this.eat(29) ? null : isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\r\n      if (decl.init === null && !allowMissingInitializer) {\r\n        if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(58) || this.isContextual(101)))) {\r\n          this.raise(Errors.DeclarationMissingInitializer, {\r\n            at: this.state.lastTokEndLoc,\r\n            kind: \"destructuring\"\r\n          });\r\n        } else if (kind === \"const\" && !(this.match(58) || this.isContextual(101))) {\r\n          this.raise(Errors.DeclarationMissingInitializer, {\r\n            at: this.state.lastTokEndLoc,\r\n            kind: \"const\"\r\n          });\r\n        }\r\n      }\r\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\r\n      if (!this.eat(12)) break;\r\n    }\r\n    return node;\r\n  }\r\n  parseVarId(decl, kind) {\r\n    if (kind === \"using\" && !this.inModule && this.match(96)) {\r\n      this.raise(Errors.AwaitInUsingBinding, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    const id = this.parseBindingAtom();\r\n    this.checkLVal(id, {\r\n      in: {\r\n        type: \"VariableDeclarator\"\r\n      },\r\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL\r\n    });\r\n    decl.id = id;\r\n  }\r\n  parseAsyncFunctionExpression(node) {\r\n    return this.parseFunction(node, 8);\r\n  }\r\n  parseFunction(node, flags = 0) {\r\n    const hangingDeclaration = flags & 2;\r\n    const isDeclaration = !!(flags & 1);\r\n    const requireId = isDeclaration && !(flags & 4);\r\n    const isAsync = !!(flags & 8);\r\n    this.initFunction(node, isAsync);\r\n    if (this.match(55)) {\r\n      if (hangingDeclaration) {\r\n        this.raise(Errors.GeneratorInSingleStatementContext, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      this.next();\r\n      node.generator = true;\r\n    }\r\n    if (isDeclaration) {\r\n      node.id = this.parseFunctionId(requireId);\r\n    }\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n    this.state.maybeInArrowParameters = false;\r\n    this.scope.enter(SCOPE_FUNCTION);\r\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\r\n    if (!isDeclaration) {\r\n      node.id = this.parseFunctionId();\r\n    }\r\n    this.parseFunctionParams(node, false);\r\n    this.withSmartMixTopicForbiddingContext(() => {\r\n      this.parseFunctionBodyAndFinish(node, isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\");\r\n    });\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n    if (isDeclaration && !hangingDeclaration) {\r\n      this.registerFunctionStatementId(node);\r\n    }\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n    return node;\r\n  }\r\n  parseFunctionId(requireId) {\r\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\r\n  }\r\n  parseFunctionParams(node, isConstructor) {\r\n    this.expect(10);\r\n    this.expressionScope.enter(newParameterDeclarationScope());\r\n    node.params = this.parseBindingList(11, 41, 2 | (isConstructor ? 4 : 0));\r\n    this.expressionScope.exit();\r\n  }\r\n  registerFunctionStatementId(node) {\r\n    if (!node.id) return;\r\n    this.scope.declareName(node.id.name, !this.options.annexB || this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.loc.start);\r\n  }\r\n  parseClass(node, isStatement, optionalId) {\r\n    this.next();\r\n    const oldStrict = this.state.strict;\r\n    this.state.strict = true;\r\n    this.parseClassId(node, isStatement, optionalId);\r\n    this.parseClassSuper(node);\r\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\r\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\r\n  }\r\n  isClassProperty() {\r\n    return this.match(29) || this.match(13) || this.match(8);\r\n  }\r\n  isClassMethod() {\r\n    return this.match(10);\r\n  }\r\n  isNonstaticConstructor(method) {\r\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\r\n  }\r\n  parseClassBody(hadSuperClass, oldStrict) {\r\n    this.classScope.enter();\r\n    const state = {\r\n      hadConstructor: false,\r\n      hadSuperClass\r\n    };\r\n    let decorators = [];\r\n    const classBody = this.startNode();\r\n    classBody.body = [];\r\n    this.expect(5);\r\n    this.withSmartMixTopicForbiddingContext(() => {\r\n      while (!this.match(8)) {\r\n        if (this.eat(13)) {\r\n          if (decorators.length > 0) {\r\n            throw this.raise(Errors.DecoratorSemicolon, {\r\n              at: this.state.lastTokEndLoc\r\n            });\r\n          }\r\n          continue;\r\n        }\r\n        if (this.match(26)) {\r\n          decorators.push(this.parseDecorator());\r\n          continue;\r\n        }\r\n        const member = this.startNode();\r\n        if (decorators.length) {\r\n          member.decorators = decorators;\r\n          this.resetStartLocationFromNode(member, decorators[0]);\r\n          decorators = [];\r\n        }\r\n        this.parseClassMember(classBody, member, state);\r\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\r\n          this.raise(Errors.DecoratorConstructor, {\r\n            at: member\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.state.strict = oldStrict;\r\n    this.next();\r\n    if (decorators.length) {\r\n      throw this.raise(Errors.TrailingDecorator, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    this.classScope.exit();\r\n    return this.finishNode(classBody, \"ClassBody\");\r\n  }\r\n  parseClassMemberFromModifier(classBody, member) {\r\n    const key = this.parseIdentifier(true);\r\n    if (this.isClassMethod()) {\r\n      const method = member;\r\n      method.kind = \"method\";\r\n      method.computed = false;\r\n      method.key = key;\r\n      method.static = false;\r\n      this.pushClassMethod(classBody, method, false, false, false, false);\r\n      return true;\r\n    } else if (this.isClassProperty()) {\r\n      const prop = member;\r\n      prop.computed = false;\r\n      prop.key = key;\r\n      prop.static = false;\r\n      classBody.body.push(this.parseClassProperty(prop));\r\n      return true;\r\n    }\r\n    this.resetPreviousNodeTrailingComments(key);\r\n    return false;\r\n  }\r\n  parseClassMember(classBody, member, state) {\r\n    const isStatic = this.isContextual(104);\r\n    if (isStatic) {\r\n      if (this.parseClassMemberFromModifier(classBody, member)) {\r\n        return;\r\n      }\r\n      if (this.eat(5)) {\r\n        this.parseClassStaticBlock(classBody, member);\r\n        return;\r\n      }\r\n    }\r\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\r\n  }\r\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\r\n    const publicMethod = member;\r\n    const privateMethod = member;\r\n    const publicProp = member;\r\n    const privateProp = member;\r\n    const accessorProp = member;\r\n    const method = publicMethod;\r\n    const publicMember = publicMethod;\r\n    member.static = isStatic;\r\n    this.parsePropertyNamePrefixOperator(member);\r\n    if (this.eat(55)) {\r\n      method.kind = \"method\";\r\n      const isPrivateName = this.match(136);\r\n      this.parseClassElementName(method);\r\n      if (isPrivateName) {\r\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\r\n        return;\r\n      }\r\n      if (this.isNonstaticConstructor(publicMethod)) {\r\n        this.raise(Errors.ConstructorIsGenerator, {\r\n          at: publicMethod.key\r\n        });\r\n      }\r\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\r\n      return;\r\n    }\r\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\r\n    const isPrivate = this.match(136);\r\n    const key = this.parseClassElementName(member);\r\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\r\n    this.parsePostMemberNameModifiers(publicMember);\r\n    if (this.isClassMethod()) {\r\n      method.kind = \"method\";\r\n      if (isPrivate) {\r\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\r\n        return;\r\n      }\r\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\r\n      let allowsDirectSuper = false;\r\n      if (isConstructor) {\r\n        publicMethod.kind = \"constructor\";\r\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\r\n          this.raise(Errors.DuplicateConstructor, {\r\n            at: key\r\n          });\r\n        }\r\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\r\n          this.raise(Errors.OverrideOnConstructor, {\r\n            at: key\r\n          });\r\n        }\r\n        state.hadConstructor = true;\r\n        allowsDirectSuper = state.hadSuperClass;\r\n      }\r\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\r\n    } else if (this.isClassProperty()) {\r\n      if (isPrivate) {\r\n        this.pushClassPrivateProperty(classBody, privateProp);\r\n      } else {\r\n        this.pushClassProperty(classBody, publicProp);\r\n      }\r\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\r\n      this.resetPreviousNodeTrailingComments(key);\r\n      const isGenerator = this.eat(55);\r\n      if (publicMember.optional) {\r\n        this.unexpected(maybeQuestionTokenStartLoc);\r\n      }\r\n      method.kind = \"method\";\r\n      const isPrivate = this.match(136);\r\n      this.parseClassElementName(method);\r\n      this.parsePostMemberNameModifiers(publicMember);\r\n      if (isPrivate) {\r\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\r\n      } else {\r\n        if (this.isNonstaticConstructor(publicMethod)) {\r\n          this.raise(Errors.ConstructorIsAsync, {\r\n            at: publicMethod.key\r\n          });\r\n        }\r\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\r\n      }\r\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(55) && this.isLineTerminator())) {\r\n      this.resetPreviousNodeTrailingComments(key);\r\n      method.kind = key.name;\r\n      const isPrivate = this.match(136);\r\n      this.parseClassElementName(publicMethod);\r\n      if (isPrivate) {\r\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\r\n      } else {\r\n        if (this.isNonstaticConstructor(publicMethod)) {\r\n          this.raise(Errors.ConstructorIsAccessor, {\r\n            at: publicMethod.key\r\n          });\r\n        }\r\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\r\n      }\r\n      this.checkGetterSetterParams(publicMethod);\r\n    } else if (isContextual && key.name === \"accessor\" && !this.isLineTerminator()) {\r\n      this.expectPlugin(\"decoratorAutoAccessors\");\r\n      this.resetPreviousNodeTrailingComments(key);\r\n      const isPrivate = this.match(136);\r\n      this.parseClassElementName(publicProp);\r\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\r\n    } else if (this.isLineTerminator()) {\r\n      if (isPrivate) {\r\n        this.pushClassPrivateProperty(classBody, privateProp);\r\n      } else {\r\n        this.pushClassProperty(classBody, publicProp);\r\n      }\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n  }\r\n  parseClassElementName(member) {\r\n    const {\r\n      type,\r\n      value\r\n    } = this.state;\r\n    if ((type === 130 || type === 131) && member.static && value === \"prototype\") {\r\n      this.raise(Errors.StaticPrototype, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    if (type === 136) {\r\n      if (value === \"constructor\") {\r\n        this.raise(Errors.ConstructorClassPrivateField, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      const key = this.parsePrivateName();\r\n      member.key = key;\r\n      return key;\r\n    }\r\n    return this.parsePropertyName(member);\r\n  }\r\n  parseClassStaticBlock(classBody, member) {\r\n    var _member$decorators;\r\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\r\n    const oldLabels = this.state.labels;\r\n    this.state.labels = [];\r\n    this.prodParam.enter(PARAM);\r\n    const body = member.body = [];\r\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n    this.state.labels = oldLabels;\r\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\r\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\r\n      this.raise(Errors.DecoratorStaticBlock, {\r\n        at: member\r\n      });\r\n    }\r\n  }\r\n  pushClassProperty(classBody, prop) {\r\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\r\n      this.raise(Errors.ConstructorClassField, {\r\n        at: prop.key\r\n      });\r\n    }\r\n    classBody.body.push(this.parseClassProperty(prop));\r\n  }\r\n  pushClassPrivateProperty(classBody, prop) {\r\n    const node = this.parseClassPrivateProperty(prop);\r\n    classBody.body.push(node);\r\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\r\n  }\r\n  pushClassAccessorProperty(classBody, prop, isPrivate) {\r\n    if (!isPrivate && !prop.computed) {\r\n      const key = prop.key;\r\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\r\n        this.raise(Errors.ConstructorClassField, {\r\n          at: key\r\n        });\r\n      }\r\n    }\r\n    const node = this.parseClassAccessorProperty(prop);\r\n    classBody.body.push(node);\r\n    if (isPrivate) {\r\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\r\n    }\r\n  }\r\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\r\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\r\n  }\r\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\r\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\r\n    classBody.body.push(node);\r\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\r\n    this.declareClassPrivateMethodInScope(node, kind);\r\n  }\r\n  declareClassPrivateMethodInScope(node, kind) {\r\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.loc.start);\r\n  }\r\n  parsePostMemberNameModifiers(methodOrProp) {}\r\n  parseClassPrivateProperty(node) {\r\n    this.parseInitializer(node);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ClassPrivateProperty\");\r\n  }\r\n  parseClassProperty(node) {\r\n    this.parseInitializer(node);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ClassProperty\");\r\n  }\r\n  parseClassAccessorProperty(node) {\r\n    this.parseInitializer(node);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ClassAccessorProperty\");\r\n  }\r\n  parseInitializer(node) {\r\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\r\n    this.expressionScope.enter(newExpressionScope());\r\n    this.prodParam.enter(PARAM);\r\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\r\n    this.expressionScope.exit();\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n  }\r\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\r\n    if (tokenIsIdentifier(this.state.type)) {\r\n      node.id = this.parseIdentifier();\r\n      if (isStatement) {\r\n        this.declareNameFromIdentifier(node.id, bindingType);\r\n      }\r\n    } else {\r\n      if (optionalId || !isStatement) {\r\n        node.id = null;\r\n      } else {\r\n        throw this.raise(Errors.MissingClassName, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n    }\r\n  }\r\n  parseClassSuper(node) {\r\n    node.superClass = this.eat(81) ? this.parseExprSubscripts() : null;\r\n  }\r\n  parseExport(node, decorators) {\r\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\r\n    const parseAfterDefault = !hasDefault || this.eat(12);\r\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\r\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\r\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\r\n    const isFromRequired = hasDefault || hasStar;\r\n    if (hasStar && !hasNamespace) {\r\n      if (hasDefault) this.unexpected();\r\n      if (decorators) {\r\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\r\n          at: node\r\n        });\r\n      }\r\n      this.parseExportFrom(node, true);\r\n      return this.finishNode(node, \"ExportAllDeclaration\");\r\n    }\r\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\r\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\r\n      this.unexpected(null, 5);\r\n    }\r\n    if (hasNamespace && parseAfterNamespace) {\r\n      this.unexpected(null, 97);\r\n    }\r\n    let hasDeclaration;\r\n    if (isFromRequired || hasSpecifiers) {\r\n      hasDeclaration = false;\r\n      if (decorators) {\r\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\r\n          at: node\r\n        });\r\n      }\r\n      this.parseExportFrom(node, isFromRequired);\r\n    } else {\r\n      hasDeclaration = this.maybeParseExportDeclaration(node);\r\n    }\r\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\r\n      var _node2$declaration;\r\n      const node2 = node;\r\n      this.checkExport(node2, true, false, !!node2.source);\r\n      if (((_node2$declaration = node2.declaration) == null ? void 0 : _node2$declaration.type) === \"ClassDeclaration\") {\r\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\r\n      } else if (decorators) {\r\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\r\n          at: node\r\n        });\r\n      }\r\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\r\n    }\r\n    if (this.eat(65)) {\r\n      const node2 = node;\r\n      const decl = this.parseExportDefaultExpression();\r\n      node2.declaration = decl;\r\n      if (decl.type === \"ClassDeclaration\") {\r\n        this.maybeTakeDecorators(decorators, decl, node2);\r\n      } else if (decorators) {\r\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\r\n          at: node\r\n        });\r\n      }\r\n      this.checkExport(node2, true, true);\r\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\r\n    }\r\n    this.unexpected(null, 5);\r\n  }\r\n  eatExportStar(node) {\r\n    return this.eat(55);\r\n  }\r\n  maybeParseExportDefaultSpecifier(node) {\r\n    if (this.isExportDefaultSpecifier()) {\r\n      this.expectPlugin(\"exportDefaultFrom\");\r\n      const specifier = this.startNode();\r\n      specifier.exported = this.parseIdentifier(true);\r\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  maybeParseExportNamespaceSpecifier(node) {\r\n    if (this.isContextual(93)) {\r\n      if (!node.specifiers) node.specifiers = [];\r\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\r\n      this.next();\r\n      specifier.exported = this.parseModuleExportName();\r\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  maybeParseExportNamedSpecifiers(node) {\r\n    if (this.match(5)) {\r\n      if (!node.specifiers) node.specifiers = [];\r\n      const isTypeExport = node.exportKind === \"type\";\r\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\r\n      node.source = null;\r\n      node.declaration = null;\r\n      if (this.hasPlugin(\"importAssertions\")) {\r\n        node.assertions = [];\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  maybeParseExportDeclaration(node) {\r\n    if (this.shouldParseExportDeclaration()) {\r\n      node.specifiers = [];\r\n      node.source = null;\r\n      if (this.hasPlugin(\"importAssertions\")) {\r\n        node.assertions = [];\r\n      }\r\n      node.declaration = this.parseExportDeclaration(node);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  isAsyncFunction() {\r\n    if (!this.isContextual(95)) return false;\r\n    const next = this.nextTokenStart();\r\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\r\n  }\r\n  parseExportDefaultExpression() {\r\n    const expr = this.startNode();\r\n    if (this.match(68)) {\r\n      this.next();\r\n      return this.parseFunction(expr, 1 | 4);\r\n    } else if (this.isAsyncFunction()) {\r\n      this.next();\r\n      this.next();\r\n      return this.parseFunction(expr, 1 | 4 | 8);\r\n    }\r\n    if (this.match(80)) {\r\n      return this.parseClass(expr, true, true);\r\n    }\r\n    if (this.match(26)) {\r\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\r\n        this.raise(Errors.DecoratorBeforeExport, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      return this.parseClass(this.maybeTakeDecorators(this.parseDecorators(false), this.startNode()), true, true);\r\n    }\r\n    if (this.match(75) || this.match(74) || this.isLet()) {\r\n      throw this.raise(Errors.UnsupportedDefaultExport, {\r\n        at: this.state.startLoc\r\n      });\r\n    }\r\n    const res = this.parseMaybeAssignAllowIn();\r\n    this.semicolon();\r\n    return res;\r\n  }\r\n  parseExportDeclaration(node) {\r\n    if (this.match(80)) {\r\n      const node = this.parseClass(this.startNode(), true, false);\r\n      return node;\r\n    }\r\n    return this.parseStatementListItem();\r\n  }\r\n  isExportDefaultSpecifier() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n    if (tokenIsIdentifier(type)) {\r\n      if (type === 95 && !this.state.containsEsc || type === 99) {\r\n        return false;\r\n      }\r\n      if ((type === 128 || type === 127) && !this.state.containsEsc) {\r\n        const {\r\n          type: nextType\r\n        } = this.lookahead();\r\n        if (tokenIsIdentifier(nextType) && nextType !== 97 || nextType === 5) {\r\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\r\n          return false;\r\n        }\r\n      }\r\n    } else if (!this.match(65)) {\r\n      return false;\r\n    }\r\n    const next = this.nextTokenStart();\r\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\r\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\r\n      return true;\r\n    }\r\n    if (this.match(65) && hasFrom) {\r\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\r\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\r\n    }\r\n    return false;\r\n  }\r\n  parseExportFrom(node, expect) {\r\n    if (this.eatContextual(97)) {\r\n      node.source = this.parseImportSource();\r\n      this.checkExport(node);\r\n      const assertions = this.maybeParseImportAssertions();\r\n      if (assertions) {\r\n        node.assertions = assertions;\r\n        this.checkJSONModuleImport(node);\r\n      }\r\n    } else if (expect) {\r\n      this.unexpected();\r\n    }\r\n    this.semicolon();\r\n  }\r\n  shouldParseExportDeclaration() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n    if (type === 26) {\r\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\r\n      if (this.hasPlugin(\"decorators\")) {\r\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\r\n          this.raise(Errors.DecoratorBeforeExport, {\r\n            at: this.state.startLoc\r\n          });\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n    return type === 74 || type === 75 || type === 68 || type === 80 || this.isLet() || this.isAsyncFunction();\r\n  }\r\n  checkExport(node, checkNames, isDefault, isFrom) {\r\n    if (checkNames) {\r\n      if (isDefault) {\r\n        this.checkDuplicateExports(node, \"default\");\r\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\r\n          var _declaration$extra;\r\n          const declaration = node.declaration;\r\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\r\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\r\n              at: declaration\r\n            });\r\n          }\r\n        }\r\n      } else if (node.specifiers && node.specifiers.length) {\r\n        for (const specifier of node.specifiers) {\r\n          const {\r\n            exported\r\n          } = specifier;\r\n          const exportName = exported.type === \"Identifier\" ? exported.name : exported.value;\r\n          this.checkDuplicateExports(specifier, exportName);\r\n          if (!isFrom && specifier.local) {\r\n            const {\r\n              local\r\n            } = specifier;\r\n            if (local.type !== \"Identifier\") {\r\n              this.raise(Errors.ExportBindingIsString, {\r\n                at: specifier,\r\n                localName: local.value,\r\n                exportName\r\n              });\r\n            } else {\r\n              this.checkReservedWord(local.name, local.loc.start, true, false);\r\n              this.scope.checkLocalExport(local);\r\n            }\r\n          }\r\n        }\r\n      } else if (node.declaration) {\r\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\r\n          const id = node.declaration.id;\r\n          if (!id) throw new Error(\"Assertion failure\");\r\n          this.checkDuplicateExports(node, id.name);\r\n        } else if (node.declaration.type === \"VariableDeclaration\") {\r\n          for (const declaration of node.declaration.declarations) {\r\n            this.checkDeclaration(declaration.id);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  checkDeclaration(node) {\r\n    if (node.type === \"Identifier\") {\r\n      this.checkDuplicateExports(node, node.name);\r\n    } else if (node.type === \"ObjectPattern\") {\r\n      for (const prop of node.properties) {\r\n        this.checkDeclaration(prop);\r\n      }\r\n    } else if (node.type === \"ArrayPattern\") {\r\n      for (const elem of node.elements) {\r\n        if (elem) {\r\n          this.checkDeclaration(elem);\r\n        }\r\n      }\r\n    } else if (node.type === \"ObjectProperty\") {\r\n      this.checkDeclaration(node.value);\r\n    } else if (node.type === \"RestElement\") {\r\n      this.checkDeclaration(node.argument);\r\n    } else if (node.type === \"AssignmentPattern\") {\r\n      this.checkDeclaration(node.left);\r\n    }\r\n  }\r\n  checkDuplicateExports(node, exportName) {\r\n    if (this.exportedIdentifiers.has(exportName)) {\r\n      if (exportName === \"default\") {\r\n        this.raise(Errors.DuplicateDefaultExport, {\r\n          at: node\r\n        });\r\n      } else {\r\n        this.raise(Errors.DuplicateExport, {\r\n          at: node,\r\n          exportName\r\n        });\r\n      }\r\n    }\r\n    this.exportedIdentifiers.add(exportName);\r\n  }\r\n  parseExportSpecifiers(isInTypeExport) {\r\n    const nodes = [];\r\n    let first = true;\r\n    this.expect(5);\r\n    while (!this.eat(8)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n        if (this.eat(8)) break;\r\n      }\r\n      const isMaybeTypeOnly = this.isContextual(128);\r\n      const isString = this.match(131);\r\n      const node = this.startNode();\r\n      node.local = this.parseModuleExportName();\r\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\r\n    }\r\n    return nodes;\r\n  }\r\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\r\n    if (this.eatContextual(93)) {\r\n      node.exported = this.parseModuleExportName();\r\n    } else if (isString) {\r\n      node.exported = cloneStringLiteral(node.local);\r\n    } else if (!node.exported) {\r\n      node.exported = cloneIdentifier(node.local);\r\n    }\r\n    return this.finishNode(node, \"ExportSpecifier\");\r\n  }\r\n  parseModuleExportName() {\r\n    if (this.match(131)) {\r\n      const result = this.parseStringLiteral(this.state.value);\r\n      const surrogate = result.value.match(loneSurrogate);\r\n      if (surrogate) {\r\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\r\n          at: result,\r\n          surrogateCharCode: surrogate[0].charCodeAt(0)\r\n        });\r\n      }\r\n      return result;\r\n    }\r\n    return this.parseIdentifier(true);\r\n  }\r\n  isJSONModuleImport(node) {\r\n    if (node.assertions != null) {\r\n      return node.assertions.some(({\r\n        key,\r\n        value\r\n      }) => {\r\n        return value.value === \"json\" && (key.type === \"Identifier\" ? key.name === \"type\" : key.value === \"type\");\r\n      });\r\n    }\r\n    return false;\r\n  }\r\n  checkImportReflection(node) {\r\n    if (node.module) {\r\n      var _node$assertions;\r\n      if (node.specifiers.length !== 1 || node.specifiers[0].type !== \"ImportDefaultSpecifier\") {\r\n        this.raise(Errors.ImportReflectionNotBinding, {\r\n          at: node.specifiers[0].loc.start\r\n        });\r\n      }\r\n      if (((_node$assertions = node.assertions) == null ? void 0 : _node$assertions.length) > 0) {\r\n        this.raise(Errors.ImportReflectionHasAssertion, {\r\n          at: node.specifiers[0].loc.start\r\n        });\r\n      }\r\n    }\r\n  }\r\n  checkJSONModuleImport(node) {\r\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\r\n      const {\r\n        specifiers\r\n      } = node;\r\n      if (specifiers != null) {\r\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\r\n          let imported;\r\n          if (specifier.type === \"ExportSpecifier\") {\r\n            imported = specifier.local;\r\n          } else if (specifier.type === \"ImportSpecifier\") {\r\n            imported = specifier.imported;\r\n          }\r\n          if (imported !== undefined) {\r\n            return imported.type === \"Identifier\" ? imported.name !== \"default\" : imported.value !== \"default\";\r\n          }\r\n        });\r\n        if (nonDefaultNamedSpecifier !== undefined) {\r\n          this.raise(Errors.ImportJSONBindingNotDefault, {\r\n            at: nonDefaultNamedSpecifier.loc.start\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  parseMaybeImportReflection(node) {\r\n    let isImportReflection = false;\r\n    if (this.isContextual(125)) {\r\n      const lookahead = this.lookahead();\r\n      const nextType = lookahead.type;\r\n      if (tokenIsIdentifier(nextType)) {\r\n        if (nextType !== 97) {\r\n          isImportReflection = true;\r\n        } else {\r\n          const nextNextTokenFirstChar = this.input.charCodeAt(this.nextTokenStartSince(lookahead.end));\r\n          if (nextNextTokenFirstChar === 102) {\r\n            isImportReflection = true;\r\n          }\r\n        }\r\n      } else if (nextType !== 12) {\r\n        isImportReflection = true;\r\n      }\r\n    }\r\n    if (isImportReflection) {\r\n      this.expectPlugin(\"importReflection\");\r\n      this.next();\r\n      node.module = true;\r\n    } else if (this.hasPlugin(\"importReflection\")) {\r\n      node.module = false;\r\n    }\r\n  }\r\n  parseImport(node) {\r\n    node.specifiers = [];\r\n    if (!this.match(131)) {\r\n      this.parseMaybeImportReflection(node);\r\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\r\n      const parseNext = !hasDefault || this.eat(12);\r\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\r\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\r\n      this.expectContextual(97);\r\n    }\r\n    node.source = this.parseImportSource();\r\n    const assertions = this.maybeParseImportAssertions();\r\n    if (assertions) {\r\n      node.assertions = assertions;\r\n    } else {\r\n      const attributes = this.maybeParseModuleAttributes();\r\n      if (attributes) {\r\n        node.attributes = attributes;\r\n      }\r\n    }\r\n    this.checkImportReflection(node);\r\n    this.checkJSONModuleImport(node);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ImportDeclaration\");\r\n  }\r\n  parseImportSource() {\r\n    if (!this.match(131)) this.unexpected();\r\n    return this.parseExprAtom();\r\n  }\r\n  shouldParseDefaultImport(node) {\r\n    return tokenIsIdentifier(this.state.type);\r\n  }\r\n  parseImportSpecifierLocal(node, specifier, type) {\r\n    specifier.local = this.parseIdentifier();\r\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\r\n  }\r\n  finishImportSpecifier(specifier, type, bindingType = BIND_LEXICAL) {\r\n    this.checkLVal(specifier.local, {\r\n      in: {\r\n        type\r\n      },\r\n      binding: bindingType\r\n    });\r\n    return this.finishNode(specifier, type);\r\n  }\r\n  parseAssertEntries() {\r\n    const attrs = [];\r\n    const attrNames = new Set();\r\n    do {\r\n      if (this.match(8)) {\r\n        break;\r\n      }\r\n      const node = this.startNode();\r\n      const keyName = this.state.value;\r\n      if (attrNames.has(keyName)) {\r\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\r\n          at: this.state.startLoc,\r\n          key: keyName\r\n        });\r\n      }\r\n      attrNames.add(keyName);\r\n      if (this.match(131)) {\r\n        node.key = this.parseStringLiteral(keyName);\r\n      } else {\r\n        node.key = this.parseIdentifier(true);\r\n      }\r\n      this.expect(14);\r\n      if (!this.match(131)) {\r\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      node.value = this.parseStringLiteral(this.state.value);\r\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\r\n    } while (this.eat(12));\r\n    return attrs;\r\n  }\r\n  maybeParseModuleAttributes() {\r\n    if (this.match(76) && !this.hasPrecedingLineBreak()) {\r\n      this.expectPlugin(\"moduleAttributes\");\r\n      this.next();\r\n    } else {\r\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\r\n      return null;\r\n    }\r\n    const attrs = [];\r\n    const attributes = new Set();\r\n    do {\r\n      const node = this.startNode();\r\n      node.key = this.parseIdentifier(true);\r\n      if (node.key.name !== \"type\") {\r\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\r\n          at: node.key\r\n        });\r\n      }\r\n      if (attributes.has(node.key.name)) {\r\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\r\n          at: node.key,\r\n          key: node.key.name\r\n        });\r\n      }\r\n      attributes.add(node.key.name);\r\n      this.expect(14);\r\n      if (!this.match(131)) {\r\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\r\n          at: this.state.startLoc\r\n        });\r\n      }\r\n      node.value = this.parseStringLiteral(this.state.value);\r\n      this.finishNode(node, \"ImportAttribute\");\r\n      attrs.push(node);\r\n    } while (this.eat(12));\r\n    return attrs;\r\n  }\r\n  maybeParseImportAssertions() {\r\n    if (this.isContextual(94) && !this.hasPrecedingLineBreak()) {\r\n      this.expectPlugin(\"importAssertions\");\r\n      this.next();\r\n    } else {\r\n      if (this.hasPlugin(\"importAssertions\")) return [];\r\n      return null;\r\n    }\r\n    this.eat(5);\r\n    const attrs = this.parseAssertEntries();\r\n    this.eat(8);\r\n    return attrs;\r\n  }\r\n  maybeParseDefaultImportSpecifier(node) {\r\n    if (this.shouldParseDefaultImport(node)) {\r\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\");\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  maybeParseStarImportSpecifier(node) {\r\n    if (this.match(55)) {\r\n      const specifier = this.startNode();\r\n      this.next();\r\n      this.expectContextual(93);\r\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\");\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  parseNamedImportSpecifiers(node) {\r\n    let first = true;\r\n    this.expect(5);\r\n    while (!this.eat(8)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        if (this.eat(14)) {\r\n          throw this.raise(Errors.DestructureNamedImport, {\r\n            at: this.state.startLoc\r\n          });\r\n        }\r\n        this.expect(12);\r\n        if (this.eat(8)) break;\r\n      }\r\n      const specifier = this.startNode();\r\n      const importedIsString = this.match(131);\r\n      const isMaybeTypeOnly = this.isContextual(128);\r\n      specifier.imported = this.parseModuleExportName();\r\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly, undefined);\r\n      node.specifiers.push(importSpecifier);\r\n    }\r\n  }\r\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\r\n    if (this.eatContextual(93)) {\r\n      specifier.local = this.parseIdentifier();\r\n    } else {\r\n      const {\r\n        imported\r\n      } = specifier;\r\n      if (importedIsString) {\r\n        throw this.raise(Errors.ImportBindingIsString, {\r\n          at: specifier,\r\n          importName: imported.value\r\n        });\r\n      }\r\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\r\n      if (!specifier.local) {\r\n        specifier.local = cloneIdentifier(imported);\r\n      }\r\n    }\r\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\", bindingType);\r\n  }\r\n  isThisParam(param) {\r\n    return param.type === \"Identifier\" && param.name === \"this\";\r\n  }\r\n}\r\nlet Parser$2 = class Parser extends StatementParser {\r\n  constructor(options, input) {\r\n    options = getOptions(options);\r\n    super(options, input);\r\n    this.options = options;\r\n    this.initializeScopes();\r\n    this.plugins = pluginsMap(this.options.plugins);\r\n    this.filename = options.sourceFilename;\r\n  }\r\n  getScopeHandler() {\r\n    return ScopeHandler;\r\n  }\r\n  parse() {\r\n    this.enterInitialScopes();\r\n    const file = this.startNode();\r\n    const program = this.startNode();\r\n    this.nextToken();\r\n    file.errors = null;\r\n    this.parseTopLevel(file, program);\r\n    file.errors = this.state.errors;\r\n    return file;\r\n  }\r\n};\r\nfunction pluginsMap(plugins) {\r\n  const pluginMap = new Map();\r\n  for (const plugin of plugins) {\r\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\r\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\r\n  }\r\n  return pluginMap;\r\n}\r\nfunction parse$9(input, options) {\r\n  var _options;\r\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\r\n    options = Object.assign({}, options);\r\n    try {\r\n      options.sourceType = \"module\";\r\n      const parser = getParser(options, input);\r\n      const ast = parser.parse();\r\n      if (parser.sawUnambiguousESM) {\r\n        return ast;\r\n      }\r\n      if (parser.ambiguousScriptDifferentAst) {\r\n        try {\r\n          options.sourceType = \"script\";\r\n          return getParser(options, input).parse();\r\n        } catch (_unused) {}\r\n      } else {\r\n        ast.program.sourceType = \"script\";\r\n      }\r\n      return ast;\r\n    } catch (moduleError) {\r\n      try {\r\n        options.sourceType = \"script\";\r\n        return getParser(options, input).parse();\r\n      } catch (_unused2) {}\r\n      throw moduleError;\r\n    }\r\n  } else {\r\n    return getParser(options, input).parse();\r\n  }\r\n}\r\nfunction parseExpression(input, options) {\r\n  const parser = getParser(options, input);\r\n  if (parser.options.strictMode) {\r\n    parser.state.strict = true;\r\n  }\r\n  return parser.getExpression();\r\n}\r\nfunction generateExportedTokenTypes(internalTokenTypes) {\r\n  const tokenTypes = {};\r\n  for (const typeName of Object.keys(internalTokenTypes)) {\r\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\r\n  }\r\n  return tokenTypes;\r\n}\r\nconst tokTypes = generateExportedTokenTypes(tt);\r\nfunction getParser(options, input) {\r\n  let cls = Parser$2;\r\n  if (options != null && options.plugins) {\r\n    validatePlugins(options.plugins);\r\n    cls = getParserClass(options.plugins);\r\n  }\r\n  return new cls(options, input);\r\n}\r\nconst parserClassCache = {};\r\nfunction getParserClass(pluginsFromOptions) {\r\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\r\n  const key = pluginList.join(\"/\");\r\n  let cls = parserClassCache[key];\r\n  if (!cls) {\r\n    cls = Parser$2;\r\n    for (const plugin of pluginList) {\r\n      cls = mixinPlugins[plugin](cls);\r\n    }\r\n    parserClassCache[key] = cls;\r\n  }\r\n  return cls;\r\n}\r\nvar parse_1$1 = lib.parse = parse$9;\r\nvar parseExpression_1 = lib.parseExpression = parseExpression;\r\nlib.tokTypes = tokTypes;\r\n\r\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n  if (isBuiltInType(tag, \"Teleport\")) {\r\n    return TELEPORT;\r\n  } else if (isBuiltInType(tag, \"Suspense\")) {\r\n    return SUSPENSE;\r\n  } else if (isBuiltInType(tag, \"KeepAlive\")) {\r\n    return KEEP_ALIVE;\r\n  } else if (isBuiltInType(tag, \"BaseTransition\")) {\r\n    return BASE_TRANSITION;\r\n  }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\nconst isMemberExpressionBrowser = (path) => {\r\n  path = path.trim().replace(whitespaceRE, (s) => s.trim());\r\n  let state = 0 /* inMemberExp */;\r\n  let stateStack = [];\r\n  let currentOpenBracketCount = 0;\r\n  let currentOpenParensCount = 0;\r\n  let currentStringType = null;\r\n  for (let i = 0; i < path.length; i++) {\r\n    const char = path.charAt(i);\r\n    switch (state) {\r\n      case 0 /* inMemberExp */:\r\n        if (char === \"[\") {\r\n          stateStack.push(state);\r\n          state = 1 /* inBrackets */;\r\n          currentOpenBracketCount++;\r\n        } else if (char === \"(\") {\r\n          stateStack.push(state);\r\n          state = 2 /* inParens */;\r\n          currentOpenParensCount++;\r\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n          return false;\r\n        }\r\n        break;\r\n      case 1 /* inBrackets */:\r\n        if (char === `'` || char === `\"` || char === \"`\") {\r\n          stateStack.push(state);\r\n          state = 3 /* inString */;\r\n          currentStringType = char;\r\n        } else if (char === `[`) {\r\n          currentOpenBracketCount++;\r\n        } else if (char === `]`) {\r\n          if (!--currentOpenBracketCount) {\r\n            state = stateStack.pop();\r\n          }\r\n        }\r\n        break;\r\n      case 2 /* inParens */:\r\n        if (char === `'` || char === `\"` || char === \"`\") {\r\n          stateStack.push(state);\r\n          state = 3 /* inString */;\r\n          currentStringType = char;\r\n        } else if (char === `(`) {\r\n          currentOpenParensCount++;\r\n        } else if (char === `)`) {\r\n          if (i === path.length - 1) {\r\n            return false;\r\n          }\r\n          if (!--currentOpenParensCount) {\r\n            state = stateStack.pop();\r\n          }\r\n        }\r\n        break;\r\n      case 3 /* inString */:\r\n        if (char === currentStringType) {\r\n          state = stateStack.pop();\r\n          currentStringType = null;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = (path, context) => {\r\n  try {\r\n    let ret = parseExpression_1(path, {\r\n      plugins: context.expressionPlugins\r\n    });\r\n    if (ret.type === \"TSAsExpression\" || ret.type === \"TSTypeAssertion\") {\r\n      ret = ret.expression;\r\n    }\r\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\";\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\nconst isMemberExpression = isMemberExpressionNode;\r\nfunction getInnerRange(loc, offset, length) {\r\n  const source = loc.source.slice(offset, offset + length);\r\n  const newLoc = {\r\n    source,\r\n    start: advancePositionWithClone(loc.start, loc.source, offset),\r\n    end: loc.end\r\n  };\r\n  if (length != null) {\r\n    newLoc.end = advancePositionWithClone(\r\n      loc.start,\r\n      loc.source,\r\n      offset + length\r\n    );\r\n  }\r\n  return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n  return advancePositionWithMutation(\r\n    extend({}, pos),\r\n    source,\r\n    numberOfCharacters\r\n  );\r\n}\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n  let linesCount = 0;\r\n  let lastNewLinePos = -1;\r\n  for (let i = 0; i < numberOfCharacters; i++) {\r\n    if (source.charCodeAt(i) === 10) {\r\n      linesCount++;\r\n      lastNewLinePos = i;\r\n    }\r\n  }\r\n  pos.offset += numberOfCharacters;\r\n  pos.line += linesCount;\r\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\r\n  return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n  if (!condition) {\r\n    throw new Error(msg || `unexpected compiler condition`);\r\n  }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i];\r\n    if (p.type === 7 && (allowEmpty || p.exp) && (isString$2(name) ? p.name === name : name.test(p.name))) {\r\n      return p;\r\n    }\r\n  }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i];\r\n    if (p.type === 6) {\r\n      if (dynamicOnly)\r\n        continue;\r\n      if (p.name === name && (p.value || allowEmpty)) {\r\n        return p;\r\n      }\r\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\r\n      return p;\r\n    }\r\n  }\r\n}\r\nfunction isStaticArgOf(arg, name) {\r\n  return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n  return node.props.some(\r\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\r\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\r\n    !p.arg.isStatic)\r\n    // v-bind:[foo]\r\n  );\r\n}\r\nfunction isText$1(node) {\r\n  return node.type === 5 || node.type === 2;\r\n}\r\nfunction isVSlot(p) {\r\n  return p.type === 7 && p.name === \"slot\";\r\n}\r\nfunction isTemplateNode(node) {\r\n  return node.type === 1 && node.tagType === 3;\r\n}\r\nfunction isSlotOutlet(node) {\r\n  return node.type === 1 && node.tagType === 2;\r\n}\r\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n  if (props && !isString$2(props) && props.type === 14) {\r\n    const callee = props.callee;\r\n    if (!isString$2(callee) && propsHelperSet.has(callee)) {\r\n      return getUnnormalizedProps(\r\n        props.arguments[0],\r\n        callPath.concat(props)\r\n      );\r\n    }\r\n  }\r\n  return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n  let propsWithInjection;\r\n  let props = node.type === 13 ? node.props : node.arguments[2];\r\n  let callPath = [];\r\n  let parentCall;\r\n  if (props && !isString$2(props) && props.type === 14) {\r\n    const ret = getUnnormalizedProps(props);\r\n    props = ret[0];\r\n    callPath = ret[1];\r\n    parentCall = callPath[callPath.length - 1];\r\n  }\r\n  if (props == null || isString$2(props)) {\r\n    propsWithInjection = createObjectExpression([prop]);\r\n  } else if (props.type === 14) {\r\n    const first = props.arguments[0];\r\n    if (!isString$2(first) && first.type === 15) {\r\n      if (!hasProp(prop, first)) {\r\n        first.properties.unshift(prop);\r\n      }\r\n    } else {\r\n      if (props.callee === TO_HANDLERS) {\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n          createObjectExpression([prop]),\r\n          props\r\n        ]);\r\n      } else {\r\n        props.arguments.unshift(createObjectExpression([prop]));\r\n      }\r\n    }\r\n    !propsWithInjection && (propsWithInjection = props);\r\n  } else if (props.type === 15) {\r\n    if (!hasProp(prop, props)) {\r\n      props.properties.unshift(prop);\r\n    }\r\n    propsWithInjection = props;\r\n  } else {\r\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n      createObjectExpression([prop]),\r\n      props\r\n    ]);\r\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n      parentCall = callPath[callPath.length - 2];\r\n    }\r\n  }\r\n  if (node.type === 13) {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection;\r\n    } else {\r\n      node.props = propsWithInjection;\r\n    }\r\n  } else {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection;\r\n    } else {\r\n      node.arguments[2] = propsWithInjection;\r\n    }\r\n  }\r\n}\r\nfunction hasProp(prop, props) {\r\n  let result = false;\r\n  if (prop.key.type === 4) {\r\n    const propKeyName = prop.key.content;\r\n    result = props.properties.some(\r\n      (p) => p.key.type === 4 && p.key.content === propKeyName\r\n    );\r\n  }\r\n  return result;\r\n}\r\nfunction toValidAssetId(name, type) {\r\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\r\n  })}`;\r\n}\r\nfunction hasScopeRef(node, ids) {\r\n  if (!node || Object.keys(ids).length === 0) {\r\n    return false;\r\n  }\r\n  switch (node.type) {\r\n    case 1:\r\n      for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n          return true;\r\n        }\r\n      }\r\n      return node.children.some((c) => hasScopeRef(c, ids));\r\n    case 11:\r\n      if (hasScopeRef(node.source, ids)) {\r\n        return true;\r\n      }\r\n      return node.children.some((c) => hasScopeRef(c, ids));\r\n    case 9:\r\n      return node.branches.some((b) => hasScopeRef(b, ids));\r\n    case 10:\r\n      if (hasScopeRef(node.condition, ids)) {\r\n        return true;\r\n      }\r\n      return node.children.some((c) => hasScopeRef(c, ids));\r\n    case 4:\r\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\r\n    case 8:\r\n      return node.children.some((c) => isObject$2(c) && hasScopeRef(c, ids));\r\n    case 5:\r\n    case 12:\r\n      return hasScopeRef(node.content, ids);\r\n    case 2:\r\n    case 3:\r\n      return false;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n  if (node.type === 14 && node.callee === WITH_MEMO) {\r\n    return node.arguments[1].returns;\r\n  } else {\r\n    return node;\r\n  }\r\n}\r\n\r\nconst deprecationData = {\r\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\r\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n  },\r\n  [\"COMPILER_V_BIND_SYNC\"]: {\r\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n  },\r\n  [\"COMPILER_V_BIND_PROP\"]: {\r\n    message: `.prop modifier for v-bind has been removed and no longer necessary. Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n  },\r\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\r\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n  },\r\n  [\"COMPILER_V_ON_NATIVE\"]: {\r\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n  },\r\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\r\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n  },\r\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\r\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\r\n  },\r\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\r\n    message: `\"inline-template\" has been removed in Vue 3.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n  },\r\n  [\"COMPILER_FILTER\"]: {\r\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n  }\r\n};\r\nfunction getCompatValue(key, context) {\r\n  const config = context.options ? context.options.compatConfig : context.compatConfig;\r\n  const value = config && config[key];\r\n  if (key === \"MODE\") {\r\n    return value || 3;\r\n  } else {\r\n    return value;\r\n  }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n  const mode = getCompatValue(\"MODE\", context);\r\n  const value = getCompatValue(key, context);\r\n  return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n  const enabled = isCompatEnabled(key, context);\r\n  if (enabled) {\r\n    warnDeprecation(key, context, loc, ...args);\r\n  }\r\n  return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n  const val = getCompatValue(key, context);\r\n  if (val === \"suppress-warning\") {\r\n    return;\r\n  }\r\n  const { message, link } = deprecationData[key];\r\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\r\n  Details: ${link}` : ``}`;\r\n  const err = new SyntaxError(msg);\r\n  err.code = key;\r\n  if (loc)\r\n    err.loc = loc;\r\n  context.onWarn(err);\r\n}\r\n\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n  gt: \">\",\r\n  lt: \"<\",\r\n  amp: \"&\",\r\n  apos: \"'\",\r\n  quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n  delimiters: [`{{`, `}}`],\r\n  getNamespace: () => 0,\r\n  getTextMode: () => 0,\r\n  isVoidTag: NO,\r\n  isPreTag: NO,\r\n  isCustomElement: NO,\r\n  decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n  onError: defaultOnError,\r\n  onWarn: defaultOnWarn,\r\n  comments: true\r\n};\r\nfunction baseParse(content, options = {}) {\r\n  const context = createParserContext(content, options);\r\n  const start = getCursor(context);\r\n  return createRoot(\r\n    parseChildren(context, 0, []),\r\n    getSelection(context, start)\r\n  );\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n  const options = extend({}, defaultParserOptions);\r\n  let key;\r\n  for (key in rawOptions) {\r\n    options[key] = rawOptions[key] === void 0 ? defaultParserOptions[key] : rawOptions[key];\r\n  }\r\n  return {\r\n    options,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    originalSource: content,\r\n    source: content,\r\n    inPre: false,\r\n    inVPre: false,\r\n    onWarn: options.onWarn\r\n  };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n  const parent = last(ancestors);\r\n  const ns = parent ? parent.ns : 0;\r\n  const nodes = [];\r\n  while (!isEnd(context, mode, ancestors)) {\r\n    const s = context.source;\r\n    let node = void 0;\r\n    if (mode === 0 || mode === 1) {\r\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n        node = parseInterpolation(context, mode);\r\n      } else if (mode === 0 && s[0] === \"<\") {\r\n        if (s.length === 1) {\r\n          emitError(context, 5, 1);\r\n        } else if (s[1] === \"!\") {\r\n          if (startsWith(s, \"<!--\")) {\r\n            node = parseComment(context);\r\n          } else if (startsWith(s, \"<!DOCTYPE\")) {\r\n            node = parseBogusComment(context);\r\n          } else if (startsWith(s, \"<![CDATA[\")) {\r\n            if (ns !== 0) {\r\n              node = parseCDATA(context, ancestors);\r\n            } else {\r\n              emitError(context, 1);\r\n              node = parseBogusComment(context);\r\n            }\r\n          } else {\r\n            emitError(context, 11);\r\n            node = parseBogusComment(context);\r\n          }\r\n        } else if (s[1] === \"/\") {\r\n          if (s.length === 2) {\r\n            emitError(context, 5, 2);\r\n          } else if (s[2] === \">\") {\r\n            emitError(context, 14, 2);\r\n            advanceBy(context, 3);\r\n            continue;\r\n          } else if (/[a-z]/i.test(s[2])) {\r\n            emitError(context, 23);\r\n            parseTag(context, TagType.End, parent);\r\n            continue;\r\n          } else {\r\n            emitError(\r\n              context,\r\n              12,\r\n              2\r\n            );\r\n            node = parseBogusComment(context);\r\n          }\r\n        } else if (/[a-z]/i.test(s[1])) {\r\n          node = parseElement(context, ancestors);\r\n        } else if (s[1] === \"?\") {\r\n          emitError(\r\n            context,\r\n            21,\r\n            1\r\n          );\r\n          node = parseBogusComment(context);\r\n        } else {\r\n          emitError(context, 12, 1);\r\n        }\r\n      }\r\n    }\r\n    if (!node) {\r\n      node = parseText(context, mode);\r\n    }\r\n    if (isArray$3(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        pushNode(nodes, node[i]);\r\n      }\r\n    } else {\r\n      pushNode(nodes, node);\r\n    }\r\n  }\r\n  let removedWhitespace = false;\r\n  if (mode !== 2 && mode !== 1) {\r\n    const shouldCondense = context.options.whitespace !== \"preserve\";\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const node = nodes[i];\r\n      if (node.type === 2) {\r\n        if (!context.inPre) {\r\n          if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n            const prev = nodes[i - 1];\r\n            const next = nodes[i + 1];\r\n            if (!prev || !next || shouldCondense && (prev.type === 3 && next.type === 3 || prev.type === 3 && next.type === 1 || prev.type === 1 && next.type === 3 || prev.type === 1 && next.type === 1 && /[\\r\\n]/.test(node.content))) {\r\n              removedWhitespace = true;\r\n              nodes[i] = null;\r\n            } else {\r\n              node.content = \" \";\r\n            }\r\n          } else if (shouldCondense) {\r\n            node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, \" \");\r\n          }\r\n        } else {\r\n          node.content = node.content.replace(/\\r\\n/g, \"\\n\");\r\n        }\r\n      } else if (node.type === 3 && !context.options.comments) {\r\n        removedWhitespace = true;\r\n        nodes[i] = null;\r\n      }\r\n    }\r\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n      const first = nodes[0];\r\n      if (first && first.type === 2) {\r\n        first.content = first.content.replace(/^\\r?\\n/, \"\");\r\n      }\r\n    }\r\n  }\r\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n  if (node.type === 2) {\r\n    const prev = last(nodes);\r\n    if (prev && prev.type === 2 && prev.loc.end.offset === node.loc.start.offset) {\r\n      prev.content += node.content;\r\n      prev.loc.end = node.loc.end;\r\n      prev.loc.source += node.loc.source;\r\n      return;\r\n    }\r\n  }\r\n  nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n  advanceBy(context, 9);\r\n  const nodes = parseChildren(context, 3, ancestors);\r\n  if (context.source.length === 0) {\r\n    emitError(context, 6);\r\n  } else {\r\n    advanceBy(context, 3);\r\n  }\r\n  return nodes;\r\n}\r\nfunction parseComment(context) {\r\n  const start = getCursor(context);\r\n  let content;\r\n  const match = /--(\\!)?>/.exec(context.source);\r\n  if (!match) {\r\n    content = context.source.slice(4);\r\n    advanceBy(context, context.source.length);\r\n    emitError(context, 7);\r\n  } else {\r\n    if (match.index <= 3) {\r\n      emitError(context, 0);\r\n    }\r\n    if (match[1]) {\r\n      emitError(context, 10);\r\n    }\r\n    content = context.source.slice(4, match.index);\r\n    const s = context.source.slice(0, match.index);\r\n    let prevIndex = 1, nestedIndex = 0;\r\n    while ((nestedIndex = s.indexOf(\"<!--\", prevIndex)) !== -1) {\r\n      advanceBy(context, nestedIndex - prevIndex + 1);\r\n      if (nestedIndex + 4 < s.length) {\r\n        emitError(context, 16);\r\n      }\r\n      prevIndex = nestedIndex + 1;\r\n    }\r\n    advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n  }\r\n  return {\r\n    type: 3,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  };\r\n}\r\nfunction parseBogusComment(context) {\r\n  const start = getCursor(context);\r\n  const contentStart = context.source[1] === \"?\" ? 1 : 2;\r\n  let content;\r\n  const closeIndex = context.source.indexOf(\">\");\r\n  if (closeIndex === -1) {\r\n    content = context.source.slice(contentStart);\r\n    advanceBy(context, context.source.length);\r\n  } else {\r\n    content = context.source.slice(contentStart, closeIndex);\r\n    advanceBy(context, closeIndex + 1);\r\n  }\r\n  return {\r\n    type: 3,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n  const wasInPre = context.inPre;\r\n  const wasInVPre = context.inVPre;\r\n  const parent = last(ancestors);\r\n  const element = parseTag(context, TagType.Start, parent);\r\n  const isPreBoundary = context.inPre && !wasInPre;\r\n  const isVPreBoundary = context.inVPre && !wasInVPre;\r\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n    if (isPreBoundary) {\r\n      context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n      context.inVPre = false;\r\n    }\r\n    return element;\r\n  }\r\n  ancestors.push(element);\r\n  const mode = context.options.getTextMode(element, parent);\r\n  const children = parseChildren(context, mode, ancestors);\r\n  ancestors.pop();\r\n  element.children = children;\r\n  if (startsWithEndTagOpen(context.source, element.tag)) {\r\n    parseTag(context, TagType.End, parent);\r\n  } else {\r\n    emitError(context, 24, 0, element.loc.start);\r\n    if (context.source.length === 0 && element.tag.toLowerCase() === \"script\") {\r\n      const first = children[0];\r\n      if (first && startsWith(first.loc.source, \"<!--\")) {\r\n        emitError(context, 8);\r\n      }\r\n    }\r\n  }\r\n  element.loc = getSelection(context, element.loc.start);\r\n  if (isPreBoundary) {\r\n    context.inPre = false;\r\n  }\r\n  if (isVPreBoundary) {\r\n    context.inVPre = false;\r\n  }\r\n  return element;\r\n}\r\nvar TagType = /* @__PURE__ */ ((TagType2) => {\r\n  TagType2[TagType2[\"Start\"] = 0] = \"Start\";\r\n  TagType2[TagType2[\"End\"] = 1] = \"End\";\r\n  return TagType2;\r\n})(TagType || {});\r\nconst isSpecialTemplateDirective = /* @__PURE__ */ makeMap(\r\n  `if,else,else-if,for,slot`\r\n);\r\nfunction parseTag(context, type, parent) {\r\n  const start = getCursor(context);\r\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n  const tag = match[1];\r\n  const ns = context.options.getNamespace(tag, parent);\r\n  advanceBy(context, match[0].length);\r\n  advanceSpaces(context);\r\n  const cursor = getCursor(context);\r\n  const currentSource = context.source;\r\n  if (context.options.isPreTag(tag)) {\r\n    context.inPre = true;\r\n  }\r\n  let props = parseAttributes(context, type);\r\n  if (type === 0 /* Start */ && !context.inVPre && props.some((p) => p.type === 7 && p.name === \"pre\")) {\r\n    context.inVPre = true;\r\n    extend(context, cursor);\r\n    context.source = currentSource;\r\n    props = parseAttributes(context, type).filter((p) => p.name !== \"v-pre\");\r\n  }\r\n  let isSelfClosing = false;\r\n  if (context.source.length === 0) {\r\n    emitError(context, 9);\r\n  } else {\r\n    isSelfClosing = startsWith(context.source, \"/>\");\r\n    if (type === 1 /* End */ && isSelfClosing) {\r\n      emitError(context, 4);\r\n    }\r\n    advanceBy(context, isSelfClosing ? 2 : 1);\r\n  }\r\n  if (type === 1 /* End */) {\r\n    return;\r\n  }\r\n  let tagType = 0;\r\n  if (!context.inVPre) {\r\n    if (tag === \"slot\") {\r\n      tagType = 2;\r\n    } else if (tag === \"template\") {\r\n      if (props.some(\r\n        (p) => p.type === 7 && isSpecialTemplateDirective(p.name)\r\n      )) {\r\n        tagType = 3;\r\n      }\r\n    } else if (isComponent(tag, props, context)) {\r\n      tagType = 1;\r\n    }\r\n  }\r\n  return {\r\n    type: 1,\r\n    ns,\r\n    tag,\r\n    tagType,\r\n    props,\r\n    isSelfClosing,\r\n    children: [],\r\n    loc: getSelection(context, start),\r\n    codegenNode: void 0\r\n    // to be created during transform phase\r\n  };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n  const options = context.options;\r\n  if (options.isCustomElement(tag)) {\r\n    return false;\r\n  }\r\n  if (tag === \"component\" || /^[A-Z]/.test(tag) || isCoreComponent(tag) || options.isBuiltInComponent && options.isBuiltInComponent(tag) || options.isNativeTag && !options.isNativeTag(tag)) {\r\n    return true;\r\n  }\r\n  for (let i = 0; i < props.length; i++) {\r\n    const p = props[i];\r\n    if (p.type === 6) {\r\n      if (p.name === \"is\" && p.value) {\r\n        if (p.value.content.startsWith(\"vue:\")) {\r\n          return true;\r\n        }\r\n      }\r\n    } else {\r\n      if (p.name === \"is\") {\r\n        return true;\r\n      } else if (\r\n        // :is on plain element - only treat as component in compat mode\r\n        p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && false\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction parseAttributes(context, type) {\r\n  const props = [];\r\n  const attributeNames = /* @__PURE__ */ new Set();\r\n  while (context.source.length > 0 && !startsWith(context.source, \">\") && !startsWith(context.source, \"/>\")) {\r\n    if (startsWith(context.source, \"/\")) {\r\n      emitError(context, 22);\r\n      advanceBy(context, 1);\r\n      advanceSpaces(context);\r\n      continue;\r\n    }\r\n    if (type === 1 /* End */) {\r\n      emitError(context, 3);\r\n    }\r\n    const attr = parseAttribute(context, attributeNames);\r\n    if (attr.type === 6 && attr.value && attr.name === \"class\") {\r\n      attr.value.content = attr.value.content.replace(/\\s+/g, \" \").trim();\r\n    }\r\n    if (type === 0 /* Start */) {\r\n      props.push(attr);\r\n    }\r\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n      emitError(context, 15);\r\n    }\r\n    advanceSpaces(context);\r\n  }\r\n  return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n  var _a;\r\n  const start = getCursor(context);\r\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n  const name = match[0];\r\n  if (nameSet.has(name)) {\r\n    emitError(context, 2);\r\n  }\r\n  nameSet.add(name);\r\n  if (name[0] === \"=\") {\r\n    emitError(context, 19);\r\n  }\r\n  {\r\n    const pattern = /[\"'<]/g;\r\n    let m;\r\n    while (m = pattern.exec(name)) {\r\n      emitError(\r\n        context,\r\n        17,\r\n        m.index\r\n      );\r\n    }\r\n  }\r\n  advanceBy(context, name.length);\r\n  let value = void 0;\r\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n    advanceSpaces(context);\r\n    advanceBy(context, 1);\r\n    advanceSpaces(context);\r\n    value = parseAttributeValue(context);\r\n    if (!value) {\r\n      emitError(context, 13);\r\n    }\r\n  }\r\n  const loc = getSelection(context, start);\r\n  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n    const match2 = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(\r\n      name\r\n    );\r\n    let isPropShorthand = startsWith(name, \".\");\r\n    let dirName = match2[1] || (isPropShorthand || startsWith(name, \":\") ? \"bind\" : startsWith(name, \"@\") ? \"on\" : \"slot\");\r\n    let arg;\r\n    if (match2[2]) {\r\n      const isSlot = dirName === \"slot\";\r\n      const startOffset = name.lastIndexOf(\r\n        match2[2],\r\n        name.length - (((_a = match2[3]) == null ? void 0 : _a.length) || 0)\r\n      );\r\n      const loc2 = getSelection(\r\n        context,\r\n        getNewPosition(context, start, startOffset),\r\n        getNewPosition(\r\n          context,\r\n          start,\r\n          startOffset + match2[2].length + (isSlot && match2[3] || \"\").length\r\n        )\r\n      );\r\n      let content = match2[2];\r\n      let isStatic = true;\r\n      if (content.startsWith(\"[\")) {\r\n        isStatic = false;\r\n        if (!content.endsWith(\"]\")) {\r\n          emitError(\r\n            context,\r\n            27\r\n          );\r\n          content = content.slice(1);\r\n        } else {\r\n          content = content.slice(1, content.length - 1);\r\n        }\r\n      } else if (isSlot) {\r\n        content += match2[3] || \"\";\r\n      }\r\n      arg = {\r\n        type: 4,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 : 0,\r\n        loc: loc2\r\n      };\r\n    }\r\n    if (value && value.isQuoted) {\r\n      const valueLoc = value.loc;\r\n      valueLoc.start.offset++;\r\n      valueLoc.start.column++;\r\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n      valueLoc.source = valueLoc.source.slice(1, -1);\r\n    }\r\n    const modifiers = match2[3] ? match2[3].slice(1).split(\".\") : [];\r\n    if (isPropShorthand)\r\n      modifiers.push(\"prop\");\r\n    return {\r\n      type: 7,\r\n      name: dirName,\r\n      exp: value && {\r\n        type: 4,\r\n        content: value.content,\r\n        isStatic: false,\r\n        // Treat as non-constant by default. This can be potentially set to\r\n        // other values by `transformExpression` to make it eligible for hoisting.\r\n        constType: 0,\r\n        loc: value.loc\r\n      },\r\n      arg,\r\n      modifiers,\r\n      loc\r\n    };\r\n  }\r\n  if (!context.inVPre && startsWith(name, \"v-\")) {\r\n    emitError(context, 26);\r\n  }\r\n  return {\r\n    type: 6,\r\n    name,\r\n    value: value && {\r\n      type: 2,\r\n      content: value.content,\r\n      loc: value.loc\r\n    },\r\n    loc\r\n  };\r\n}\r\nfunction parseAttributeValue(context) {\r\n  const start = getCursor(context);\r\n  let content;\r\n  const quote = context.source[0];\r\n  const isQuoted = quote === `\"` || quote === `'`;\r\n  if (isQuoted) {\r\n    advanceBy(context, 1);\r\n    const endIndex = context.source.indexOf(quote);\r\n    if (endIndex === -1) {\r\n      content = parseTextData(\r\n        context,\r\n        context.source.length,\r\n        4\r\n      );\r\n    } else {\r\n      content = parseTextData(context, endIndex, 4);\r\n      advanceBy(context, 1);\r\n    }\r\n  } else {\r\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n    if (!match) {\r\n      return void 0;\r\n    }\r\n    const unexpectedChars = /[\"'<=`]/g;\r\n    let m;\r\n    while (m = unexpectedChars.exec(match[0])) {\r\n      emitError(\r\n        context,\r\n        18,\r\n        m.index\r\n      );\r\n    }\r\n    content = parseTextData(context, match[0].length, 4);\r\n  }\r\n  return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n  const [open, close] = context.options.delimiters;\r\n  const closeIndex = context.source.indexOf(close, open.length);\r\n  if (closeIndex === -1) {\r\n    emitError(context, 25);\r\n    return void 0;\r\n  }\r\n  const start = getCursor(context);\r\n  advanceBy(context, open.length);\r\n  const innerStart = getCursor(context);\r\n  const innerEnd = getCursor(context);\r\n  const rawContentLength = closeIndex - open.length;\r\n  const rawContent = context.source.slice(0, rawContentLength);\r\n  const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n  const content = preTrimContent.trim();\r\n  const startOffset = preTrimContent.indexOf(content);\r\n  if (startOffset > 0) {\r\n    advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n  }\r\n  const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n  advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n  advanceBy(context, close.length);\r\n  return {\r\n    type: 5,\r\n    content: {\r\n      type: 4,\r\n      isStatic: false,\r\n      // Set `isConstant` to false by default and will decide in transformExpression\r\n      constType: 0,\r\n      content,\r\n      loc: getSelection(context, innerStart, innerEnd)\r\n    },\r\n    loc: getSelection(context, start)\r\n  };\r\n}\r\nfunction parseText(context, mode) {\r\n  const endTokens = mode === 3 ? [\"]]>\"] : [\"<\", context.options.delimiters[0]];\r\n  let endIndex = context.source.length;\r\n  for (let i = 0; i < endTokens.length; i++) {\r\n    const index = context.source.indexOf(endTokens[i], 1);\r\n    if (index !== -1 && endIndex > index) {\r\n      endIndex = index;\r\n    }\r\n  }\r\n  const start = getCursor(context);\r\n  const content = parseTextData(context, endIndex, mode);\r\n  return {\r\n    type: 2,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  };\r\n}\r\nfunction parseTextData(context, length, mode) {\r\n  const rawText = context.source.slice(0, length);\r\n  advanceBy(context, length);\r\n  if (mode === 2 || mode === 3 || !rawText.includes(\"&\")) {\r\n    return rawText;\r\n  } else {\r\n    return context.options.decodeEntities(\r\n      rawText,\r\n      mode === 4\r\n    );\r\n  }\r\n}\r\nfunction getCursor(context) {\r\n  const { column, line, offset } = context;\r\n  return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n  end = end || getCursor(context);\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset)\r\n  };\r\n}\r\nfunction last(xs) {\r\n  return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n  return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n  const { source } = context;\r\n  advancePositionWithMutation(context, source, numberOfCharacters);\r\n  context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n  if (match) {\r\n    advanceBy(context, match[0].length);\r\n  }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n  return advancePositionWithClone(\r\n    start,\r\n    context.originalSource.slice(start.offset, numberOfCharacters),\r\n    numberOfCharacters\r\n  );\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n  if (offset) {\r\n    loc.offset += offset;\r\n    loc.column += offset;\r\n  }\r\n  context.options.onError(\r\n    createCompilerError(code, {\r\n      start: loc,\r\n      end: loc,\r\n      source: \"\"\r\n    })\r\n  );\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n  const s = context.source;\r\n  switch (mode) {\r\n    case 0:\r\n      if (startsWith(s, \"</\")) {\r\n        for (let i = ancestors.length - 1; i >= 0; --i) {\r\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    case 1:\r\n    case 2: {\r\n      const parent = last(ancestors);\r\n      if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n        return true;\r\n      }\r\n      break;\r\n    }\r\n    case 3:\r\n      if (startsWith(s, \"]]>\")) {\r\n        return true;\r\n      }\r\n      break;\r\n  }\r\n  return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n  return startsWith(source, \"</\") && source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() && /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || \">\");\r\n}\r\n\r\nfunction hoistStatic(root, context) {\r\n  walk$2(\r\n    root,\r\n    context,\r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0])\r\n  );\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n  const { children } = root;\r\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\r\n}\r\nfunction walk$2(node, context, doNotHoistNode = false) {\r\n  const { children } = node;\r\n  const originalCount = children.length;\r\n  let hoistedCount = 0;\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i];\r\n    if (child.type === 1 && child.tagType === 0) {\r\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\r\n      if (constantType > 0) {\r\n        if (constantType >= 2) {\r\n          child.codegenNode.patchFlag = -1 + (` /* HOISTED */` );\r\n          child.codegenNode = context.hoist(child.codegenNode);\r\n          hoistedCount++;\r\n          continue;\r\n        }\r\n      } else {\r\n        const codegenNode = child.codegenNode;\r\n        if (codegenNode.type === 13) {\r\n          const flag = getPatchFlag(codegenNode);\r\n          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\r\n            const props = getNodeProps(child);\r\n            if (props) {\r\n              codegenNode.props = context.hoist(props);\r\n            }\r\n          }\r\n          if (codegenNode.dynamicProps) {\r\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (child.type === 1) {\r\n      const isComponent = child.tagType === 1;\r\n      if (isComponent) {\r\n        context.scopes.vSlot++;\r\n      }\r\n      walk$2(child, context);\r\n      if (isComponent) {\r\n        context.scopes.vSlot--;\r\n      }\r\n    } else if (child.type === 11) {\r\n      walk$2(child, context, child.children.length === 1);\r\n    } else if (child.type === 9) {\r\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\r\n        walk$2(\r\n          child.branches[i2],\r\n          context,\r\n          child.branches[i2].children.length === 1\r\n        );\r\n      }\r\n    }\r\n  }\r\n  if (hoistedCount && context.transformHoist) {\r\n    context.transformHoist(children, context, node);\r\n  }\r\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && isArray$3(node.codegenNode.children)) {\r\n    node.codegenNode.children = context.hoist(\r\n      createArrayExpression(node.codegenNode.children)\r\n    );\r\n  }\r\n}\r\nfunction getConstantType(node, context) {\r\n  const { constantCache } = context;\r\n  switch (node.type) {\r\n    case 1:\r\n      if (node.tagType !== 0) {\r\n        return 0;\r\n      }\r\n      const cached = constantCache.get(node);\r\n      if (cached !== void 0) {\r\n        return cached;\r\n      }\r\n      const codegenNode = node.codegenNode;\r\n      if (codegenNode.type !== 13) {\r\n        return 0;\r\n      }\r\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\") {\r\n        return 0;\r\n      }\r\n      const flag = getPatchFlag(codegenNode);\r\n      if (!flag) {\r\n        let returnType2 = 3;\r\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n        if (generatedPropsType === 0) {\r\n          constantCache.set(node, 0);\r\n          return 0;\r\n        }\r\n        if (generatedPropsType < returnType2) {\r\n          returnType2 = generatedPropsType;\r\n        }\r\n        for (let i = 0; i < node.children.length; i++) {\r\n          const childType = getConstantType(node.children[i], context);\r\n          if (childType === 0) {\r\n            constantCache.set(node, 0);\r\n            return 0;\r\n          }\r\n          if (childType < returnType2) {\r\n            returnType2 = childType;\r\n          }\r\n        }\r\n        if (returnType2 > 1) {\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i];\r\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\r\n              const expType = getConstantType(p.exp, context);\r\n              if (expType === 0) {\r\n                constantCache.set(node, 0);\r\n                return 0;\r\n              }\r\n              if (expType < returnType2) {\r\n                returnType2 = expType;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (codegenNode.isBlock) {\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i];\r\n            if (p.type === 7) {\r\n              constantCache.set(node, 0);\r\n              return 0;\r\n            }\r\n          }\r\n          context.removeHelper(OPEN_BLOCK);\r\n          context.removeHelper(\r\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\r\n          );\r\n          codegenNode.isBlock = false;\r\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n        }\r\n        constantCache.set(node, returnType2);\r\n        return returnType2;\r\n      } else {\r\n        constantCache.set(node, 0);\r\n        return 0;\r\n      }\r\n    case 2:\r\n    case 3:\r\n      return 3;\r\n    case 9:\r\n    case 11:\r\n    case 10:\r\n      return 0;\r\n    case 5:\r\n    case 12:\r\n      return getConstantType(node.content, context);\r\n    case 4:\r\n      return node.constType;\r\n    case 8:\r\n      let returnType = 3;\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString$2(child) || isSymbol$1(child)) {\r\n          continue;\r\n        }\r\n        const childType = getConstantType(child, context);\r\n        if (childType === 0) {\r\n          return 0;\r\n        } else if (childType < returnType) {\r\n          returnType = childType;\r\n        }\r\n      }\r\n      return returnType;\r\n    default:\r\n      return 0;\r\n  }\r\n}\r\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n  if (value.type === 14 && !isString$2(value.callee) && allowHoistedHelperSet.has(value.callee)) {\r\n    const arg = value.arguments[0];\r\n    if (arg.type === 4) {\r\n      return getConstantType(arg, context);\r\n    } else if (arg.type === 14) {\r\n      return getConstantTypeOfHelperCall(arg, context);\r\n    }\r\n  }\r\n  return 0;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n  let returnType = 3;\r\n  const props = getNodeProps(node);\r\n  if (props && props.type === 15) {\r\n    const { properties } = props;\r\n    for (let i = 0; i < properties.length; i++) {\r\n      const { key, value } = properties[i];\r\n      const keyType = getConstantType(key, context);\r\n      if (keyType === 0) {\r\n        return keyType;\r\n      }\r\n      if (keyType < returnType) {\r\n        returnType = keyType;\r\n      }\r\n      let valueType;\r\n      if (value.type === 4) {\r\n        valueType = getConstantType(value, context);\r\n      } else if (value.type === 14) {\r\n        valueType = getConstantTypeOfHelperCall(value, context);\r\n      } else {\r\n        valueType = 0;\r\n      }\r\n      if (valueType === 0) {\r\n        return valueType;\r\n      }\r\n      if (valueType < returnType) {\r\n        returnType = valueType;\r\n      }\r\n    }\r\n  }\r\n  return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n  const codegenNode = node.codegenNode;\r\n  if (codegenNode.type === 13) {\r\n    return codegenNode.props;\r\n  }\r\n}\r\nfunction getPatchFlag(node) {\r\n  const flag = node.patchFlag;\r\n  return flag ? parseInt(flag, 10) : void 0;\r\n}\r\n\r\nfunction createTransformContext(root, {\r\n  filename = \"\",\r\n  prefixIdentifiers = false,\r\n  hoistStatic: hoistStatic2 = false,\r\n  cacheHandlers = false,\r\n  nodeTransforms = [],\r\n  directiveTransforms = {},\r\n  transformHoist = null,\r\n  isBuiltInComponent = NOOP,\r\n  isCustomElement = NOOP,\r\n  expressionPlugins = [],\r\n  scopeId = null,\r\n  slotted = true,\r\n  ssr = false,\r\n  inSSR = false,\r\n  ssrCssVars = ``,\r\n  bindingMetadata = EMPTY_OBJ,\r\n  inline = false,\r\n  isTS = false,\r\n  onError = defaultOnError,\r\n  onWarn = defaultOnWarn,\r\n  compatConfig\r\n}) {\r\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\r\n  const context = {\r\n    // options\r\n    selfName: nameMatch && capitalize$1(camelize(nameMatch[1])),\r\n    prefixIdentifiers,\r\n    hoistStatic: hoistStatic2,\r\n    cacheHandlers,\r\n    nodeTransforms,\r\n    directiveTransforms,\r\n    transformHoist,\r\n    isBuiltInComponent,\r\n    isCustomElement,\r\n    expressionPlugins,\r\n    scopeId,\r\n    slotted,\r\n    ssr,\r\n    inSSR,\r\n    ssrCssVars,\r\n    bindingMetadata,\r\n    inline,\r\n    isTS,\r\n    onError,\r\n    onWarn,\r\n    compatConfig,\r\n    // state\r\n    root,\r\n    helpers: /* @__PURE__ */ new Map(),\r\n    components: /* @__PURE__ */ new Set(),\r\n    directives: /* @__PURE__ */ new Set(),\r\n    hoists: [],\r\n    imports: [],\r\n    constantCache: /* @__PURE__ */ new Map(),\r\n    temps: 0,\r\n    cached: 0,\r\n    identifiers: /* @__PURE__ */ Object.create(null),\r\n    scopes: {\r\n      vFor: 0,\r\n      vSlot: 0,\r\n      vPre: 0,\r\n      vOnce: 0\r\n    },\r\n    parent: null,\r\n    currentNode: root,\r\n    childIndex: 0,\r\n    inVOnce: false,\r\n    // methods\r\n    helper(name) {\r\n      const count = context.helpers.get(name) || 0;\r\n      context.helpers.set(name, count + 1);\r\n      return name;\r\n    },\r\n    removeHelper(name) {\r\n      const count = context.helpers.get(name);\r\n      if (count) {\r\n        const currentCount = count - 1;\r\n        if (!currentCount) {\r\n          context.helpers.delete(name);\r\n        } else {\r\n          context.helpers.set(name, currentCount);\r\n        }\r\n      }\r\n    },\r\n    helperString(name) {\r\n      return `_${helperNameMap[context.helper(name)]}`;\r\n    },\r\n    replaceNode(node) {\r\n      {\r\n        if (!context.currentNode) {\r\n          throw new Error(`Node being replaced is already removed.`);\r\n        }\r\n        if (!context.parent) {\r\n          throw new Error(`Cannot replace root node.`);\r\n        }\r\n      }\r\n      context.parent.children[context.childIndex] = context.currentNode = node;\r\n    },\r\n    removeNode(node) {\r\n      if (!context.parent) {\r\n        throw new Error(`Cannot remove root node.`);\r\n      }\r\n      const list = context.parent.children;\r\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\r\n      if (removalIndex < 0) {\r\n        throw new Error(`node being removed is not a child of current parent`);\r\n      }\r\n      if (!node || node === context.currentNode) {\r\n        context.currentNode = null;\r\n        context.onNodeRemoved();\r\n      } else {\r\n        if (context.childIndex > removalIndex) {\r\n          context.childIndex--;\r\n          context.onNodeRemoved();\r\n        }\r\n      }\r\n      context.parent.children.splice(removalIndex, 1);\r\n    },\r\n    onNodeRemoved: () => {\r\n    },\r\n    addIdentifiers(exp) {\r\n      {\r\n        if (isString$2(exp)) {\r\n          addId(exp);\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(addId);\r\n        } else if (exp.type === 4) {\r\n          addId(exp.content);\r\n        }\r\n      }\r\n    },\r\n    removeIdentifiers(exp) {\r\n      {\r\n        if (isString$2(exp)) {\r\n          removeId(exp);\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(removeId);\r\n        } else if (exp.type === 4) {\r\n          removeId(exp.content);\r\n        }\r\n      }\r\n    },\r\n    hoist(exp) {\r\n      if (isString$2(exp))\r\n        exp = createSimpleExpression(exp);\r\n      context.hoists.push(exp);\r\n      const identifier = createSimpleExpression(\r\n        `_hoisted_${context.hoists.length}`,\r\n        false,\r\n        exp.loc,\r\n        2\r\n      );\r\n      identifier.hoisted = exp;\r\n      return identifier;\r\n    },\r\n    cache(exp, isVNode = false) {\r\n      return createCacheExpression(context.cached++, exp, isVNode);\r\n    }\r\n  };\r\n  function addId(id) {\r\n    const { identifiers } = context;\r\n    if (identifiers[id] === void 0) {\r\n      identifiers[id] = 0;\r\n    }\r\n    identifiers[id]++;\r\n  }\r\n  function removeId(id) {\r\n    context.identifiers[id]--;\r\n  }\r\n  return context;\r\n}\r\nfunction transform$1(root, options) {\r\n  const context = createTransformContext(root, options);\r\n  traverseNode(root, context);\r\n  if (options.hoistStatic) {\r\n    hoistStatic(root, context);\r\n  }\r\n  if (!options.ssr) {\r\n    createRootCodegen(root, context);\r\n  }\r\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\r\n  root.components = [...context.components];\r\n  root.directives = [...context.directives];\r\n  root.imports = context.imports;\r\n  root.hoists = context.hoists;\r\n  root.temps = context.temps;\r\n  root.cached = context.cached;\r\n}\r\nfunction createRootCodegen(root, context) {\r\n  const { helper } = context;\r\n  const { children } = root;\r\n  if (children.length === 1) {\r\n    const child = children[0];\r\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n      const codegenNode = child.codegenNode;\r\n      if (codegenNode.type === 13) {\r\n        convertToBlock(codegenNode, context);\r\n      }\r\n      root.codegenNode = codegenNode;\r\n    } else {\r\n      root.codegenNode = child;\r\n    }\r\n  } else if (children.length > 1) {\r\n    let patchFlag = 64;\r\n    let patchFlagText = PatchFlagNames[64];\r\n    if (children.filter((c) => c.type !== 3).length === 1) {\r\n      patchFlag |= 2048;\r\n      patchFlagText += `, ${PatchFlagNames[2048]}`;\r\n    }\r\n    root.codegenNode = createVNodeCall(\r\n      context,\r\n      helper(FRAGMENT),\r\n      void 0,\r\n      root.children,\r\n      patchFlag + (` /* ${patchFlagText} */` ),\r\n      void 0,\r\n      void 0,\r\n      true,\r\n      void 0,\r\n      false\r\n      /* isComponent */\r\n    );\r\n  } else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n  let i = 0;\r\n  const nodeRemoved = () => {\r\n    i--;\r\n  };\r\n  for (; i < parent.children.length; i++) {\r\n    const child = parent.children[i];\r\n    if (isString$2(child))\r\n      continue;\r\n    context.parent = parent;\r\n    context.childIndex = i;\r\n    context.onNodeRemoved = nodeRemoved;\r\n    traverseNode(child, context);\r\n  }\r\n}\r\nfunction traverseNode(node, context) {\r\n  context.currentNode = node;\r\n  const { nodeTransforms } = context;\r\n  const exitFns = [];\r\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\r\n    const onExit = nodeTransforms[i2](node, context);\r\n    if (onExit) {\r\n      if (isArray$3(onExit)) {\r\n        exitFns.push(...onExit);\r\n      } else {\r\n        exitFns.push(onExit);\r\n      }\r\n    }\r\n    if (!context.currentNode) {\r\n      return;\r\n    } else {\r\n      node = context.currentNode;\r\n    }\r\n  }\r\n  switch (node.type) {\r\n    case 3:\r\n      if (!context.ssr) {\r\n        context.helper(CREATE_COMMENT);\r\n      }\r\n      break;\r\n    case 5:\r\n      if (!context.ssr) {\r\n        context.helper(TO_DISPLAY_STRING);\r\n      }\r\n      break;\r\n    case 9:\r\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\r\n        traverseNode(node.branches[i2], context);\r\n      }\r\n      break;\r\n    case 10:\r\n    case 11:\r\n    case 1:\r\n    case 0:\r\n      traverseChildren(node, context);\r\n      break;\r\n  }\r\n  context.currentNode = node;\r\n  let i = exitFns.length;\r\n  while (i--) {\r\n    exitFns[i]();\r\n  }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n  const matches = isString$2(name) ? (n) => n === name : (n) => name.test(n);\r\n  return (node, context) => {\r\n    if (node.type === 1) {\r\n      const { props } = node;\r\n      if (node.tagType === 3 && props.some(isVSlot)) {\r\n        return;\r\n      }\r\n      const exitFns = [];\r\n      for (let i = 0; i < props.length; i++) {\r\n        const prop = props[i];\r\n        if (prop.type === 7 && matches(prop.name)) {\r\n          props.splice(i, 1);\r\n          i--;\r\n          const onExit = fn(node, prop, context);\r\n          if (onExit)\r\n            exitFns.push(onExit);\r\n        }\r\n      }\r\n      return exitFns;\r\n    }\r\n  };\r\n}\r\n\r\nvar sourceMap$2 = {};\r\n\r\nvar sourceMapGenerator$1 = {};\r\n\r\nvar base64Vlq$1 = {};\r\n\r\nvar base64$3 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar intToCharMap$1 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\r\n\r\n/**\r\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\r\n */\r\nbase64$3.encode = function (number) {\r\n  if (0 <= number && number < intToCharMap$1.length) {\r\n    return intToCharMap$1[number];\r\n  }\r\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\r\n};\r\n\r\n/**\r\n * Decode a single base 64 character code digit to an integer. Returns -1 on\r\n * failure.\r\n */\r\nbase64$3.decode = function (charCode) {\r\n  var bigA = 65;     // 'A'\r\n  var bigZ = 90;     // 'Z'\r\n\r\n  var littleA = 97;  // 'a'\r\n  var littleZ = 122; // 'z'\r\n\r\n  var zero = 48;     // '0'\r\n  var nine = 57;     // '9'\r\n\r\n  var plus = 43;     // '+'\r\n  var slash = 47;    // '/'\r\n\r\n  var littleOffset = 26;\r\n  var numberOffset = 52;\r\n\r\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n  if (bigA <= charCode && charCode <= bigZ) {\r\n    return (charCode - bigA);\r\n  }\r\n\r\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\r\n  if (littleA <= charCode && charCode <= littleZ) {\r\n    return (charCode - littleA + littleOffset);\r\n  }\r\n\r\n  // 52 - 61: 0123456789\r\n  if (zero <= charCode && charCode <= nine) {\r\n    return (charCode - zero + numberOffset);\r\n  }\r\n\r\n  // 62: +\r\n  if (charCode == plus) {\r\n    return 62;\r\n  }\r\n\r\n  // 63: /\r\n  if (charCode == slash) {\r\n    return 63;\r\n  }\r\n\r\n  // Invalid base64 digit.\r\n  return -1;\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n *\r\n * Based on the Base 64 VLQ implementation in Closure Compiler:\r\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\r\n *\r\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above\r\n *    copyright notice, this list of conditions and the following\r\n *    disclaimer in the documentation and/or other materials provided\r\n *    with the distribution.\r\n *  * Neither the name of Google Inc. nor the names of its\r\n *    contributors may be used to endorse or promote products derived\r\n *    from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nvar base64$2 = base64$3;\r\n\r\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\r\n// length quantities we use in the source map spec, the first bit is the sign,\r\n// the next four bits are the actual value, and the 6th bit is the\r\n// continuation bit. The continuation bit tells us whether there are more\r\n// digits in this value following this digit.\r\n//\r\n//   Continuation\r\n//   |    Sign\r\n//   |    |\r\n//   V    V\r\n//   101011\r\n\r\nvar VLQ_BASE_SHIFT$1 = 5;\r\n\r\n// binary: 100000\r\nvar VLQ_BASE$1 = 1 << VLQ_BASE_SHIFT$1;\r\n\r\n// binary: 011111\r\nvar VLQ_BASE_MASK$1 = VLQ_BASE$1 - 1;\r\n\r\n// binary: 100000\r\nvar VLQ_CONTINUATION_BIT$1 = VLQ_BASE$1;\r\n\r\n/**\r\n * Converts from a two-complement value to a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\r\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\r\n */\r\nfunction toVLQSigned$1(aValue) {\r\n  return aValue < 0\r\n    ? ((-aValue) << 1) + 1\r\n    : (aValue << 1) + 0;\r\n}\r\n\r\n/**\r\n * Converts to a two-complement value from a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\r\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\r\n */\r\nfunction fromVLQSigned$1(aValue) {\r\n  var isNegative = (aValue & 1) === 1;\r\n  var shifted = aValue >> 1;\r\n  return isNegative\r\n    ? -shifted\r\n    : shifted;\r\n}\r\n\r\n/**\r\n * Returns the base 64 VLQ encoded value.\r\n */\r\nbase64Vlq$1.encode = function base64VLQ_encode(aValue) {\r\n  var encoded = \"\";\r\n  var digit;\r\n\r\n  var vlq = toVLQSigned$1(aValue);\r\n\r\n  do {\r\n    digit = vlq & VLQ_BASE_MASK$1;\r\n    vlq >>>= VLQ_BASE_SHIFT$1;\r\n    if (vlq > 0) {\r\n      // There are still more digits in this value, so we must make sure the\r\n      // continuation bit is marked.\r\n      digit |= VLQ_CONTINUATION_BIT$1;\r\n    }\r\n    encoded += base64$2.encode(digit);\r\n  } while (vlq > 0);\r\n\r\n  return encoded;\r\n};\r\n\r\n/**\r\n * Decodes the next base 64 VLQ value from the given string and returns the\r\n * value and the rest of the string via the out parameter.\r\n */\r\nbase64Vlq$1.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\r\n  var strLen = aStr.length;\r\n  var result = 0;\r\n  var shift = 0;\r\n  var continuation, digit;\r\n\r\n  do {\r\n    if (aIndex >= strLen) {\r\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\r\n    }\r\n\r\n    digit = base64$2.decode(aStr.charCodeAt(aIndex++));\r\n    if (digit === -1) {\r\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\r\n    }\r\n\r\n    continuation = !!(digit & VLQ_CONTINUATION_BIT$1);\r\n    digit &= VLQ_BASE_MASK$1;\r\n    result = result + (digit << shift);\r\n    shift += VLQ_BASE_SHIFT$1;\r\n  } while (continuation);\r\n\r\n  aOutParam.value = fromVLQSigned$1(result);\r\n  aOutParam.rest = aIndex;\r\n};\r\n\r\nvar util$c = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n(function (exports) {\r\n\t/*\r\n\t * Copyright 2011 Mozilla Foundation and contributors\r\n\t * Licensed under the New BSD license. See LICENSE or:\r\n\t * http://opensource.org/licenses/BSD-3-Clause\r\n\t */\r\n\r\n\t/**\r\n\t * This is a helper function for getting values from parameter/options\r\n\t * objects.\r\n\t *\r\n\t * @param args The object we are extracting values from\r\n\t * @param name The name of the property we are getting.\r\n\t * @param defaultValue An optional value to return if the property is missing\r\n\t * from the object. If this is not specified and the property is missing, an\r\n\t * error will be thrown.\r\n\t */\r\n\tfunction getArg(aArgs, aName, aDefaultValue) {\r\n\t  if (aName in aArgs) {\r\n\t    return aArgs[aName];\r\n\t  } else if (arguments.length === 3) {\r\n\t    return aDefaultValue;\r\n\t  } else {\r\n\t    throw new Error('\"' + aName + '\" is a required argument.');\r\n\t  }\r\n\t}\r\n\texports.getArg = getArg;\r\n\r\n\tvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\r\n\tvar dataUrlRegexp = /^data:.+\\,.+$/;\r\n\r\n\tfunction urlParse(aUrl) {\r\n\t  var match = aUrl.match(urlRegexp);\r\n\t  if (!match) {\r\n\t    return null;\r\n\t  }\r\n\t  return {\r\n\t    scheme: match[1],\r\n\t    auth: match[2],\r\n\t    host: match[3],\r\n\t    port: match[4],\r\n\t    path: match[5]\r\n\t  };\r\n\t}\r\n\texports.urlParse = urlParse;\r\n\r\n\tfunction urlGenerate(aParsedUrl) {\r\n\t  var url = '';\r\n\t  if (aParsedUrl.scheme) {\r\n\t    url += aParsedUrl.scheme + ':';\r\n\t  }\r\n\t  url += '//';\r\n\t  if (aParsedUrl.auth) {\r\n\t    url += aParsedUrl.auth + '@';\r\n\t  }\r\n\t  if (aParsedUrl.host) {\r\n\t    url += aParsedUrl.host;\r\n\t  }\r\n\t  if (aParsedUrl.port) {\r\n\t    url += \":\" + aParsedUrl.port;\r\n\t  }\r\n\t  if (aParsedUrl.path) {\r\n\t    url += aParsedUrl.path;\r\n\t  }\r\n\t  return url;\r\n\t}\r\n\texports.urlGenerate = urlGenerate;\r\n\r\n\tvar MAX_CACHED_INPUTS = 32;\r\n\r\n\t/**\r\n\t * Takes some function `f(input) -> result` and returns a memoized version of\r\n\t * `f`.\r\n\t *\r\n\t * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\r\n\t * memoization is a dumb-simple, linear least-recently-used cache.\r\n\t */\r\n\tfunction lruMemoize(f) {\r\n\t  var cache = [];\r\n\r\n\t  return function(input) {\r\n\t    for (var i = 0; i < cache.length; i++) {\r\n\t      if (cache[i].input === input) {\r\n\t        var temp = cache[0];\r\n\t        cache[0] = cache[i];\r\n\t        cache[i] = temp;\r\n\t        return cache[0].result;\r\n\t      }\r\n\t    }\r\n\r\n\t    var result = f(input);\r\n\r\n\t    cache.unshift({\r\n\t      input,\r\n\t      result,\r\n\t    });\r\n\r\n\t    if (cache.length > MAX_CACHED_INPUTS) {\r\n\t      cache.pop();\r\n\t    }\r\n\r\n\t    return result;\r\n\t  };\r\n\t}\r\n\r\n\t/**\r\n\t * Normalizes a path, or the path portion of a URL:\r\n\t *\r\n\t * - Replaces consecutive slashes with one slash.\r\n\t * - Removes unnecessary '.' parts.\r\n\t * - Removes unnecessary '<dir>/..' parts.\r\n\t *\r\n\t * Based on code in the Node.js 'path' core module.\r\n\t *\r\n\t * @param aPath The path or url to normalize.\r\n\t */\r\n\tvar normalize = lruMemoize(function normalize(aPath) {\r\n\t  var path = aPath;\r\n\t  var url = urlParse(aPath);\r\n\t  if (url) {\r\n\t    if (!url.path) {\r\n\t      return aPath;\r\n\t    }\r\n\t    path = url.path;\r\n\t  }\r\n\t  var isAbsolute = exports.isAbsolute(path);\r\n\t  // Split the path into parts between `/` characters. This is much faster than\r\n\t  // using `.split(/\\/+/g)`.\r\n\t  var parts = [];\r\n\t  var start = 0;\r\n\t  var i = 0;\r\n\t  while (true) {\r\n\t    start = i;\r\n\t    i = path.indexOf(\"/\", start);\r\n\t    if (i === -1) {\r\n\t      parts.push(path.slice(start));\r\n\t      break;\r\n\t    } else {\r\n\t      parts.push(path.slice(start, i));\r\n\t      while (i < path.length && path[i] === \"/\") {\r\n\t        i++;\r\n\t      }\r\n\t    }\r\n\t  }\r\n\r\n\t  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\r\n\t    part = parts[i];\r\n\t    if (part === '.') {\r\n\t      parts.splice(i, 1);\r\n\t    } else if (part === '..') {\r\n\t      up++;\r\n\t    } else if (up > 0) {\r\n\t      if (part === '') {\r\n\t        // The first part is blank if the path is absolute. Trying to go\r\n\t        // above the root is a no-op. Therefore we can remove all '..' parts\r\n\t        // directly after the root.\r\n\t        parts.splice(i + 1, up);\r\n\t        up = 0;\r\n\t      } else {\r\n\t        parts.splice(i, 2);\r\n\t        up--;\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  path = parts.join('/');\r\n\r\n\t  if (path === '') {\r\n\t    path = isAbsolute ? '/' : '.';\r\n\t  }\r\n\r\n\t  if (url) {\r\n\t    url.path = path;\r\n\t    return urlGenerate(url);\r\n\t  }\r\n\t  return path;\r\n\t});\r\n\texports.normalize = normalize;\r\n\r\n\t/**\r\n\t * Joins two paths/URLs.\r\n\t *\r\n\t * @param aRoot The root path or URL.\r\n\t * @param aPath The path or URL to be joined with the root.\r\n\t *\r\n\t * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\r\n\t *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\r\n\t *   first.\r\n\t * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\r\n\t *   is updated with the result and aRoot is returned. Otherwise the result\r\n\t *   is returned.\r\n\t *   - If aPath is absolute, the result is aPath.\r\n\t *   - Otherwise the two paths are joined with a slash.\r\n\t * - Joining for example 'http://' and 'www.example.com' is also supported.\r\n\t */\r\n\tfunction join(aRoot, aPath) {\r\n\t  if (aRoot === \"\") {\r\n\t    aRoot = \".\";\r\n\t  }\r\n\t  if (aPath === \"\") {\r\n\t    aPath = \".\";\r\n\t  }\r\n\t  var aPathUrl = urlParse(aPath);\r\n\t  var aRootUrl = urlParse(aRoot);\r\n\t  if (aRootUrl) {\r\n\t    aRoot = aRootUrl.path || '/';\r\n\t  }\r\n\r\n\t  // `join(foo, '//www.example.org')`\r\n\t  if (aPathUrl && !aPathUrl.scheme) {\r\n\t    if (aRootUrl) {\r\n\t      aPathUrl.scheme = aRootUrl.scheme;\r\n\t    }\r\n\t    return urlGenerate(aPathUrl);\r\n\t  }\r\n\r\n\t  if (aPathUrl || aPath.match(dataUrlRegexp)) {\r\n\t    return aPath;\r\n\t  }\r\n\r\n\t  // `join('http://', 'www.example.com')`\r\n\t  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\r\n\t    aRootUrl.host = aPath;\r\n\t    return urlGenerate(aRootUrl);\r\n\t  }\r\n\r\n\t  var joined = aPath.charAt(0) === '/'\r\n\t    ? aPath\r\n\t    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\r\n\r\n\t  if (aRootUrl) {\r\n\t    aRootUrl.path = joined;\r\n\t    return urlGenerate(aRootUrl);\r\n\t  }\r\n\t  return joined;\r\n\t}\r\n\texports.join = join;\r\n\r\n\texports.isAbsolute = function (aPath) {\r\n\t  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\r\n\t};\r\n\r\n\t/**\r\n\t * Make a path relative to a URL or another path.\r\n\t *\r\n\t * @param aRoot The root path or URL.\r\n\t * @param aPath The path or URL to be made relative to aRoot.\r\n\t */\r\n\tfunction relative(aRoot, aPath) {\r\n\t  if (aRoot === \"\") {\r\n\t    aRoot = \".\";\r\n\t  }\r\n\r\n\t  aRoot = aRoot.replace(/\\/$/, '');\r\n\r\n\t  // It is possible for the path to be above the root. In this case, simply\r\n\t  // checking whether the root is a prefix of the path won't work. Instead, we\r\n\t  // need to remove components from the root one by one, until either we find\r\n\t  // a prefix that fits, or we run out of components to remove.\r\n\t  var level = 0;\r\n\t  while (aPath.indexOf(aRoot + '/') !== 0) {\r\n\t    var index = aRoot.lastIndexOf(\"/\");\r\n\t    if (index < 0) {\r\n\t      return aPath;\r\n\t    }\r\n\r\n\t    // If the only part of the root that is left is the scheme (i.e. http://,\r\n\t    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\r\n\t    // have exhausted all components, so the path is not relative to the root.\r\n\t    aRoot = aRoot.slice(0, index);\r\n\t    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\r\n\t      return aPath;\r\n\t    }\r\n\r\n\t    ++level;\r\n\t  }\r\n\r\n\t  // Make sure we add a \"../\" for each component we removed from the root.\r\n\t  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\r\n\t}\r\n\texports.relative = relative;\r\n\r\n\tvar supportsNullProto = (function () {\r\n\t  var obj = Object.create(null);\r\n\t  return !('__proto__' in obj);\r\n\t}());\r\n\r\n\tfunction identity (s) {\r\n\t  return s;\r\n\t}\r\n\r\n\t/**\r\n\t * Because behavior goes wacky when you set `__proto__` on objects, we\r\n\t * have to prefix all the strings in our set with an arbitrary character.\r\n\t *\r\n\t * See https://github.com/mozilla/source-map/pull/31 and\r\n\t * https://github.com/mozilla/source-map/issues/30\r\n\t *\r\n\t * @param String aStr\r\n\t */\r\n\tfunction toSetString(aStr) {\r\n\t  if (isProtoString(aStr)) {\r\n\t    return '$' + aStr;\r\n\t  }\r\n\r\n\t  return aStr;\r\n\t}\r\n\texports.toSetString = supportsNullProto ? identity : toSetString;\r\n\r\n\tfunction fromSetString(aStr) {\r\n\t  if (isProtoString(aStr)) {\r\n\t    return aStr.slice(1);\r\n\t  }\r\n\r\n\t  return aStr;\r\n\t}\r\n\texports.fromSetString = supportsNullProto ? identity : fromSetString;\r\n\r\n\tfunction isProtoString(s) {\r\n\t  if (!s) {\r\n\t    return false;\r\n\t  }\r\n\r\n\t  var length = s.length;\r\n\r\n\t  if (length < 9 /* \"__proto__\".length */) {\r\n\t    return false;\r\n\t  }\r\n\r\n\t  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\r\n\t      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\r\n\t      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\r\n\t      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\r\n\t      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\r\n\t      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\r\n\t      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\r\n\t      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\r\n\t      s.charCodeAt(length - 9) !== 95  /* '_' */) {\r\n\t    return false;\r\n\t  }\r\n\r\n\t  for (var i = length - 10; i >= 0; i--) {\r\n\t    if (s.charCodeAt(i) !== 36 /* '$' */) {\r\n\t      return false;\r\n\t    }\r\n\t  }\r\n\r\n\t  return true;\r\n\t}\r\n\r\n\t/**\r\n\t * Comparator between two mappings where the original positions are compared.\r\n\t *\r\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n\t * mappings with the same original source/line/column, but different generated\r\n\t * line and column the same. Useful when searching for a mapping with a\r\n\t * stubbed out mapping.\r\n\t */\r\n\tfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\r\n\t  var cmp = strcmp(mappingA.source, mappingB.source);\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n\t  if (cmp !== 0 || onlyCompareOriginal) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  return strcmp(mappingA.name, mappingB.name);\r\n\t}\r\n\texports.compareByOriginalPositions = compareByOriginalPositions;\r\n\r\n\tfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\r\n\t  var cmp;\r\n\r\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n\t  if (cmp !== 0 || onlyCompareOriginal) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  return strcmp(mappingA.name, mappingB.name);\r\n\t}\r\n\texports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\r\n\r\n\t/**\r\n\t * Comparator between two mappings with deflated source and name indices where\r\n\t * the generated positions are compared.\r\n\t *\r\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n\t * mappings with the same generated line and column, but different\r\n\t * source/name/original line and column the same. Useful when searching for a\r\n\t * mapping with a stubbed out mapping.\r\n\t */\r\n\tfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\r\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n\t  if (cmp !== 0 || onlyCompareGenerated) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = strcmp(mappingA.source, mappingB.source);\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  return strcmp(mappingA.name, mappingB.name);\r\n\t}\r\n\texports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\r\n\r\n\tfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\r\n\t  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n\t  if (cmp !== 0 || onlyCompareGenerated) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = strcmp(mappingA.source, mappingB.source);\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  return strcmp(mappingA.name, mappingB.name);\r\n\t}\r\n\texports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\r\n\r\n\tfunction strcmp(aStr1, aStr2) {\r\n\t  if (aStr1 === aStr2) {\r\n\t    return 0;\r\n\t  }\r\n\r\n\t  if (aStr1 === null) {\r\n\t    return 1; // aStr2 !== null\r\n\t  }\r\n\r\n\t  if (aStr2 === null) {\r\n\t    return -1; // aStr1 !== null\r\n\t  }\r\n\r\n\t  if (aStr1 > aStr2) {\r\n\t    return 1;\r\n\t  }\r\n\r\n\t  return -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Comparator between two mappings with inflated source and name strings where\r\n\t * the generated positions are compared.\r\n\t */\r\n\tfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\r\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = strcmp(mappingA.source, mappingB.source);\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  return strcmp(mappingA.name, mappingB.name);\r\n\t}\r\n\texports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\r\n\r\n\t/**\r\n\t * Strip any JSON XSSI avoidance prefix from the string (as documented\r\n\t * in the source maps specification), and then parse the string as\r\n\t * JSON.\r\n\t */\r\n\tfunction parseSourceMapInput(str) {\r\n\t  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\r\n\t}\r\n\texports.parseSourceMapInput = parseSourceMapInput;\r\n\r\n\t/**\r\n\t * Compute the URL of a source given the the source root, the source's\r\n\t * URL, and the source map's URL.\r\n\t */\r\n\tfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\r\n\t  sourceURL = sourceURL || '';\r\n\r\n\t  if (sourceRoot) {\r\n\t    // This follows what Chrome does.\r\n\t    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\r\n\t      sourceRoot += '/';\r\n\t    }\r\n\t    // The spec says:\r\n\t    //   Line 4: An optional source root, useful for relocating source\r\n\t    //   files on a server or removing repeated values in the\r\n\t    //   “sources” entry.  This value is prepended to the individual\r\n\t    //   entries in the “source” field.\r\n\t    sourceURL = sourceRoot + sourceURL;\r\n\t  }\r\n\r\n\t  // Historically, SourceMapConsumer did not take the sourceMapURL as\r\n\t  // a parameter.  This mode is still somewhat supported, which is why\r\n\t  // this code block is conditional.  However, it's preferable to pass\r\n\t  // the source map URL to SourceMapConsumer, so that this function\r\n\t  // can implement the source URL resolution algorithm as outlined in\r\n\t  // the spec.  This block is basically the equivalent of:\r\n\t  //    new URL(sourceURL, sourceMapURL).toString()\r\n\t  // ... except it avoids using URL, which wasn't available in the\r\n\t  // older releases of node still supported by this library.\r\n\t  //\r\n\t  // The spec says:\r\n\t  //   If the sources are not absolute URLs after prepending of the\r\n\t  //   “sourceRoot”, the sources are resolved relative to the\r\n\t  //   SourceMap (like resolving script src in a html document).\r\n\t  if (sourceMapURL) {\r\n\t    var parsed = urlParse(sourceMapURL);\r\n\t    if (!parsed) {\r\n\t      throw new Error(\"sourceMapURL could not be parsed\");\r\n\t    }\r\n\t    if (parsed.path) {\r\n\t      // Strip the last path component, but keep the \"/\".\r\n\t      var index = parsed.path.lastIndexOf('/');\r\n\t      if (index >= 0) {\r\n\t        parsed.path = parsed.path.substring(0, index + 1);\r\n\t      }\r\n\t    }\r\n\t    sourceURL = join(urlGenerate(parsed), sourceURL);\r\n\t  }\r\n\r\n\t  return normalize(sourceURL);\r\n\t}\r\n\texports.computeSourceURL = computeSourceURL;\r\n} (util$c));\r\n\r\nvar arraySet$1 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util$b = util$c;\r\nvar has$1 = Object.prototype.hasOwnProperty;\r\nvar hasNativeMap$1 = typeof Map !== \"undefined\";\r\n\r\n/**\r\n * A data structure which is a combination of an array and a set. Adding a new\r\n * member is O(1), testing for membership is O(1), and finding the index of an\r\n * element is O(1). Removing elements from the set is not supported. Only\r\n * strings are supported for membership.\r\n */\r\nfunction ArraySet$5() {\r\n  this._array = [];\r\n  this._set = hasNativeMap$1 ? new Map() : Object.create(null);\r\n}\r\n\r\n/**\r\n * Static method for creating ArraySet instances from an existing array.\r\n */\r\nArraySet$5.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\r\n  var set = new ArraySet$5();\r\n  for (var i = 0, len = aArray.length; i < len; i++) {\r\n    set.add(aArray[i], aAllowDuplicates);\r\n  }\r\n  return set;\r\n};\r\n\r\n/**\r\n * Return how many unique items are in this ArraySet. If duplicates have been\r\n * added, than those do not count towards the size.\r\n *\r\n * @returns Number\r\n */\r\nArraySet$5.prototype.size = function ArraySet_size() {\r\n  return hasNativeMap$1 ? this._set.size : Object.getOwnPropertyNames(this._set).length;\r\n};\r\n\r\n/**\r\n * Add the given string to this set.\r\n *\r\n * @param String aStr\r\n */\r\nArraySet$5.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\r\n  var sStr = hasNativeMap$1 ? aStr : util$b.toSetString(aStr);\r\n  var isDuplicate = hasNativeMap$1 ? this.has(aStr) : has$1.call(this._set, sStr);\r\n  var idx = this._array.length;\r\n  if (!isDuplicate || aAllowDuplicates) {\r\n    this._array.push(aStr);\r\n  }\r\n  if (!isDuplicate) {\r\n    if (hasNativeMap$1) {\r\n      this._set.set(aStr, idx);\r\n    } else {\r\n      this._set[sStr] = idx;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Is the given string a member of this set?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet$5.prototype.has = function ArraySet_has(aStr) {\r\n  if (hasNativeMap$1) {\r\n    return this._set.has(aStr);\r\n  } else {\r\n    var sStr = util$b.toSetString(aStr);\r\n    return has$1.call(this._set, sStr);\r\n  }\r\n};\r\n\r\n/**\r\n * What is the index of the given string in the array?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet$5.prototype.indexOf = function ArraySet_indexOf(aStr) {\r\n  if (hasNativeMap$1) {\r\n    var idx = this._set.get(aStr);\r\n    if (idx >= 0) {\r\n        return idx;\r\n    }\r\n  } else {\r\n    var sStr = util$b.toSetString(aStr);\r\n    if (has$1.call(this._set, sStr)) {\r\n      return this._set[sStr];\r\n    }\r\n  }\r\n\r\n  throw new Error('\"' + aStr + '\" is not in the set.');\r\n};\r\n\r\n/**\r\n * What is the element at the given index?\r\n *\r\n * @param Number aIdx\r\n */\r\nArraySet$5.prototype.at = function ArraySet_at(aIdx) {\r\n  if (aIdx >= 0 && aIdx < this._array.length) {\r\n    return this._array[aIdx];\r\n  }\r\n  throw new Error('No element indexed by ' + aIdx);\r\n};\r\n\r\n/**\r\n * Returns the array representation of this set (which has the proper indices\r\n * indicated by indexOf). Note that this is a copy of the internal array used\r\n * for storing the members so that no one can mess with internal state.\r\n */\r\nArraySet$5.prototype.toArray = function ArraySet_toArray() {\r\n  return this._array.slice();\r\n};\r\n\r\narraySet$1.ArraySet = ArraySet$5;\r\n\r\nvar mappingList$1 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2014 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util$a = util$c;\r\n\r\n/**\r\n * Determine whether mappingB is after mappingA with respect to generated\r\n * position.\r\n */\r\nfunction generatedPositionAfter$1(mappingA, mappingB) {\r\n  // Optimized for most common case\r\n  var lineA = mappingA.generatedLine;\r\n  var lineB = mappingB.generatedLine;\r\n  var columnA = mappingA.generatedColumn;\r\n  var columnB = mappingB.generatedColumn;\r\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\r\n         util$a.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\r\n}\r\n\r\n/**\r\n * A data structure to provide a sorted view of accumulated mappings in a\r\n * performance conscious manner. It trades a neglibable overhead in general\r\n * case for a large speedup in case of mappings being added in order.\r\n */\r\nfunction MappingList$3() {\r\n  this._array = [];\r\n  this._sorted = true;\r\n  // Serves as infimum\r\n  this._last = {generatedLine: -1, generatedColumn: 0};\r\n}\r\n\r\n/**\r\n * Iterate through internal items. This method takes the same arguments that\r\n * `Array.prototype.forEach` takes.\r\n *\r\n * NOTE: The order of the mappings is NOT guaranteed.\r\n */\r\nMappingList$3.prototype.unsortedForEach =\r\n  function MappingList_forEach(aCallback, aThisArg) {\r\n    this._array.forEach(aCallback, aThisArg);\r\n  };\r\n\r\n/**\r\n * Add the given source mapping.\r\n *\r\n * @param Object aMapping\r\n */\r\nMappingList$3.prototype.add = function MappingList_add(aMapping) {\r\n  if (generatedPositionAfter$1(this._last, aMapping)) {\r\n    this._last = aMapping;\r\n    this._array.push(aMapping);\r\n  } else {\r\n    this._sorted = false;\r\n    this._array.push(aMapping);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the flat, sorted array of mappings. The mappings are sorted by\r\n * generated position.\r\n *\r\n * WARNING: This method returns internal data without copying, for\r\n * performance. The return value must NOT be mutated, and should be treated as\r\n * an immutable borrow. If you want to take ownership, you must make your own\r\n * copy.\r\n */\r\nMappingList$3.prototype.toArray = function MappingList_toArray() {\r\n  if (!this._sorted) {\r\n    this._array.sort(util$a.compareByGeneratedPositionsInflated);\r\n    this._sorted = true;\r\n  }\r\n  return this._array;\r\n};\r\n\r\nmappingList$1.MappingList = MappingList$3;\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar base64VLQ$3 = base64Vlq$1;\r\nvar util$9 = util$c;\r\nvar ArraySet$4 = arraySet$1.ArraySet;\r\nvar MappingList$2 = mappingList$1.MappingList;\r\n\r\n/**\r\n * An instance of the SourceMapGenerator represents a source map which is\r\n * being built incrementally. You may pass an object with the following\r\n * properties:\r\n *\r\n *   - file: The filename of the generated source.\r\n *   - sourceRoot: A root for all relative URLs in this source map.\r\n */\r\nfunction SourceMapGenerator$8(aArgs) {\r\n  if (!aArgs) {\r\n    aArgs = {};\r\n  }\r\n  this._file = util$9.getArg(aArgs, 'file', null);\r\n  this._sourceRoot = util$9.getArg(aArgs, 'sourceRoot', null);\r\n  this._skipValidation = util$9.getArg(aArgs, 'skipValidation', false);\r\n  this._sources = new ArraySet$4();\r\n  this._names = new ArraySet$4();\r\n  this._mappings = new MappingList$2();\r\n  this._sourcesContents = null;\r\n}\r\n\r\nSourceMapGenerator$8.prototype._version = 3;\r\n\r\n/**\r\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\r\n *\r\n * @param aSourceMapConsumer The SourceMap.\r\n */\r\nSourceMapGenerator$8.fromSourceMap =\r\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\r\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\r\n    var generator = new SourceMapGenerator$8({\r\n      file: aSourceMapConsumer.file,\r\n      sourceRoot: sourceRoot\r\n    });\r\n    aSourceMapConsumer.eachMapping(function (mapping) {\r\n      var newMapping = {\r\n        generated: {\r\n          line: mapping.generatedLine,\r\n          column: mapping.generatedColumn\r\n        }\r\n      };\r\n\r\n      if (mapping.source != null) {\r\n        newMapping.source = mapping.source;\r\n        if (sourceRoot != null) {\r\n          newMapping.source = util$9.relative(sourceRoot, newMapping.source);\r\n        }\r\n\r\n        newMapping.original = {\r\n          line: mapping.originalLine,\r\n          column: mapping.originalColumn\r\n        };\r\n\r\n        if (mapping.name != null) {\r\n          newMapping.name = mapping.name;\r\n        }\r\n      }\r\n\r\n      generator.addMapping(newMapping);\r\n    });\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var sourceRelative = sourceFile;\r\n      if (sourceRoot !== null) {\r\n        sourceRelative = util$9.relative(sourceRoot, sourceFile);\r\n      }\r\n\r\n      if (!generator._sources.has(sourceRelative)) {\r\n        generator._sources.add(sourceRelative);\r\n      }\r\n\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        generator.setSourceContent(sourceFile, content);\r\n      }\r\n    });\r\n    return generator;\r\n  };\r\n\r\n/**\r\n * Add a single mapping from original source line and column to the generated\r\n * source's line and column for this source map being created. The mapping\r\n * object should have the following properties:\r\n *\r\n *   - generated: An object with the generated line and column positions.\r\n *   - original: An object with the original line and column positions.\r\n *   - source: The original source file (relative to the sourceRoot).\r\n *   - name: An optional original token name for this mapping.\r\n */\r\nSourceMapGenerator$8.prototype.addMapping =\r\n  function SourceMapGenerator_addMapping(aArgs) {\r\n    var generated = util$9.getArg(aArgs, 'generated');\r\n    var original = util$9.getArg(aArgs, 'original', null);\r\n    var source = util$9.getArg(aArgs, 'source', null);\r\n    var name = util$9.getArg(aArgs, 'name', null);\r\n\r\n    if (!this._skipValidation) {\r\n      this._validateMapping(generated, original, source, name);\r\n    }\r\n\r\n    if (source != null) {\r\n      source = String(source);\r\n      if (!this._sources.has(source)) {\r\n        this._sources.add(source);\r\n      }\r\n    }\r\n\r\n    if (name != null) {\r\n      name = String(name);\r\n      if (!this._names.has(name)) {\r\n        this._names.add(name);\r\n      }\r\n    }\r\n\r\n    this._mappings.add({\r\n      generatedLine: generated.line,\r\n      generatedColumn: generated.column,\r\n      originalLine: original != null && original.line,\r\n      originalColumn: original != null && original.column,\r\n      source: source,\r\n      name: name\r\n    });\r\n  };\r\n\r\n/**\r\n * Set the source content for a source file.\r\n */\r\nSourceMapGenerator$8.prototype.setSourceContent =\r\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\r\n    var source = aSourceFile;\r\n    if (this._sourceRoot != null) {\r\n      source = util$9.relative(this._sourceRoot, source);\r\n    }\r\n\r\n    if (aSourceContent != null) {\r\n      // Add the source content to the _sourcesContents map.\r\n      // Create a new _sourcesContents map if the property is null.\r\n      if (!this._sourcesContents) {\r\n        this._sourcesContents = Object.create(null);\r\n      }\r\n      this._sourcesContents[util$9.toSetString(source)] = aSourceContent;\r\n    } else if (this._sourcesContents) {\r\n      // Remove the source file from the _sourcesContents map.\r\n      // If the _sourcesContents map is empty, set the property to null.\r\n      delete this._sourcesContents[util$9.toSetString(source)];\r\n      if (Object.keys(this._sourcesContents).length === 0) {\r\n        this._sourcesContents = null;\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Applies the mappings of a sub-source-map for a specific source file to the\r\n * source map being generated. Each mapping to the supplied source file is\r\n * rewritten using the supplied source map. Note: The resolution for the\r\n * resulting mappings is the minimium of this map and the supplied map.\r\n *\r\n * @param aSourceMapConsumer The source map to be applied.\r\n * @param aSourceFile Optional. The filename of the source file.\r\n *        If omitted, SourceMapConsumer's file property will be used.\r\n * @param aSourceMapPath Optional. The dirname of the path to the source map\r\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\r\n *        This parameter is needed when the two source maps aren't in the same\r\n *        directory, and the source map to be applied contains relative source\r\n *        paths. If so, those relative source paths need to be rewritten\r\n *        relative to the SourceMapGenerator.\r\n */\r\nSourceMapGenerator$8.prototype.applySourceMap =\r\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\r\n    var sourceFile = aSourceFile;\r\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\r\n    if (aSourceFile == null) {\r\n      if (aSourceMapConsumer.file == null) {\r\n        throw new Error(\r\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\r\n          'or the source map\\'s \"file\" property. Both were omitted.'\r\n        );\r\n      }\r\n      sourceFile = aSourceMapConsumer.file;\r\n    }\r\n    var sourceRoot = this._sourceRoot;\r\n    // Make \"sourceFile\" relative if an absolute Url is passed.\r\n    if (sourceRoot != null) {\r\n      sourceFile = util$9.relative(sourceRoot, sourceFile);\r\n    }\r\n    // Applying the SourceMap can add and remove items from the sources and\r\n    // the names array.\r\n    var newSources = new ArraySet$4();\r\n    var newNames = new ArraySet$4();\r\n\r\n    // Find mappings for the \"sourceFile\"\r\n    this._mappings.unsortedForEach(function (mapping) {\r\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\r\n        // Check if it can be mapped by the source map, then update the mapping.\r\n        var original = aSourceMapConsumer.originalPositionFor({\r\n          line: mapping.originalLine,\r\n          column: mapping.originalColumn\r\n        });\r\n        if (original.source != null) {\r\n          // Copy mapping\r\n          mapping.source = original.source;\r\n          if (aSourceMapPath != null) {\r\n            mapping.source = util$9.join(aSourceMapPath, mapping.source);\r\n          }\r\n          if (sourceRoot != null) {\r\n            mapping.source = util$9.relative(sourceRoot, mapping.source);\r\n          }\r\n          mapping.originalLine = original.line;\r\n          mapping.originalColumn = original.column;\r\n          if (original.name != null) {\r\n            mapping.name = original.name;\r\n          }\r\n        }\r\n      }\r\n\r\n      var source = mapping.source;\r\n      if (source != null && !newSources.has(source)) {\r\n        newSources.add(source);\r\n      }\r\n\r\n      var name = mapping.name;\r\n      if (name != null && !newNames.has(name)) {\r\n        newNames.add(name);\r\n      }\r\n\r\n    }, this);\r\n    this._sources = newSources;\r\n    this._names = newNames;\r\n\r\n    // Copy sourcesContents of applied map.\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        if (aSourceMapPath != null) {\r\n          sourceFile = util$9.join(aSourceMapPath, sourceFile);\r\n        }\r\n        if (sourceRoot != null) {\r\n          sourceFile = util$9.relative(sourceRoot, sourceFile);\r\n        }\r\n        this.setSourceContent(sourceFile, content);\r\n      }\r\n    }, this);\r\n  };\r\n\r\n/**\r\n * A mapping can have one of the three levels of data:\r\n *\r\n *   1. Just the generated position.\r\n *   2. The Generated position, original position, and original source.\r\n *   3. Generated and original position, original source, as well as a name\r\n *      token.\r\n *\r\n * To maintain consistency, we validate that any new mapping being added falls\r\n * in to one of these categories.\r\n */\r\nSourceMapGenerator$8.prototype._validateMapping =\r\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\r\n                                              aName) {\r\n    // When aOriginal is truthy but has empty values for .line and .column,\r\n    // it is most likely a programmer error. In this case we throw a very\r\n    // specific error message to try to guide them the right way.\r\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\r\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\r\n        throw new Error(\r\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\r\n            'the original mapping entirely and only map the generated position. If so, pass ' +\r\n            'null for the original mapping instead of an object with empty or null values.'\r\n        );\r\n    }\r\n\r\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\r\n        && aGenerated.line > 0 && aGenerated.column >= 0\r\n        && !aOriginal && !aSource && !aName) {\r\n      // Case 1.\r\n      return;\r\n    }\r\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\r\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\r\n             && aGenerated.line > 0 && aGenerated.column >= 0\r\n             && aOriginal.line > 0 && aOriginal.column >= 0\r\n             && aSource) {\r\n      // Cases 2 and 3.\r\n      return;\r\n    }\r\n    else {\r\n      throw new Error('Invalid mapping: ' + JSON.stringify({\r\n        generated: aGenerated,\r\n        source: aSource,\r\n        original: aOriginal,\r\n        name: aName\r\n      }));\r\n    }\r\n  };\r\n\r\n/**\r\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\r\n * specified by the source map format.\r\n */\r\nSourceMapGenerator$8.prototype._serializeMappings =\r\n  function SourceMapGenerator_serializeMappings() {\r\n    var previousGeneratedColumn = 0;\r\n    var previousGeneratedLine = 1;\r\n    var previousOriginalColumn = 0;\r\n    var previousOriginalLine = 0;\r\n    var previousName = 0;\r\n    var previousSource = 0;\r\n    var result = '';\r\n    var next;\r\n    var mapping;\r\n    var nameIdx;\r\n    var sourceIdx;\r\n\r\n    var mappings = this._mappings.toArray();\r\n    for (var i = 0, len = mappings.length; i < len; i++) {\r\n      mapping = mappings[i];\r\n      next = '';\r\n\r\n      if (mapping.generatedLine !== previousGeneratedLine) {\r\n        previousGeneratedColumn = 0;\r\n        while (mapping.generatedLine !== previousGeneratedLine) {\r\n          next += ';';\r\n          previousGeneratedLine++;\r\n        }\r\n      }\r\n      else {\r\n        if (i > 0) {\r\n          if (!util$9.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\r\n            continue;\r\n          }\r\n          next += ',';\r\n        }\r\n      }\r\n\r\n      next += base64VLQ$3.encode(mapping.generatedColumn\r\n                                 - previousGeneratedColumn);\r\n      previousGeneratedColumn = mapping.generatedColumn;\r\n\r\n      if (mapping.source != null) {\r\n        sourceIdx = this._sources.indexOf(mapping.source);\r\n        next += base64VLQ$3.encode(sourceIdx - previousSource);\r\n        previousSource = sourceIdx;\r\n\r\n        // lines are stored 0-based in SourceMap spec version 3\r\n        next += base64VLQ$3.encode(mapping.originalLine - 1\r\n                                   - previousOriginalLine);\r\n        previousOriginalLine = mapping.originalLine - 1;\r\n\r\n        next += base64VLQ$3.encode(mapping.originalColumn\r\n                                   - previousOriginalColumn);\r\n        previousOriginalColumn = mapping.originalColumn;\r\n\r\n        if (mapping.name != null) {\r\n          nameIdx = this._names.indexOf(mapping.name);\r\n          next += base64VLQ$3.encode(nameIdx - previousName);\r\n          previousName = nameIdx;\r\n        }\r\n      }\r\n\r\n      result += next;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\nSourceMapGenerator$8.prototype._generateSourcesContent =\r\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\r\n    return aSources.map(function (source) {\r\n      if (!this._sourcesContents) {\r\n        return null;\r\n      }\r\n      if (aSourceRoot != null) {\r\n        source = util$9.relative(aSourceRoot, source);\r\n      }\r\n      var key = util$9.toSetString(source);\r\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\r\n        ? this._sourcesContents[key]\r\n        : null;\r\n    }, this);\r\n  };\r\n\r\n/**\r\n * Externalize the source map.\r\n */\r\nSourceMapGenerator$8.prototype.toJSON =\r\n  function SourceMapGenerator_toJSON() {\r\n    var map = {\r\n      version: this._version,\r\n      sources: this._sources.toArray(),\r\n      names: this._names.toArray(),\r\n      mappings: this._serializeMappings()\r\n    };\r\n    if (this._file != null) {\r\n      map.file = this._file;\r\n    }\r\n    if (this._sourceRoot != null) {\r\n      map.sourceRoot = this._sourceRoot;\r\n    }\r\n    if (this._sourcesContents) {\r\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\r\n    }\r\n\r\n    return map;\r\n  };\r\n\r\n/**\r\n * Render the source map being generated to a string.\r\n */\r\nSourceMapGenerator$8.prototype.toString =\r\n  function SourceMapGenerator_toString() {\r\n    return JSON.stringify(this.toJSON());\r\n  };\r\n\r\nsourceMapGenerator$1.SourceMapGenerator = SourceMapGenerator$8;\r\n\r\nvar sourceMapConsumer$1 = {};\r\n\r\nvar binarySearch$3 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n(function (exports) {\r\n\t/*\r\n\t * Copyright 2011 Mozilla Foundation and contributors\r\n\t * Licensed under the New BSD license. See LICENSE or:\r\n\t * http://opensource.org/licenses/BSD-3-Clause\r\n\t */\r\n\r\n\texports.GREATEST_LOWER_BOUND = 1;\r\n\texports.LEAST_UPPER_BOUND = 2;\r\n\r\n\t/**\r\n\t * Recursive implementation of binary search.\r\n\t *\r\n\t * @param aLow Indices here and lower do not contain the needle.\r\n\t * @param aHigh Indices here and higher do not contain the needle.\r\n\t * @param aNeedle The element being searched for.\r\n\t * @param aHaystack The non-empty array being searched.\r\n\t * @param aCompare Function which takes two elements and returns -1, 0, or 1.\r\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n\t *     closest element that is smaller than or greater than the one we are\r\n\t *     searching for, respectively, if the exact element cannot be found.\r\n\t */\r\n\tfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\r\n\t  // This function terminates when one of the following is true:\r\n\t  //\r\n\t  //   1. We find the exact element we are looking for.\r\n\t  //\r\n\t  //   2. We did not find the exact element, but we can return the index of\r\n\t  //      the next-closest element.\r\n\t  //\r\n\t  //   3. We did not find the exact element, and there is no next-closest\r\n\t  //      element than the one we are searching for, so we return -1.\r\n\t  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\r\n\t  var cmp = aCompare(aNeedle, aHaystack[mid], true);\r\n\t  if (cmp === 0) {\r\n\t    // Found the element we are looking for.\r\n\t    return mid;\r\n\t  }\r\n\t  else if (cmp > 0) {\r\n\t    // Our needle is greater than aHaystack[mid].\r\n\t    if (aHigh - mid > 1) {\r\n\t      // The element is in the upper half.\r\n\t      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\r\n\t    }\r\n\r\n\t    // The exact needle element was not found in this haystack. Determine if\r\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\r\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n\t      return aHigh < aHaystack.length ? aHigh : -1;\r\n\t    } else {\r\n\t      return mid;\r\n\t    }\r\n\t  }\r\n\t  else {\r\n\t    // Our needle is less than aHaystack[mid].\r\n\t    if (mid - aLow > 1) {\r\n\t      // The element is in the lower half.\r\n\t      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\r\n\t    }\r\n\r\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\r\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n\t      return mid;\r\n\t    } else {\r\n\t      return aLow < 0 ? -1 : aLow;\r\n\t    }\r\n\t  }\r\n\t}\r\n\r\n\t/**\r\n\t * This is an implementation of binary search which will always try and return\r\n\t * the index of the closest element if there is no exact hit. This is because\r\n\t * mappings between original and generated line/col pairs are single points,\r\n\t * and there is an implicit region between each of them, so a miss just means\r\n\t * that you aren't on the very start of a region.\r\n\t *\r\n\t * @param aNeedle The element you are looking for.\r\n\t * @param aHaystack The array that is being searched.\r\n\t * @param aCompare A function which takes the needle and an element in the\r\n\t *     array and returns -1, 0, or 1 depending on whether the needle is less\r\n\t *     than, equal to, or greater than the element, respectively.\r\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n\t *     closest element that is smaller than or greater than the one we are\r\n\t *     searching for, respectively, if the exact element cannot be found.\r\n\t *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\r\n\t */\r\n\texports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\r\n\t  if (aHaystack.length === 0) {\r\n\t    return -1;\r\n\t  }\r\n\r\n\t  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\r\n\t                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\r\n\t  if (index < 0) {\r\n\t    return -1;\r\n\t  }\r\n\r\n\t  // We have found either the exact element, or the next-closest element than\r\n\t  // the one we are searching for. However, there may be more than one such\r\n\t  // element. Make sure we always return the smallest of these.\r\n\t  while (index - 1 >= 0) {\r\n\t    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\r\n\t      break;\r\n\t    }\r\n\t    --index;\r\n\t  }\r\n\r\n\t  return index;\r\n\t};\r\n} (binarySearch$3));\r\n\r\nvar quickSort$3 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n// It turns out that some (most?) JavaScript engines don't self-host\r\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\r\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\r\n// custom comparator function, calling back and forth between the VM's C++ and\r\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\r\n// worse generated code for the comparator function than would be optimal. In\r\n// fact, when sorting with a comparator, these costs outweigh the benefits of\r\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\r\n// a ~3500ms mean speed-up in `bench/bench.html`.\r\n\r\nfunction SortTemplate(comparator) {\r\n\r\n/**\r\n * Swap the elements indexed by `x` and `y` in the array `ary`.\r\n *\r\n * @param {Array} ary\r\n *        The array.\r\n * @param {Number} x\r\n *        The index of the first item.\r\n * @param {Number} y\r\n *        The index of the second item.\r\n */\r\nfunction swap(ary, x, y) {\r\n  var temp = ary[x];\r\n  ary[x] = ary[y];\r\n  ary[y] = temp;\r\n}\r\n\r\n/**\r\n * Returns a random integer within the range `low .. high` inclusive.\r\n *\r\n * @param {Number} low\r\n *        The lower bound on the range.\r\n * @param {Number} high\r\n *        The upper bound on the range.\r\n */\r\nfunction randomIntInRange(low, high) {\r\n  return Math.round(low + (Math.random() * (high - low)));\r\n}\r\n\r\n/**\r\n * The Quick Sort algorithm.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n * @param {Number} p\r\n *        Start index of the array\r\n * @param {Number} r\r\n *        End index of the array\r\n */\r\nfunction doQuickSort(ary, comparator, p, r) {\r\n  // If our lower bound is less than our upper bound, we (1) partition the\r\n  // array into two pieces and (2) recurse on each half. If it is not, this is\r\n  // the empty array and our base case.\r\n\r\n  if (p < r) {\r\n    // (1) Partitioning.\r\n    //\r\n    // The partitioning chooses a pivot between `p` and `r` and moves all\r\n    // elements that are less than or equal to the pivot to the before it, and\r\n    // all the elements that are greater than it after it. The effect is that\r\n    // once partition is done, the pivot is in the exact place it will be when\r\n    // the array is put in sorted order, and it will not need to be moved\r\n    // again. This runs in O(n) time.\r\n\r\n    // Always choose a random pivot so that an input array which is reverse\r\n    // sorted does not cause O(n^2) running time.\r\n    var pivotIndex = randomIntInRange(p, r);\r\n    var i = p - 1;\r\n\r\n    swap(ary, pivotIndex, r);\r\n    var pivot = ary[r];\r\n\r\n    // Immediately after `j` is incremented in this loop, the following hold\r\n    // true:\r\n    //\r\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\r\n    //\r\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\r\n    for (var j = p; j < r; j++) {\r\n      if (comparator(ary[j], pivot, false) <= 0) {\r\n        i += 1;\r\n        swap(ary, i, j);\r\n      }\r\n    }\r\n\r\n    swap(ary, i + 1, j);\r\n    var q = i + 1;\r\n\r\n    // (2) Recurse on each half.\r\n\r\n    doQuickSort(ary, comparator, p, q - 1);\r\n    doQuickSort(ary, comparator, q + 1, r);\r\n  }\r\n}\r\n\r\n  return doQuickSort;\r\n}\r\n\r\nfunction cloneSort(comparator) {\r\n  let template = SortTemplate.toString();\r\n  let templateFn = new Function(`return ${template}`)();\r\n  return templateFn(comparator);\r\n}\r\n\r\n/**\r\n * Sort the given array in-place with the given comparator function.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n */\r\n\r\nlet sortCache = new WeakMap();\r\nquickSort$3.quickSort = function (ary, comparator, start = 0) {\r\n  let doQuickSort = sortCache.get(comparator);\r\n  if (doQuickSort === void 0) {\r\n    doQuickSort = cloneSort(comparator);\r\n    sortCache.set(comparator, doQuickSort);\r\n  }\r\n  doQuickSort(ary, comparator, start, ary.length - 1);\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util$8 = util$c;\r\nvar binarySearch$2 = binarySearch$3;\r\nvar ArraySet$3 = arraySet$1.ArraySet;\r\nvar base64VLQ$2 = base64Vlq$1;\r\nvar quickSort$2 = quickSort$3.quickSort;\r\n\r\nfunction SourceMapConsumer$6(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util$8.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  return sourceMap.sections != null\r\n    ? new IndexedSourceMapConsumer$1(sourceMap, aSourceMapURL)\r\n    : new BasicSourceMapConsumer$1(sourceMap, aSourceMapURL);\r\n}\r\n\r\nSourceMapConsumer$6.fromSourceMap = function(aSourceMap, aSourceMapURL) {\r\n  return BasicSourceMapConsumer$1.fromSourceMap(aSourceMap, aSourceMapURL);\r\n};\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nSourceMapConsumer$6.prototype._version = 3;\r\n\r\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\r\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\r\n// are lazily instantiated, accessed via the `_generatedMappings` and\r\n// `_originalMappings` getters respectively, and we only parse the mappings\r\n// and create these arrays once queried for a source location. We jump through\r\n// these hoops because there can be many thousands of mappings, and parsing\r\n// them is expensive, so we only want to do it if we must.\r\n//\r\n// Each object in the arrays is of the form:\r\n//\r\n//     {\r\n//       generatedLine: The line number in the generated code,\r\n//       generatedColumn: The column number in the generated code,\r\n//       source: The path to the original source file that generated this\r\n//               chunk of code,\r\n//       originalLine: The line number in the original source that\r\n//                     corresponds to this chunk of generated code,\r\n//       originalColumn: The column number in the original source that\r\n//                       corresponds to this chunk of generated code,\r\n//       name: The name of the original symbol which generated this chunk of\r\n//             code.\r\n//     }\r\n//\r\n// All properties except for `generatedLine` and `generatedColumn` can be\r\n// `null`.\r\n//\r\n// `_generatedMappings` is ordered by the generated positions.\r\n//\r\n// `_originalMappings` is ordered by the original positions.\r\n\r\nSourceMapConsumer$6.prototype.__generatedMappings = null;\r\nObject.defineProperty(SourceMapConsumer$6.prototype, '_generatedMappings', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!this.__generatedMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__generatedMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer$6.prototype.__originalMappings = null;\r\nObject.defineProperty(SourceMapConsumer$6.prototype, '_originalMappings', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!this.__originalMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__originalMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer$6.prototype._charIsMappingSeparator =\r\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\r\n    var c = aStr.charAt(index);\r\n    return c === \";\" || c === \",\";\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nSourceMapConsumer$6.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    throw new Error(\"Subclasses must implement _parseMappings\");\r\n  };\r\n\r\nSourceMapConsumer$6.GENERATED_ORDER = 1;\r\nSourceMapConsumer$6.ORIGINAL_ORDER = 2;\r\n\r\nSourceMapConsumer$6.GREATEST_LOWER_BOUND = 1;\r\nSourceMapConsumer$6.LEAST_UPPER_BOUND = 2;\r\n\r\n/**\r\n * Iterate over each mapping between an original source/line/column and a\r\n * generated line/column in this source map.\r\n *\r\n * @param Function aCallback\r\n *        The function that is called with each mapping.\r\n * @param Object aContext\r\n *        Optional. If specified, this object will be the value of `this` every\r\n *        time that `aCallback` is called.\r\n * @param aOrder\r\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\r\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\r\n *        iterate over the mappings sorted by the generated file's line/column\r\n *        order or the original's source/line/column order, respectively. Defaults to\r\n *        `SourceMapConsumer.GENERATED_ORDER`.\r\n */\r\nSourceMapConsumer$6.prototype.eachMapping =\r\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\r\n    var context = aContext || null;\r\n    var order = aOrder || SourceMapConsumer$6.GENERATED_ORDER;\r\n\r\n    var mappings;\r\n    switch (order) {\r\n    case SourceMapConsumer$6.GENERATED_ORDER:\r\n      mappings = this._generatedMappings;\r\n      break;\r\n    case SourceMapConsumer$6.ORIGINAL_ORDER:\r\n      mappings = this._originalMappings;\r\n      break;\r\n    default:\r\n      throw new Error(\"Unknown order of iteration.\");\r\n    }\r\n\r\n    var sourceRoot = this.sourceRoot;\r\n    var boundCallback = aCallback.bind(context);\r\n    var names = this._names;\r\n    var sources = this._sources;\r\n    var sourceMapURL = this._sourceMapURL;\r\n\r\n    for (var i = 0, n = mappings.length; i < n; i++) {\r\n      var mapping = mappings[i];\r\n      var source = mapping.source === null ? null : sources.at(mapping.source);\r\n      source = util$8.computeSourceURL(sourceRoot, source, sourceMapURL);\r\n      boundCallback({\r\n        source: source,\r\n        generatedLine: mapping.generatedLine,\r\n        generatedColumn: mapping.generatedColumn,\r\n        originalLine: mapping.originalLine,\r\n        originalColumn: mapping.originalColumn,\r\n        name: mapping.name === null ? null : names.at(mapping.name)\r\n      });\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns all generated line and column information for the original source,\r\n * line, and column provided. If no column is provided, returns all mappings\r\n * corresponding to a either the line we are searching for or the next\r\n * closest line that has any mappings. Otherwise, returns all mappings\r\n * corresponding to the given line and either the column we are searching for\r\n * or the next closest column that has any offsets.\r\n *\r\n * The only argument is an object with the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number is 1-based.\r\n *   - column: Optional. the column number in the original source.\r\n *    The column number is 0-based.\r\n *\r\n * and an array of objects is returned, each with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *    line number is 1-based.\r\n *   - column: The column number in the generated source, or null.\r\n *    The column number is 0-based.\r\n */\r\nSourceMapConsumer$6.prototype.allGeneratedPositionsFor =\r\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\r\n    var line = util$8.getArg(aArgs, 'line');\r\n\r\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\r\n    // returns the index of the closest mapping less than the needle. By\r\n    // setting needle.originalColumn to 0, we thus find the last mapping for\r\n    // the given line, provided such a mapping exists.\r\n    var needle = {\r\n      source: util$8.getArg(aArgs, 'source'),\r\n      originalLine: line,\r\n      originalColumn: util$8.getArg(aArgs, 'column', 0)\r\n    };\r\n\r\n    needle.source = this._findSourceIndex(needle.source);\r\n    if (needle.source < 0) {\r\n      return [];\r\n    }\r\n\r\n    var mappings = [];\r\n\r\n    var index = this._findMapping(needle,\r\n                                  this._originalMappings,\r\n                                  \"originalLine\",\r\n                                  \"originalColumn\",\r\n                                  util$8.compareByOriginalPositions,\r\n                                  binarySearch$2.LEAST_UPPER_BOUND);\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (aArgs.column === undefined) {\r\n        var originalLine = mapping.originalLine;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we found. Since\r\n        // mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we found.\r\n        while (mapping && mapping.originalLine === originalLine) {\r\n          mappings.push({\r\n            line: util$8.getArg(mapping, 'generatedLine', null),\r\n            column: util$8.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util$8.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      } else {\r\n        var originalColumn = mapping.originalColumn;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we were searching for.\r\n        // Since mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we are searching for.\r\n        while (mapping &&\r\n               mapping.originalLine === line &&\r\n               mapping.originalColumn == originalColumn) {\r\n          mappings.push({\r\n            line: util$8.getArg(mapping, 'generatedLine', null),\r\n            column: util$8.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util$8.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      }\r\n    }\r\n\r\n    return mappings;\r\n  };\r\n\r\nsourceMapConsumer$1.SourceMapConsumer = SourceMapConsumer$6;\r\n\r\n/**\r\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\r\n * query for information about the original file positions by giving it a file\r\n * position in the generated source.\r\n *\r\n * The first parameter is the raw source map (either as a JSON string, or\r\n * already parsed to an object). According to the spec, source maps have the\r\n * following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - sources: An array of URLs to the original source files.\r\n *   - names: An array of identifiers which can be referrenced by individual mappings.\r\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\r\n *   - sourcesContent: Optional. An array of contents of the original source files.\r\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *\r\n * Here is an example source map, taken from the source map spec[0]:\r\n *\r\n *     {\r\n *       version : 3,\r\n *       file: \"out.js\",\r\n *       sourceRoot : \"\",\r\n *       sources: [\"foo.js\", \"bar.js\"],\r\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *       mappings: \"AA,AB;;ABCDE;\"\r\n *     }\r\n *\r\n * The second parameter, if given, is a string whose value is the URL\r\n * at which the source map was found.  This URL is used to compute the\r\n * sources array.\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\r\n */\r\nfunction BasicSourceMapConsumer$1(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util$8.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  var version = util$8.getArg(sourceMap, 'version');\r\n  var sources = util$8.getArg(sourceMap, 'sources');\r\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\r\n  // requires the array) to play nice here.\r\n  var names = util$8.getArg(sourceMap, 'names', []);\r\n  var sourceRoot = util$8.getArg(sourceMap, 'sourceRoot', null);\r\n  var sourcesContent = util$8.getArg(sourceMap, 'sourcesContent', null);\r\n  var mappings = util$8.getArg(sourceMap, 'mappings');\r\n  var file = util$8.getArg(sourceMap, 'file', null);\r\n\r\n  // Once again, Sass deviates from the spec and supplies the version as a\r\n  // string rather than a number, so we use loose equality checking here.\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  if (sourceRoot) {\r\n    sourceRoot = util$8.normalize(sourceRoot);\r\n  }\r\n\r\n  sources = sources\r\n    .map(String)\r\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\r\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\r\n    // See bugzil.la/1090768.\r\n    .map(util$8.normalize)\r\n    // Always ensure that absolute sources are internally stored relative to\r\n    // the source root, if the source root is absolute. Not doing this would\r\n    // be particularly problematic when the source root is a prefix of the\r\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\r\n    .map(function (source) {\r\n      return sourceRoot && util$8.isAbsolute(sourceRoot) && util$8.isAbsolute(source)\r\n        ? util$8.relative(sourceRoot, source)\r\n        : source;\r\n    });\r\n\r\n  // Pass `true` below to allow duplicate names and sources. While source maps\r\n  // are intended to be compressed and deduplicated, the TypeScript compiler\r\n  // sometimes generates source maps with duplicates in them. See Github issue\r\n  // #72 and bugzil.la/889492.\r\n  this._names = ArraySet$3.fromArray(names.map(String), true);\r\n  this._sources = ArraySet$3.fromArray(sources, true);\r\n\r\n  this._absoluteSources = this._sources.toArray().map(function (s) {\r\n    return util$8.computeSourceURL(sourceRoot, s, aSourceMapURL);\r\n  });\r\n\r\n  this.sourceRoot = sourceRoot;\r\n  this.sourcesContent = sourcesContent;\r\n  this._mappings = mappings;\r\n  this._sourceMapURL = aSourceMapURL;\r\n  this.file = file;\r\n}\r\n\r\nBasicSourceMapConsumer$1.prototype = Object.create(SourceMapConsumer$6.prototype);\r\nBasicSourceMapConsumer$1.prototype.consumer = SourceMapConsumer$6;\r\n\r\n/**\r\n * Utility function to find the index of a source.  Returns -1 if not\r\n * found.\r\n */\r\nBasicSourceMapConsumer$1.prototype._findSourceIndex = function(aSource) {\r\n  var relativeSource = aSource;\r\n  if (this.sourceRoot != null) {\r\n    relativeSource = util$8.relative(this.sourceRoot, relativeSource);\r\n  }\r\n\r\n  if (this._sources.has(relativeSource)) {\r\n    return this._sources.indexOf(relativeSource);\r\n  }\r\n\r\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\r\n  // this case we can't simply undo the transform.\r\n  var i;\r\n  for (i = 0; i < this._absoluteSources.length; ++i) {\r\n    if (this._absoluteSources[i] == aSource) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n\r\n/**\r\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\r\n *\r\n * @param SourceMapGenerator aSourceMap\r\n *        The source map that will be consumed.\r\n * @param String aSourceMapURL\r\n *        The URL at which the source map can be found (optional)\r\n * @returns BasicSourceMapConsumer\r\n */\r\nBasicSourceMapConsumer$1.fromSourceMap =\r\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\r\n    var smc = Object.create(BasicSourceMapConsumer$1.prototype);\r\n\r\n    var names = smc._names = ArraySet$3.fromArray(aSourceMap._names.toArray(), true);\r\n    var sources = smc._sources = ArraySet$3.fromArray(aSourceMap._sources.toArray(), true);\r\n    smc.sourceRoot = aSourceMap._sourceRoot;\r\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\r\n                                                            smc.sourceRoot);\r\n    smc.file = aSourceMap._file;\r\n    smc._sourceMapURL = aSourceMapURL;\r\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\r\n      return util$8.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\r\n    });\r\n\r\n    // Because we are modifying the entries (by converting string sources and\r\n    // names to indices into the sources and names ArraySets), we have to make\r\n    // a copy of the entry or else bad things happen. Shared mutable state\r\n    // strikes again! See github issue #191.\r\n\r\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\r\n    var destGeneratedMappings = smc.__generatedMappings = [];\r\n    var destOriginalMappings = smc.__originalMappings = [];\r\n\r\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\r\n      var srcMapping = generatedMappings[i];\r\n      var destMapping = new Mapping$1;\r\n      destMapping.generatedLine = srcMapping.generatedLine;\r\n      destMapping.generatedColumn = srcMapping.generatedColumn;\r\n\r\n      if (srcMapping.source) {\r\n        destMapping.source = sources.indexOf(srcMapping.source);\r\n        destMapping.originalLine = srcMapping.originalLine;\r\n        destMapping.originalColumn = srcMapping.originalColumn;\r\n\r\n        if (srcMapping.name) {\r\n          destMapping.name = names.indexOf(srcMapping.name);\r\n        }\r\n\r\n        destOriginalMappings.push(destMapping);\r\n      }\r\n\r\n      destGeneratedMappings.push(destMapping);\r\n    }\r\n\r\n    quickSort$2(smc.__originalMappings, util$8.compareByOriginalPositions);\r\n\r\n    return smc;\r\n  };\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nBasicSourceMapConsumer$1.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(BasicSourceMapConsumer$1.prototype, 'sources', {\r\n  get: function () {\r\n    return this._absoluteSources.slice();\r\n  }\r\n});\r\n\r\n/**\r\n * Provide the JIT with a nice shape / hidden class.\r\n */\r\nfunction Mapping$1() {\r\n  this.generatedLine = 0;\r\n  this.generatedColumn = 0;\r\n  this.source = null;\r\n  this.originalLine = null;\r\n  this.originalColumn = null;\r\n  this.name = null;\r\n}\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\n\r\nconst compareGenerated = util$8.compareByGeneratedPositionsDeflatedNoLine;\r\nfunction sortGenerated(array, start) {\r\n  let l = array.length;\r\n  let n = array.length - start;\r\n  if (n <= 1) {\r\n    return;\r\n  } else if (n == 2) {\r\n    let a = array[start];\r\n    let b = array[start + 1];\r\n    if (compareGenerated(a, b) > 0) {\r\n      array[start] = b;\r\n      array[start + 1] = a;\r\n    }\r\n  } else if (n < 20) {\r\n    for (let i = start; i < l; i++) {\r\n      for (let j = i; j > start; j--) {\r\n        let a = array[j - 1];\r\n        let b = array[j];\r\n        if (compareGenerated(a, b) <= 0) {\r\n          break;\r\n        }\r\n        array[j - 1] = b;\r\n        array[j] = a;\r\n      }\r\n    }\r\n  } else {\r\n    quickSort$2(array, compareGenerated, start);\r\n  }\r\n}\r\nBasicSourceMapConsumer$1.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    var generatedLine = 1;\r\n    var previousGeneratedColumn = 0;\r\n    var previousOriginalLine = 0;\r\n    var previousOriginalColumn = 0;\r\n    var previousSource = 0;\r\n    var previousName = 0;\r\n    var length = aStr.length;\r\n    var index = 0;\r\n    var temp = {};\r\n    var originalMappings = [];\r\n    var generatedMappings = [];\r\n    var mapping, segment, end, value;\r\n\r\n    let subarrayStart = 0;\r\n    while (index < length) {\r\n      if (aStr.charAt(index) === ';') {\r\n        generatedLine++;\r\n        index++;\r\n        previousGeneratedColumn = 0;\r\n\r\n        sortGenerated(generatedMappings, subarrayStart);\r\n        subarrayStart = generatedMappings.length;\r\n      }\r\n      else if (aStr.charAt(index) === ',') {\r\n        index++;\r\n      }\r\n      else {\r\n        mapping = new Mapping$1();\r\n        mapping.generatedLine = generatedLine;\r\n\r\n        for (end = index; end < length; end++) {\r\n          if (this._charIsMappingSeparator(aStr, end)) {\r\n            break;\r\n          }\r\n        }\r\n        aStr.slice(index, end);\r\n\r\n        segment = [];\r\n        while (index < end) {\r\n          base64VLQ$2.decode(aStr, index, temp);\r\n          value = temp.value;\r\n          index = temp.rest;\r\n          segment.push(value);\r\n        }\r\n\r\n        if (segment.length === 2) {\r\n          throw new Error('Found a source, but no line and column');\r\n        }\r\n\r\n        if (segment.length === 3) {\r\n          throw new Error('Found a source and line, but no column');\r\n        }\r\n\r\n        // Generated column.\r\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\r\n        previousGeneratedColumn = mapping.generatedColumn;\r\n\r\n        if (segment.length > 1) {\r\n          // Original source.\r\n          mapping.source = previousSource + segment[1];\r\n          previousSource += segment[1];\r\n\r\n          // Original line.\r\n          mapping.originalLine = previousOriginalLine + segment[2];\r\n          previousOriginalLine = mapping.originalLine;\r\n          // Lines are stored 0-based\r\n          mapping.originalLine += 1;\r\n\r\n          // Original column.\r\n          mapping.originalColumn = previousOriginalColumn + segment[3];\r\n          previousOriginalColumn = mapping.originalColumn;\r\n\r\n          if (segment.length > 4) {\r\n            // Original name.\r\n            mapping.name = previousName + segment[4];\r\n            previousName += segment[4];\r\n          }\r\n        }\r\n\r\n        generatedMappings.push(mapping);\r\n        if (typeof mapping.originalLine === 'number') {\r\n          let currentSource = mapping.source;\r\n          while (originalMappings.length <= currentSource) {\r\n            originalMappings.push(null);\r\n          }\r\n          if (originalMappings[currentSource] === null) {\r\n            originalMappings[currentSource] = [];\r\n          }\r\n          originalMappings[currentSource].push(mapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    sortGenerated(generatedMappings, subarrayStart);\r\n    this.__generatedMappings = generatedMappings;\r\n\r\n    for (var i = 0; i < originalMappings.length; i++) {\r\n      if (originalMappings[i] != null) {\r\n        quickSort$2(originalMappings[i], util$8.compareByOriginalPositionsNoSource);\r\n      }\r\n    }\r\n    this.__originalMappings = [].concat(...originalMappings);\r\n  };\r\n\r\n/**\r\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\r\n * we are searching for in the given \"haystack\" of mappings.\r\n */\r\nBasicSourceMapConsumer$1.prototype._findMapping =\r\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\r\n                                         aColumnName, aComparator, aBias) {\r\n    // To return the position we are searching for, we must first find the\r\n    // mapping for the given position and then return the opposite position it\r\n    // points to. Because the mappings are sorted, we can use binary search to\r\n    // find the best mapping.\r\n\r\n    if (aNeedle[aLineName] <= 0) {\r\n      throw new TypeError('Line must be greater than or equal to 1, got '\r\n                          + aNeedle[aLineName]);\r\n    }\r\n    if (aNeedle[aColumnName] < 0) {\r\n      throw new TypeError('Column must be greater than or equal to 0, got '\r\n                          + aNeedle[aColumnName]);\r\n    }\r\n\r\n    return binarySearch$2.search(aNeedle, aMappings, aComparator, aBias);\r\n  };\r\n\r\n/**\r\n * Compute the last column for each generated mapping. The last column is\r\n * inclusive.\r\n */\r\nBasicSourceMapConsumer$1.prototype.computeColumnSpans =\r\n  function SourceMapConsumer_computeColumnSpans() {\r\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      // Mappings do not contain a field for the last generated columnt. We\r\n      // can come up with an optimistic estimate, however, by assuming that\r\n      // mappings are contiguous (i.e. given two consecutive mappings, the\r\n      // first mapping ends where the second one starts).\r\n      if (index + 1 < this._generatedMappings.length) {\r\n        var nextMapping = this._generatedMappings[index + 1];\r\n\r\n        if (mapping.generatedLine === nextMapping.generatedLine) {\r\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // The last mapping for each line spans the entire line.\r\n      mapping.lastGeneratedColumn = Infinity;\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the generated source.  The column\r\n *     number is 0-based.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the original source, or null.  The\r\n *     column number is 0-based.\r\n *   - name: The original identifier, or null.\r\n */\r\nBasicSourceMapConsumer$1.prototype.originalPositionFor =\r\n  function SourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util$8.getArg(aArgs, 'line'),\r\n      generatedColumn: util$8.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._generatedMappings,\r\n      \"generatedLine\",\r\n      \"generatedColumn\",\r\n      util$8.compareByGeneratedPositionsDeflated,\r\n      util$8.getArg(aArgs, 'bias', SourceMapConsumer$6.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      if (mapping.generatedLine === needle.generatedLine) {\r\n        var source = util$8.getArg(mapping, 'source', null);\r\n        if (source !== null) {\r\n          source = this._sources.at(source);\r\n          source = util$8.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\r\n        }\r\n        var name = util$8.getArg(mapping, 'name', null);\r\n        if (name !== null) {\r\n          name = this._names.at(name);\r\n        }\r\n        return {\r\n          source: source,\r\n          line: util$8.getArg(mapping, 'originalLine', null),\r\n          column: util$8.getArg(mapping, 'originalColumn', null),\r\n          name: name\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      source: null,\r\n      line: null,\r\n      column: null,\r\n      name: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nBasicSourceMapConsumer$1.prototype.hasContentsOfAllSources =\r\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\r\n    if (!this.sourcesContent) {\r\n      return false;\r\n    }\r\n    return this.sourcesContent.length >= this._sources.size() &&\r\n      !this.sourcesContent.some(function (sc) { return sc == null; });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nBasicSourceMapConsumer$1.prototype.sourceContentFor =\r\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    if (!this.sourcesContent) {\r\n      return null;\r\n    }\r\n\r\n    var index = this._findSourceIndex(aSource);\r\n    if (index >= 0) {\r\n      return this.sourcesContent[index];\r\n    }\r\n\r\n    var relativeSource = aSource;\r\n    if (this.sourceRoot != null) {\r\n      relativeSource = util$8.relative(this.sourceRoot, relativeSource);\r\n    }\r\n\r\n    var url;\r\n    if (this.sourceRoot != null\r\n        && (url = util$8.urlParse(this.sourceRoot))) {\r\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\r\n      // many users. We can help them out when they expect file:// URIs to\r\n      // behave like it would if they were running a local HTTP server. See\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\r\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\r\n      if (url.scheme == \"file\"\r\n          && this._sources.has(fileUriAbsPath)) {\r\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\r\n      }\r\n\r\n      if ((!url.path || url.path == \"/\")\r\n          && this._sources.has(\"/\" + relativeSource)) {\r\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\r\n      }\r\n    }\r\n\r\n    // This function is used recursively from\r\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\r\n    // don't want to throw if we can't find the source - we just want to\r\n    // return null, so we provide a flag to exit gracefully.\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the original source.  The column\r\n *     number is 0-based.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the generated source, or null.\r\n *     The column number is 0-based.\r\n */\r\nBasicSourceMapConsumer$1.prototype.generatedPositionFor =\r\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\r\n    var source = util$8.getArg(aArgs, 'source');\r\n    source = this._findSourceIndex(source);\r\n    if (source < 0) {\r\n      return {\r\n        line: null,\r\n        column: null,\r\n        lastColumn: null\r\n      };\r\n    }\r\n\r\n    var needle = {\r\n      source: source,\r\n      originalLine: util$8.getArg(aArgs, 'line'),\r\n      originalColumn: util$8.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._originalMappings,\r\n      \"originalLine\",\r\n      \"originalColumn\",\r\n      util$8.compareByOriginalPositions,\r\n      util$8.getArg(aArgs, 'bias', SourceMapConsumer$6.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (mapping.source === needle.source) {\r\n        return {\r\n          line: util$8.getArg(mapping, 'generatedLine', null),\r\n          column: util$8.getArg(mapping, 'generatedColumn', null),\r\n          lastColumn: util$8.getArg(mapping, 'lastGeneratedColumn', null)\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null,\r\n      lastColumn: null\r\n    };\r\n  };\r\n\r\nsourceMapConsumer$1.BasicSourceMapConsumer = BasicSourceMapConsumer$1;\r\n\r\n/**\r\n * An IndexedSourceMapConsumer instance represents a parsed source map which\r\n * we can query for information. It differs from BasicSourceMapConsumer in\r\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\r\n * input.\r\n *\r\n * The first parameter is a raw source map (either as a JSON string, or already\r\n * parsed to an object). According to the spec for indexed source maps, they\r\n * have the following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *   - sections: A list of section definitions.\r\n *\r\n * Each value under the \"sections\" field has two fields:\r\n *   - offset: The offset into the original specified at which this section\r\n *       begins to apply, defined as an object with a \"line\" and \"column\"\r\n *       field.\r\n *   - map: A source map definition. This source map could also be indexed,\r\n *       but doesn't have to be.\r\n *\r\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\r\n * specifying a URL to retrieve a source map from, but that's currently\r\n * unsupported.\r\n *\r\n * Here's an example source map, taken from the source map spec[0], but\r\n * modified to omit a section which uses the \"url\" field.\r\n *\r\n *  {\r\n *    version : 3,\r\n *    file: \"app.js\",\r\n *    sections: [{\r\n *      offset: {line:100, column:10},\r\n *      map: {\r\n *        version : 3,\r\n *        file: \"section.js\",\r\n *        sources: [\"foo.js\", \"bar.js\"],\r\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *        mappings: \"AAAA,E;;ABCDE;\"\r\n *      }\r\n *    }],\r\n *  }\r\n *\r\n * The second parameter, if given, is a string whose value is the URL\r\n * at which the source map was found.  This URL is used to compute the\r\n * sources array.\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\r\n */\r\nfunction IndexedSourceMapConsumer$1(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util$8.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  var version = util$8.getArg(sourceMap, 'version');\r\n  var sections = util$8.getArg(sourceMap, 'sections');\r\n\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  this._sources = new ArraySet$3();\r\n  this._names = new ArraySet$3();\r\n\r\n  var lastOffset = {\r\n    line: -1,\r\n    column: 0\r\n  };\r\n  this._sections = sections.map(function (s) {\r\n    if (s.url) {\r\n      // The url field will require support for asynchronicity.\r\n      // See https://github.com/mozilla/source-map/issues/16\r\n      throw new Error('Support for url field in sections not implemented.');\r\n    }\r\n    var offset = util$8.getArg(s, 'offset');\r\n    var offsetLine = util$8.getArg(offset, 'line');\r\n    var offsetColumn = util$8.getArg(offset, 'column');\r\n\r\n    if (offsetLine < lastOffset.line ||\r\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\r\n      throw new Error('Section offsets must be ordered and non-overlapping.');\r\n    }\r\n    lastOffset = offset;\r\n\r\n    return {\r\n      generatedOffset: {\r\n        // The offset fields are 0-based, but we use 1-based indices when\r\n        // encoding/decoding from VLQ.\r\n        generatedLine: offsetLine + 1,\r\n        generatedColumn: offsetColumn + 1\r\n      },\r\n      consumer: new SourceMapConsumer$6(util$8.getArg(s, 'map'), aSourceMapURL)\r\n    }\r\n  });\r\n}\r\n\r\nIndexedSourceMapConsumer$1.prototype = Object.create(SourceMapConsumer$6.prototype);\r\nIndexedSourceMapConsumer$1.prototype.constructor = SourceMapConsumer$6;\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nIndexedSourceMapConsumer$1.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(IndexedSourceMapConsumer$1.prototype, 'sources', {\r\n  get: function () {\r\n    var sources = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\r\n        sources.push(this._sections[i].consumer.sources[j]);\r\n      }\r\n    }\r\n    return sources;\r\n  }\r\n});\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the generated source.  The column\r\n *     number is 0-based.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the original source, or null.  The\r\n *     column number is 0-based.\r\n *   - name: The original identifier, or null.\r\n */\r\nIndexedSourceMapConsumer$1.prototype.originalPositionFor =\r\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util$8.getArg(aArgs, 'line'),\r\n      generatedColumn: util$8.getArg(aArgs, 'column')\r\n    };\r\n\r\n    // Find the section containing the generated position we're trying to map\r\n    // to an original position.\r\n    var sectionIndex = binarySearch$2.search(needle, this._sections,\r\n      function(needle, section) {\r\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\r\n        if (cmp) {\r\n          return cmp;\r\n        }\r\n\r\n        return (needle.generatedColumn -\r\n                section.generatedOffset.generatedColumn);\r\n      });\r\n    var section = this._sections[sectionIndex];\r\n\r\n    if (!section) {\r\n      return {\r\n        source: null,\r\n        line: null,\r\n        column: null,\r\n        name: null\r\n      };\r\n    }\r\n\r\n    return section.consumer.originalPositionFor({\r\n      line: needle.generatedLine -\r\n        (section.generatedOffset.generatedLine - 1),\r\n      column: needle.generatedColumn -\r\n        (section.generatedOffset.generatedLine === needle.generatedLine\r\n         ? section.generatedOffset.generatedColumn - 1\r\n         : 0),\r\n      bias: aArgs.bias\r\n    });\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nIndexedSourceMapConsumer$1.prototype.hasContentsOfAllSources =\r\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\r\n    return this._sections.every(function (s) {\r\n      return s.consumer.hasContentsOfAllSources();\r\n    });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nIndexedSourceMapConsumer$1.prototype.sourceContentFor =\r\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      var content = section.consumer.sourceContentFor(aSource, true);\r\n      if (content) {\r\n        return content;\r\n      }\r\n    }\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the original source.  The column\r\n *     number is 0-based.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *     line number is 1-based. \r\n *   - column: The column number in the generated source, or null.\r\n *     The column number is 0-based.\r\n */\r\nIndexedSourceMapConsumer$1.prototype.generatedPositionFor =\r\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      // Only consider this section if the requested source is in the list of\r\n      // sources of the consumer.\r\n      if (section.consumer._findSourceIndex(util$8.getArg(aArgs, 'source')) === -1) {\r\n        continue;\r\n      }\r\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\r\n      if (generatedPosition) {\r\n        var ret = {\r\n          line: generatedPosition.line +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          column: generatedPosition.column +\r\n            (section.generatedOffset.generatedLine === generatedPosition.line\r\n             ? section.generatedOffset.generatedColumn - 1\r\n             : 0)\r\n        };\r\n        return ret;\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nIndexedSourceMapConsumer$1.prototype._parseMappings =\r\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    this.__generatedMappings = [];\r\n    this.__originalMappings = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n      var sectionMappings = section.consumer._generatedMappings;\r\n      for (var j = 0; j < sectionMappings.length; j++) {\r\n        var mapping = sectionMappings[j];\r\n\r\n        var source = section.consumer._sources.at(mapping.source);\r\n        source = util$8.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\r\n        this._sources.add(source);\r\n        source = this._sources.indexOf(source);\r\n\r\n        var name = null;\r\n        if (mapping.name) {\r\n          name = section.consumer._names.at(mapping.name);\r\n          this._names.add(name);\r\n          name = this._names.indexOf(name);\r\n        }\r\n\r\n        // The mappings coming from the consumer for the section have\r\n        // generated positions relative to the start of the section, so we\r\n        // need to offset them to be relative to the start of the concatenated\r\n        // generated file.\r\n        var adjustedMapping = {\r\n          source: source,\r\n          generatedLine: mapping.generatedLine +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          generatedColumn: mapping.generatedColumn +\r\n            (section.generatedOffset.generatedLine === mapping.generatedLine\r\n            ? section.generatedOffset.generatedColumn - 1\r\n            : 0),\r\n          originalLine: mapping.originalLine,\r\n          originalColumn: mapping.originalColumn,\r\n          name: name\r\n        };\r\n\r\n        this.__generatedMappings.push(adjustedMapping);\r\n        if (typeof adjustedMapping.originalLine === 'number') {\r\n          this.__originalMappings.push(adjustedMapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    quickSort$2(this.__generatedMappings, util$8.compareByGeneratedPositionsDeflated);\r\n    quickSort$2(this.__originalMappings, util$8.compareByOriginalPositions);\r\n  };\r\n\r\nsourceMapConsumer$1.IndexedSourceMapConsumer = IndexedSourceMapConsumer$1;\r\n\r\nvar sourceNode$1 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar SourceMapGenerator$7 = sourceMapGenerator$1.SourceMapGenerator;\r\nvar util$7 = util$c;\r\n\r\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\r\n// operating systems these days (capturing the result).\r\nvar REGEX_NEWLINE$1 = /(\\r?\\n)/;\r\n\r\n// Newline character code for charCodeAt() comparisons\r\nvar NEWLINE_CODE$1 = 10;\r\n\r\n// Private symbol for identifying `SourceNode`s when multiple versions of\r\n// the source-map library are loaded. This MUST NOT CHANGE across\r\n// versions!\r\nvar isSourceNode$1 = \"$$$isSourceNode$$$\";\r\n\r\n/**\r\n * SourceNodes provide a way to abstract over interpolating/concatenating\r\n * snippets of generated JavaScript source code while maintaining the line and\r\n * column information associated with the original source code.\r\n *\r\n * @param aLine The original line number.\r\n * @param aColumn The original column number.\r\n * @param aSource The original source's filename.\r\n * @param aChunks Optional. An array of strings which are snippets of\r\n *        generated JS, or other SourceNodes.\r\n * @param aName The original identifier.\r\n */\r\nfunction SourceNode$1(aLine, aColumn, aSource, aChunks, aName) {\r\n  this.children = [];\r\n  this.sourceContents = {};\r\n  this.line = aLine == null ? null : aLine;\r\n  this.column = aColumn == null ? null : aColumn;\r\n  this.source = aSource == null ? null : aSource;\r\n  this.name = aName == null ? null : aName;\r\n  this[isSourceNode$1] = true;\r\n  if (aChunks != null) this.add(aChunks);\r\n}\r\n\r\n/**\r\n * Creates a SourceNode from generated code and a SourceMapConsumer.\r\n *\r\n * @param aGeneratedCode The generated code\r\n * @param aSourceMapConsumer The SourceMap for the generated code\r\n * @param aRelativePath Optional. The path that relative sources in the\r\n *        SourceMapConsumer should be relative to.\r\n */\r\nSourceNode$1.fromStringWithSourceMap =\r\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\r\n    // The SourceNode we want to fill with the generated code\r\n    // and the SourceMap\r\n    var node = new SourceNode$1();\r\n\r\n    // All even indices of this array are one line of the generated code,\r\n    // while all odd indices are the newlines between two adjacent lines\r\n    // (since `REGEX_NEWLINE` captures its match).\r\n    // Processed fragments are accessed by calling `shiftNextLine`.\r\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE$1);\r\n    var remainingLinesIndex = 0;\r\n    var shiftNextLine = function() {\r\n      var lineContents = getNextLine();\r\n      // The last line of a file might not have a newline.\r\n      var newLine = getNextLine() || \"\";\r\n      return lineContents + newLine;\r\n\r\n      function getNextLine() {\r\n        return remainingLinesIndex < remainingLines.length ?\r\n            remainingLines[remainingLinesIndex++] : undefined;\r\n      }\r\n    };\r\n\r\n    // We need to remember the position of \"remainingLines\"\r\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\r\n\r\n    // The generate SourceNodes we need a code range.\r\n    // To extract it current and last mapping is used.\r\n    // Here we store the last mapping.\r\n    var lastMapping = null;\r\n\r\n    aSourceMapConsumer.eachMapping(function (mapping) {\r\n      if (lastMapping !== null) {\r\n        // We add the code from \"lastMapping\" to \"mapping\":\r\n        // First check if there is a new line in between.\r\n        if (lastGeneratedLine < mapping.generatedLine) {\r\n          // Associate first line with \"lastMapping\"\r\n          addMappingWithCode(lastMapping, shiftNextLine());\r\n          lastGeneratedLine++;\r\n          lastGeneratedColumn = 0;\r\n          // The remaining code is added without mapping\r\n        } else {\r\n          // There is no new line in between.\r\n          // Associate the code between \"lastGeneratedColumn\" and\r\n          // \"mapping.generatedColumn\" with \"lastMapping\"\r\n          var nextLine = remainingLines[remainingLinesIndex] || '';\r\n          var code = nextLine.substr(0, mapping.generatedColumn -\r\n                                        lastGeneratedColumn);\r\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\r\n                                              lastGeneratedColumn);\r\n          lastGeneratedColumn = mapping.generatedColumn;\r\n          addMappingWithCode(lastMapping, code);\r\n          // No more remaining code, continue\r\n          lastMapping = mapping;\r\n          return;\r\n        }\r\n      }\r\n      // We add the generated code until the first mapping\r\n      // to the SourceNode without any mapping.\r\n      // Each line is added as separate string.\r\n      while (lastGeneratedLine < mapping.generatedLine) {\r\n        node.add(shiftNextLine());\r\n        lastGeneratedLine++;\r\n      }\r\n      if (lastGeneratedColumn < mapping.generatedColumn) {\r\n        var nextLine = remainingLines[remainingLinesIndex] || '';\r\n        node.add(nextLine.substr(0, mapping.generatedColumn));\r\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\r\n        lastGeneratedColumn = mapping.generatedColumn;\r\n      }\r\n      lastMapping = mapping;\r\n    }, this);\r\n    // We have processed all mappings.\r\n    if (remainingLinesIndex < remainingLines.length) {\r\n      if (lastMapping) {\r\n        // Associate the remaining code in the current line with \"lastMapping\"\r\n        addMappingWithCode(lastMapping, shiftNextLine());\r\n      }\r\n      // and add the remaining lines without any mapping\r\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\r\n    }\r\n\r\n    // Copy sourcesContent into SourceNode\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        if (aRelativePath != null) {\r\n          sourceFile = util$7.join(aRelativePath, sourceFile);\r\n        }\r\n        node.setSourceContent(sourceFile, content);\r\n      }\r\n    });\r\n\r\n    return node;\r\n\r\n    function addMappingWithCode(mapping, code) {\r\n      if (mapping === null || mapping.source === undefined) {\r\n        node.add(code);\r\n      } else {\r\n        var source = aRelativePath\r\n          ? util$7.join(aRelativePath, mapping.source)\r\n          : mapping.source;\r\n        node.add(new SourceNode$1(mapping.originalLine,\r\n                                mapping.originalColumn,\r\n                                source,\r\n                                code,\r\n                                mapping.name));\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Add a chunk of generated JS to this source node.\r\n *\r\n * @param aChunk A string snippet of generated JS code, another instance of\r\n *        SourceNode, or an array where each member is one of those things.\r\n */\r\nSourceNode$1.prototype.add = function SourceNode_add(aChunk) {\r\n  if (Array.isArray(aChunk)) {\r\n    aChunk.forEach(function (chunk) {\r\n      this.add(chunk);\r\n    }, this);\r\n  }\r\n  else if (aChunk[isSourceNode$1] || typeof aChunk === \"string\") {\r\n    if (aChunk) {\r\n      this.children.push(aChunk);\r\n    }\r\n  }\r\n  else {\r\n    throw new TypeError(\r\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\r\n    );\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Add a chunk of generated JS to the beginning of this source node.\r\n *\r\n * @param aChunk A string snippet of generated JS code, another instance of\r\n *        SourceNode, or an array where each member is one of those things.\r\n */\r\nSourceNode$1.prototype.prepend = function SourceNode_prepend(aChunk) {\r\n  if (Array.isArray(aChunk)) {\r\n    for (var i = aChunk.length-1; i >= 0; i--) {\r\n      this.prepend(aChunk[i]);\r\n    }\r\n  }\r\n  else if (aChunk[isSourceNode$1] || typeof aChunk === \"string\") {\r\n    this.children.unshift(aChunk);\r\n  }\r\n  else {\r\n    throw new TypeError(\r\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\r\n    );\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Walk over the tree of JS snippets in this node and its children. The\r\n * walking function is called once for each snippet of JS and is passed that\r\n * snippet and the its original associated source's line/column location.\r\n *\r\n * @param aFn The traversal function.\r\n */\r\nSourceNode$1.prototype.walk = function SourceNode_walk(aFn) {\r\n  var chunk;\r\n  for (var i = 0, len = this.children.length; i < len; i++) {\r\n    chunk = this.children[i];\r\n    if (chunk[isSourceNode$1]) {\r\n      chunk.walk(aFn);\r\n    }\r\n    else {\r\n      if (chunk !== '') {\r\n        aFn(chunk, { source: this.source,\r\n                     line: this.line,\r\n                     column: this.column,\r\n                     name: this.name });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\r\n * each of `this.children`.\r\n *\r\n * @param aSep The separator.\r\n */\r\nSourceNode$1.prototype.join = function SourceNode_join(aSep) {\r\n  var newChildren;\r\n  var i;\r\n  var len = this.children.length;\r\n  if (len > 0) {\r\n    newChildren = [];\r\n    for (i = 0; i < len-1; i++) {\r\n      newChildren.push(this.children[i]);\r\n      newChildren.push(aSep);\r\n    }\r\n    newChildren.push(this.children[i]);\r\n    this.children = newChildren;\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Call String.prototype.replace on the very right-most source snippet. Useful\r\n * for trimming whitespace from the end of a source node, etc.\r\n *\r\n * @param aPattern The pattern to replace.\r\n * @param aReplacement The thing to replace the pattern with.\r\n */\r\nSourceNode$1.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\r\n  var lastChild = this.children[this.children.length - 1];\r\n  if (lastChild[isSourceNode$1]) {\r\n    lastChild.replaceRight(aPattern, aReplacement);\r\n  }\r\n  else if (typeof lastChild === 'string') {\r\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\r\n  }\r\n  else {\r\n    this.children.push(''.replace(aPattern, aReplacement));\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the source content for a source file. This will be added to the SourceMapGenerator\r\n * in the sourcesContent field.\r\n *\r\n * @param aSourceFile The filename of the source file\r\n * @param aSourceContent The content of the source file\r\n */\r\nSourceNode$1.prototype.setSourceContent =\r\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\r\n    this.sourceContents[util$7.toSetString(aSourceFile)] = aSourceContent;\r\n  };\r\n\r\n/**\r\n * Walk over the tree of SourceNodes. The walking function is called for each\r\n * source file content and is passed the filename and source content.\r\n *\r\n * @param aFn The traversal function.\r\n */\r\nSourceNode$1.prototype.walkSourceContents =\r\n  function SourceNode_walkSourceContents(aFn) {\r\n    for (var i = 0, len = this.children.length; i < len; i++) {\r\n      if (this.children[i][isSourceNode$1]) {\r\n        this.children[i].walkSourceContents(aFn);\r\n      }\r\n    }\r\n\r\n    var sources = Object.keys(this.sourceContents);\r\n    for (var i = 0, len = sources.length; i < len; i++) {\r\n      aFn(util$7.fromSetString(sources[i]), this.sourceContents[sources[i]]);\r\n    }\r\n  };\r\n\r\n/**\r\n * Return the string representation of this source node. Walks over the tree\r\n * and concatenates all the various snippets together to one string.\r\n */\r\nSourceNode$1.prototype.toString = function SourceNode_toString() {\r\n  var str = \"\";\r\n  this.walk(function (chunk) {\r\n    str += chunk;\r\n  });\r\n  return str;\r\n};\r\n\r\n/**\r\n * Returns the string representation of this source node along with a source\r\n * map.\r\n */\r\nSourceNode$1.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\r\n  var generated = {\r\n    code: \"\",\r\n    line: 1,\r\n    column: 0\r\n  };\r\n  var map = new SourceMapGenerator$7(aArgs);\r\n  var sourceMappingActive = false;\r\n  var lastOriginalSource = null;\r\n  var lastOriginalLine = null;\r\n  var lastOriginalColumn = null;\r\n  var lastOriginalName = null;\r\n  this.walk(function (chunk, original) {\r\n    generated.code += chunk;\r\n    if (original.source !== null\r\n        && original.line !== null\r\n        && original.column !== null) {\r\n      if(lastOriginalSource !== original.source\r\n         || lastOriginalLine !== original.line\r\n         || lastOriginalColumn !== original.column\r\n         || lastOriginalName !== original.name) {\r\n        map.addMapping({\r\n          source: original.source,\r\n          original: {\r\n            line: original.line,\r\n            column: original.column\r\n          },\r\n          generated: {\r\n            line: generated.line,\r\n            column: generated.column\r\n          },\r\n          name: original.name\r\n        });\r\n      }\r\n      lastOriginalSource = original.source;\r\n      lastOriginalLine = original.line;\r\n      lastOriginalColumn = original.column;\r\n      lastOriginalName = original.name;\r\n      sourceMappingActive = true;\r\n    } else if (sourceMappingActive) {\r\n      map.addMapping({\r\n        generated: {\r\n          line: generated.line,\r\n          column: generated.column\r\n        }\r\n      });\r\n      lastOriginalSource = null;\r\n      sourceMappingActive = false;\r\n    }\r\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\r\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE$1) {\r\n        generated.line++;\r\n        generated.column = 0;\r\n        // Mappings end at eol\r\n        if (idx + 1 === length) {\r\n          lastOriginalSource = null;\r\n          sourceMappingActive = false;\r\n        } else if (sourceMappingActive) {\r\n          map.addMapping({\r\n            source: original.source,\r\n            original: {\r\n              line: original.line,\r\n              column: original.column\r\n            },\r\n            generated: {\r\n              line: generated.line,\r\n              column: generated.column\r\n            },\r\n            name: original.name\r\n          });\r\n        }\r\n      } else {\r\n        generated.column++;\r\n      }\r\n    }\r\n  });\r\n  this.walkSourceContents(function (sourceFile, sourceContent) {\r\n    map.setSourceContent(sourceFile, sourceContent);\r\n  });\r\n\r\n  return { code: generated.code, map: map };\r\n};\r\n\r\nsourceNode$1.SourceNode = SourceNode$1;\r\n\r\n/*\r\n * Copyright 2009-2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE.txt or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar SourceMapGenerator$6 = sourceMap$2.SourceMapGenerator = sourceMapGenerator$1.SourceMapGenerator;\r\nvar SourceMapConsumer$5 = sourceMap$2.SourceMapConsumer = sourceMapConsumer$1.SourceMapConsumer;\r\nsourceMap$2.SourceNode = sourceNode$1.SourceNode;\r\n\r\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\nfunction createCodegenContext(ast, {\r\n  mode = \"function\",\r\n  prefixIdentifiers = mode === \"module\",\r\n  sourceMap = false,\r\n  filename = `template.vue.html`,\r\n  scopeId = null,\r\n  optimizeImports = false,\r\n  runtimeGlobalName = `Vue`,\r\n  runtimeModuleName = `vue`,\r\n  ssrRuntimeModuleName = \"vue/server-renderer\",\r\n  ssr = false,\r\n  isTS = false,\r\n  inSSR = false\r\n}) {\r\n  const context = {\r\n    mode,\r\n    prefixIdentifiers,\r\n    sourceMap,\r\n    filename,\r\n    scopeId,\r\n    optimizeImports,\r\n    runtimeGlobalName,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName,\r\n    ssr,\r\n    isTS,\r\n    inSSR,\r\n    source: ast.loc.source,\r\n    code: ``,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    indentLevel: 0,\r\n    pure: false,\r\n    map: void 0,\r\n    helper(key) {\r\n      return `_${helperNameMap[key]}`;\r\n    },\r\n    push(code, node) {\r\n      context.code += code;\r\n      if (context.map) {\r\n        if (node) {\r\n          let name;\r\n          if (node.type === 4 && !node.isStatic) {\r\n            const content = node.content.replace(/^_ctx\\./, \"\");\r\n            if (content !== node.content && isSimpleIdentifier(content)) {\r\n              name = content;\r\n            }\r\n          }\r\n          addMapping(node.loc.start, name);\r\n        }\r\n        advancePositionWithMutation(context, code);\r\n        if (node && node.loc !== locStub) {\r\n          addMapping(node.loc.end);\r\n        }\r\n      }\r\n    },\r\n    indent() {\r\n      newline(++context.indentLevel);\r\n    },\r\n    deindent(withoutNewLine = false) {\r\n      if (withoutNewLine) {\r\n        --context.indentLevel;\r\n      } else {\r\n        newline(--context.indentLevel);\r\n      }\r\n    },\r\n    newline() {\r\n      newline(context.indentLevel);\r\n    }\r\n  };\r\n  function newline(n) {\r\n    context.push(\"\\n\" + `  `.repeat(n));\r\n  }\r\n  function addMapping(loc, name) {\r\n    context.map.addMapping({\r\n      name,\r\n      source: context.filename,\r\n      original: {\r\n        line: loc.line,\r\n        column: loc.column - 1\r\n        // source-map column is 0 based\r\n      },\r\n      generated: {\r\n        line: context.line,\r\n        column: context.column - 1\r\n      }\r\n    });\r\n  }\r\n  if (sourceMap) {\r\n    context.map = new SourceMapGenerator$6();\r\n    context.map.setSourceContent(filename, context.source);\r\n  }\r\n  return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n  const context = createCodegenContext(ast, options);\r\n  if (options.onContextCreated)\r\n    options.onContextCreated(context);\r\n  const {\r\n    mode,\r\n    push,\r\n    prefixIdentifiers,\r\n    indent,\r\n    deindent,\r\n    newline,\r\n    scopeId,\r\n    ssr\r\n  } = context;\r\n  const helpers = Array.from(ast.helpers);\r\n  const hasHelpers = helpers.length > 0;\r\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\r\n  const genScopeId = scopeId != null && mode === \"module\";\r\n  const isSetupInlined = !!options.inline;\r\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\r\n  if (mode === \"module\") {\r\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\r\n  } else {\r\n    genFunctionPreamble(ast, preambleContext);\r\n  }\r\n  const functionName = ssr ? `ssrRender` : `render`;\r\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\r\n  if (options.bindingMetadata && !options.inline) {\r\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\r\n  }\r\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\",\") : args.join(\", \");\r\n  if (isSetupInlined) {\r\n    push(`(${signature}) => {`);\r\n  } else {\r\n    push(`function ${functionName}(${signature}) {`);\r\n  }\r\n  indent();\r\n  if (useWithBlock) {\r\n    push(`with (_ctx) {`);\r\n    indent();\r\n    if (hasHelpers) {\r\n      push(`const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue`);\r\n      push(`\r\n`);\r\n      newline();\r\n    }\r\n  }\r\n  if (ast.components.length) {\r\n    genAssets(ast.components, \"component\", context);\r\n    if (ast.directives.length || ast.temps > 0) {\r\n      newline();\r\n    }\r\n  }\r\n  if (ast.directives.length) {\r\n    genAssets(ast.directives, \"directive\", context);\r\n    if (ast.temps > 0) {\r\n      newline();\r\n    }\r\n  }\r\n  if (ast.temps > 0) {\r\n    push(`let `);\r\n    for (let i = 0; i < ast.temps; i++) {\r\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n    }\r\n  }\r\n  if (ast.components.length || ast.directives.length || ast.temps) {\r\n    push(`\r\n`);\r\n    newline();\r\n  }\r\n  if (!ssr) {\r\n    push(`return `);\r\n  }\r\n  if (ast.codegenNode) {\r\n    genNode(ast.codegenNode, context);\r\n  } else {\r\n    push(`null`);\r\n  }\r\n  if (useWithBlock) {\r\n    deindent();\r\n    push(`}`);\r\n  }\r\n  deindent();\r\n  push(`}`);\r\n  return {\r\n    ast,\r\n    code: context.code,\r\n    preamble: isSetupInlined ? preambleContext.code : ``,\r\n    // SourceMapGenerator does have toJSON() method but it's not in the types\r\n    map: context.map ? context.map.toJSON() : void 0\r\n  };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n  const {\r\n    ssr,\r\n    prefixIdentifiers,\r\n    push,\r\n    newline,\r\n    runtimeModuleName,\r\n    runtimeGlobalName,\r\n    ssrRuntimeModuleName\r\n  } = context;\r\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\r\n  const helpers = Array.from(ast.helpers);\r\n  if (helpers.length > 0) {\r\n    if (prefixIdentifiers) {\r\n      push(`const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\r\n`);\r\n    } else {\r\n      push(`const _Vue = ${VueBinding}\r\n`);\r\n      if (ast.hoists.length) {\r\n        const staticHelpers = [\r\n          CREATE_VNODE,\r\n          CREATE_ELEMENT_VNODE,\r\n          CREATE_COMMENT,\r\n          CREATE_TEXT,\r\n          CREATE_STATIC\r\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\r\n        push(`const { ${staticHelpers} } = _Vue\r\n`);\r\n      }\r\n    }\r\n  }\r\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    push(\r\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\r\n`\r\n    );\r\n  }\r\n  genHoists(ast.hoists, context);\r\n  newline();\r\n  push(`return `);\r\n}\r\nfunction genModulePreamble(ast, context, genScopeId, inline) {\r\n  const {\r\n    push,\r\n    newline,\r\n    optimizeImports,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName\r\n  } = context;\r\n  if (genScopeId && ast.hoists.length) {\r\n    ast.helpers.add(PUSH_SCOPE_ID);\r\n    ast.helpers.add(POP_SCOPE_ID);\r\n  }\r\n  if (ast.helpers.size) {\r\n    const helpers = Array.from(ast.helpers);\r\n    if (optimizeImports) {\r\n      push(\r\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\r\n`\r\n      );\r\n      push(\r\n        `\r\n// Binding optimization for webpack code-split\r\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\r\n`\r\n      );\r\n    } else {\r\n      push(\r\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\r\n`\r\n      );\r\n    }\r\n  }\r\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    push(\r\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\r\n`\r\n    );\r\n  }\r\n  if (ast.imports.length) {\r\n    genImports(ast.imports, context);\r\n    newline();\r\n  }\r\n  genHoists(ast.hoists, context);\r\n  newline();\r\n  if (!inline) {\r\n    push(`export `);\r\n  }\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n  const resolver = helper(\r\n    type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\r\n  );\r\n  for (let i = 0; i < assets.length; i++) {\r\n    let id = assets[i];\r\n    const maybeSelfReference = id.endsWith(\"__self\");\r\n    if (maybeSelfReference) {\r\n      id = id.slice(0, -6);\r\n    }\r\n    push(\r\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\r\n    );\r\n    if (i < assets.length - 1) {\r\n      newline();\r\n    }\r\n  }\r\n}\r\nfunction genHoists(hoists, context) {\r\n  if (!hoists.length) {\r\n    return;\r\n  }\r\n  context.pure = true;\r\n  const { push, newline, helper, scopeId, mode } = context;\r\n  const genScopeId = scopeId != null && mode !== \"function\";\r\n  newline();\r\n  if (genScopeId) {\r\n    push(\r\n      `const _withScopeId = n => (${helper(\r\n        PUSH_SCOPE_ID\r\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\r\n    );\r\n    newline();\r\n  }\r\n  for (let i = 0; i < hoists.length; i++) {\r\n    const exp = hoists[i];\r\n    if (exp) {\r\n      const needScopeIdWrapper = genScopeId && exp.type === 13;\r\n      push(\r\n        `const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`\r\n      );\r\n      genNode(exp, context);\r\n      if (needScopeIdWrapper) {\r\n        push(`)`);\r\n      }\r\n      newline();\r\n    }\r\n  }\r\n  context.pure = false;\r\n}\r\nfunction genImports(importsOptions, context) {\r\n  if (!importsOptions.length) {\r\n    return;\r\n  }\r\n  importsOptions.forEach((imports) => {\r\n    context.push(`import `);\r\n    genNode(imports.exp, context);\r\n    context.push(` from '${imports.path}'`);\r\n    context.newline();\r\n  });\r\n}\r\nfunction isText(n) {\r\n  return isString$2(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n  const multilines = nodes.length > 3 || nodes.some((n) => isArray$3(n) || !isText(n));\r\n  context.push(`[`);\r\n  multilines && context.indent();\r\n  genNodeList(nodes, context, multilines);\r\n  multilines && context.deindent();\r\n  context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n  const { push, newline } = context;\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes[i];\r\n    if (isString$2(node)) {\r\n      push(node);\r\n    } else if (isArray$3(node)) {\r\n      genNodeListAsArray(node, context);\r\n    } else {\r\n      genNode(node, context);\r\n    }\r\n    if (i < nodes.length - 1) {\r\n      if (multilines) {\r\n        comma && push(\",\");\r\n        newline();\r\n      } else {\r\n        comma && push(\", \");\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction genNode(node, context) {\r\n  if (isString$2(node)) {\r\n    context.push(node);\r\n    return;\r\n  }\r\n  if (isSymbol$1(node)) {\r\n    context.push(context.helper(node));\r\n    return;\r\n  }\r\n  switch (node.type) {\r\n    case 1:\r\n    case 9:\r\n    case 11:\r\n      assert(\r\n        node.codegenNode != null,\r\n        `Codegen node is missing for element/if/for node. Apply appropriate transforms first.`\r\n      );\r\n      genNode(node.codegenNode, context);\r\n      break;\r\n    case 2:\r\n      genText(node, context);\r\n      break;\r\n    case 4:\r\n      genExpression(node, context);\r\n      break;\r\n    case 5:\r\n      genInterpolation(node, context);\r\n      break;\r\n    case 12:\r\n      genNode(node.codegenNode, context);\r\n      break;\r\n    case 8:\r\n      genCompoundExpression(node, context);\r\n      break;\r\n    case 3:\r\n      genComment(node, context);\r\n      break;\r\n    case 13:\r\n      genVNodeCall(node, context);\r\n      break;\r\n    case 14:\r\n      genCallExpression(node, context);\r\n      break;\r\n    case 15:\r\n      genObjectExpression(node, context);\r\n      break;\r\n    case 17:\r\n      genArrayExpression(node, context);\r\n      break;\r\n    case 18:\r\n      genFunctionExpression(node, context);\r\n      break;\r\n    case 19:\r\n      genConditionalExpression(node, context);\r\n      break;\r\n    case 20:\r\n      genCacheExpression(node, context);\r\n      break;\r\n    case 21:\r\n      genNodeList(node.body, context, true, false);\r\n      break;\r\n    case 22:\r\n      genTemplateLiteral(node, context);\r\n      break;\r\n    case 23:\r\n      genIfStatement(node, context);\r\n      break;\r\n    case 24:\r\n      genAssignmentExpression(node, context);\r\n      break;\r\n    case 25:\r\n      genSequenceExpression(node, context);\r\n      break;\r\n    case 26:\r\n      genReturnStatement(node, context);\r\n      break;\r\n    case 10:\r\n      break;\r\n    default:\r\n      {\r\n        assert(false, `unhandled codegen node type: ${node.type}`);\r\n        const exhaustiveCheck = node;\r\n        return exhaustiveCheck;\r\n      }\r\n  }\r\n}\r\nfunction genText(node, context) {\r\n  context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n  const { content, isStatic } = node;\r\n  context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n  const { push, helper, pure } = context;\r\n  if (pure)\r\n    push(PURE_ANNOTATION);\r\n  push(`${helper(TO_DISPLAY_STRING)}(`);\r\n  genNode(node.content, context);\r\n  push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n  for (let i = 0; i < node.children.length; i++) {\r\n    const child = node.children[i];\r\n    if (isString$2(child)) {\r\n      context.push(child);\r\n    } else {\r\n      genNode(child, context);\r\n    }\r\n  }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n  const { push } = context;\r\n  if (node.type === 8) {\r\n    push(`[`);\r\n    genCompoundExpression(node, context);\r\n    push(`]`);\r\n  } else if (node.isStatic) {\r\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\r\n    push(text, node);\r\n  } else {\r\n    push(`[${node.content}]`, node);\r\n  }\r\n}\r\nfunction genComment(node, context) {\r\n  const { push, helper, pure } = context;\r\n  if (pure) {\r\n    push(PURE_ANNOTATION);\r\n  }\r\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n  const { push, helper, pure } = context;\r\n  const {\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent\r\n  } = node;\r\n  if (directives) {\r\n    push(helper(WITH_DIRECTIVES) + `(`);\r\n  }\r\n  if (isBlock) {\r\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n  }\r\n  if (pure) {\r\n    push(PURE_ANNOTATION);\r\n  }\r\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\r\n  push(helper(callHelper) + `(`, node);\r\n  genNodeList(\r\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\r\n    context\r\n  );\r\n  push(`)`);\r\n  if (isBlock) {\r\n    push(`)`);\r\n  }\r\n  if (directives) {\r\n    push(`, `);\r\n    genNode(directives, context);\r\n    push(`)`);\r\n  }\r\n}\r\nfunction genNullableArgs(args) {\r\n  let i = args.length;\r\n  while (i--) {\r\n    if (args[i] != null)\r\n      break;\r\n  }\r\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\r\n}\r\nfunction genCallExpression(node, context) {\r\n  const { push, helper, pure } = context;\r\n  const callee = isString$2(node.callee) ? node.callee : helper(node.callee);\r\n  if (pure) {\r\n    push(PURE_ANNOTATION);\r\n  }\r\n  push(callee + `(`, node);\r\n  genNodeList(node.arguments, context);\r\n  push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n  const { push, indent, deindent, newline } = context;\r\n  const { properties } = node;\r\n  if (!properties.length) {\r\n    push(`{}`, node);\r\n    return;\r\n  }\r\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\r\n  push(multilines ? `{` : `{ `);\r\n  multilines && indent();\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const { key, value } = properties[i];\r\n    genExpressionAsPropertyKey(key, context);\r\n    push(`: `);\r\n    genNode(value, context);\r\n    if (i < properties.length - 1) {\r\n      push(`,`);\r\n      newline();\r\n    }\r\n  }\r\n  multilines && deindent();\r\n  push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n  genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n  const { push, indent, deindent } = context;\r\n  const { params, returns, body, newline, isSlot } = node;\r\n  if (isSlot) {\r\n    push(`_${helperNameMap[WITH_CTX]}(`);\r\n  }\r\n  push(`(`, node);\r\n  if (isArray$3(params)) {\r\n    genNodeList(params, context);\r\n  } else if (params) {\r\n    genNode(params, context);\r\n  }\r\n  push(`) => `);\r\n  if (newline || body) {\r\n    push(`{`);\r\n    indent();\r\n  }\r\n  if (returns) {\r\n    if (newline) {\r\n      push(`return `);\r\n    }\r\n    if (isArray$3(returns)) {\r\n      genNodeListAsArray(returns, context);\r\n    } else {\r\n      genNode(returns, context);\r\n    }\r\n  } else if (body) {\r\n    genNode(body, context);\r\n  }\r\n  if (newline || body) {\r\n    deindent();\r\n    push(`}`);\r\n  }\r\n  if (isSlot) {\r\n    push(`)`);\r\n  }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n  const { test, consequent, alternate, newline: needNewline } = node;\r\n  const { push, indent, deindent, newline } = context;\r\n  if (test.type === 4) {\r\n    const needsParens = !isSimpleIdentifier(test.content);\r\n    needsParens && push(`(`);\r\n    genExpression(test, context);\r\n    needsParens && push(`)`);\r\n  } else {\r\n    push(`(`);\r\n    genNode(test, context);\r\n    push(`)`);\r\n  }\r\n  needNewline && indent();\r\n  context.indentLevel++;\r\n  needNewline || push(` `);\r\n  push(`? `);\r\n  genNode(consequent, context);\r\n  context.indentLevel--;\r\n  needNewline && newline();\r\n  needNewline || push(` `);\r\n  push(`: `);\r\n  const isNested = alternate.type === 19;\r\n  if (!isNested) {\r\n    context.indentLevel++;\r\n  }\r\n  genNode(alternate, context);\r\n  if (!isNested) {\r\n    context.indentLevel--;\r\n  }\r\n  needNewline && deindent(\r\n    true\r\n    /* without newline */\r\n  );\r\n}\r\nfunction genCacheExpression(node, context) {\r\n  const { push, helper, indent, deindent, newline } = context;\r\n  push(`_cache[${node.index}] || (`);\r\n  if (node.isVNode) {\r\n    indent();\r\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n    newline();\r\n  }\r\n  push(`_cache[${node.index}] = `);\r\n  genNode(node.value, context);\r\n  if (node.isVNode) {\r\n    push(`,`);\r\n    newline();\r\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n    newline();\r\n    push(`_cache[${node.index}]`);\r\n    deindent();\r\n  }\r\n  push(`)`);\r\n}\r\nfunction genTemplateLiteral(node, context) {\r\n  const { push, indent, deindent } = context;\r\n  push(\"`\");\r\n  const l = node.elements.length;\r\n  const multilines = l > 3;\r\n  for (let i = 0; i < l; i++) {\r\n    const e = node.elements[i];\r\n    if (isString$2(e)) {\r\n      push(e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"));\r\n    } else {\r\n      push(\"${\");\r\n      if (multilines)\r\n        indent();\r\n      genNode(e, context);\r\n      if (multilines)\r\n        deindent();\r\n      push(\"}\");\r\n    }\r\n  }\r\n  push(\"`\");\r\n}\r\nfunction genIfStatement(node, context) {\r\n  const { push, indent, deindent } = context;\r\n  const { test, consequent, alternate } = node;\r\n  push(`if (`);\r\n  genNode(test, context);\r\n  push(`) {`);\r\n  indent();\r\n  genNode(consequent, context);\r\n  deindent();\r\n  push(`}`);\r\n  if (alternate) {\r\n    push(` else `);\r\n    if (alternate.type === 23) {\r\n      genIfStatement(alternate, context);\r\n    } else {\r\n      push(`{`);\r\n      indent();\r\n      genNode(alternate, context);\r\n      deindent();\r\n      push(`}`);\r\n    }\r\n  }\r\n}\r\nfunction genAssignmentExpression(node, context) {\r\n  genNode(node.left, context);\r\n  context.push(` = `);\r\n  genNode(node.right, context);\r\n}\r\nfunction genSequenceExpression(node, context) {\r\n  context.push(`(`);\r\n  genNodeList(node.expressions, context);\r\n  context.push(`)`);\r\n}\r\nfunction genReturnStatement({ returns }, context) {\r\n  context.push(`return `);\r\n  if (isArray$3(returns)) {\r\n    genNodeListAsArray(returns, context);\r\n  } else {\r\n    genNode(returns, context);\r\n  }\r\n}\r\n\r\n// @ts-check\r\n/** @typedef { import('estree').BaseNode} BaseNode */\r\n\r\n/** @typedef {{\r\n\tskip: () => void;\r\n\tremove: () => void;\r\n\treplace: (node: BaseNode) => void;\r\n}} WalkerContext */\r\n\r\nclass WalkerBase {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} */\r\n\t\tthis.should_skip = false;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.should_remove = false;\r\n\r\n\t\t/** @type {BaseNode | null} */\r\n\t\tthis.replacement = null;\r\n\r\n\t\t/** @type {WalkerContext} */\r\n\t\tthis.context = {\r\n\t\t\tskip: () => (this.should_skip = true),\r\n\t\t\tremove: () => (this.should_remove = true),\r\n\t\t\treplace: (node) => (this.replacement = node)\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {any} parent\r\n\t * @param {string} prop\r\n\t * @param {number} index\r\n\t * @param {BaseNode} node\r\n\t */\r\n\treplace(parent, prop, index, node) {\r\n\t\tif (parent) {\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tparent[prop][index] = node;\r\n\t\t\t} else {\r\n\t\t\t\tparent[prop] = node;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {any} parent\r\n\t * @param {string} prop\r\n\t * @param {number} index\r\n\t */\r\n\tremove(parent, prop, index) {\r\n\t\tif (parent) {\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tparent[prop].splice(index, 1);\r\n\t\t\t} else {\r\n\t\t\t\tdelete parent[prop];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// @ts-check\r\n\r\n/** @typedef { import('estree').BaseNode} BaseNode */\r\n/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\r\n\r\n/** @typedef {(\r\n *    this: WalkerContext,\r\n *    node: BaseNode,\r\n *    parent: BaseNode,\r\n *    key: string,\r\n *    index: number\r\n * ) => void} SyncHandler */\r\n\r\nclass SyncWalker extends WalkerBase {\r\n\t/**\r\n\t *\r\n\t * @param {SyncHandler} enter\r\n\t * @param {SyncHandler} leave\r\n\t */\r\n\tconstructor(enter, leave) {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {SyncHandler} */\r\n\t\tthis.enter = enter;\r\n\r\n\t\t/** @type {SyncHandler} */\r\n\t\tthis.leave = leave;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {BaseNode} node\r\n\t * @param {BaseNode} parent\r\n\t * @param {string} [prop]\r\n\t * @param {number} [index]\r\n\t * @returns {BaseNode}\r\n\t */\r\n\tvisit(node, parent, prop, index) {\r\n\t\tif (node) {\r\n\t\t\tif (this.enter) {\r\n\t\t\t\tconst _should_skip = this.should_skip;\r\n\t\t\t\tconst _should_remove = this.should_remove;\r\n\t\t\t\tconst _replacement = this.replacement;\r\n\t\t\t\tthis.should_skip = false;\r\n\t\t\t\tthis.should_remove = false;\r\n\t\t\t\tthis.replacement = null;\r\n\r\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\r\n\r\n\t\t\t\tif (this.replacement) {\r\n\t\t\t\t\tnode = this.replacement;\r\n\t\t\t\t\tthis.replace(parent, prop, index, node);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.should_remove) {\r\n\t\t\t\t\tthis.remove(parent, prop, index);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst skipped = this.should_skip;\r\n\t\t\t\tconst removed = this.should_remove;\r\n\r\n\t\t\t\tthis.should_skip = _should_skip;\r\n\t\t\t\tthis.should_remove = _should_remove;\r\n\t\t\t\tthis.replacement = _replacement;\r\n\r\n\t\t\t\tif (skipped) return node;\r\n\t\t\t\tif (removed) return null;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const key in node) {\r\n\t\t\t\tconst value = node[key];\r\n\r\n\t\t\t\tif (typeof value !== \"object\") {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (Array.isArray(value)) {\r\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\r\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\r\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\r\n\t\t\t\t\t\t\t\t// removed\r\n\t\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\r\n\t\t\t\t\tthis.visit(value, node, key, null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.leave) {\r\n\t\t\t\tconst _replacement = this.replacement;\r\n\t\t\t\tconst _should_remove = this.should_remove;\r\n\t\t\t\tthis.replacement = null;\r\n\t\t\t\tthis.should_remove = false;\r\n\r\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\r\n\r\n\t\t\t\tif (this.replacement) {\r\n\t\t\t\t\tnode = this.replacement;\r\n\t\t\t\t\tthis.replace(parent, prop, index, node);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.should_remove) {\r\n\t\t\t\t\tthis.remove(parent, prop, index);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst removed = this.should_remove;\r\n\r\n\t\t\t\tthis.replacement = _replacement;\r\n\t\t\t\tthis.should_remove = _should_remove;\r\n\r\n\t\t\t\tif (removed) return null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\t}\r\n}\r\n\r\n// @ts-check\r\n\r\n/** @typedef { import('estree').BaseNode} BaseNode */\r\n/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\r\n/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\r\n\r\n/**\r\n *\r\n * @param {BaseNode} ast\r\n * @param {{\r\n *   enter?: SyncHandler\r\n *   leave?: SyncHandler\r\n * }} walker\r\n * @returns {BaseNode}\r\n */\r\nfunction walk$1(ast, { enter, leave }) {\r\n\tconst instance = new SyncWalker(enter, leave);\r\n\treturn instance.visit(ast, null);\r\n}\r\n\r\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\r\n  const rootExp = root.type === \"Program\" && root.body[0].type === \"ExpressionStatement\" && root.body[0].expression;\r\n  walk$1(root, {\r\n    enter(node, parent) {\r\n      parent && parentStack.push(parent);\r\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\r\n        return this.skip();\r\n      }\r\n      if (node.type === \"Identifier\") {\r\n        const isLocal = !!knownIds[node.name];\r\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\r\n        if (includeAll || isRefed && !isLocal) {\r\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\r\n        }\r\n      } else if (node.type === \"ObjectProperty\" && parent.type === \"ObjectPattern\") {\r\n        node.inPattern = true;\r\n      } else if (isFunctionType(node)) {\r\n        walkFunctionParams(node, (id) => markScopeIdentifier(node, id, knownIds));\r\n      } else if (node.type === \"BlockStatement\") {\r\n        walkBlockDeclarations(\r\n          node,\r\n          (id) => markScopeIdentifier(node, id, knownIds)\r\n        );\r\n      }\r\n    },\r\n    leave(node, parent) {\r\n      parent && parentStack.pop();\r\n      if (node !== rootExp && node.scopeIds) {\r\n        for (const id of node.scopeIds) {\r\n          knownIds[id]--;\r\n          if (knownIds[id] === 0) {\r\n            delete knownIds[id];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n  if (!parent) {\r\n    return true;\r\n  }\r\n  if (id.name === \"arguments\") {\r\n    return false;\r\n  }\r\n  if (isReferenced(id, parent)) {\r\n    return true;\r\n  }\r\n  switch (parent.type) {\r\n    case \"AssignmentExpression\":\r\n    case \"AssignmentPattern\":\r\n      return true;\r\n    case \"ObjectPattern\":\r\n    case \"ArrayPattern\":\r\n      return isInDestructureAssignment(parent, parentStack);\r\n  }\r\n  return false;\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\r\n    let i = parentStack.length;\r\n    while (i--) {\r\n      const p = parentStack[i];\r\n      if (p.type === \"AssignmentExpression\") {\r\n        return true;\r\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n  for (const p of node.params) {\r\n    for (const id of extractIdentifiers(p)) {\r\n      onIdent(id);\r\n    }\r\n  }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n  for (const stmt of block.body) {\r\n    if (stmt.type === \"VariableDeclaration\") {\r\n      if (stmt.declare)\r\n        continue;\r\n      for (const decl of stmt.declarations) {\r\n        for (const id of extractIdentifiers(decl.id)) {\r\n          onIdent(id);\r\n        }\r\n      }\r\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\r\n      if (stmt.declare || !stmt.id)\r\n        continue;\r\n      onIdent(stmt.id);\r\n    }\r\n  }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n  switch (param.type) {\r\n    case \"Identifier\":\r\n      nodes.push(param);\r\n      break;\r\n    case \"MemberExpression\":\r\n      let object = param;\r\n      while (object.type === \"MemberExpression\") {\r\n        object = object.object;\r\n      }\r\n      nodes.push(object);\r\n      break;\r\n    case \"ObjectPattern\":\r\n      for (const prop of param.properties) {\r\n        if (prop.type === \"RestElement\") {\r\n          extractIdentifiers(prop.argument, nodes);\r\n        } else {\r\n          extractIdentifiers(prop.value, nodes);\r\n        }\r\n      }\r\n      break;\r\n    case \"ArrayPattern\":\r\n      param.elements.forEach((element) => {\r\n        if (element)\r\n          extractIdentifiers(element, nodes);\r\n      });\r\n      break;\r\n    case \"RestElement\":\r\n      extractIdentifiers(param.argument, nodes);\r\n      break;\r\n    case \"AssignmentPattern\":\r\n      extractIdentifiers(param.left, nodes);\r\n      break;\r\n  }\r\n  return nodes;\r\n}\r\nfunction markScopeIdentifier(node, child, knownIds) {\r\n  const { name } = child;\r\n  if (node.scopeIds && node.scopeIds.has(name)) {\r\n    return;\r\n  }\r\n  if (name in knownIds) {\r\n    knownIds[name]++;\r\n  } else {\r\n    knownIds[name] = 1;\r\n  }\r\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\r\n}\r\nconst isFunctionType = (node) => {\r\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\r\nfunction isReferenced(node, parent, grandparent) {\r\n  switch (parent.type) {\r\n    case \"MemberExpression\":\r\n    case \"OptionalMemberExpression\":\r\n      if (parent.property === node) {\r\n        return !!parent.computed;\r\n      }\r\n      return parent.object === node;\r\n    case \"JSXMemberExpression\":\r\n      return parent.object === node;\r\n    case \"VariableDeclarator\":\r\n      return parent.init === node;\r\n    case \"ArrowFunctionExpression\":\r\n      return parent.body === node;\r\n    case \"PrivateName\":\r\n      return false;\r\n    case \"ClassMethod\":\r\n    case \"ClassPrivateMethod\":\r\n    case \"ObjectMethod\":\r\n      if (parent.key === node) {\r\n        return !!parent.computed;\r\n      }\r\n      return false;\r\n    case \"ObjectProperty\":\r\n      if (parent.key === node) {\r\n        return !!parent.computed;\r\n      }\r\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\r\n    case \"ClassProperty\":\r\n      if (parent.key === node) {\r\n        return !!parent.computed;\r\n      }\r\n      return true;\r\n    case \"ClassPrivateProperty\":\r\n      return parent.key !== node;\r\n    case \"ClassDeclaration\":\r\n    case \"ClassExpression\":\r\n      return parent.superClass === node;\r\n    case \"AssignmentExpression\":\r\n      return parent.right === node;\r\n    case \"AssignmentPattern\":\r\n      return parent.right === node;\r\n    case \"LabeledStatement\":\r\n      return false;\r\n    case \"CatchClause\":\r\n      return false;\r\n    case \"RestElement\":\r\n      return false;\r\n    case \"BreakStatement\":\r\n    case \"ContinueStatement\":\r\n      return false;\r\n    case \"FunctionDeclaration\":\r\n    case \"FunctionExpression\":\r\n      return false;\r\n    case \"ExportNamespaceSpecifier\":\r\n    case \"ExportDefaultSpecifier\":\r\n      return false;\r\n    case \"ExportSpecifier\":\r\n      if (grandparent == null ? void 0 : grandparent.source) {\r\n        return false;\r\n      }\r\n      return parent.local === node;\r\n    case \"ImportDefaultSpecifier\":\r\n    case \"ImportNamespaceSpecifier\":\r\n    case \"ImportSpecifier\":\r\n      return false;\r\n    case \"ImportAttribute\":\r\n      return false;\r\n    case \"JSXAttribute\":\r\n      return false;\r\n    case \"ObjectPattern\":\r\n    case \"ArrayPattern\":\r\n      return false;\r\n    case \"MetaProperty\":\r\n      return false;\r\n    case \"ObjectTypeProperty\":\r\n      return parent.key !== node;\r\n    case \"TSEnumMember\":\r\n      return parent.id !== node;\r\n    case \"TSPropertySignature\":\r\n      if (parent.key === node) {\r\n        return !!parent.computed;\r\n      }\r\n      return true;\r\n  }\r\n  return true;\r\n}\r\nconst TS_NODE_TYPES = [\r\n  \"TSAsExpression\",\r\n  // foo as number\r\n  \"TSTypeAssertion\",\r\n  // (<number>foo)\r\n  \"TSNonNullExpression\",\r\n  // foo!\r\n  \"TSInstantiationExpression\",\r\n  // foo<string>\r\n  \"TSSatisfiesExpression\"\r\n  // foo satisfies T\r\n];\r\n\r\nconst isLiteralWhitelisted = /* @__PURE__ */ makeMap(\"true,false,null,this\");\r\nconst constantBailRE = /\\w\\s*\\(|\\.[^\\d]/;\r\nconst transformExpression = (node, context) => {\r\n  if (node.type === 5) {\r\n    node.content = processExpression(\r\n      node.content,\r\n      context\r\n    );\r\n  } else if (node.type === 1) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n      const dir = node.props[i];\r\n      if (dir.type === 7 && dir.name !== \"for\") {\r\n        const exp = dir.exp;\r\n        const arg = dir.arg;\r\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\r\n          dir.exp = processExpression(\r\n            exp,\r\n            context,\r\n            // slot args must be processed as function params\r\n            dir.name === \"slot\"\r\n          );\r\n        }\r\n        if (arg && arg.type === 4 && !arg.isStatic) {\r\n          dir.arg = processExpression(arg, context);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n  if (!context.prefixIdentifiers || !node.content.trim()) {\r\n    return node;\r\n  }\r\n  const { inline, bindingMetadata } = context;\r\n  const rewriteIdentifier = (raw, parent, id) => {\r\n    const type = hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\r\n    if (inline) {\r\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\r\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\r\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\r\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\r\n        return raw;\r\n      } else if (type === \"setup-ref\") {\r\n        return `${raw}.value`;\r\n      } else if (type === \"setup-maybe-ref\") {\r\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : `${context.helperString(UNREF)}(${raw})`;\r\n      } else if (type === \"setup-let\") {\r\n        if (isAssignmentLVal) {\r\n          const { right: rVal, operator } = parent;\r\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\r\n          const rExpString = stringifyExpression(\r\n            processExpression(\r\n              createSimpleExpression(rExp, false),\r\n              context,\r\n              false,\r\n              false,\r\n              knownIds\r\n            )\r\n          );\r\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\r\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\r\n        } else if (isUpdateArg) {\r\n          id.start = parent.start;\r\n          id.end = parent.end;\r\n          const { prefix: isPrefix, operator } = parent;\r\n          const prefix = isPrefix ? operator : ``;\r\n          const postfix = isPrefix ? `` : operator;\r\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\r\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\r\n        } else if (isDestructureAssignment) {\r\n          return raw;\r\n        } else {\r\n          return `${context.helperString(UNREF)}(${raw})`;\r\n        }\r\n      } else if (type === \"props\") {\r\n        return genPropsAccessExp(raw);\r\n      } else if (type === \"props-aliased\") {\r\n        return genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\r\n      }\r\n    } else {\r\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\r\n        return `$setup.${raw}`;\r\n      } else if (type === \"props-aliased\") {\r\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\r\n      } else if (type) {\r\n        return `$${type}.${raw}`;\r\n      }\r\n    }\r\n    return `_ctx.${raw}`;\r\n  };\r\n  const rawExp = node.content;\r\n  const bailConstant = constantBailRE.test(rawExp);\r\n  if (isSimpleIdentifier(rawExp)) {\r\n    const isScopeVarReference = context.identifiers[rawExp];\r\n    const isAllowedGlobal = isGloballyWhitelisted(rawExp);\r\n    const isLiteral = isLiteralWhitelisted(rawExp);\r\n    if (!asParams && !isScopeVarReference && !isAllowedGlobal && !isLiteral) {\r\n      if (isConst(bindingMetadata[node.content])) {\r\n        node.constType = 1;\r\n      }\r\n      node.content = rewriteIdentifier(rawExp);\r\n    } else if (!isScopeVarReference) {\r\n      if (isLiteral) {\r\n        node.constType = 3;\r\n      } else {\r\n        node.constType = 2;\r\n      }\r\n    }\r\n    return node;\r\n  }\r\n  let ast;\r\n  const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\r\n  try {\r\n    ast = parse_1$1(source, {\r\n      plugins: context.expressionPlugins\r\n    }).program;\r\n  } catch (e) {\r\n    context.onError(\r\n      createCompilerError(\r\n        45,\r\n        node.loc,\r\n        void 0,\r\n        e.message\r\n      )\r\n    );\r\n    return node;\r\n  }\r\n  const ids = [];\r\n  const parentStack = [];\r\n  const knownIds = Object.create(context.identifiers);\r\n  walkIdentifiers(\r\n    ast,\r\n    (node2, parent, _, isReferenced, isLocal) => {\r\n      if (isStaticPropertyKey(node2, parent)) {\r\n        return;\r\n      }\r\n      const needPrefix = isReferenced && canPrefix(node2);\r\n      if (needPrefix && !isLocal) {\r\n        if (isStaticProperty(parent) && parent.shorthand) {\r\n          node2.prefix = `${node2.name}: `;\r\n        }\r\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\r\n        ids.push(node2);\r\n      } else {\r\n        if (!(needPrefix && isLocal) && !bailConstant) {\r\n          node2.isConstant = true;\r\n        }\r\n        ids.push(node2);\r\n      }\r\n    },\r\n    true,\r\n    // invoke on ALL identifiers\r\n    parentStack,\r\n    knownIds\r\n  );\r\n  const children = [];\r\n  ids.sort((a, b) => a.start - b.start);\r\n  ids.forEach((id, i) => {\r\n    const start = id.start - 1;\r\n    const end = id.end - 1;\r\n    const last = ids[i - 1];\r\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\r\n    if (leadingText.length || id.prefix) {\r\n      children.push(leadingText + (id.prefix || ``));\r\n    }\r\n    const source2 = rawExp.slice(start, end);\r\n    children.push(\r\n      createSimpleExpression(\r\n        id.name,\r\n        false,\r\n        {\r\n          source: source2,\r\n          start: advancePositionWithClone(node.loc.start, source2, start),\r\n          end: advancePositionWithClone(node.loc.start, source2, end)\r\n        },\r\n        id.isConstant ? 3 : 0\r\n      )\r\n    );\r\n    if (i === ids.length - 1 && end < rawExp.length) {\r\n      children.push(rawExp.slice(end));\r\n    }\r\n  });\r\n  let ret;\r\n  if (children.length) {\r\n    ret = createCompoundExpression(children, node.loc);\r\n  } else {\r\n    ret = node;\r\n    ret.constType = bailConstant ? 0 : 3;\r\n  }\r\n  ret.identifiers = Object.keys(knownIds);\r\n  return ret;\r\n}\r\nfunction canPrefix(id) {\r\n  if (isGloballyWhitelisted(id.name)) {\r\n    return false;\r\n  }\r\n  if (id.name === \"require\") {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction stringifyExpression(exp) {\r\n  if (isString$2(exp)) {\r\n    return exp;\r\n  } else if (exp.type === 4) {\r\n    return exp.content;\r\n  } else {\r\n    return exp.children.map(stringifyExpression).join(\"\");\r\n  }\r\n}\r\nfunction isConst(type) {\r\n  return type === \"setup-const\" || type === \"literal-const\";\r\n}\r\n\r\nconst transformIf = createStructuralDirectiveTransform(\r\n  /^(if|else|else-if)$/,\r\n  (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n      const siblings = context.parent.children;\r\n      let i = siblings.indexOf(ifNode);\r\n      let key = 0;\r\n      while (i-- >= 0) {\r\n        const sibling = siblings[i];\r\n        if (sibling && sibling.type === 9) {\r\n          key += sibling.branches.length;\r\n        }\r\n      }\r\n      return () => {\r\n        if (isRoot) {\r\n          ifNode.codegenNode = createCodegenNodeForBranch(\r\n            branch,\r\n            key,\r\n            context\r\n          );\r\n        } else {\r\n          const parentCondition = getParentCondition(ifNode.codegenNode);\r\n          parentCondition.alternate = createCodegenNodeForBranch(\r\n            branch,\r\n            key + ifNode.branches.length - 1,\r\n            context\r\n          );\r\n        }\r\n      };\r\n    });\r\n  }\r\n);\r\nfunction processIf(node, dir, context, processCodegen) {\r\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\r\n    const loc = dir.exp ? dir.exp.loc : node.loc;\r\n    context.onError(\r\n      createCompilerError(28, dir.loc)\r\n    );\r\n    dir.exp = createSimpleExpression(`true`, false, loc);\r\n  }\r\n  if (context.prefixIdentifiers && dir.exp) {\r\n    dir.exp = processExpression(dir.exp, context);\r\n  }\r\n  if (dir.name === \"if\") {\r\n    const branch = createIfBranch(node, dir);\r\n    const ifNode = {\r\n      type: 9,\r\n      loc: node.loc,\r\n      branches: [branch]\r\n    };\r\n    context.replaceNode(ifNode);\r\n    if (processCodegen) {\r\n      return processCodegen(ifNode, branch, true);\r\n    }\r\n  } else {\r\n    const siblings = context.parent.children;\r\n    const comments = [];\r\n    let i = siblings.indexOf(node);\r\n    while (i-- >= -1) {\r\n      const sibling = siblings[i];\r\n      if (sibling && sibling.type === 3) {\r\n        context.removeNode(sibling);\r\n        comments.unshift(sibling);\r\n        continue;\r\n      }\r\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\r\n        context.removeNode(sibling);\r\n        continue;\r\n      }\r\n      if (sibling && sibling.type === 9) {\r\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\r\n          context.onError(\r\n            createCompilerError(30, node.loc)\r\n          );\r\n        }\r\n        context.removeNode();\r\n        const branch = createIfBranch(node, dir);\r\n        if (comments.length && // #3619 ignore comments if the v-if is direct child of <transition>\r\n        !(context.parent && context.parent.type === 1 && isBuiltInType(context.parent.tag, \"transition\"))) {\r\n          branch.children = [...comments, ...branch.children];\r\n        }\r\n        {\r\n          const key = branch.userKey;\r\n          if (key) {\r\n            sibling.branches.forEach(({ userKey }) => {\r\n              if (isSameKey(userKey, key)) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    29,\r\n                    branch.userKey.loc\r\n                  )\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n        sibling.branches.push(branch);\r\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n        traverseNode(branch, context);\r\n        if (onExit)\r\n          onExit();\r\n        context.currentNode = null;\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(30, node.loc)\r\n        );\r\n      }\r\n      break;\r\n    }\r\n  }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n  const isTemplateIf = node.tagType === 3;\r\n  return {\r\n    type: 10,\r\n    loc: node.loc,\r\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\r\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\r\n    userKey: findProp(node, `key`),\r\n    isTemplateIf\r\n  };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n  if (branch.condition) {\r\n    return createConditionalExpression(\r\n      branch.condition,\r\n      createChildrenCodegenNode(branch, keyIndex, context),\r\n      // make sure to pass in asBlock: true so that the comment node call\r\n      // closes the current block.\r\n      createCallExpression(context.helper(CREATE_COMMENT), [\r\n        '\"v-if\"' ,\r\n        \"true\"\r\n      ])\r\n    );\r\n  } else {\r\n    return createChildrenCodegenNode(branch, keyIndex, context);\r\n  }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n  const { helper } = context;\r\n  const keyProperty = createObjectProperty(\r\n    `key`,\r\n    createSimpleExpression(\r\n      `${keyIndex}`,\r\n      false,\r\n      locStub,\r\n      2\r\n    )\r\n  );\r\n  const { children } = branch;\r\n  const firstChild = children[0];\r\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\r\n  if (needFragmentWrapper) {\r\n    if (children.length === 1 && firstChild.type === 11) {\r\n      const vnodeCall = firstChild.codegenNode;\r\n      injectProp(vnodeCall, keyProperty, context);\r\n      return vnodeCall;\r\n    } else {\r\n      let patchFlag = 64;\r\n      let patchFlagText = PatchFlagNames[64];\r\n      if (!branch.isTemplateIf && children.filter((c) => c.type !== 3).length === 1) {\r\n        patchFlag |= 2048;\r\n        patchFlagText += `, ${PatchFlagNames[2048]}`;\r\n      }\r\n      return createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        createObjectExpression([keyProperty]),\r\n        children,\r\n        patchFlag + (` /* ${patchFlagText} */` ),\r\n        void 0,\r\n        void 0,\r\n        true,\r\n        false,\r\n        false,\r\n        branch.loc\r\n      );\r\n    }\r\n  } else {\r\n    const ret = firstChild.codegenNode;\r\n    const vnodeCall = getMemoedVNodeCall(ret);\r\n    if (vnodeCall.type === 13) {\r\n      convertToBlock(vnodeCall, context);\r\n    }\r\n    injectProp(vnodeCall, keyProperty, context);\r\n    return ret;\r\n  }\r\n}\r\nfunction isSameKey(a, b) {\r\n  if (!a || a.type !== b.type) {\r\n    return false;\r\n  }\r\n  if (a.type === 6) {\r\n    if (a.value.content !== b.value.content) {\r\n      return false;\r\n    }\r\n  } else {\r\n    const exp = a.exp;\r\n    const branchExp = b.exp;\r\n    if (exp.type !== branchExp.type) {\r\n      return false;\r\n    }\r\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction getParentCondition(node) {\r\n  while (true) {\r\n    if (node.type === 19) {\r\n      if (node.alternate.type === 19) {\r\n        node = node.alternate;\r\n      } else {\r\n        return node;\r\n      }\r\n    } else if (node.type === 20) {\r\n      node = node.value;\r\n    }\r\n  }\r\n}\r\n\r\nconst transformFor = createStructuralDirectiveTransform(\r\n  \"for\",\r\n  (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, (forNode) => {\r\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n        forNode.source\r\n      ]);\r\n      const isTemplate = isTemplateNode(node);\r\n      const memo = findDir(node, \"memo\");\r\n      const keyProp = findProp(node, `key`);\r\n      const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\r\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n      if (isTemplate) {\r\n        if (memo) {\r\n          memo.exp = processExpression(\r\n            memo.exp,\r\n            context\r\n          );\r\n        }\r\n        if (keyProperty && keyProp.type !== 6) {\r\n          keyProperty.value = processExpression(\r\n            keyProperty.value,\r\n            context\r\n          );\r\n        }\r\n      }\r\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\r\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\r\n      forNode.codegenNode = createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        void 0,\r\n        renderExp,\r\n        fragmentFlag + (` /* ${PatchFlagNames[fragmentFlag]} */` ),\r\n        void 0,\r\n        void 0,\r\n        true,\r\n        !isStableFragment,\r\n        false,\r\n        node.loc\r\n      );\r\n      return () => {\r\n        let childBlock;\r\n        const { children } = forNode;\r\n        if (isTemplate) {\r\n          node.children.some((c) => {\r\n            if (c.type === 1) {\r\n              const key = findProp(c, \"key\");\r\n              if (key) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    33,\r\n                    key.loc\r\n                  )\r\n                );\r\n                return true;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\r\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\r\n        if (slotOutlet) {\r\n          childBlock = slotOutlet.codegenNode;\r\n          if (isTemplate && keyProperty) {\r\n            injectProp(childBlock, keyProperty, context);\r\n          }\r\n        } else if (needFragmentWrapper) {\r\n          childBlock = createVNodeCall(\r\n            context,\r\n            helper(FRAGMENT),\r\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\r\n            node.children,\r\n            64 + (` /* ${PatchFlagNames[64]} */` ),\r\n            void 0,\r\n            void 0,\r\n            true,\r\n            void 0,\r\n            false\r\n            /* isComponent */\r\n          );\r\n        } else {\r\n          childBlock = children[0].codegenNode;\r\n          if (isTemplate && keyProperty) {\r\n            injectProp(childBlock, keyProperty, context);\r\n          }\r\n          if (childBlock.isBlock !== !isStableFragment) {\r\n            if (childBlock.isBlock) {\r\n              removeHelper(OPEN_BLOCK);\r\n              removeHelper(\r\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\r\n              );\r\n            } else {\r\n              removeHelper(\r\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\r\n              );\r\n            }\r\n          }\r\n          childBlock.isBlock = !isStableFragment;\r\n          if (childBlock.isBlock) {\r\n            helper(OPEN_BLOCK);\r\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n          } else {\r\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n          }\r\n        }\r\n        if (memo) {\r\n          const loop = createFunctionExpression(\r\n            createForLoopParams(forNode.parseResult, [\r\n              createSimpleExpression(`_cached`)\r\n            ])\r\n          );\r\n          loop.body = createBlockStatement([\r\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n            createCompoundExpression([\r\n              `if (_cached`,\r\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\r\n              ` && ${context.helperString(\r\n                IS_MEMO_SAME\r\n              )}(_cached, _memo)) return _cached`\r\n            ]),\r\n            createCompoundExpression([`const _item = `, childBlock]),\r\n            createSimpleExpression(`_item.memo = _memo`),\r\n            createSimpleExpression(`return _item`)\r\n          ]);\r\n          renderExp.arguments.push(\r\n            loop,\r\n            createSimpleExpression(`_cache`),\r\n            createSimpleExpression(String(context.cached++))\r\n          );\r\n        } else {\r\n          renderExp.arguments.push(\r\n            createFunctionExpression(\r\n              createForLoopParams(forNode.parseResult),\r\n              childBlock,\r\n              true\r\n              /* force newline */\r\n            )\r\n          );\r\n        }\r\n      };\r\n    });\r\n  }\r\n);\r\nfunction processFor(node, dir, context, processCodegen) {\r\n  if (!dir.exp) {\r\n    context.onError(\r\n      createCompilerError(31, dir.loc)\r\n    );\r\n    return;\r\n  }\r\n  const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp,\r\n    context\r\n  );\r\n  if (!parseResult) {\r\n    context.onError(\r\n      createCompilerError(32, dir.loc)\r\n    );\r\n    return;\r\n  }\r\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n  const { source, value, key, index } = parseResult;\r\n  const forNode = {\r\n    type: 11,\r\n    loc: dir.loc,\r\n    source,\r\n    valueAlias: value,\r\n    keyAlias: key,\r\n    objectIndexAlias: index,\r\n    parseResult,\r\n    children: isTemplateNode(node) ? node.children : [node]\r\n  };\r\n  context.replaceNode(forNode);\r\n  scopes.vFor++;\r\n  if (context.prefixIdentifiers) {\r\n    value && addIdentifiers(value);\r\n    key && addIdentifiers(key);\r\n    index && addIdentifiers(index);\r\n  }\r\n  const onExit = processCodegen && processCodegen(forNode);\r\n  return () => {\r\n    scopes.vFor--;\r\n    if (context.prefixIdentifiers) {\r\n      value && removeIdentifiers(value);\r\n      key && removeIdentifiers(key);\r\n      index && removeIdentifiers(index);\r\n    }\r\n    if (onExit)\r\n      onExit();\r\n  };\r\n}\r\nconst forAliasRE$1 = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n  const loc = input.loc;\r\n  const exp = input.content;\r\n  const inMatch = exp.match(forAliasRE$1);\r\n  if (!inMatch)\r\n    return;\r\n  const [, LHS, RHS] = inMatch;\r\n  const result = {\r\n    source: createAliasExpression(\r\n      loc,\r\n      RHS.trim(),\r\n      exp.indexOf(RHS, LHS.length)\r\n    ),\r\n    value: void 0,\r\n    key: void 0,\r\n    index: void 0\r\n  };\r\n  if (context.prefixIdentifiers) {\r\n    result.source = processExpression(\r\n      result.source,\r\n      context\r\n    );\r\n  }\r\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\r\n  const trimmedOffset = LHS.indexOf(valueContent);\r\n  const iteratorMatch = valueContent.match(forIteratorRE);\r\n  if (iteratorMatch) {\r\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\r\n    const keyContent = iteratorMatch[1].trim();\r\n    let keyOffset;\r\n    if (keyContent) {\r\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n      result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n      if (context.prefixIdentifiers) {\r\n        result.key = processExpression(result.key, context, true);\r\n      }\r\n    }\r\n    if (iteratorMatch[2]) {\r\n      const indexContent = iteratorMatch[2].trim();\r\n      if (indexContent) {\r\n        result.index = createAliasExpression(\r\n          loc,\r\n          indexContent,\r\n          exp.indexOf(\r\n            indexContent,\r\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\r\n          )\r\n        );\r\n        if (context.prefixIdentifiers) {\r\n          result.index = processExpression(result.index, context, true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (valueContent) {\r\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n    if (context.prefixIdentifiers) {\r\n      result.value = processExpression(result.value, context, true);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n  return createSimpleExpression(\r\n    content,\r\n    false,\r\n    getInnerRange(range, offset, content.length)\r\n  );\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n  return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n  let i = args.length;\r\n  while (i--) {\r\n    if (args[i])\r\n      break;\r\n  }\r\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\r\n}\r\n\r\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\nconst trackSlotScopes = (node, context) => {\r\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\r\n    const vSlot = findDir(node, \"slot\");\r\n    if (vSlot) {\r\n      const slotProps = vSlot.exp;\r\n      if (context.prefixIdentifiers) {\r\n        slotProps && context.addIdentifiers(slotProps);\r\n      }\r\n      context.scopes.vSlot++;\r\n      return () => {\r\n        if (context.prefixIdentifiers) {\r\n          slotProps && context.removeIdentifiers(slotProps);\r\n        }\r\n        context.scopes.vSlot--;\r\n      };\r\n    }\r\n  }\r\n};\r\nconst trackVForSlotScopes = (node, context) => {\r\n  let vFor;\r\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\r\n    const result = vFor.parseResult = parseForExpression(\r\n      vFor.exp,\r\n      context\r\n    );\r\n    if (result) {\r\n      const { value, key, index } = result;\r\n      const { addIdentifiers, removeIdentifiers } = context;\r\n      value && addIdentifiers(value);\r\n      key && addIdentifiers(key);\r\n      index && addIdentifiers(index);\r\n      return () => {\r\n        value && removeIdentifiers(value);\r\n        key && removeIdentifiers(key);\r\n        index && removeIdentifiers(index);\r\n      };\r\n    }\r\n  }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(\r\n  props,\r\n  children,\r\n  false,\r\n  true,\r\n  children.length ? children[0].loc : loc\r\n);\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n  context.helper(WITH_CTX);\r\n  const { children, loc } = node;\r\n  const slotsProperties = [];\r\n  const dynamicSlots = [];\r\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n  if (!context.ssr && context.prefixIdentifiers) {\r\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\r\n  }\r\n  const onComponentSlot = findDir(node, \"slot\", true);\r\n  if (onComponentSlot) {\r\n    const { arg, exp } = onComponentSlot;\r\n    if (arg && !isStaticExp(arg)) {\r\n      hasDynamicSlots = true;\r\n    }\r\n    slotsProperties.push(\r\n      createObjectProperty(\r\n        arg || createSimpleExpression(\"default\", true),\r\n        buildSlotFn(exp, children, loc)\r\n      )\r\n    );\r\n  }\r\n  let hasTemplateSlots = false;\r\n  let hasNamedDefaultSlot = false;\r\n  const implicitDefaultChildren = [];\r\n  const seenSlotNames = /* @__PURE__ */ new Set();\r\n  let conditionalBranchIndex = 0;\r\n  for (let i = 0; i < children.length; i++) {\r\n    const slotElement = children[i];\r\n    let slotDir;\r\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\r\n      if (slotElement.type !== 3) {\r\n        implicitDefaultChildren.push(slotElement);\r\n      }\r\n      continue;\r\n    }\r\n    if (onComponentSlot) {\r\n      context.onError(\r\n        createCompilerError(37, slotDir.loc)\r\n      );\r\n      break;\r\n    }\r\n    hasTemplateSlots = true;\r\n    const { children: slotChildren, loc: slotLoc } = slotElement;\r\n    const {\r\n      arg: slotName = createSimpleExpression(`default`, true),\r\n      exp: slotProps,\r\n      loc: dirLoc\r\n    } = slotDir;\r\n    let staticSlotName;\r\n    if (isStaticExp(slotName)) {\r\n      staticSlotName = slotName ? slotName.content : `default`;\r\n    } else {\r\n      hasDynamicSlots = true;\r\n    }\r\n    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n    let vIf;\r\n    let vElse;\r\n    let vFor;\r\n    if (vIf = findDir(slotElement, \"if\")) {\r\n      hasDynamicSlots = true;\r\n      dynamicSlots.push(\r\n        createConditionalExpression(\r\n          vIf.exp,\r\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\r\n          defaultFallback\r\n        )\r\n      );\r\n    } else if (vElse = findDir(\r\n      slotElement,\r\n      /^else(-if)?$/,\r\n      true\r\n      /* allowEmpty */\r\n    )) {\r\n      let j = i;\r\n      let prev;\r\n      while (j--) {\r\n        prev = children[j];\r\n        if (prev.type !== 3) {\r\n          break;\r\n        }\r\n      }\r\n      if (prev && isTemplateNode(prev) && findDir(prev, \"if\")) {\r\n        children.splice(i, 1);\r\n        i--;\r\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n        while (conditional.alternate.type === 19) {\r\n          conditional = conditional.alternate;\r\n        }\r\n        conditional.alternate = vElse.exp ? createConditionalExpression(\r\n          vElse.exp,\r\n          buildDynamicSlot(\r\n            slotName,\r\n            slotFunction,\r\n            conditionalBranchIndex++\r\n          ),\r\n          defaultFallback\r\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(30, vElse.loc)\r\n        );\r\n      }\r\n    } else if (vFor = findDir(slotElement, \"for\")) {\r\n      hasDynamicSlots = true;\r\n      const parseResult = vFor.parseResult || parseForExpression(vFor.exp, context);\r\n      if (parseResult) {\r\n        dynamicSlots.push(\r\n          createCallExpression(context.helper(RENDER_LIST), [\r\n            parseResult.source,\r\n            createFunctionExpression(\r\n              createForLoopParams(parseResult),\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              true\r\n              /* force newline */\r\n            )\r\n          ])\r\n        );\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(32, vFor.loc)\r\n        );\r\n      }\r\n    } else {\r\n      if (staticSlotName) {\r\n        if (seenSlotNames.has(staticSlotName)) {\r\n          context.onError(\r\n            createCompilerError(\r\n              38,\r\n              dirLoc\r\n            )\r\n          );\r\n          continue;\r\n        }\r\n        seenSlotNames.add(staticSlotName);\r\n        if (staticSlotName === \"default\") {\r\n          hasNamedDefaultSlot = true;\r\n        }\r\n      }\r\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n    }\r\n  }\r\n  if (!onComponentSlot) {\r\n    const buildDefaultSlotProperty = (props, children2) => {\r\n      const fn = buildSlotFn(props, children2, loc);\r\n      return createObjectProperty(`default`, fn);\r\n    };\r\n    if (!hasTemplateSlots) {\r\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\r\n    } else if (implicitDefaultChildren.length && // #3766\r\n    // with whitespace: 'preserve', whitespaces between slots will end up in\r\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\r\n      if (hasNamedDefaultSlot) {\r\n        context.onError(\r\n          createCompilerError(\r\n            39,\r\n            implicitDefaultChildren[0].loc\r\n          )\r\n        );\r\n      } else {\r\n        slotsProperties.push(\r\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\r\n        );\r\n      }\r\n    }\r\n  }\r\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\r\n  let slots = createObjectExpression(\r\n    slotsProperties.concat(\r\n      createObjectProperty(\r\n        `_`,\r\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n        // 1 = compiled and static = can skip normalization AND diff as optimized\r\n        createSimpleExpression(\r\n          slotFlag + (` /* ${slotFlagsText[slotFlag]} */` ),\r\n          false\r\n        )\r\n      )\r\n    ),\r\n    loc\r\n  );\r\n  if (dynamicSlots.length) {\r\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n      slots,\r\n      createArrayExpression(dynamicSlots)\r\n    ]);\r\n  }\r\n  return {\r\n    slots,\r\n    hasDynamicSlots\r\n  };\r\n}\r\nfunction buildDynamicSlot(name, fn, index) {\r\n  const props = [\r\n    createObjectProperty(`name`, name),\r\n    createObjectProperty(`fn`, fn)\r\n  ];\r\n  if (index != null) {\r\n    props.push(\r\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\r\n    );\r\n  }\r\n  return createObjectExpression(props);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i];\r\n    switch (child.type) {\r\n      case 1:\r\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\r\n          return true;\r\n        }\r\n        break;\r\n      case 9:\r\n        if (hasForwardedSlots(child.branches))\r\n          return true;\r\n        break;\r\n      case 10:\r\n      case 11:\r\n        if (hasForwardedSlots(child.children))\r\n          return true;\r\n        break;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n  if (node.type !== 2 && node.type !== 12)\r\n    return true;\r\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\r\n}\r\n\r\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\r\nconst transformElement = (node, context) => {\r\n  return function postTransformElement() {\r\n    node = context.currentNode;\r\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\r\n      return;\r\n    }\r\n    const { tag, props } = node;\r\n    const isComponent = node.tagType === 1;\r\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\r\n    const isDynamicComponent = isObject$2(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n    let vnodeProps;\r\n    let vnodeChildren;\r\n    let vnodePatchFlag;\r\n    let patchFlag = 0;\r\n    let vnodeDynamicProps;\r\n    let dynamicPropNames;\r\n    let vnodeDirectives;\r\n    let shouldUseBlock = (\r\n      // dynamic component may resolve to plain elements\r\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && // <svg> and <foreignObject> must be forced into blocks so that block\r\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n      // This is technically web-specific, but splitting the logic out of core\r\n      // leads to too much unnecessary complexity.\r\n      (tag === \"svg\" || tag === \"foreignObject\")\r\n    );\r\n    if (props.length > 0) {\r\n      const propsBuildResult = buildProps(\r\n        node,\r\n        context,\r\n        void 0,\r\n        isComponent,\r\n        isDynamicComponent\r\n      );\r\n      vnodeProps = propsBuildResult.props;\r\n      patchFlag = propsBuildResult.patchFlag;\r\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n      const directives = propsBuildResult.directives;\r\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\r\n        directives.map((dir) => buildDirectiveArgs(dir, context))\r\n      ) : void 0;\r\n      if (propsBuildResult.shouldUseBlock) {\r\n        shouldUseBlock = true;\r\n      }\r\n    }\r\n    if (node.children.length > 0) {\r\n      if (vnodeTag === KEEP_ALIVE) {\r\n        shouldUseBlock = true;\r\n        patchFlag |= 1024;\r\n        if (node.children.length > 1) {\r\n          context.onError(\r\n            createCompilerError(46, {\r\n              start: node.children[0].loc.start,\r\n              end: node.children[node.children.length - 1].loc.end,\r\n              source: \"\"\r\n            })\r\n          );\r\n        }\r\n      }\r\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\r\n      vnodeTag !== TELEPORT && // explained above.\r\n      vnodeTag !== KEEP_ALIVE;\r\n      if (shouldBuildAsSlots) {\r\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n        vnodeChildren = slots;\r\n        if (hasDynamicSlots) {\r\n          patchFlag |= 1024;\r\n        }\r\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n        const child = node.children[0];\r\n        const type = child.type;\r\n        const hasDynamicTextChild = type === 5 || type === 8;\r\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\r\n          patchFlag |= 1;\r\n        }\r\n        if (hasDynamicTextChild || type === 2) {\r\n          vnodeChildren = child;\r\n        } else {\r\n          vnodeChildren = node.children;\r\n        }\r\n      } else {\r\n        vnodeChildren = node.children;\r\n      }\r\n    }\r\n    if (patchFlag !== 0) {\r\n      {\r\n        if (patchFlag < 0) {\r\n          vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n        } else {\r\n          const flagNames = Object.keys(PatchFlagNames).map(Number).filter((n) => n > 0 && patchFlag & n).map((n) => PatchFlagNames[n]).join(`, `);\r\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n        }\r\n      }\r\n      if (dynamicPropNames && dynamicPropNames.length) {\r\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n      }\r\n    }\r\n    node.codegenNode = createVNodeCall(\r\n      context,\r\n      vnodeTag,\r\n      vnodeProps,\r\n      vnodeChildren,\r\n      vnodePatchFlag,\r\n      vnodeDynamicProps,\r\n      vnodeDirectives,\r\n      !!shouldUseBlock,\r\n      false,\r\n      isComponent,\r\n      node.loc\r\n    );\r\n  };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n  let { tag } = node;\r\n  const isExplicitDynamic = isComponentTag(tag);\r\n  const isProp = findProp(node, \"is\");\r\n  if (isProp) {\r\n    if (isExplicitDynamic || false) {\r\n      const exp = isProp.type === 6 ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\r\n      if (exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n          exp\r\n        ]);\r\n      }\r\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\r\n      tag = isProp.value.content.slice(4);\r\n    }\r\n  }\r\n  const isDir = !isExplicitDynamic && findDir(node, \"is\");\r\n  if (isDir && isDir.exp) {\r\n    {\r\n      context.onWarn(\r\n        createCompilerError(52, isDir.loc)\r\n      );\r\n    }\r\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n      isDir.exp\r\n    ]);\r\n  }\r\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n  if (builtIn) {\r\n    if (!ssr)\r\n      context.helper(builtIn);\r\n    return builtIn;\r\n  }\r\n  {\r\n    const fromSetup = resolveSetupReference(tag, context);\r\n    if (fromSetup) {\r\n      return fromSetup;\r\n    }\r\n    const dotIndex = tag.indexOf(\".\");\r\n    if (dotIndex > 0) {\r\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\r\n      if (ns) {\r\n        return ns + tag.slice(dotIndex);\r\n      }\r\n    }\r\n  }\r\n  if (context.selfName && capitalize$1(camelize(tag)) === context.selfName) {\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag + `__self`);\r\n    return toValidAssetId(tag, `component`);\r\n  }\r\n  context.helper(RESOLVE_COMPONENT);\r\n  context.components.add(tag);\r\n  return toValidAssetId(tag, `component`);\r\n}\r\nfunction resolveSetupReference(name, context) {\r\n  const bindings = context.bindingMetadata;\r\n  if (!bindings || bindings.__isScriptSetup === false) {\r\n    return;\r\n  }\r\n  const camelName = camelize(name);\r\n  const PascalName = capitalize$1(camelName);\r\n  const checkType = (type) => {\r\n    if (bindings[name] === type) {\r\n      return name;\r\n    }\r\n    if (bindings[camelName] === type) {\r\n      return camelName;\r\n    }\r\n    if (bindings[PascalName] === type) {\r\n      return PascalName;\r\n    }\r\n  };\r\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\r\n  if (fromConst) {\r\n    return context.inline ? (\r\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n      fromConst\r\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\r\n  }\r\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\r\n  if (fromMaybeRef) {\r\n    return context.inline ? (\r\n      // setup scope bindings that may be refs need to be unrefed\r\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\r\n  }\r\n}\r\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\r\n  const { tag, loc: elementLoc, children } = node;\r\n  let properties = [];\r\n  const mergeArgs = [];\r\n  const runtimeDirectives = [];\r\n  const hasChildren = children.length > 0;\r\n  let shouldUseBlock = false;\r\n  let patchFlag = 0;\r\n  let hasRef = false;\r\n  let hasClassBinding = false;\r\n  let hasStyleBinding = false;\r\n  let hasHydrationEventBinding = false;\r\n  let hasDynamicKeys = false;\r\n  let hasVnodeHook = false;\r\n  const dynamicPropNames = [];\r\n  const pushMergeArg = (arg) => {\r\n    if (properties.length) {\r\n      mergeArgs.push(\r\n        createObjectExpression(dedupeProperties(properties), elementLoc)\r\n      );\r\n      properties = [];\r\n    }\r\n    if (arg)\r\n      mergeArgs.push(arg);\r\n  };\r\n  const analyzePatchFlag = ({ key, value }) => {\r\n    if (isStaticExp(key)) {\r\n      const name = key.content;\r\n      const isEventHandler = isOn(name);\r\n      if (isEventHandler && (!isComponent || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\r\n      // dedicated fast path.\r\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\r\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\r\n      !isReservedProp(name)) {\r\n        hasHydrationEventBinding = true;\r\n      }\r\n      if (isEventHandler && isReservedProp(name)) {\r\n        hasVnodeHook = true;\r\n      }\r\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\r\n        return;\r\n      }\r\n      if (name === \"ref\") {\r\n        hasRef = true;\r\n      } else if (name === \"class\") {\r\n        hasClassBinding = true;\r\n      } else if (name === \"style\") {\r\n        hasStyleBinding = true;\r\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\r\n        dynamicPropNames.push(name);\r\n      }\r\n      if (isComponent && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\r\n        dynamicPropNames.push(name);\r\n      }\r\n    } else {\r\n      hasDynamicKeys = true;\r\n    }\r\n  };\r\n  for (let i = 0; i < props.length; i++) {\r\n    const prop = props[i];\r\n    if (prop.type === 6) {\r\n      const { loc, name, value } = prop;\r\n      let isStatic = true;\r\n      if (name === \"ref\") {\r\n        hasRef = true;\r\n        if (context.scopes.vFor > 0) {\r\n          properties.push(\r\n            createObjectProperty(\r\n              createSimpleExpression(\"ref_for\", true),\r\n              createSimpleExpression(\"true\")\r\n            )\r\n          );\r\n        }\r\n        if (value && context.inline) {\r\n          const binding = context.bindingMetadata[value.content];\r\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\r\n            isStatic = false;\r\n            properties.push(\r\n              createObjectProperty(\r\n                createSimpleExpression(\"ref_key\", true),\r\n                createSimpleExpression(value.content, true, value.loc)\r\n              )\r\n            );\r\n          }\r\n        }\r\n      }\r\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || false)) {\r\n        continue;\r\n      }\r\n      properties.push(\r\n        createObjectProperty(\r\n          createSimpleExpression(\r\n            name,\r\n            true,\r\n            getInnerRange(loc, 0, name.length)\r\n          ),\r\n          createSimpleExpression(\r\n            value ? value.content : \"\",\r\n            isStatic,\r\n            value ? value.loc : loc\r\n          )\r\n        )\r\n      );\r\n    } else {\r\n      const { name, arg, exp, loc } = prop;\r\n      const isVBind = name === \"bind\";\r\n      const isVOn = name === \"on\";\r\n      if (name === \"slot\") {\r\n        if (!isComponent) {\r\n          context.onError(\r\n            createCompilerError(40, loc)\r\n          );\r\n        }\r\n        continue;\r\n      }\r\n      if (name === \"once\" || name === \"memo\") {\r\n        continue;\r\n      }\r\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || false)) {\r\n        continue;\r\n      }\r\n      if (isVOn && ssr) {\r\n        continue;\r\n      }\r\n      if (\r\n        // #938: elements with dynamic keys should be forced into blocks\r\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\r\n        // before children\r\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\r\n      ) {\r\n        shouldUseBlock = true;\r\n      }\r\n      if (isVBind && isStaticArgOf(arg, \"ref\") && context.scopes.vFor > 0) {\r\n        properties.push(\r\n          createObjectProperty(\r\n            createSimpleExpression(\"ref_for\", true),\r\n            createSimpleExpression(\"true\")\r\n          )\r\n        );\r\n      }\r\n      if (!arg && (isVBind || isVOn)) {\r\n        hasDynamicKeys = true;\r\n        if (exp) {\r\n          if (isVBind) {\r\n            pushMergeArg();\r\n            mergeArgs.push(exp);\r\n          } else {\r\n            pushMergeArg({\r\n              type: 14,\r\n              loc,\r\n              callee: context.helper(TO_HANDLERS),\r\n              arguments: isComponent ? [exp] : [exp, `true`]\r\n            });\r\n          }\r\n        } else {\r\n          context.onError(\r\n            createCompilerError(\r\n              isVBind ? 34 : 35,\r\n              loc\r\n            )\r\n          );\r\n        }\r\n        continue;\r\n      }\r\n      const directiveTransform = context.directiveTransforms[name];\r\n      if (directiveTransform) {\r\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\r\n        !ssr && props2.forEach(analyzePatchFlag);\r\n        if (isVOn && arg && !isStaticExp(arg)) {\r\n          pushMergeArg(createObjectExpression(props2, elementLoc));\r\n        } else {\r\n          properties.push(...props2);\r\n        }\r\n        if (needRuntime) {\r\n          runtimeDirectives.push(prop);\r\n          if (isSymbol$1(needRuntime)) {\r\n            directiveImportMap.set(prop, needRuntime);\r\n          }\r\n        }\r\n      } else if (!isBuiltInDirective(name)) {\r\n        runtimeDirectives.push(prop);\r\n        if (hasChildren) {\r\n          shouldUseBlock = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  let propsExpression = void 0;\r\n  if (mergeArgs.length) {\r\n    pushMergeArg();\r\n    if (mergeArgs.length > 1) {\r\n      propsExpression = createCallExpression(\r\n        context.helper(MERGE_PROPS),\r\n        mergeArgs,\r\n        elementLoc\r\n      );\r\n    } else {\r\n      propsExpression = mergeArgs[0];\r\n    }\r\n  } else if (properties.length) {\r\n    propsExpression = createObjectExpression(\r\n      dedupeProperties(properties),\r\n      elementLoc\r\n    );\r\n  }\r\n  if (hasDynamicKeys) {\r\n    patchFlag |= 16;\r\n  } else {\r\n    if (hasClassBinding && !isComponent) {\r\n      patchFlag |= 2;\r\n    }\r\n    if (hasStyleBinding && !isComponent) {\r\n      patchFlag |= 4;\r\n    }\r\n    if (dynamicPropNames.length) {\r\n      patchFlag |= 8;\r\n    }\r\n    if (hasHydrationEventBinding) {\r\n      patchFlag |= 32;\r\n    }\r\n  }\r\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n    patchFlag |= 512;\r\n  }\r\n  if (!context.inSSR && propsExpression) {\r\n    switch (propsExpression.type) {\r\n      case 15:\r\n        let classKeyIndex = -1;\r\n        let styleKeyIndex = -1;\r\n        let hasDynamicKey = false;\r\n        for (let i = 0; i < propsExpression.properties.length; i++) {\r\n          const key = propsExpression.properties[i].key;\r\n          if (isStaticExp(key)) {\r\n            if (key.content === \"class\") {\r\n              classKeyIndex = i;\r\n            } else if (key.content === \"style\") {\r\n              styleKeyIndex = i;\r\n            }\r\n          } else if (!key.isHandlerKey) {\r\n            hasDynamicKey = true;\r\n          }\r\n        }\r\n        const classProp = propsExpression.properties[classKeyIndex];\r\n        const styleProp = propsExpression.properties[styleKeyIndex];\r\n        if (!hasDynamicKey) {\r\n          if (classProp && !isStaticExp(classProp.value)) {\r\n            classProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_CLASS),\r\n              [classProp.value]\r\n            );\r\n          }\r\n          if (styleProp && // the static style is compiled into an object,\r\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\r\n          // v-bind:style with static literal object\r\n          styleProp.value.type === 17)) {\r\n            styleProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_STYLE),\r\n              [styleProp.value]\r\n            );\r\n          }\r\n        } else {\r\n          propsExpression = createCallExpression(\r\n            context.helper(NORMALIZE_PROPS),\r\n            [propsExpression]\r\n          );\r\n        }\r\n        break;\r\n      case 14:\r\n        break;\r\n      default:\r\n        propsExpression = createCallExpression(\r\n          context.helper(NORMALIZE_PROPS),\r\n          [\r\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n              propsExpression\r\n            ])\r\n          ]\r\n        );\r\n        break;\r\n    }\r\n  }\r\n  return {\r\n    props: propsExpression,\r\n    directives: runtimeDirectives,\r\n    patchFlag,\r\n    dynamicPropNames,\r\n    shouldUseBlock\r\n  };\r\n}\r\nfunction dedupeProperties(properties) {\r\n  const knownProps = /* @__PURE__ */ new Map();\r\n  const deduped = [];\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const prop = properties[i];\r\n    if (prop.key.type === 8 || !prop.key.isStatic) {\r\n      deduped.push(prop);\r\n      continue;\r\n    }\r\n    const name = prop.key.content;\r\n    const existing = knownProps.get(name);\r\n    if (existing) {\r\n      if (name === \"style\" || name === \"class\" || isOn(name)) {\r\n        mergeAsArray(existing, prop);\r\n      }\r\n    } else {\r\n      knownProps.set(name, prop);\r\n      deduped.push(prop);\r\n    }\r\n  }\r\n  return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n  if (existing.value.type === 17) {\r\n    existing.value.elements.push(incoming.value);\r\n  } else {\r\n    existing.value = createArrayExpression(\r\n      [existing.value, incoming.value],\r\n      existing.loc\r\n    );\r\n  }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n  const dirArgs = [];\r\n  const runtime = directiveImportMap.get(dir);\r\n  if (runtime) {\r\n    dirArgs.push(context.helperString(runtime));\r\n  } else {\r\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\r\n    if (fromSetup) {\r\n      dirArgs.push(fromSetup);\r\n    } else {\r\n      context.helper(RESOLVE_DIRECTIVE);\r\n      context.directives.add(dir.name);\r\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n    }\r\n  }\r\n  const { loc } = dir;\r\n  if (dir.exp)\r\n    dirArgs.push(dir.exp);\r\n  if (dir.arg) {\r\n    if (!dir.exp) {\r\n      dirArgs.push(`void 0`);\r\n    }\r\n    dirArgs.push(dir.arg);\r\n  }\r\n  if (Object.keys(dir.modifiers).length) {\r\n    if (!dir.arg) {\r\n      if (!dir.exp) {\r\n        dirArgs.push(`void 0`);\r\n      }\r\n      dirArgs.push(`void 0`);\r\n    }\r\n    const trueExpression = createSimpleExpression(`true`, false, loc);\r\n    dirArgs.push(\r\n      createObjectExpression(\r\n        dir.modifiers.map(\r\n          (modifier) => createObjectProperty(modifier, trueExpression)\r\n        ),\r\n        loc\r\n      )\r\n    );\r\n  }\r\n  return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n  let propsNamesString = `[`;\r\n  for (let i = 0, l = props.length; i < l; i++) {\r\n    propsNamesString += JSON.stringify(props[i]);\r\n    if (i < l - 1)\r\n      propsNamesString += \", \";\r\n  }\r\n  return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n  return tag === \"component\" || tag === \"Component\";\r\n}\r\n\r\nconst transformSlotOutlet = (node, context) => {\r\n  if (isSlotOutlet(node)) {\r\n    const { children, loc } = node;\r\n    const { slotName, slotProps } = processSlotOutlet(node, context);\r\n    const slotArgs = [\r\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n      slotName,\r\n      \"{}\",\r\n      \"undefined\",\r\n      \"true\"\r\n    ];\r\n    let expectedLen = 2;\r\n    if (slotProps) {\r\n      slotArgs[2] = slotProps;\r\n      expectedLen = 3;\r\n    }\r\n    if (children.length) {\r\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n      expectedLen = 4;\r\n    }\r\n    if (context.scopeId && !context.slotted) {\r\n      expectedLen = 5;\r\n    }\r\n    slotArgs.splice(expectedLen);\r\n    node.codegenNode = createCallExpression(\r\n      context.helper(RENDER_SLOT),\r\n      slotArgs,\r\n      loc\r\n    );\r\n  }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n  let slotName = `\"default\"`;\r\n  let slotProps = void 0;\r\n  const nonNameProps = [];\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i];\r\n    if (p.type === 6) {\r\n      if (p.value) {\r\n        if (p.name === \"name\") {\r\n          slotName = JSON.stringify(p.value.content);\r\n        } else {\r\n          p.name = camelize(p.name);\r\n          nonNameProps.push(p);\r\n        }\r\n      }\r\n    } else {\r\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\r\n        if (p.exp)\r\n          slotName = p.exp;\r\n      } else {\r\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\r\n          p.arg.content = camelize(p.arg.content);\r\n        }\r\n        nonNameProps.push(p);\r\n      }\r\n    }\r\n  }\r\n  if (nonNameProps.length > 0) {\r\n    const { props, directives } = buildProps(\r\n      node,\r\n      context,\r\n      nonNameProps,\r\n      false,\r\n      false\r\n    );\r\n    slotProps = props;\r\n    if (directives.length) {\r\n      context.onError(\r\n        createCompilerError(\r\n          36,\r\n          directives[0].loc\r\n        )\r\n      );\r\n    }\r\n  }\r\n  return {\r\n    slotName,\r\n    slotProps\r\n  };\r\n}\r\n\r\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn$1 = (dir, node, context, augmentor) => {\r\n  const { loc, modifiers, arg } = dir;\r\n  if (!dir.exp && !modifiers.length) {\r\n    context.onError(createCompilerError(35, loc));\r\n  }\r\n  let eventName;\r\n  if (arg.type === 4) {\r\n    if (arg.isStatic) {\r\n      let rawName = arg.content;\r\n      if (rawName.startsWith(\"vnode\")) {\r\n        context.onWarn(\r\n          createCompilerError(51, arg.loc)\r\n        );\r\n      }\r\n      if (rawName.startsWith(\"vue:\")) {\r\n        rawName = `vnode-${rawName.slice(4)}`;\r\n      }\r\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\r\n        // for non-element and vnode lifecycle event listeners, auto convert\r\n        // it to camelCase. See issue #2249\r\n        toHandlerKey(camelize(rawName))\r\n      ) : (\r\n        // preserve case for plain element listeners that have uppercase\r\n        // letters, as these may be custom elements' custom events\r\n        `on:${rawName}`\r\n      );\r\n      eventName = createSimpleExpression(eventString, true, arg.loc);\r\n    } else {\r\n      eventName = createCompoundExpression([\r\n        `${context.helperString(TO_HANDLER_KEY)}(`,\r\n        arg,\r\n        `)`\r\n      ]);\r\n    }\r\n  } else {\r\n    eventName = arg;\r\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n    eventName.children.push(`)`);\r\n  }\r\n  let exp = dir.exp;\r\n  if (exp && !exp.content.trim()) {\r\n    exp = void 0;\r\n  }\r\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n  if (exp) {\r\n    const isMemberExp = isMemberExpression(exp.content, context);\r\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n    const hasMultipleStatements = exp.content.includes(`;`);\r\n    if (context.prefixIdentifiers) {\r\n      isInlineStatement && context.addIdentifiers(`$event`);\r\n      exp = dir.exp = processExpression(\r\n        exp,\r\n        context,\r\n        false,\r\n        hasMultipleStatements\r\n      );\r\n      isInlineStatement && context.removeIdentifiers(`$event`);\r\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\r\n      !context.inVOnce && // runtime constants don't need to be cached\r\n      // (this is analyzed by compileScript in SFC <script setup>)\r\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\r\n      // we need to use the original function to preserve arity,\r\n      // e.g. <transition> relies on checking cb.length to determine\r\n      // transition end handling. Inline function is ok since its arity\r\n      // is preserved even when cached.\r\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\r\n      // it must be passed fresh to avoid stale values.\r\n      !hasScopeRef(exp, context.identifiers);\r\n      if (shouldCache && isMemberExp) {\r\n        if (exp.type === 4) {\r\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\r\n        } else {\r\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\r\n        }\r\n      }\r\n    }\r\n    if (isInlineStatement || shouldCache && isMemberExp) {\r\n      exp = createCompoundExpression([\r\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\r\n//@ts-ignore\r\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n        exp,\r\n        hasMultipleStatements ? `}` : `)`\r\n      ]);\r\n    }\r\n  }\r\n  let ret = {\r\n    props: [\r\n      createObjectProperty(\r\n        eventName,\r\n        exp || createSimpleExpression(`() => {}`, false, loc)\r\n      )\r\n    ]\r\n  };\r\n  if (augmentor) {\r\n    ret = augmentor(ret);\r\n  }\r\n  if (shouldCache) {\r\n    ret.props[0].value = context.cache(ret.props[0].value);\r\n  }\r\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\r\n  return ret;\r\n};\r\n\r\nconst transformBind = (dir, _node, context) => {\r\n  const { exp, modifiers, loc } = dir;\r\n  const arg = dir.arg;\r\n  if (arg.type !== 4) {\r\n    arg.children.unshift(`(`);\r\n    arg.children.push(`) || \"\"`);\r\n  } else if (!arg.isStatic) {\r\n    arg.content = `${arg.content} || \"\"`;\r\n  }\r\n  if (modifiers.includes(\"camel\")) {\r\n    if (arg.type === 4) {\r\n      if (arg.isStatic) {\r\n        arg.content = camelize(arg.content);\r\n      } else {\r\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n      }\r\n    } else {\r\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n      arg.children.push(`)`);\r\n    }\r\n  }\r\n  if (!context.inSSR) {\r\n    if (modifiers.includes(\"prop\")) {\r\n      injectPrefix(arg, \".\");\r\n    }\r\n    if (modifiers.includes(\"attr\")) {\r\n      injectPrefix(arg, \"^\");\r\n    }\r\n  }\r\n  if (!exp || exp.type === 4 && !exp.content.trim()) {\r\n    context.onError(createCompilerError(34, loc));\r\n    return {\r\n      props: [createObjectProperty(arg, createSimpleExpression(\"\", true, loc))]\r\n    };\r\n  }\r\n  return {\r\n    props: [createObjectProperty(arg, exp)]\r\n  };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n  if (arg.type === 4) {\r\n    if (arg.isStatic) {\r\n      arg.content = prefix + arg.content;\r\n    } else {\r\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n    }\r\n  } else {\r\n    arg.children.unshift(`'${prefix}' + (`);\r\n    arg.children.push(`)`);\r\n  }\r\n};\r\n\r\nconst transformText = (node, context) => {\r\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\r\n    return () => {\r\n      const children = node.children;\r\n      let currentContainer = void 0;\r\n      let hasText = false;\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isText$1(child)) {\r\n          hasText = true;\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j];\r\n            if (isText$1(next)) {\r\n              if (!currentContainer) {\r\n                currentContainer = children[i] = createCompoundExpression(\r\n                  [child],\r\n                  child.loc\r\n                );\r\n              }\r\n              currentContainer.children.push(` + `, next);\r\n              children.splice(j, 1);\r\n              j--;\r\n            } else {\r\n              currentContainer = void 0;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (!hasText || // if this is a plain element with a single text child, leave it\r\n      // as-is since the runtime has dedicated fast path for this by directly\r\n      // setting textContent of the element.\r\n      // for component root it's always normalized anyway.\r\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\r\n      // custom directives can potentially add DOM elements arbitrarily,\r\n      // we need to avoid setting textContent of the element at runtime\r\n      // to avoid accidentally overwriting the DOM elements added\r\n      // by the user through custom directives.\r\n      !node.props.find(\r\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\r\n      ) && // in compat mode, <template> tags with no special directives\r\n      // will be rendered as a fragment so its children must be\r\n      // converted into vnodes.\r\n      true)) {\r\n        return;\r\n      }\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isText$1(child) || child.type === 8) {\r\n          const callArgs = [];\r\n          if (child.type !== 2 || child.content !== \" \") {\r\n            callArgs.push(child);\r\n          }\r\n          if (!context.ssr && getConstantType(child, context) === 0) {\r\n            callArgs.push(\r\n              1 + (` /* ${PatchFlagNames[1]} */` )\r\n            );\r\n          }\r\n          children[i] = {\r\n            type: 12,\r\n            content: child,\r\n            loc: child.loc,\r\n            codegenNode: createCallExpression(\r\n              context.helper(CREATE_TEXT),\r\n              callArgs\r\n            )\r\n          };\r\n        }\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nconst seen$1 = /* @__PURE__ */ new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n  if (node.type === 1 && findDir(node, \"once\", true)) {\r\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\r\n      return;\r\n    }\r\n    seen$1.add(node);\r\n    context.inVOnce = true;\r\n    context.helper(SET_BLOCK_TRACKING);\r\n    return () => {\r\n      context.inVOnce = false;\r\n      const cur = context.currentNode;\r\n      if (cur.codegenNode) {\r\n        cur.codegenNode = context.cache(\r\n          cur.codegenNode,\r\n          true\r\n          /* isVNode */\r\n        );\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nconst transformModel$1 = (dir, node, context) => {\r\n  const { exp, arg } = dir;\r\n  if (!exp) {\r\n    context.onError(\r\n      createCompilerError(41, dir.loc)\r\n    );\r\n    return createTransformProps();\r\n  }\r\n  const rawExp = exp.loc.source;\r\n  const expString = exp.type === 4 ? exp.content : rawExp;\r\n  const bindingType = context.bindingMetadata[rawExp];\r\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\r\n    context.onError(createCompilerError(44, exp.loc));\r\n    return createTransformProps();\r\n  }\r\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\r\n  if (!expString.trim() || !isMemberExpression(expString, context) && !maybeRef) {\r\n    context.onError(\r\n      createCompilerError(42, exp.loc)\r\n    );\r\n    return createTransformProps();\r\n  }\r\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\r\n    context.onError(\r\n      createCompilerError(43, exp.loc)\r\n    );\r\n    return createTransformProps();\r\n  }\r\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\r\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\r\n  let assignmentExp;\r\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n  if (maybeRef) {\r\n    if (bindingType === \"setup-ref\") {\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => ((`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event)`\r\n      ]);\r\n    } else {\r\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event : ${altAssignment})`\r\n      ]);\r\n    }\r\n  } else {\r\n    assignmentExp = createCompoundExpression([\r\n      `${eventArg} => ((`,\r\n      exp,\r\n      `) = $event)`\r\n    ]);\r\n  }\r\n  const props = [\r\n    // modelValue: foo\r\n    createObjectProperty(propName, dir.exp),\r\n    // \"onUpdate:modelValue\": $event => (foo = $event)\r\n    createObjectProperty(eventName, assignmentExp)\r\n  ];\r\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\r\n    props[1].value = context.cache(props[1].value);\r\n  }\r\n  if (dir.modifiers.length && node.tagType === 1) {\r\n    const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\r\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\r\n    props.push(\r\n      createObjectProperty(\r\n        modifiersKey,\r\n        createSimpleExpression(\r\n          `{ ${modifiers} }`,\r\n          false,\r\n          dir.loc,\r\n          2\r\n        )\r\n      )\r\n    );\r\n  }\r\n  return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n  return { props };\r\n}\r\n\r\nconst seen = /* @__PURE__ */ new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n  if (node.type === 1) {\r\n    const dir = findDir(node, \"memo\");\r\n    if (!dir || seen.has(node)) {\r\n      return;\r\n    }\r\n    seen.add(node);\r\n    return () => {\r\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\r\n      if (codegenNode && codegenNode.type === 13) {\r\n        if (node.tagType !== 1) {\r\n          convertToBlock(codegenNode, context);\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n          dir.exp,\r\n          createFunctionExpression(void 0, codegenNode),\r\n          `_cache`,\r\n          String(context.cached++)\r\n        ]);\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n  return [\r\n    [\r\n      transformOnce,\r\n      transformIf,\r\n      transformMemo,\r\n      transformFor,\r\n      ...[],\r\n      ...prefixIdentifiers ? [\r\n        // order is important\r\n        trackVForSlotScopes,\r\n        transformExpression\r\n      ] : [],\r\n      transformSlotOutlet,\r\n      transformElement,\r\n      trackSlotScopes,\r\n      transformText\r\n    ],\r\n    {\r\n      on: transformOn$1,\r\n      bind: transformBind,\r\n      model: transformModel$1\r\n    }\r\n  ];\r\n}\r\nfunction baseCompile(template, options = {}) {\r\n  const onError = options.onError || defaultOnError;\r\n  const isModuleMode = options.mode === \"module\";\r\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\r\n  if (!prefixIdentifiers && options.cacheHandlers) {\r\n    onError(createCompilerError(49));\r\n  }\r\n  if (options.scopeId && !isModuleMode) {\r\n    onError(createCompilerError(50));\r\n  }\r\n  const ast = isString$2(template) ? baseParse(template, options) : template;\r\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\r\n  if (options.isTS) {\r\n    const { expressionPlugins } = options;\r\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\r\n      options.expressionPlugins = [...expressionPlugins || [], \"typescript\"];\r\n    }\r\n  }\r\n  transform$1(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers,\r\n      nodeTransforms: [\r\n        ...nodeTransforms,\r\n        ...options.nodeTransforms || []\r\n        // user transforms\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        directiveTransforms,\r\n        options.directiveTransforms || {}\r\n        // user transforms\r\n      )\r\n    })\r\n  );\r\n  return generate(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers\r\n    })\r\n  );\r\n}\r\n\r\nconst noopDirectiveTransform = () => ({ props: [] });\r\n\r\nconst V_MODEL_RADIO = Symbol(`vModelRadio` );\r\nconst V_MODEL_CHECKBOX = Symbol(`vModelCheckbox` );\r\nconst V_MODEL_TEXT = Symbol(`vModelText` );\r\nconst V_MODEL_SELECT = Symbol(`vModelSelect` );\r\nconst V_MODEL_DYNAMIC = Symbol(`vModelDynamic` );\r\nconst V_ON_WITH_MODIFIERS = Symbol(`vOnModifiersGuard` );\r\nconst V_ON_WITH_KEYS = Symbol(`vOnKeysGuard` );\r\nconst V_SHOW = Symbol(`vShow` );\r\nconst TRANSITION = Symbol(`Transition` );\r\nconst TRANSITION_GROUP = Symbol(`TransitionGroup` );\r\nregisterRuntimeHelpers({\r\n  [V_MODEL_RADIO]: `vModelRadio`,\r\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n  [V_MODEL_TEXT]: `vModelText`,\r\n  [V_MODEL_SELECT]: `vModelSelect`,\r\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n  [V_ON_WITH_KEYS]: `withKeys`,\r\n  [V_SHOW]: `vShow`,\r\n  [TRANSITION]: `Transition`,\r\n  [TRANSITION_GROUP]: `TransitionGroup`\r\n});\r\n\r\nvar namedCharacterReferences = {\r\n\tGT: \">\",\r\n\tgt: \">\",\r\n\tLT: \"<\",\r\n\tlt: \"<\",\r\n\t\"ac;\": \"∾\",\r\n\t\"af;\": \"⁡\",\r\n\tAMP: \"&\",\r\n\tamp: \"&\",\r\n\t\"ap;\": \"≈\",\r\n\t\"DD;\": \"ⅅ\",\r\n\t\"dd;\": \"ⅆ\",\r\n\tdeg: \"°\",\r\n\t\"ee;\": \"ⅇ\",\r\n\t\"eg;\": \"⪚\",\r\n\t\"el;\": \"⪙\",\r\n\tETH: \"Ð\",\r\n\teth: \"ð\",\r\n\t\"gE;\": \"≧\",\r\n\t\"ge;\": \"≥\",\r\n\t\"Gg;\": \"⋙\",\r\n\t\"gg;\": \"≫\",\r\n\t\"gl;\": \"≷\",\r\n\t\"GT;\": \">\",\r\n\t\"Gt;\": \"≫\",\r\n\t\"gt;\": \">\",\r\n\t\"ic;\": \"⁣\",\r\n\t\"ii;\": \"ⅈ\",\r\n\t\"Im;\": \"ℑ\",\r\n\t\"in;\": \"∈\",\r\n\t\"it;\": \"⁢\",\r\n\t\"lE;\": \"≦\",\r\n\t\"le;\": \"≤\",\r\n\t\"lg;\": \"≶\",\r\n\t\"Ll;\": \"⋘\",\r\n\t\"ll;\": \"≪\",\r\n\t\"LT;\": \"<\",\r\n\t\"Lt;\": \"≪\",\r\n\t\"lt;\": \"<\",\r\n\t\"mp;\": \"∓\",\r\n\t\"Mu;\": \"Μ\",\r\n\t\"mu;\": \"μ\",\r\n\t\"ne;\": \"≠\",\r\n\t\"ni;\": \"∋\",\r\n\tnot: \"¬\",\r\n\t\"Nu;\": \"Ν\",\r\n\t\"nu;\": \"ν\",\r\n\t\"Or;\": \"⩔\",\r\n\t\"or;\": \"∨\",\r\n\t\"oS;\": \"Ⓢ\",\r\n\t\"Pi;\": \"Π\",\r\n\t\"pi;\": \"π\",\r\n\t\"pm;\": \"±\",\r\n\t\"Pr;\": \"⪻\",\r\n\t\"pr;\": \"≺\",\r\n\t\"Re;\": \"ℜ\",\r\n\tREG: \"®\",\r\n\treg: \"®\",\r\n\t\"rx;\": \"℞\",\r\n\t\"Sc;\": \"⪼\",\r\n\t\"sc;\": \"≻\",\r\n\tshy: \"­\",\r\n\tuml: \"¨\",\r\n\t\"wp;\": \"℘\",\r\n\t\"wr;\": \"≀\",\r\n\t\"Xi;\": \"Ξ\",\r\n\t\"xi;\": \"ξ\",\r\n\tyen: \"¥\",\r\n\t\"acd;\": \"∿\",\r\n\t\"acE;\": \"∾̳\",\r\n\t\"Acy;\": \"А\",\r\n\t\"acy;\": \"а\",\r\n\t\"Afr;\": \"𝔄\",\r\n\t\"afr;\": \"𝔞\",\r\n\t\"AMP;\": \"&\",\r\n\t\"amp;\": \"&\",\r\n\t\"And;\": \"⩓\",\r\n\t\"and;\": \"∧\",\r\n\t\"ang;\": \"∠\",\r\n\t\"apE;\": \"⩰\",\r\n\t\"ape;\": \"≊\",\r\n\t\"ast;\": \"*\",\r\n\tAuml: \"Ä\",\r\n\tauml: \"ä\",\r\n\t\"Bcy;\": \"Б\",\r\n\t\"bcy;\": \"б\",\r\n\t\"Bfr;\": \"𝔅\",\r\n\t\"bfr;\": \"𝔟\",\r\n\t\"bne;\": \"=⃥\",\r\n\t\"bot;\": \"⊥\",\r\n\t\"Cap;\": \"⋒\",\r\n\t\"cap;\": \"∩\",\r\n\tcent: \"¢\",\r\n\t\"Cfr;\": \"ℭ\",\r\n\t\"cfr;\": \"𝔠\",\r\n\t\"Chi;\": \"Χ\",\r\n\t\"chi;\": \"χ\",\r\n\t\"cir;\": \"○\",\r\n\tCOPY: \"©\",\r\n\tcopy: \"©\",\r\n\t\"Cup;\": \"⋓\",\r\n\t\"cup;\": \"∪\",\r\n\t\"Dcy;\": \"Д\",\r\n\t\"dcy;\": \"д\",\r\n\t\"deg;\": \"°\",\r\n\t\"Del;\": \"∇\",\r\n\t\"Dfr;\": \"𝔇\",\r\n\t\"dfr;\": \"𝔡\",\r\n\t\"die;\": \"¨\",\r\n\t\"div;\": \"÷\",\r\n\t\"Dot;\": \"¨\",\r\n\t\"dot;\": \"˙\",\r\n\t\"Ecy;\": \"Э\",\r\n\t\"ecy;\": \"э\",\r\n\t\"Efr;\": \"𝔈\",\r\n\t\"efr;\": \"𝔢\",\r\n\t\"egs;\": \"⪖\",\r\n\t\"ell;\": \"ℓ\",\r\n\t\"els;\": \"⪕\",\r\n\t\"ENG;\": \"Ŋ\",\r\n\t\"eng;\": \"ŋ\",\r\n\t\"Eta;\": \"Η\",\r\n\t\"eta;\": \"η\",\r\n\t\"ETH;\": \"Ð\",\r\n\t\"eth;\": \"ð\",\r\n\tEuml: \"Ë\",\r\n\teuml: \"ë\",\r\n\t\"Fcy;\": \"Ф\",\r\n\t\"fcy;\": \"ф\",\r\n\t\"Ffr;\": \"𝔉\",\r\n\t\"ffr;\": \"𝔣\",\r\n\t\"gap;\": \"⪆\",\r\n\t\"Gcy;\": \"Г\",\r\n\t\"gcy;\": \"г\",\r\n\t\"gEl;\": \"⪌\",\r\n\t\"gel;\": \"⋛\",\r\n\t\"geq;\": \"≥\",\r\n\t\"ges;\": \"⩾\",\r\n\t\"Gfr;\": \"𝔊\",\r\n\t\"gfr;\": \"𝔤\",\r\n\t\"ggg;\": \"⋙\",\r\n\t\"gla;\": \"⪥\",\r\n\t\"glE;\": \"⪒\",\r\n\t\"glj;\": \"⪤\",\r\n\t\"gnE;\": \"≩\",\r\n\t\"gne;\": \"⪈\",\r\n\t\"Hat;\": \"^\",\r\n\t\"Hfr;\": \"ℌ\",\r\n\t\"hfr;\": \"𝔥\",\r\n\t\"Icy;\": \"И\",\r\n\t\"icy;\": \"и\",\r\n\t\"iff;\": \"⇔\",\r\n\t\"Ifr;\": \"ℑ\",\r\n\t\"ifr;\": \"𝔦\",\r\n\t\"Int;\": \"∬\",\r\n\t\"int;\": \"∫\",\r\n\tIuml: \"Ï\",\r\n\tiuml: \"ï\",\r\n\t\"Jcy;\": \"Й\",\r\n\t\"jcy;\": \"й\",\r\n\t\"Jfr;\": \"𝔍\",\r\n\t\"jfr;\": \"𝔧\",\r\n\t\"Kcy;\": \"К\",\r\n\t\"kcy;\": \"к\",\r\n\t\"Kfr;\": \"𝔎\",\r\n\t\"kfr;\": \"𝔨\",\r\n\t\"lap;\": \"⪅\",\r\n\t\"lat;\": \"⪫\",\r\n\t\"Lcy;\": \"Л\",\r\n\t\"lcy;\": \"л\",\r\n\t\"lEg;\": \"⪋\",\r\n\t\"leg;\": \"⋚\",\r\n\t\"leq;\": \"≤\",\r\n\t\"les;\": \"⩽\",\r\n\t\"Lfr;\": \"𝔏\",\r\n\t\"lfr;\": \"𝔩\",\r\n\t\"lgE;\": \"⪑\",\r\n\t\"lnE;\": \"≨\",\r\n\t\"lne;\": \"⪇\",\r\n\t\"loz;\": \"◊\",\r\n\t\"lrm;\": \"‎\",\r\n\t\"Lsh;\": \"↰\",\r\n\t\"lsh;\": \"↰\",\r\n\tmacr: \"¯\",\r\n\t\"Map;\": \"⤅\",\r\n\t\"map;\": \"↦\",\r\n\t\"Mcy;\": \"М\",\r\n\t\"mcy;\": \"м\",\r\n\t\"Mfr;\": \"𝔐\",\r\n\t\"mfr;\": \"𝔪\",\r\n\t\"mho;\": \"℧\",\r\n\t\"mid;\": \"∣\",\r\n\t\"nap;\": \"≉\",\r\n\tnbsp: \" \",\r\n\t\"Ncy;\": \"Н\",\r\n\t\"ncy;\": \"н\",\r\n\t\"Nfr;\": \"𝔑\",\r\n\t\"nfr;\": \"𝔫\",\r\n\t\"ngE;\": \"≧̸\",\r\n\t\"nge;\": \"≱\",\r\n\t\"nGg;\": \"⋙̸\",\r\n\t\"nGt;\": \"≫⃒\",\r\n\t\"ngt;\": \"≯\",\r\n\t\"nis;\": \"⋼\",\r\n\t\"niv;\": \"∋\",\r\n\t\"nlE;\": \"≦̸\",\r\n\t\"nle;\": \"≰\",\r\n\t\"nLl;\": \"⋘̸\",\r\n\t\"nLt;\": \"≪⃒\",\r\n\t\"nlt;\": \"≮\",\r\n\t\"Not;\": \"⫬\",\r\n\t\"not;\": \"¬\",\r\n\t\"npr;\": \"⊀\",\r\n\t\"nsc;\": \"⊁\",\r\n\t\"num;\": \"#\",\r\n\t\"Ocy;\": \"О\",\r\n\t\"ocy;\": \"о\",\r\n\t\"Ofr;\": \"𝔒\",\r\n\t\"ofr;\": \"𝔬\",\r\n\t\"ogt;\": \"⧁\",\r\n\t\"ohm;\": \"Ω\",\r\n\t\"olt;\": \"⧀\",\r\n\t\"ord;\": \"⩝\",\r\n\tordf: \"ª\",\r\n\tordm: \"º\",\r\n\t\"orv;\": \"⩛\",\r\n\tOuml: \"Ö\",\r\n\touml: \"ö\",\r\n\t\"par;\": \"∥\",\r\n\tpara: \"¶\",\r\n\t\"Pcy;\": \"П\",\r\n\t\"pcy;\": \"п\",\r\n\t\"Pfr;\": \"𝔓\",\r\n\t\"pfr;\": \"𝔭\",\r\n\t\"Phi;\": \"Φ\",\r\n\t\"phi;\": \"φ\",\r\n\t\"piv;\": \"ϖ\",\r\n\t\"prE;\": \"⪳\",\r\n\t\"pre;\": \"⪯\",\r\n\t\"Psi;\": \"Ψ\",\r\n\t\"psi;\": \"ψ\",\r\n\t\"Qfr;\": \"𝔔\",\r\n\t\"qfr;\": \"𝔮\",\r\n\tQUOT: \"\\\"\",\r\n\tquot: \"\\\"\",\r\n\t\"Rcy;\": \"Р\",\r\n\t\"rcy;\": \"р\",\r\n\t\"REG;\": \"®\",\r\n\t\"reg;\": \"®\",\r\n\t\"Rfr;\": \"ℜ\",\r\n\t\"rfr;\": \"𝔯\",\r\n\t\"Rho;\": \"Ρ\",\r\n\t\"rho;\": \"ρ\",\r\n\t\"rlm;\": \"‏\",\r\n\t\"Rsh;\": \"↱\",\r\n\t\"rsh;\": \"↱\",\r\n\t\"scE;\": \"⪴\",\r\n\t\"sce;\": \"⪰\",\r\n\t\"Scy;\": \"С\",\r\n\t\"scy;\": \"с\",\r\n\tsect: \"§\",\r\n\t\"Sfr;\": \"𝔖\",\r\n\t\"sfr;\": \"𝔰\",\r\n\t\"shy;\": \"­\",\r\n\t\"sim;\": \"∼\",\r\n\t\"smt;\": \"⪪\",\r\n\t\"sol;\": \"/\",\r\n\t\"squ;\": \"□\",\r\n\t\"Sub;\": \"⋐\",\r\n\t\"sub;\": \"⊂\",\r\n\t\"Sum;\": \"∑\",\r\n\t\"sum;\": \"∑\",\r\n\t\"Sup;\": \"⋑\",\r\n\t\"sup;\": \"⊃\",\r\n\tsup1: \"¹\",\r\n\tsup2: \"²\",\r\n\tsup3: \"³\",\r\n\t\"Tab;\": \"\\t\",\r\n\t\"Tau;\": \"Τ\",\r\n\t\"tau;\": \"τ\",\r\n\t\"Tcy;\": \"Т\",\r\n\t\"tcy;\": \"т\",\r\n\t\"Tfr;\": \"𝔗\",\r\n\t\"tfr;\": \"𝔱\",\r\n\t\"top;\": \"⊤\",\r\n\t\"Ucy;\": \"У\",\r\n\t\"ucy;\": \"у\",\r\n\t\"Ufr;\": \"𝔘\",\r\n\t\"ufr;\": \"𝔲\",\r\n\t\"uml;\": \"¨\",\r\n\tUuml: \"Ü\",\r\n\tuuml: \"ü\",\r\n\t\"Vcy;\": \"В\",\r\n\t\"vcy;\": \"в\",\r\n\t\"Vee;\": \"⋁\",\r\n\t\"vee;\": \"∨\",\r\n\t\"Vfr;\": \"𝔙\",\r\n\t\"vfr;\": \"𝔳\",\r\n\t\"Wfr;\": \"𝔚\",\r\n\t\"wfr;\": \"𝔴\",\r\n\t\"Xfr;\": \"𝔛\",\r\n\t\"xfr;\": \"𝔵\",\r\n\t\"Ycy;\": \"Ы\",\r\n\t\"ycy;\": \"ы\",\r\n\t\"yen;\": \"¥\",\r\n\t\"Yfr;\": \"𝔜\",\r\n\t\"yfr;\": \"𝔶\",\r\n\tyuml: \"ÿ\",\r\n\t\"Zcy;\": \"З\",\r\n\t\"zcy;\": \"з\",\r\n\t\"Zfr;\": \"ℨ\",\r\n\t\"zfr;\": \"𝔷\",\r\n\t\"zwj;\": \"‍\",\r\n\tAcirc: \"Â\",\r\n\tacirc: \"â\",\r\n\tacute: \"´\",\r\n\tAElig: \"Æ\",\r\n\taelig: \"æ\",\r\n\t\"andd;\": \"⩜\",\r\n\t\"andv;\": \"⩚\",\r\n\t\"ange;\": \"⦤\",\r\n\t\"Aopf;\": \"𝔸\",\r\n\t\"aopf;\": \"𝕒\",\r\n\t\"apid;\": \"≋\",\r\n\t\"apos;\": \"'\",\r\n\tAring: \"Å\",\r\n\taring: \"å\",\r\n\t\"Ascr;\": \"𝒜\",\r\n\t\"ascr;\": \"𝒶\",\r\n\t\"Auml;\": \"Ä\",\r\n\t\"auml;\": \"ä\",\r\n\t\"Barv;\": \"⫧\",\r\n\t\"bbrk;\": \"⎵\",\r\n\t\"Beta;\": \"Β\",\r\n\t\"beta;\": \"β\",\r\n\t\"beth;\": \"ℶ\",\r\n\t\"bNot;\": \"⫭\",\r\n\t\"bnot;\": \"⌐\",\r\n\t\"Bopf;\": \"𝔹\",\r\n\t\"bopf;\": \"𝕓\",\r\n\t\"boxH;\": \"═\",\r\n\t\"boxh;\": \"─\",\r\n\t\"boxV;\": \"║\",\r\n\t\"boxv;\": \"│\",\r\n\t\"Bscr;\": \"ℬ\",\r\n\t\"bscr;\": \"𝒷\",\r\n\t\"bsim;\": \"∽\",\r\n\t\"bsol;\": \"\\\\\",\r\n\t\"bull;\": \"•\",\r\n\t\"bump;\": \"≎\",\r\n\t\"caps;\": \"∩︀\",\r\n\t\"Cdot;\": \"Ċ\",\r\n\t\"cdot;\": \"ċ\",\r\n\tcedil: \"¸\",\r\n\t\"cent;\": \"¢\",\r\n\t\"CHcy;\": \"Ч\",\r\n\t\"chcy;\": \"ч\",\r\n\t\"circ;\": \"ˆ\",\r\n\t\"cirE;\": \"⧃\",\r\n\t\"cire;\": \"≗\",\r\n\t\"comp;\": \"∁\",\r\n\t\"cong;\": \"≅\",\r\n\t\"Copf;\": \"ℂ\",\r\n\t\"copf;\": \"𝕔\",\r\n\t\"COPY;\": \"©\",\r\n\t\"copy;\": \"©\",\r\n\t\"Cscr;\": \"𝒞\",\r\n\t\"cscr;\": \"𝒸\",\r\n\t\"csub;\": \"⫏\",\r\n\t\"csup;\": \"⫐\",\r\n\t\"cups;\": \"∪︀\",\r\n\t\"Darr;\": \"↡\",\r\n\t\"dArr;\": \"⇓\",\r\n\t\"darr;\": \"↓\",\r\n\t\"dash;\": \"‐\",\r\n\t\"dHar;\": \"⥥\",\r\n\t\"diam;\": \"⋄\",\r\n\t\"DJcy;\": \"Ђ\",\r\n\t\"djcy;\": \"ђ\",\r\n\t\"Dopf;\": \"𝔻\",\r\n\t\"dopf;\": \"𝕕\",\r\n\t\"Dscr;\": \"𝒟\",\r\n\t\"dscr;\": \"𝒹\",\r\n\t\"DScy;\": \"Ѕ\",\r\n\t\"dscy;\": \"ѕ\",\r\n\t\"dsol;\": \"⧶\",\r\n\t\"dtri;\": \"▿\",\r\n\t\"DZcy;\": \"Џ\",\r\n\t\"dzcy;\": \"џ\",\r\n\t\"ecir;\": \"≖\",\r\n\tEcirc: \"Ê\",\r\n\tecirc: \"ê\",\r\n\t\"Edot;\": \"Ė\",\r\n\t\"eDot;\": \"≑\",\r\n\t\"edot;\": \"ė\",\r\n\t\"emsp;\": \" \",\r\n\t\"ensp;\": \" \",\r\n\t\"Eopf;\": \"𝔼\",\r\n\t\"eopf;\": \"𝕖\",\r\n\t\"epar;\": \"⋕\",\r\n\t\"epsi;\": \"ε\",\r\n\t\"Escr;\": \"ℰ\",\r\n\t\"escr;\": \"ℯ\",\r\n\t\"Esim;\": \"⩳\",\r\n\t\"esim;\": \"≂\",\r\n\t\"Euml;\": \"Ë\",\r\n\t\"euml;\": \"ë\",\r\n\t\"euro;\": \"€\",\r\n\t\"excl;\": \"!\",\r\n\t\"flat;\": \"♭\",\r\n\t\"fnof;\": \"ƒ\",\r\n\t\"Fopf;\": \"𝔽\",\r\n\t\"fopf;\": \"𝕗\",\r\n\t\"fork;\": \"⋔\",\r\n\t\"Fscr;\": \"ℱ\",\r\n\t\"fscr;\": \"𝒻\",\r\n\t\"Gdot;\": \"Ġ\",\r\n\t\"gdot;\": \"ġ\",\r\n\t\"geqq;\": \"≧\",\r\n\t\"gesl;\": \"⋛︀\",\r\n\t\"GJcy;\": \"Ѓ\",\r\n\t\"gjcy;\": \"ѓ\",\r\n\t\"gnap;\": \"⪊\",\r\n\t\"gneq;\": \"⪈\",\r\n\t\"Gopf;\": \"𝔾\",\r\n\t\"gopf;\": \"𝕘\",\r\n\t\"Gscr;\": \"𝒢\",\r\n\t\"gscr;\": \"ℊ\",\r\n\t\"gsim;\": \"≳\",\r\n\t\"gtcc;\": \"⪧\",\r\n\t\"gvnE;\": \"≩︀\",\r\n\t\"half;\": \"½\",\r\n\t\"hArr;\": \"⇔\",\r\n\t\"harr;\": \"↔\",\r\n\t\"hbar;\": \"ℏ\",\r\n\t\"Hopf;\": \"ℍ\",\r\n\t\"hopf;\": \"𝕙\",\r\n\t\"Hscr;\": \"ℋ\",\r\n\t\"hscr;\": \"𝒽\",\r\n\tIcirc: \"Î\",\r\n\ticirc: \"î\",\r\n\t\"Idot;\": \"İ\",\r\n\t\"IEcy;\": \"Е\",\r\n\t\"iecy;\": \"е\",\r\n\tiexcl: \"¡\",\r\n\t\"imof;\": \"⊷\",\r\n\t\"IOcy;\": \"Ё\",\r\n\t\"iocy;\": \"ё\",\r\n\t\"Iopf;\": \"𝕀\",\r\n\t\"iopf;\": \"𝕚\",\r\n\t\"Iota;\": \"Ι\",\r\n\t\"iota;\": \"ι\",\r\n\t\"Iscr;\": \"ℐ\",\r\n\t\"iscr;\": \"𝒾\",\r\n\t\"isin;\": \"∈\",\r\n\t\"Iuml;\": \"Ï\",\r\n\t\"iuml;\": \"ï\",\r\n\t\"Jopf;\": \"𝕁\",\r\n\t\"jopf;\": \"𝕛\",\r\n\t\"Jscr;\": \"𝒥\",\r\n\t\"jscr;\": \"𝒿\",\r\n\t\"KHcy;\": \"Х\",\r\n\t\"khcy;\": \"х\",\r\n\t\"KJcy;\": \"Ќ\",\r\n\t\"kjcy;\": \"ќ\",\r\n\t\"Kopf;\": \"𝕂\",\r\n\t\"kopf;\": \"𝕜\",\r\n\t\"Kscr;\": \"𝒦\",\r\n\t\"kscr;\": \"𝓀\",\r\n\t\"Lang;\": \"⟪\",\r\n\t\"lang;\": \"⟨\",\r\n\tlaquo: \"«\",\r\n\t\"Larr;\": \"↞\",\r\n\t\"lArr;\": \"⇐\",\r\n\t\"larr;\": \"←\",\r\n\t\"late;\": \"⪭\",\r\n\t\"lcub;\": \"{\",\r\n\t\"ldca;\": \"⤶\",\r\n\t\"ldsh;\": \"↲\",\r\n\t\"leqq;\": \"≦\",\r\n\t\"lesg;\": \"⋚︀\",\r\n\t\"lHar;\": \"⥢\",\r\n\t\"LJcy;\": \"Љ\",\r\n\t\"ljcy;\": \"љ\",\r\n\t\"lnap;\": \"⪉\",\r\n\t\"lneq;\": \"⪇\",\r\n\t\"Lopf;\": \"𝕃\",\r\n\t\"lopf;\": \"𝕝\",\r\n\t\"lozf;\": \"⧫\",\r\n\t\"lpar;\": \"(\",\r\n\t\"Lscr;\": \"ℒ\",\r\n\t\"lscr;\": \"𝓁\",\r\n\t\"lsim;\": \"≲\",\r\n\t\"lsqb;\": \"[\",\r\n\t\"ltcc;\": \"⪦\",\r\n\t\"ltri;\": \"◃\",\r\n\t\"lvnE;\": \"≨︀\",\r\n\t\"macr;\": \"¯\",\r\n\t\"male;\": \"♂\",\r\n\t\"malt;\": \"✠\",\r\n\tmicro: \"µ\",\r\n\t\"mlcp;\": \"⫛\",\r\n\t\"mldr;\": \"…\",\r\n\t\"Mopf;\": \"𝕄\",\r\n\t\"mopf;\": \"𝕞\",\r\n\t\"Mscr;\": \"ℳ\",\r\n\t\"mscr;\": \"𝓂\",\r\n\t\"nang;\": \"∠⃒\",\r\n\t\"napE;\": \"⩰̸\",\r\n\t\"nbsp;\": \" \",\r\n\t\"ncap;\": \"⩃\",\r\n\t\"ncup;\": \"⩂\",\r\n\t\"ngeq;\": \"≱\",\r\n\t\"nges;\": \"⩾̸\",\r\n\t\"ngtr;\": \"≯\",\r\n\t\"nGtv;\": \"≫̸\",\r\n\t\"nisd;\": \"⋺\",\r\n\t\"NJcy;\": \"Њ\",\r\n\t\"njcy;\": \"њ\",\r\n\t\"nldr;\": \"‥\",\r\n\t\"nleq;\": \"≰\",\r\n\t\"nles;\": \"⩽̸\",\r\n\t\"nLtv;\": \"≪̸\",\r\n\t\"nmid;\": \"∤\",\r\n\t\"Nopf;\": \"ℕ\",\r\n\t\"nopf;\": \"𝕟\",\r\n\t\"npar;\": \"∦\",\r\n\t\"npre;\": \"⪯̸\",\r\n\t\"nsce;\": \"⪰̸\",\r\n\t\"Nscr;\": \"𝒩\",\r\n\t\"nscr;\": \"𝓃\",\r\n\t\"nsim;\": \"≁\",\r\n\t\"nsub;\": \"⊄\",\r\n\t\"nsup;\": \"⊅\",\r\n\t\"ntgl;\": \"≹\",\r\n\t\"ntlg;\": \"≸\",\r\n\t\"nvap;\": \"≍⃒\",\r\n\t\"nvge;\": \"≥⃒\",\r\n\t\"nvgt;\": \">⃒\",\r\n\t\"nvle;\": \"≤⃒\",\r\n\t\"nvlt;\": \"<⃒\",\r\n\t\"oast;\": \"⊛\",\r\n\t\"ocir;\": \"⊚\",\r\n\tOcirc: \"Ô\",\r\n\tocirc: \"ô\",\r\n\t\"odiv;\": \"⨸\",\r\n\t\"odot;\": \"⊙\",\r\n\t\"ogon;\": \"˛\",\r\n\t\"oint;\": \"∮\",\r\n\t\"omid;\": \"⦶\",\r\n\t\"Oopf;\": \"𝕆\",\r\n\t\"oopf;\": \"𝕠\",\r\n\t\"opar;\": \"⦷\",\r\n\t\"ordf;\": \"ª\",\r\n\t\"ordm;\": \"º\",\r\n\t\"oror;\": \"⩖\",\r\n\t\"Oscr;\": \"𝒪\",\r\n\t\"oscr;\": \"ℴ\",\r\n\t\"osol;\": \"⊘\",\r\n\t\"Ouml;\": \"Ö\",\r\n\t\"ouml;\": \"ö\",\r\n\t\"para;\": \"¶\",\r\n\t\"part;\": \"∂\",\r\n\t\"perp;\": \"⊥\",\r\n\t\"phiv;\": \"ϕ\",\r\n\t\"plus;\": \"+\",\r\n\t\"Popf;\": \"ℙ\",\r\n\t\"popf;\": \"𝕡\",\r\n\tpound: \"£\",\r\n\t\"prap;\": \"⪷\",\r\n\t\"prec;\": \"≺\",\r\n\t\"prnE;\": \"⪵\",\r\n\t\"prod;\": \"∏\",\r\n\t\"prop;\": \"∝\",\r\n\t\"Pscr;\": \"𝒫\",\r\n\t\"pscr;\": \"𝓅\",\r\n\t\"qint;\": \"⨌\",\r\n\t\"Qopf;\": \"ℚ\",\r\n\t\"qopf;\": \"𝕢\",\r\n\t\"Qscr;\": \"𝒬\",\r\n\t\"qscr;\": \"𝓆\",\r\n\t\"QUOT;\": \"\\\"\",\r\n\t\"quot;\": \"\\\"\",\r\n\t\"race;\": \"∽̱\",\r\n\t\"Rang;\": \"⟫\",\r\n\t\"rang;\": \"⟩\",\r\n\traquo: \"»\",\r\n\t\"Rarr;\": \"↠\",\r\n\t\"rArr;\": \"⇒\",\r\n\t\"rarr;\": \"→\",\r\n\t\"rcub;\": \"}\",\r\n\t\"rdca;\": \"⤷\",\r\n\t\"rdsh;\": \"↳\",\r\n\t\"real;\": \"ℜ\",\r\n\t\"rect;\": \"▭\",\r\n\t\"rHar;\": \"⥤\",\r\n\t\"rhov;\": \"ϱ\",\r\n\t\"ring;\": \"˚\",\r\n\t\"Ropf;\": \"ℝ\",\r\n\t\"ropf;\": \"𝕣\",\r\n\t\"rpar;\": \")\",\r\n\t\"Rscr;\": \"ℛ\",\r\n\t\"rscr;\": \"𝓇\",\r\n\t\"rsqb;\": \"]\",\r\n\t\"rtri;\": \"▹\",\r\n\t\"scap;\": \"⪸\",\r\n\t\"scnE;\": \"⪶\",\r\n\t\"sdot;\": \"⋅\",\r\n\t\"sect;\": \"§\",\r\n\t\"semi;\": \";\",\r\n\t\"sext;\": \"✶\",\r\n\t\"SHcy;\": \"Ш\",\r\n\t\"shcy;\": \"ш\",\r\n\t\"sime;\": \"≃\",\r\n\t\"simg;\": \"⪞\",\r\n\t\"siml;\": \"⪝\",\r\n\t\"smid;\": \"∣\",\r\n\t\"smte;\": \"⪬\",\r\n\t\"solb;\": \"⧄\",\r\n\t\"Sopf;\": \"𝕊\",\r\n\t\"sopf;\": \"𝕤\",\r\n\t\"spar;\": \"∥\",\r\n\t\"Sqrt;\": \"√\",\r\n\t\"squf;\": \"▪\",\r\n\t\"Sscr;\": \"𝒮\",\r\n\t\"sscr;\": \"𝓈\",\r\n\t\"Star;\": \"⋆\",\r\n\t\"star;\": \"☆\",\r\n\t\"subE;\": \"⫅\",\r\n\t\"sube;\": \"⊆\",\r\n\t\"succ;\": \"≻\",\r\n\t\"sung;\": \"♪\",\r\n\t\"sup1;\": \"¹\",\r\n\t\"sup2;\": \"²\",\r\n\t\"sup3;\": \"³\",\r\n\t\"supE;\": \"⫆\",\r\n\t\"supe;\": \"⊇\",\r\n\tszlig: \"ß\",\r\n\t\"tbrk;\": \"⎴\",\r\n\t\"tdot;\": \"⃛\",\r\n\tTHORN: \"Þ\",\r\n\tthorn: \"þ\",\r\n\ttimes: \"×\",\r\n\t\"tint;\": \"∭\",\r\n\t\"toea;\": \"⤨\",\r\n\t\"Topf;\": \"𝕋\",\r\n\t\"topf;\": \"𝕥\",\r\n\t\"tosa;\": \"⤩\",\r\n\t\"trie;\": \"≜\",\r\n\t\"Tscr;\": \"𝒯\",\r\n\t\"tscr;\": \"𝓉\",\r\n\t\"TScy;\": \"Ц\",\r\n\t\"tscy;\": \"ц\",\r\n\t\"Uarr;\": \"↟\",\r\n\t\"uArr;\": \"⇑\",\r\n\t\"uarr;\": \"↑\",\r\n\tUcirc: \"Û\",\r\n\tucirc: \"û\",\r\n\t\"uHar;\": \"⥣\",\r\n\t\"Uopf;\": \"𝕌\",\r\n\t\"uopf;\": \"𝕦\",\r\n\t\"Upsi;\": \"ϒ\",\r\n\t\"upsi;\": \"υ\",\r\n\t\"Uscr;\": \"𝒰\",\r\n\t\"uscr;\": \"𝓊\",\r\n\t\"utri;\": \"▵\",\r\n\t\"Uuml;\": \"Ü\",\r\n\t\"uuml;\": \"ü\",\r\n\t\"vArr;\": \"⇕\",\r\n\t\"varr;\": \"↕\",\r\n\t\"Vbar;\": \"⫫\",\r\n\t\"vBar;\": \"⫨\",\r\n\t\"Vert;\": \"‖\",\r\n\t\"vert;\": \"|\",\r\n\t\"Vopf;\": \"𝕍\",\r\n\t\"vopf;\": \"𝕧\",\r\n\t\"Vscr;\": \"𝒱\",\r\n\t\"vscr;\": \"𝓋\",\r\n\t\"Wopf;\": \"𝕎\",\r\n\t\"wopf;\": \"𝕨\",\r\n\t\"Wscr;\": \"𝒲\",\r\n\t\"wscr;\": \"𝓌\",\r\n\t\"xcap;\": \"⋂\",\r\n\t\"xcup;\": \"⋃\",\r\n\t\"xmap;\": \"⟼\",\r\n\t\"xnis;\": \"⋻\",\r\n\t\"Xopf;\": \"𝕏\",\r\n\t\"xopf;\": \"𝕩\",\r\n\t\"Xscr;\": \"𝒳\",\r\n\t\"xscr;\": \"𝓍\",\r\n\t\"xvee;\": \"⋁\",\r\n\t\"YAcy;\": \"Я\",\r\n\t\"yacy;\": \"я\",\r\n\t\"YIcy;\": \"Ї\",\r\n\t\"yicy;\": \"ї\",\r\n\t\"Yopf;\": \"𝕐\",\r\n\t\"yopf;\": \"𝕪\",\r\n\t\"Yscr;\": \"𝒴\",\r\n\t\"yscr;\": \"𝓎\",\r\n\t\"YUcy;\": \"Ю\",\r\n\t\"yucy;\": \"ю\",\r\n\t\"Yuml;\": \"Ÿ\",\r\n\t\"yuml;\": \"ÿ\",\r\n\t\"Zdot;\": \"Ż\",\r\n\t\"zdot;\": \"ż\",\r\n\t\"Zeta;\": \"Ζ\",\r\n\t\"zeta;\": \"ζ\",\r\n\t\"ZHcy;\": \"Ж\",\r\n\t\"zhcy;\": \"ж\",\r\n\t\"Zopf;\": \"ℤ\",\r\n\t\"zopf;\": \"𝕫\",\r\n\t\"Zscr;\": \"𝒵\",\r\n\t\"zscr;\": \"𝓏\",\r\n\t\"zwnj;\": \"‌\",\r\n\tAacute: \"Á\",\r\n\taacute: \"á\",\r\n\t\"Acirc;\": \"Â\",\r\n\t\"acirc;\": \"â\",\r\n\t\"acute;\": \"´\",\r\n\t\"AElig;\": \"Æ\",\r\n\t\"aelig;\": \"æ\",\r\n\tAgrave: \"À\",\r\n\tagrave: \"à\",\r\n\t\"aleph;\": \"ℵ\",\r\n\t\"Alpha;\": \"Α\",\r\n\t\"alpha;\": \"α\",\r\n\t\"Amacr;\": \"Ā\",\r\n\t\"amacr;\": \"ā\",\r\n\t\"amalg;\": \"⨿\",\r\n\t\"angle;\": \"∠\",\r\n\t\"angrt;\": \"∟\",\r\n\t\"angst;\": \"Å\",\r\n\t\"Aogon;\": \"Ą\",\r\n\t\"aogon;\": \"ą\",\r\n\t\"Aring;\": \"Å\",\r\n\t\"aring;\": \"å\",\r\n\t\"asymp;\": \"≈\",\r\n\tAtilde: \"Ã\",\r\n\tatilde: \"ã\",\r\n\t\"awint;\": \"⨑\",\r\n\t\"bcong;\": \"≌\",\r\n\t\"bdquo;\": \"„\",\r\n\t\"bepsi;\": \"϶\",\r\n\t\"blank;\": \"␣\",\r\n\t\"blk12;\": \"▒\",\r\n\t\"blk14;\": \"░\",\r\n\t\"blk34;\": \"▓\",\r\n\t\"block;\": \"█\",\r\n\t\"boxDL;\": \"╗\",\r\n\t\"boxDl;\": \"╖\",\r\n\t\"boxdL;\": \"╕\",\r\n\t\"boxdl;\": \"┐\",\r\n\t\"boxDR;\": \"╔\",\r\n\t\"boxDr;\": \"╓\",\r\n\t\"boxdR;\": \"╒\",\r\n\t\"boxdr;\": \"┌\",\r\n\t\"boxHD;\": \"╦\",\r\n\t\"boxHd;\": \"╤\",\r\n\t\"boxhD;\": \"╥\",\r\n\t\"boxhd;\": \"┬\",\r\n\t\"boxHU;\": \"╩\",\r\n\t\"boxHu;\": \"╧\",\r\n\t\"boxhU;\": \"╨\",\r\n\t\"boxhu;\": \"┴\",\r\n\t\"boxUL;\": \"╝\",\r\n\t\"boxUl;\": \"╜\",\r\n\t\"boxuL;\": \"╛\",\r\n\t\"boxul;\": \"┘\",\r\n\t\"boxUR;\": \"╚\",\r\n\t\"boxUr;\": \"╙\",\r\n\t\"boxuR;\": \"╘\",\r\n\t\"boxur;\": \"└\",\r\n\t\"boxVH;\": \"╬\",\r\n\t\"boxVh;\": \"╫\",\r\n\t\"boxvH;\": \"╪\",\r\n\t\"boxvh;\": \"┼\",\r\n\t\"boxVL;\": \"╣\",\r\n\t\"boxVl;\": \"╢\",\r\n\t\"boxvL;\": \"╡\",\r\n\t\"boxvl;\": \"┤\",\r\n\t\"boxVR;\": \"╠\",\r\n\t\"boxVr;\": \"╟\",\r\n\t\"boxvR;\": \"╞\",\r\n\t\"boxvr;\": \"├\",\r\n\t\"Breve;\": \"˘\",\r\n\t\"breve;\": \"˘\",\r\n\tbrvbar: \"¦\",\r\n\t\"bsemi;\": \"⁏\",\r\n\t\"bsime;\": \"⋍\",\r\n\t\"bsolb;\": \"⧅\",\r\n\t\"bumpE;\": \"⪮\",\r\n\t\"bumpe;\": \"≏\",\r\n\t\"caret;\": \"⁁\",\r\n\t\"caron;\": \"ˇ\",\r\n\t\"ccaps;\": \"⩍\",\r\n\tCcedil: \"Ç\",\r\n\tccedil: \"ç\",\r\n\t\"Ccirc;\": \"Ĉ\",\r\n\t\"ccirc;\": \"ĉ\",\r\n\t\"ccups;\": \"⩌\",\r\n\t\"cedil;\": \"¸\",\r\n\t\"check;\": \"✓\",\r\n\t\"clubs;\": \"♣\",\r\n\t\"Colon;\": \"∷\",\r\n\t\"colon;\": \":\",\r\n\t\"comma;\": \",\",\r\n\t\"crarr;\": \"↵\",\r\n\t\"Cross;\": \"⨯\",\r\n\t\"cross;\": \"✗\",\r\n\t\"csube;\": \"⫑\",\r\n\t\"csupe;\": \"⫒\",\r\n\t\"ctdot;\": \"⋯\",\r\n\t\"cuepr;\": \"⋞\",\r\n\t\"cuesc;\": \"⋟\",\r\n\t\"cupor;\": \"⩅\",\r\n\tcurren: \"¤\",\r\n\t\"cuvee;\": \"⋎\",\r\n\t\"cuwed;\": \"⋏\",\r\n\t\"cwint;\": \"∱\",\r\n\t\"Dashv;\": \"⫤\",\r\n\t\"dashv;\": \"⊣\",\r\n\t\"dblac;\": \"˝\",\r\n\t\"ddarr;\": \"⇊\",\r\n\t\"Delta;\": \"Δ\",\r\n\t\"delta;\": \"δ\",\r\n\t\"dharl;\": \"⇃\",\r\n\t\"dharr;\": \"⇂\",\r\n\t\"diams;\": \"♦\",\r\n\t\"disin;\": \"⋲\",\r\n\tdivide: \"÷\",\r\n\t\"doteq;\": \"≐\",\r\n\t\"dtdot;\": \"⋱\",\r\n\t\"dtrif;\": \"▾\",\r\n\t\"duarr;\": \"⇵\",\r\n\t\"duhar;\": \"⥯\",\r\n\tEacute: \"É\",\r\n\teacute: \"é\",\r\n\t\"Ecirc;\": \"Ê\",\r\n\t\"ecirc;\": \"ê\",\r\n\t\"eDDot;\": \"⩷\",\r\n\t\"efDot;\": \"≒\",\r\n\tEgrave: \"È\",\r\n\tegrave: \"è\",\r\n\t\"Emacr;\": \"Ē\",\r\n\t\"emacr;\": \"ē\",\r\n\t\"empty;\": \"∅\",\r\n\t\"Eogon;\": \"Ę\",\r\n\t\"eogon;\": \"ę\",\r\n\t\"eplus;\": \"⩱\",\r\n\t\"epsiv;\": \"ϵ\",\r\n\t\"eqsim;\": \"≂\",\r\n\t\"Equal;\": \"⩵\",\r\n\t\"equiv;\": \"≡\",\r\n\t\"erarr;\": \"⥱\",\r\n\t\"erDot;\": \"≓\",\r\n\t\"esdot;\": \"≐\",\r\n\t\"exist;\": \"∃\",\r\n\t\"fflig;\": \"ﬀ\",\r\n\t\"filig;\": \"ﬁ\",\r\n\t\"fjlig;\": \"fj\",\r\n\t\"fllig;\": \"ﬂ\",\r\n\t\"fltns;\": \"▱\",\r\n\t\"forkv;\": \"⫙\",\r\n\tfrac12: \"½\",\r\n\tfrac14: \"¼\",\r\n\tfrac34: \"¾\",\r\n\t\"frasl;\": \"⁄\",\r\n\t\"frown;\": \"⌢\",\r\n\t\"Gamma;\": \"Γ\",\r\n\t\"gamma;\": \"γ\",\r\n\t\"Gcirc;\": \"Ĝ\",\r\n\t\"gcirc;\": \"ĝ\",\r\n\t\"gescc;\": \"⪩\",\r\n\t\"gimel;\": \"ℷ\",\r\n\t\"gneqq;\": \"≩\",\r\n\t\"gnsim;\": \"⋧\",\r\n\t\"grave;\": \"`\",\r\n\t\"gsime;\": \"⪎\",\r\n\t\"gsiml;\": \"⪐\",\r\n\t\"gtcir;\": \"⩺\",\r\n\t\"gtdot;\": \"⋗\",\r\n\t\"Hacek;\": \"ˇ\",\r\n\t\"harrw;\": \"↭\",\r\n\t\"Hcirc;\": \"Ĥ\",\r\n\t\"hcirc;\": \"ĥ\",\r\n\t\"hoarr;\": \"⇿\",\r\n\tIacute: \"Í\",\r\n\tiacute: \"í\",\r\n\t\"Icirc;\": \"Î\",\r\n\t\"icirc;\": \"î\",\r\n\t\"iexcl;\": \"¡\",\r\n\tIgrave: \"Ì\",\r\n\tigrave: \"ì\",\r\n\t\"iiint;\": \"∭\",\r\n\t\"iiota;\": \"℩\",\r\n\t\"IJlig;\": \"Ĳ\",\r\n\t\"ijlig;\": \"ĳ\",\r\n\t\"Imacr;\": \"Ī\",\r\n\t\"imacr;\": \"ī\",\r\n\t\"image;\": \"ℑ\",\r\n\t\"imath;\": \"ı\",\r\n\t\"imped;\": \"Ƶ\",\r\n\t\"infin;\": \"∞\",\r\n\t\"Iogon;\": \"Į\",\r\n\t\"iogon;\": \"į\",\r\n\t\"iprod;\": \"⨼\",\r\n\tiquest: \"¿\",\r\n\t\"isinE;\": \"⋹\",\r\n\t\"isins;\": \"⋴\",\r\n\t\"isinv;\": \"∈\",\r\n\t\"Iukcy;\": \"І\",\r\n\t\"iukcy;\": \"і\",\r\n\t\"Jcirc;\": \"Ĵ\",\r\n\t\"jcirc;\": \"ĵ\",\r\n\t\"jmath;\": \"ȷ\",\r\n\t\"Jukcy;\": \"Є\",\r\n\t\"jukcy;\": \"є\",\r\n\t\"Kappa;\": \"Κ\",\r\n\t\"kappa;\": \"κ\",\r\n\t\"lAarr;\": \"⇚\",\r\n\t\"langd;\": \"⦑\",\r\n\t\"laquo;\": \"«\",\r\n\t\"larrb;\": \"⇤\",\r\n\t\"lates;\": \"⪭︀\",\r\n\t\"lBarr;\": \"⤎\",\r\n\t\"lbarr;\": \"⤌\",\r\n\t\"lbbrk;\": \"❲\",\r\n\t\"lbrke;\": \"⦋\",\r\n\t\"lceil;\": \"⌈\",\r\n\t\"ldquo;\": \"“\",\r\n\t\"lescc;\": \"⪨\",\r\n\t\"lhard;\": \"↽\",\r\n\t\"lharu;\": \"↼\",\r\n\t\"lhblk;\": \"▄\",\r\n\t\"llarr;\": \"⇇\",\r\n\t\"lltri;\": \"◺\",\r\n\t\"lneqq;\": \"≨\",\r\n\t\"lnsim;\": \"⋦\",\r\n\t\"loang;\": \"⟬\",\r\n\t\"loarr;\": \"⇽\",\r\n\t\"lobrk;\": \"⟦\",\r\n\t\"lopar;\": \"⦅\",\r\n\t\"lrarr;\": \"⇆\",\r\n\t\"lrhar;\": \"⇋\",\r\n\t\"lrtri;\": \"⊿\",\r\n\t\"lsime;\": \"⪍\",\r\n\t\"lsimg;\": \"⪏\",\r\n\t\"lsquo;\": \"‘\",\r\n\t\"ltcir;\": \"⩹\",\r\n\t\"ltdot;\": \"⋖\",\r\n\t\"ltrie;\": \"⊴\",\r\n\t\"ltrif;\": \"◂\",\r\n\t\"mdash;\": \"—\",\r\n\t\"mDDot;\": \"∺\",\r\n\t\"micro;\": \"µ\",\r\n\tmiddot: \"·\",\r\n\t\"minus;\": \"−\",\r\n\t\"mumap;\": \"⊸\",\r\n\t\"nabla;\": \"∇\",\r\n\t\"napid;\": \"≋̸\",\r\n\t\"napos;\": \"ŉ\",\r\n\t\"natur;\": \"♮\",\r\n\t\"nbump;\": \"≎̸\",\r\n\t\"ncong;\": \"≇\",\r\n\t\"ndash;\": \"–\",\r\n\t\"neArr;\": \"⇗\",\r\n\t\"nearr;\": \"↗\",\r\n\t\"nedot;\": \"≐̸\",\r\n\t\"nesim;\": \"≂̸\",\r\n\t\"ngeqq;\": \"≧̸\",\r\n\t\"ngsim;\": \"≵\",\r\n\t\"nhArr;\": \"⇎\",\r\n\t\"nharr;\": \"↮\",\r\n\t\"nhpar;\": \"⫲\",\r\n\t\"nlArr;\": \"⇍\",\r\n\t\"nlarr;\": \"↚\",\r\n\t\"nleqq;\": \"≦̸\",\r\n\t\"nless;\": \"≮\",\r\n\t\"nlsim;\": \"≴\",\r\n\t\"nltri;\": \"⋪\",\r\n\t\"notin;\": \"∉\",\r\n\t\"notni;\": \"∌\",\r\n\t\"npart;\": \"∂̸\",\r\n\t\"nprec;\": \"⊀\",\r\n\t\"nrArr;\": \"⇏\",\r\n\t\"nrarr;\": \"↛\",\r\n\t\"nrtri;\": \"⋫\",\r\n\t\"nsime;\": \"≄\",\r\n\t\"nsmid;\": \"∤\",\r\n\t\"nspar;\": \"∦\",\r\n\t\"nsubE;\": \"⫅̸\",\r\n\t\"nsube;\": \"⊈\",\r\n\t\"nsucc;\": \"⊁\",\r\n\t\"nsupE;\": \"⫆̸\",\r\n\t\"nsupe;\": \"⊉\",\r\n\tNtilde: \"Ñ\",\r\n\tntilde: \"ñ\",\r\n\t\"numsp;\": \" \",\r\n\t\"nvsim;\": \"∼⃒\",\r\n\t\"nwArr;\": \"⇖\",\r\n\t\"nwarr;\": \"↖\",\r\n\tOacute: \"Ó\",\r\n\toacute: \"ó\",\r\n\t\"Ocirc;\": \"Ô\",\r\n\t\"ocirc;\": \"ô\",\r\n\t\"odash;\": \"⊝\",\r\n\t\"OElig;\": \"Œ\",\r\n\t\"oelig;\": \"œ\",\r\n\t\"ofcir;\": \"⦿\",\r\n\tOgrave: \"Ò\",\r\n\tograve: \"ò\",\r\n\t\"ohbar;\": \"⦵\",\r\n\t\"olarr;\": \"↺\",\r\n\t\"olcir;\": \"⦾\",\r\n\t\"oline;\": \"‾\",\r\n\t\"Omacr;\": \"Ō\",\r\n\t\"omacr;\": \"ō\",\r\n\t\"Omega;\": \"Ω\",\r\n\t\"omega;\": \"ω\",\r\n\t\"operp;\": \"⦹\",\r\n\t\"oplus;\": \"⊕\",\r\n\t\"orarr;\": \"↻\",\r\n\t\"order;\": \"ℴ\",\r\n\tOslash: \"Ø\",\r\n\toslash: \"ø\",\r\n\tOtilde: \"Õ\",\r\n\totilde: \"õ\",\r\n\t\"ovbar;\": \"⌽\",\r\n\t\"parsl;\": \"⫽\",\r\n\t\"phone;\": \"☎\",\r\n\t\"plusb;\": \"⊞\",\r\n\t\"pluse;\": \"⩲\",\r\n\tplusmn: \"±\",\r\n\t\"pound;\": \"£\",\r\n\t\"prcue;\": \"≼\",\r\n\t\"Prime;\": \"″\",\r\n\t\"prime;\": \"′\",\r\n\t\"prnap;\": \"⪹\",\r\n\t\"prsim;\": \"≾\",\r\n\t\"quest;\": \"?\",\r\n\t\"rAarr;\": \"⇛\",\r\n\t\"radic;\": \"√\",\r\n\t\"rangd;\": \"⦒\",\r\n\t\"range;\": \"⦥\",\r\n\t\"raquo;\": \"»\",\r\n\t\"rarrb;\": \"⇥\",\r\n\t\"rarrc;\": \"⤳\",\r\n\t\"rarrw;\": \"↝\",\r\n\t\"ratio;\": \"∶\",\r\n\t\"RBarr;\": \"⤐\",\r\n\t\"rBarr;\": \"⤏\",\r\n\t\"rbarr;\": \"⤍\",\r\n\t\"rbbrk;\": \"❳\",\r\n\t\"rbrke;\": \"⦌\",\r\n\t\"rceil;\": \"⌉\",\r\n\t\"rdquo;\": \"”\",\r\n\t\"reals;\": \"ℝ\",\r\n\t\"rhard;\": \"⇁\",\r\n\t\"rharu;\": \"⇀\",\r\n\t\"rlarr;\": \"⇄\",\r\n\t\"rlhar;\": \"⇌\",\r\n\t\"rnmid;\": \"⫮\",\r\n\t\"roang;\": \"⟭\",\r\n\t\"roarr;\": \"⇾\",\r\n\t\"robrk;\": \"⟧\",\r\n\t\"ropar;\": \"⦆\",\r\n\t\"rrarr;\": \"⇉\",\r\n\t\"rsquo;\": \"’\",\r\n\t\"rtrie;\": \"⊵\",\r\n\t\"rtrif;\": \"▸\",\r\n\t\"sbquo;\": \"‚\",\r\n\t\"sccue;\": \"≽\",\r\n\t\"Scirc;\": \"Ŝ\",\r\n\t\"scirc;\": \"ŝ\",\r\n\t\"scnap;\": \"⪺\",\r\n\t\"scsim;\": \"≿\",\r\n\t\"sdotb;\": \"⊡\",\r\n\t\"sdote;\": \"⩦\",\r\n\t\"seArr;\": \"⇘\",\r\n\t\"searr;\": \"↘\",\r\n\t\"setmn;\": \"∖\",\r\n\t\"sharp;\": \"♯\",\r\n\t\"Sigma;\": \"Σ\",\r\n\t\"sigma;\": \"σ\",\r\n\t\"simeq;\": \"≃\",\r\n\t\"simgE;\": \"⪠\",\r\n\t\"simlE;\": \"⪟\",\r\n\t\"simne;\": \"≆\",\r\n\t\"slarr;\": \"←\",\r\n\t\"smile;\": \"⌣\",\r\n\t\"smtes;\": \"⪬︀\",\r\n\t\"sqcap;\": \"⊓\",\r\n\t\"sqcup;\": \"⊔\",\r\n\t\"sqsub;\": \"⊏\",\r\n\t\"sqsup;\": \"⊐\",\r\n\t\"srarr;\": \"→\",\r\n\t\"starf;\": \"★\",\r\n\t\"strns;\": \"¯\",\r\n\t\"subnE;\": \"⫋\",\r\n\t\"subne;\": \"⊊\",\r\n\t\"supnE;\": \"⫌\",\r\n\t\"supne;\": \"⊋\",\r\n\t\"swArr;\": \"⇙\",\r\n\t\"swarr;\": \"↙\",\r\n\t\"szlig;\": \"ß\",\r\n\t\"Theta;\": \"Θ\",\r\n\t\"theta;\": \"θ\",\r\n\t\"thkap;\": \"≈\",\r\n\t\"THORN;\": \"Þ\",\r\n\t\"thorn;\": \"þ\",\r\n\t\"Tilde;\": \"∼\",\r\n\t\"tilde;\": \"˜\",\r\n\t\"times;\": \"×\",\r\n\t\"TRADE;\": \"™\",\r\n\t\"trade;\": \"™\",\r\n\t\"trisb;\": \"⧍\",\r\n\t\"TSHcy;\": \"Ћ\",\r\n\t\"tshcy;\": \"ћ\",\r\n\t\"twixt;\": \"≬\",\r\n\tUacute: \"Ú\",\r\n\tuacute: \"ú\",\r\n\t\"Ubrcy;\": \"Ў\",\r\n\t\"ubrcy;\": \"ў\",\r\n\t\"Ucirc;\": \"Û\",\r\n\t\"ucirc;\": \"û\",\r\n\t\"udarr;\": \"⇅\",\r\n\t\"udhar;\": \"⥮\",\r\n\tUgrave: \"Ù\",\r\n\tugrave: \"ù\",\r\n\t\"uharl;\": \"↿\",\r\n\t\"uharr;\": \"↾\",\r\n\t\"uhblk;\": \"▀\",\r\n\t\"ultri;\": \"◸\",\r\n\t\"Umacr;\": \"Ū\",\r\n\t\"umacr;\": \"ū\",\r\n\t\"Union;\": \"⋃\",\r\n\t\"Uogon;\": \"Ų\",\r\n\t\"uogon;\": \"ų\",\r\n\t\"uplus;\": \"⊎\",\r\n\t\"upsih;\": \"ϒ\",\r\n\t\"UpTee;\": \"⊥\",\r\n\t\"Uring;\": \"Ů\",\r\n\t\"uring;\": \"ů\",\r\n\t\"urtri;\": \"◹\",\r\n\t\"utdot;\": \"⋰\",\r\n\t\"utrif;\": \"▴\",\r\n\t\"uuarr;\": \"⇈\",\r\n\t\"varpi;\": \"ϖ\",\r\n\t\"vBarv;\": \"⫩\",\r\n\t\"VDash;\": \"⊫\",\r\n\t\"Vdash;\": \"⊩\",\r\n\t\"vDash;\": \"⊨\",\r\n\t\"vdash;\": \"⊢\",\r\n\t\"veeeq;\": \"≚\",\r\n\t\"vltri;\": \"⊲\",\r\n\t\"vnsub;\": \"⊂⃒\",\r\n\t\"vnsup;\": \"⊃⃒\",\r\n\t\"vprop;\": \"∝\",\r\n\t\"vrtri;\": \"⊳\",\r\n\t\"Wcirc;\": \"Ŵ\",\r\n\t\"wcirc;\": \"ŵ\",\r\n\t\"Wedge;\": \"⋀\",\r\n\t\"wedge;\": \"∧\",\r\n\t\"xcirc;\": \"◯\",\r\n\t\"xdtri;\": \"▽\",\r\n\t\"xhArr;\": \"⟺\",\r\n\t\"xharr;\": \"⟷\",\r\n\t\"xlArr;\": \"⟸\",\r\n\t\"xlarr;\": \"⟵\",\r\n\t\"xodot;\": \"⨀\",\r\n\t\"xrArr;\": \"⟹\",\r\n\t\"xrarr;\": \"⟶\",\r\n\t\"xutri;\": \"△\",\r\n\tYacute: \"Ý\",\r\n\tyacute: \"ý\",\r\n\t\"Ycirc;\": \"Ŷ\",\r\n\t\"ycirc;\": \"ŷ\",\r\n\t\"Aacute;\": \"Á\",\r\n\t\"aacute;\": \"á\",\r\n\t\"Abreve;\": \"Ă\",\r\n\t\"abreve;\": \"ă\",\r\n\t\"Agrave;\": \"À\",\r\n\t\"agrave;\": \"à\",\r\n\t\"andand;\": \"⩕\",\r\n\t\"angmsd;\": \"∡\",\r\n\t\"angsph;\": \"∢\",\r\n\t\"apacir;\": \"⩯\",\r\n\t\"approx;\": \"≈\",\r\n\t\"Assign;\": \"≔\",\r\n\t\"Atilde;\": \"Ã\",\r\n\t\"atilde;\": \"ã\",\r\n\t\"barvee;\": \"⊽\",\r\n\t\"Barwed;\": \"⌆\",\r\n\t\"barwed;\": \"⌅\",\r\n\t\"becaus;\": \"∵\",\r\n\t\"bernou;\": \"ℬ\",\r\n\t\"bigcap;\": \"⋂\",\r\n\t\"bigcup;\": \"⋃\",\r\n\t\"bigvee;\": \"⋁\",\r\n\t\"bkarow;\": \"⤍\",\r\n\t\"bottom;\": \"⊥\",\r\n\t\"bowtie;\": \"⋈\",\r\n\t\"boxbox;\": \"⧉\",\r\n\t\"bprime;\": \"‵\",\r\n\t\"brvbar;\": \"¦\",\r\n\t\"bullet;\": \"•\",\r\n\t\"Bumpeq;\": \"≎\",\r\n\t\"bumpeq;\": \"≏\",\r\n\t\"Cacute;\": \"Ć\",\r\n\t\"cacute;\": \"ć\",\r\n\t\"capand;\": \"⩄\",\r\n\t\"capcap;\": \"⩋\",\r\n\t\"capcup;\": \"⩇\",\r\n\t\"capdot;\": \"⩀\",\r\n\t\"Ccaron;\": \"Č\",\r\n\t\"ccaron;\": \"č\",\r\n\t\"Ccedil;\": \"Ç\",\r\n\t\"ccedil;\": \"ç\",\r\n\t\"circeq;\": \"≗\",\r\n\t\"cirmid;\": \"⫯\",\r\n\t\"Colone;\": \"⩴\",\r\n\t\"colone;\": \"≔\",\r\n\t\"commat;\": \"@\",\r\n\t\"compfn;\": \"∘\",\r\n\t\"Conint;\": \"∯\",\r\n\t\"conint;\": \"∮\",\r\n\t\"coprod;\": \"∐\",\r\n\t\"copysr;\": \"℗\",\r\n\t\"cularr;\": \"↶\",\r\n\t\"CupCap;\": \"≍\",\r\n\t\"cupcap;\": \"⩆\",\r\n\t\"cupcup;\": \"⩊\",\r\n\t\"cupdot;\": \"⊍\",\r\n\t\"curarr;\": \"↷\",\r\n\t\"curren;\": \"¤\",\r\n\t\"cylcty;\": \"⌭\",\r\n\t\"Dagger;\": \"‡\",\r\n\t\"dagger;\": \"†\",\r\n\t\"daleth;\": \"ℸ\",\r\n\t\"Dcaron;\": \"Ď\",\r\n\t\"dcaron;\": \"ď\",\r\n\t\"dfisht;\": \"⥿\",\r\n\t\"divide;\": \"÷\",\r\n\t\"divonx;\": \"⋇\",\r\n\t\"dlcorn;\": \"⌞\",\r\n\t\"dlcrop;\": \"⌍\",\r\n\t\"dollar;\": \"$\",\r\n\t\"DotDot;\": \"⃜\",\r\n\t\"drcorn;\": \"⌟\",\r\n\t\"drcrop;\": \"⌌\",\r\n\t\"Dstrok;\": \"Đ\",\r\n\t\"dstrok;\": \"đ\",\r\n\t\"Eacute;\": \"É\",\r\n\t\"eacute;\": \"é\",\r\n\t\"easter;\": \"⩮\",\r\n\t\"Ecaron;\": \"Ě\",\r\n\t\"ecaron;\": \"ě\",\r\n\t\"ecolon;\": \"≕\",\r\n\t\"Egrave;\": \"È\",\r\n\t\"egrave;\": \"è\",\r\n\t\"egsdot;\": \"⪘\",\r\n\t\"elsdot;\": \"⪗\",\r\n\t\"emptyv;\": \"∅\",\r\n\t\"emsp13;\": \" \",\r\n\t\"emsp14;\": \" \",\r\n\t\"eparsl;\": \"⧣\",\r\n\t\"eqcirc;\": \"≖\",\r\n\t\"equals;\": \"=\",\r\n\t\"equest;\": \"≟\",\r\n\t\"Exists;\": \"∃\",\r\n\t\"female;\": \"♀\",\r\n\t\"ffilig;\": \"ﬃ\",\r\n\t\"ffllig;\": \"ﬄ\",\r\n\t\"ForAll;\": \"∀\",\r\n\t\"forall;\": \"∀\",\r\n\t\"frac12;\": \"½\",\r\n\t\"frac13;\": \"⅓\",\r\n\t\"frac14;\": \"¼\",\r\n\t\"frac15;\": \"⅕\",\r\n\t\"frac16;\": \"⅙\",\r\n\t\"frac18;\": \"⅛\",\r\n\t\"frac23;\": \"⅔\",\r\n\t\"frac25;\": \"⅖\",\r\n\t\"frac34;\": \"¾\",\r\n\t\"frac35;\": \"⅗\",\r\n\t\"frac38;\": \"⅜\",\r\n\t\"frac45;\": \"⅘\",\r\n\t\"frac56;\": \"⅚\",\r\n\t\"frac58;\": \"⅝\",\r\n\t\"frac78;\": \"⅞\",\r\n\t\"gacute;\": \"ǵ\",\r\n\t\"Gammad;\": \"Ϝ\",\r\n\t\"gammad;\": \"ϝ\",\r\n\t\"Gbreve;\": \"Ğ\",\r\n\t\"gbreve;\": \"ğ\",\r\n\t\"Gcedil;\": \"Ģ\",\r\n\t\"gesdot;\": \"⪀\",\r\n\t\"gesles;\": \"⪔\",\r\n\t\"gtlPar;\": \"⦕\",\r\n\t\"gtrarr;\": \"⥸\",\r\n\t\"gtrdot;\": \"⋗\",\r\n\t\"gtrsim;\": \"≳\",\r\n\t\"hairsp;\": \" \",\r\n\t\"hamilt;\": \"ℋ\",\r\n\t\"HARDcy;\": \"Ъ\",\r\n\t\"hardcy;\": \"ъ\",\r\n\t\"hearts;\": \"♥\",\r\n\t\"hellip;\": \"…\",\r\n\t\"hercon;\": \"⊹\",\r\n\t\"homtht;\": \"∻\",\r\n\t\"horbar;\": \"―\",\r\n\t\"hslash;\": \"ℏ\",\r\n\t\"Hstrok;\": \"Ħ\",\r\n\t\"hstrok;\": \"ħ\",\r\n\t\"hybull;\": \"⁃\",\r\n\t\"hyphen;\": \"‐\",\r\n\t\"Iacute;\": \"Í\",\r\n\t\"iacute;\": \"í\",\r\n\t\"Igrave;\": \"Ì\",\r\n\t\"igrave;\": \"ì\",\r\n\t\"iiiint;\": \"⨌\",\r\n\t\"iinfin;\": \"⧜\",\r\n\t\"incare;\": \"℅\",\r\n\t\"inodot;\": \"ı\",\r\n\t\"intcal;\": \"⊺\",\r\n\t\"iquest;\": \"¿\",\r\n\t\"isinsv;\": \"⋳\",\r\n\t\"Itilde;\": \"Ĩ\",\r\n\t\"itilde;\": \"ĩ\",\r\n\t\"Jsercy;\": \"Ј\",\r\n\t\"jsercy;\": \"ј\",\r\n\t\"kappav;\": \"ϰ\",\r\n\t\"Kcedil;\": \"Ķ\",\r\n\t\"kcedil;\": \"ķ\",\r\n\t\"kgreen;\": \"ĸ\",\r\n\t\"Lacute;\": \"Ĺ\",\r\n\t\"lacute;\": \"ĺ\",\r\n\t\"lagran;\": \"ℒ\",\r\n\t\"Lambda;\": \"Λ\",\r\n\t\"lambda;\": \"λ\",\r\n\t\"langle;\": \"⟨\",\r\n\t\"larrfs;\": \"⤝\",\r\n\t\"larrhk;\": \"↩\",\r\n\t\"larrlp;\": \"↫\",\r\n\t\"larrpl;\": \"⤹\",\r\n\t\"larrtl;\": \"↢\",\r\n\t\"lAtail;\": \"⤛\",\r\n\t\"latail;\": \"⤙\",\r\n\t\"lbrace;\": \"{\",\r\n\t\"lbrack;\": \"[\",\r\n\t\"Lcaron;\": \"Ľ\",\r\n\t\"lcaron;\": \"ľ\",\r\n\t\"Lcedil;\": \"Ļ\",\r\n\t\"lcedil;\": \"ļ\",\r\n\t\"ldquor;\": \"„\",\r\n\t\"lesdot;\": \"⩿\",\r\n\t\"lesges;\": \"⪓\",\r\n\t\"lfisht;\": \"⥼\",\r\n\t\"lfloor;\": \"⌊\",\r\n\t\"lharul;\": \"⥪\",\r\n\t\"llhard;\": \"⥫\",\r\n\t\"Lmidot;\": \"Ŀ\",\r\n\t\"lmidot;\": \"ŀ\",\r\n\t\"lmoust;\": \"⎰\",\r\n\t\"loplus;\": \"⨭\",\r\n\t\"lowast;\": \"∗\",\r\n\t\"lowbar;\": \"_\",\r\n\t\"lparlt;\": \"⦓\",\r\n\t\"lrhard;\": \"⥭\",\r\n\t\"lsaquo;\": \"‹\",\r\n\t\"lsquor;\": \"‚\",\r\n\t\"Lstrok;\": \"Ł\",\r\n\t\"lstrok;\": \"ł\",\r\n\t\"lthree;\": \"⋋\",\r\n\t\"ltimes;\": \"⋉\",\r\n\t\"ltlarr;\": \"⥶\",\r\n\t\"ltrPar;\": \"⦖\",\r\n\t\"mapsto;\": \"↦\",\r\n\t\"marker;\": \"▮\",\r\n\t\"mcomma;\": \"⨩\",\r\n\t\"midast;\": \"*\",\r\n\t\"midcir;\": \"⫰\",\r\n\t\"middot;\": \"·\",\r\n\t\"minusb;\": \"⊟\",\r\n\t\"minusd;\": \"∸\",\r\n\t\"mnplus;\": \"∓\",\r\n\t\"models;\": \"⊧\",\r\n\t\"mstpos;\": \"∾\",\r\n\t\"Nacute;\": \"Ń\",\r\n\t\"nacute;\": \"ń\",\r\n\t\"nbumpe;\": \"≏̸\",\r\n\t\"Ncaron;\": \"Ň\",\r\n\t\"ncaron;\": \"ň\",\r\n\t\"Ncedil;\": \"Ņ\",\r\n\t\"ncedil;\": \"ņ\",\r\n\t\"nearhk;\": \"⤤\",\r\n\t\"nequiv;\": \"≢\",\r\n\t\"nesear;\": \"⤨\",\r\n\t\"nexist;\": \"∄\",\r\n\t\"nltrie;\": \"⋬\",\r\n\t\"notinE;\": \"⋹̸\",\r\n\t\"nparsl;\": \"⫽⃥\",\r\n\t\"nprcue;\": \"⋠\",\r\n\t\"nrarrc;\": \"⤳̸\",\r\n\t\"nrarrw;\": \"↝̸\",\r\n\t\"nrtrie;\": \"⋭\",\r\n\t\"nsccue;\": \"⋡\",\r\n\t\"nsimeq;\": \"≄\",\r\n\t\"Ntilde;\": \"Ñ\",\r\n\t\"ntilde;\": \"ñ\",\r\n\t\"numero;\": \"№\",\r\n\t\"nVDash;\": \"⊯\",\r\n\t\"nVdash;\": \"⊮\",\r\n\t\"nvDash;\": \"⊭\",\r\n\t\"nvdash;\": \"⊬\",\r\n\t\"nvHarr;\": \"⤄\",\r\n\t\"nvlArr;\": \"⤂\",\r\n\t\"nvrArr;\": \"⤃\",\r\n\t\"nwarhk;\": \"⤣\",\r\n\t\"nwnear;\": \"⤧\",\r\n\t\"Oacute;\": \"Ó\",\r\n\t\"oacute;\": \"ó\",\r\n\t\"Odblac;\": \"Ő\",\r\n\t\"odblac;\": \"ő\",\r\n\t\"odsold;\": \"⦼\",\r\n\t\"Ograve;\": \"Ò\",\r\n\t\"ograve;\": \"ò\",\r\n\t\"ominus;\": \"⊖\",\r\n\t\"origof;\": \"⊶\",\r\n\t\"Oslash;\": \"Ø\",\r\n\t\"oslash;\": \"ø\",\r\n\t\"Otilde;\": \"Õ\",\r\n\t\"otilde;\": \"õ\",\r\n\t\"Otimes;\": \"⨷\",\r\n\t\"otimes;\": \"⊗\",\r\n\t\"parsim;\": \"⫳\",\r\n\t\"percnt;\": \"%\",\r\n\t\"period;\": \".\",\r\n\t\"permil;\": \"‰\",\r\n\t\"phmmat;\": \"ℳ\",\r\n\t\"planck;\": \"ℏ\",\r\n\t\"plankv;\": \"ℏ\",\r\n\t\"plusdo;\": \"∔\",\r\n\t\"plusdu;\": \"⨥\",\r\n\t\"plusmn;\": \"±\",\r\n\t\"preceq;\": \"⪯\",\r\n\t\"primes;\": \"ℙ\",\r\n\t\"prnsim;\": \"⋨\",\r\n\t\"propto;\": \"∝\",\r\n\t\"prurel;\": \"⊰\",\r\n\t\"puncsp;\": \" \",\r\n\t\"qprime;\": \"⁗\",\r\n\t\"Racute;\": \"Ŕ\",\r\n\t\"racute;\": \"ŕ\",\r\n\t\"rangle;\": \"⟩\",\r\n\t\"rarrap;\": \"⥵\",\r\n\t\"rarrfs;\": \"⤞\",\r\n\t\"rarrhk;\": \"↪\",\r\n\t\"rarrlp;\": \"↬\",\r\n\t\"rarrpl;\": \"⥅\",\r\n\t\"Rarrtl;\": \"⤖\",\r\n\t\"rarrtl;\": \"↣\",\r\n\t\"rAtail;\": \"⤜\",\r\n\t\"ratail;\": \"⤚\",\r\n\t\"rbrace;\": \"}\",\r\n\t\"rbrack;\": \"]\",\r\n\t\"Rcaron;\": \"Ř\",\r\n\t\"rcaron;\": \"ř\",\r\n\t\"Rcedil;\": \"Ŗ\",\r\n\t\"rcedil;\": \"ŗ\",\r\n\t\"rdquor;\": \"”\",\r\n\t\"rfisht;\": \"⥽\",\r\n\t\"rfloor;\": \"⌋\",\r\n\t\"rharul;\": \"⥬\",\r\n\t\"rmoust;\": \"⎱\",\r\n\t\"roplus;\": \"⨮\",\r\n\t\"rpargt;\": \"⦔\",\r\n\t\"rsaquo;\": \"›\",\r\n\t\"rsquor;\": \"’\",\r\n\t\"rthree;\": \"⋌\",\r\n\t\"rtimes;\": \"⋊\",\r\n\t\"Sacute;\": \"Ś\",\r\n\t\"sacute;\": \"ś\",\r\n\t\"Scaron;\": \"Š\",\r\n\t\"scaron;\": \"š\",\r\n\t\"Scedil;\": \"Ş\",\r\n\t\"scedil;\": \"ş\",\r\n\t\"scnsim;\": \"⋩\",\r\n\t\"searhk;\": \"⤥\",\r\n\t\"seswar;\": \"⤩\",\r\n\t\"sfrown;\": \"⌢\",\r\n\t\"SHCHcy;\": \"Щ\",\r\n\t\"shchcy;\": \"щ\",\r\n\t\"sigmaf;\": \"ς\",\r\n\t\"sigmav;\": \"ς\",\r\n\t\"simdot;\": \"⩪\",\r\n\t\"smashp;\": \"⨳\",\r\n\t\"SOFTcy;\": \"Ь\",\r\n\t\"softcy;\": \"ь\",\r\n\t\"solbar;\": \"⌿\",\r\n\t\"spades;\": \"♠\",\r\n\t\"sqcaps;\": \"⊓︀\",\r\n\t\"sqcups;\": \"⊔︀\",\r\n\t\"sqsube;\": \"⊑\",\r\n\t\"sqsupe;\": \"⊒\",\r\n\t\"Square;\": \"□\",\r\n\t\"square;\": \"□\",\r\n\t\"squarf;\": \"▪\",\r\n\t\"ssetmn;\": \"∖\",\r\n\t\"ssmile;\": \"⌣\",\r\n\t\"sstarf;\": \"⋆\",\r\n\t\"subdot;\": \"⪽\",\r\n\t\"Subset;\": \"⋐\",\r\n\t\"subset;\": \"⊂\",\r\n\t\"subsim;\": \"⫇\",\r\n\t\"subsub;\": \"⫕\",\r\n\t\"subsup;\": \"⫓\",\r\n\t\"succeq;\": \"⪰\",\r\n\t\"supdot;\": \"⪾\",\r\n\t\"Supset;\": \"⋑\",\r\n\t\"supset;\": \"⊃\",\r\n\t\"supsim;\": \"⫈\",\r\n\t\"supsub;\": \"⫔\",\r\n\t\"supsup;\": \"⫖\",\r\n\t\"swarhk;\": \"⤦\",\r\n\t\"swnwar;\": \"⤪\",\r\n\t\"target;\": \"⌖\",\r\n\t\"Tcaron;\": \"Ť\",\r\n\t\"tcaron;\": \"ť\",\r\n\t\"Tcedil;\": \"Ţ\",\r\n\t\"tcedil;\": \"ţ\",\r\n\t\"telrec;\": \"⌕\",\r\n\t\"there4;\": \"∴\",\r\n\t\"thetav;\": \"ϑ\",\r\n\t\"thinsp;\": \" \",\r\n\t\"thksim;\": \"∼\",\r\n\t\"timesb;\": \"⊠\",\r\n\t\"timesd;\": \"⨰\",\r\n\t\"topbot;\": \"⌶\",\r\n\t\"topcir;\": \"⫱\",\r\n\t\"tprime;\": \"‴\",\r\n\t\"tridot;\": \"◬\",\r\n\t\"Tstrok;\": \"Ŧ\",\r\n\t\"tstrok;\": \"ŧ\",\r\n\t\"Uacute;\": \"Ú\",\r\n\t\"uacute;\": \"ú\",\r\n\t\"Ubreve;\": \"Ŭ\",\r\n\t\"ubreve;\": \"ŭ\",\r\n\t\"Udblac;\": \"Ű\",\r\n\t\"udblac;\": \"ű\",\r\n\t\"ufisht;\": \"⥾\",\r\n\t\"Ugrave;\": \"Ù\",\r\n\t\"ugrave;\": \"ù\",\r\n\t\"ulcorn;\": \"⌜\",\r\n\t\"ulcrop;\": \"⌏\",\r\n\t\"urcorn;\": \"⌝\",\r\n\t\"urcrop;\": \"⌎\",\r\n\t\"Utilde;\": \"Ũ\",\r\n\t\"utilde;\": \"ũ\",\r\n\t\"vangrt;\": \"⦜\",\r\n\t\"varphi;\": \"ϕ\",\r\n\t\"varrho;\": \"ϱ\",\r\n\t\"Vdashl;\": \"⫦\",\r\n\t\"veebar;\": \"⊻\",\r\n\t\"vellip;\": \"⋮\",\r\n\t\"Verbar;\": \"‖\",\r\n\t\"verbar;\": \"|\",\r\n\t\"vsubnE;\": \"⫋︀\",\r\n\t\"vsubne;\": \"⊊︀\",\r\n\t\"vsupnE;\": \"⫌︀\",\r\n\t\"vsupne;\": \"⊋︀\",\r\n\t\"Vvdash;\": \"⊪\",\r\n\t\"wedbar;\": \"⩟\",\r\n\t\"wedgeq;\": \"≙\",\r\n\t\"weierp;\": \"℘\",\r\n\t\"wreath;\": \"≀\",\r\n\t\"xoplus;\": \"⨁\",\r\n\t\"xotime;\": \"⨂\",\r\n\t\"xsqcup;\": \"⨆\",\r\n\t\"xuplus;\": \"⨄\",\r\n\t\"xwedge;\": \"⋀\",\r\n\t\"Yacute;\": \"Ý\",\r\n\t\"yacute;\": \"ý\",\r\n\t\"Zacute;\": \"Ź\",\r\n\t\"zacute;\": \"ź\",\r\n\t\"Zcaron;\": \"Ž\",\r\n\t\"zcaron;\": \"ž\",\r\n\t\"zeetrf;\": \"ℨ\",\r\n\t\"alefsym;\": \"ℵ\",\r\n\t\"angrtvb;\": \"⊾\",\r\n\t\"angzarr;\": \"⍼\",\r\n\t\"asympeq;\": \"≍\",\r\n\t\"backsim;\": \"∽\",\r\n\t\"Because;\": \"∵\",\r\n\t\"because;\": \"∵\",\r\n\t\"bemptyv;\": \"⦰\",\r\n\t\"between;\": \"≬\",\r\n\t\"bigcirc;\": \"◯\",\r\n\t\"bigodot;\": \"⨀\",\r\n\t\"bigstar;\": \"★\",\r\n\t\"bnequiv;\": \"≡⃥\",\r\n\t\"boxplus;\": \"⊞\",\r\n\t\"Cayleys;\": \"ℭ\",\r\n\t\"Cconint;\": \"∰\",\r\n\t\"ccupssm;\": \"⩐\",\r\n\t\"Cedilla;\": \"¸\",\r\n\t\"cemptyv;\": \"⦲\",\r\n\t\"cirscir;\": \"⧂\",\r\n\t\"coloneq;\": \"≔\",\r\n\t\"congdot;\": \"⩭\",\r\n\t\"cudarrl;\": \"⤸\",\r\n\t\"cudarrr;\": \"⤵\",\r\n\t\"cularrp;\": \"⤽\",\r\n\t\"curarrm;\": \"⤼\",\r\n\t\"dbkarow;\": \"⤏\",\r\n\t\"ddagger;\": \"‡\",\r\n\t\"ddotseq;\": \"⩷\",\r\n\t\"demptyv;\": \"⦱\",\r\n\t\"Diamond;\": \"⋄\",\r\n\t\"diamond;\": \"⋄\",\r\n\t\"digamma;\": \"ϝ\",\r\n\t\"dotplus;\": \"∔\",\r\n\t\"DownTee;\": \"⊤\",\r\n\t\"dwangle;\": \"⦦\",\r\n\t\"Element;\": \"∈\",\r\n\t\"Epsilon;\": \"Ε\",\r\n\t\"epsilon;\": \"ε\",\r\n\t\"eqcolon;\": \"≕\",\r\n\t\"equivDD;\": \"⩸\",\r\n\t\"gesdoto;\": \"⪂\",\r\n\t\"gtquest;\": \"⩼\",\r\n\t\"gtrless;\": \"≷\",\r\n\t\"harrcir;\": \"⥈\",\r\n\t\"Implies;\": \"⇒\",\r\n\t\"intprod;\": \"⨼\",\r\n\t\"isindot;\": \"⋵\",\r\n\t\"larrbfs;\": \"⤟\",\r\n\t\"larrsim;\": \"⥳\",\r\n\t\"lbrksld;\": \"⦏\",\r\n\t\"lbrkslu;\": \"⦍\",\r\n\t\"ldrdhar;\": \"⥧\",\r\n\t\"LeftTee;\": \"⊣\",\r\n\t\"lesdoto;\": \"⪁\",\r\n\t\"lessdot;\": \"⋖\",\r\n\t\"lessgtr;\": \"≶\",\r\n\t\"lesssim;\": \"≲\",\r\n\t\"lotimes;\": \"⨴\",\r\n\t\"lozenge;\": \"◊\",\r\n\t\"ltquest;\": \"⩻\",\r\n\t\"luruhar;\": \"⥦\",\r\n\t\"maltese;\": \"✠\",\r\n\t\"minusdu;\": \"⨪\",\r\n\t\"napprox;\": \"≉\",\r\n\t\"natural;\": \"♮\",\r\n\t\"nearrow;\": \"↗\",\r\n\t\"NewLine;\": \"\\n\",\r\n\t\"nexists;\": \"∄\",\r\n\t\"NoBreak;\": \"⁠\",\r\n\t\"notinva;\": \"∉\",\r\n\t\"notinvb;\": \"⋷\",\r\n\t\"notinvc;\": \"⋶\",\r\n\t\"NotLess;\": \"≮\",\r\n\t\"notniva;\": \"∌\",\r\n\t\"notnivb;\": \"⋾\",\r\n\t\"notnivc;\": \"⋽\",\r\n\t\"npolint;\": \"⨔\",\r\n\t\"npreceq;\": \"⪯̸\",\r\n\t\"nsqsube;\": \"⋢\",\r\n\t\"nsqsupe;\": \"⋣\",\r\n\t\"nsubset;\": \"⊂⃒\",\r\n\t\"nsucceq;\": \"⪰̸\",\r\n\t\"nsupset;\": \"⊃⃒\",\r\n\t\"nvinfin;\": \"⧞\",\r\n\t\"nvltrie;\": \"⊴⃒\",\r\n\t\"nvrtrie;\": \"⊵⃒\",\r\n\t\"nwarrow;\": \"↖\",\r\n\t\"olcross;\": \"⦻\",\r\n\t\"Omicron;\": \"Ο\",\r\n\t\"omicron;\": \"ο\",\r\n\t\"orderof;\": \"ℴ\",\r\n\t\"orslope;\": \"⩗\",\r\n\t\"OverBar;\": \"‾\",\r\n\t\"pertenk;\": \"‱\",\r\n\t\"planckh;\": \"ℎ\",\r\n\t\"pluscir;\": \"⨢\",\r\n\t\"plussim;\": \"⨦\",\r\n\t\"plustwo;\": \"⨧\",\r\n\t\"precsim;\": \"≾\",\r\n\t\"Product;\": \"∏\",\r\n\t\"quatint;\": \"⨖\",\r\n\t\"questeq;\": \"≟\",\r\n\t\"rarrbfs;\": \"⤠\",\r\n\t\"rarrsim;\": \"⥴\",\r\n\t\"rbrksld;\": \"⦎\",\r\n\t\"rbrkslu;\": \"⦐\",\r\n\t\"rdldhar;\": \"⥩\",\r\n\t\"realine;\": \"ℛ\",\r\n\t\"rotimes;\": \"⨵\",\r\n\t\"ruluhar;\": \"⥨\",\r\n\t\"searrow;\": \"↘\",\r\n\t\"simplus;\": \"⨤\",\r\n\t\"simrarr;\": \"⥲\",\r\n\t\"subedot;\": \"⫃\",\r\n\t\"submult;\": \"⫁\",\r\n\t\"subplus;\": \"⪿\",\r\n\t\"subrarr;\": \"⥹\",\r\n\t\"succsim;\": \"≿\",\r\n\t\"supdsub;\": \"⫘\",\r\n\t\"supedot;\": \"⫄\",\r\n\t\"suphsol;\": \"⟉\",\r\n\t\"suphsub;\": \"⫗\",\r\n\t\"suplarr;\": \"⥻\",\r\n\t\"supmult;\": \"⫂\",\r\n\t\"supplus;\": \"⫀\",\r\n\t\"swarrow;\": \"↙\",\r\n\t\"topfork;\": \"⫚\",\r\n\t\"triplus;\": \"⨹\",\r\n\t\"tritime;\": \"⨻\",\r\n\t\"UpArrow;\": \"↑\",\r\n\t\"Uparrow;\": \"⇑\",\r\n\t\"uparrow;\": \"↑\",\r\n\t\"Upsilon;\": \"Υ\",\r\n\t\"upsilon;\": \"υ\",\r\n\t\"uwangle;\": \"⦧\",\r\n\t\"vzigzag;\": \"⦚\",\r\n\t\"zigrarr;\": \"⇝\",\r\n\t\"andslope;\": \"⩘\",\r\n\t\"angmsdaa;\": \"⦨\",\r\n\t\"angmsdab;\": \"⦩\",\r\n\t\"angmsdac;\": \"⦪\",\r\n\t\"angmsdad;\": \"⦫\",\r\n\t\"angmsdae;\": \"⦬\",\r\n\t\"angmsdaf;\": \"⦭\",\r\n\t\"angmsdag;\": \"⦮\",\r\n\t\"angmsdah;\": \"⦯\",\r\n\t\"angrtvbd;\": \"⦝\",\r\n\t\"approxeq;\": \"≊\",\r\n\t\"awconint;\": \"∳\",\r\n\t\"backcong;\": \"≌\",\r\n\t\"barwedge;\": \"⌅\",\r\n\t\"bbrktbrk;\": \"⎶\",\r\n\t\"bigoplus;\": \"⨁\",\r\n\t\"bigsqcup;\": \"⨆\",\r\n\t\"biguplus;\": \"⨄\",\r\n\t\"bigwedge;\": \"⋀\",\r\n\t\"boxminus;\": \"⊟\",\r\n\t\"boxtimes;\": \"⊠\",\r\n\t\"bsolhsub;\": \"⟈\",\r\n\t\"capbrcup;\": \"⩉\",\r\n\t\"circledR;\": \"®\",\r\n\t\"circledS;\": \"Ⓢ\",\r\n\t\"cirfnint;\": \"⨐\",\r\n\t\"clubsuit;\": \"♣\",\r\n\t\"cupbrcap;\": \"⩈\",\r\n\t\"curlyvee;\": \"⋎\",\r\n\t\"cwconint;\": \"∲\",\r\n\t\"DDotrahd;\": \"⤑\",\r\n\t\"doteqdot;\": \"≑\",\r\n\t\"DotEqual;\": \"≐\",\r\n\t\"dotminus;\": \"∸\",\r\n\t\"drbkarow;\": \"⤐\",\r\n\t\"dzigrarr;\": \"⟿\",\r\n\t\"elinters;\": \"⏧\",\r\n\t\"emptyset;\": \"∅\",\r\n\t\"eqvparsl;\": \"⧥\",\r\n\t\"fpartint;\": \"⨍\",\r\n\t\"geqslant;\": \"⩾\",\r\n\t\"gesdotol;\": \"⪄\",\r\n\t\"gnapprox;\": \"⪊\",\r\n\t\"hksearow;\": \"⤥\",\r\n\t\"hkswarow;\": \"⤦\",\r\n\t\"imagline;\": \"ℐ\",\r\n\t\"imagpart;\": \"ℑ\",\r\n\t\"infintie;\": \"⧝\",\r\n\t\"integers;\": \"ℤ\",\r\n\t\"Integral;\": \"∫\",\r\n\t\"intercal;\": \"⊺\",\r\n\t\"intlarhk;\": \"⨗\",\r\n\t\"laemptyv;\": \"⦴\",\r\n\t\"ldrushar;\": \"⥋\",\r\n\t\"leqslant;\": \"⩽\",\r\n\t\"lesdotor;\": \"⪃\",\r\n\t\"LessLess;\": \"⪡\",\r\n\t\"llcorner;\": \"⌞\",\r\n\t\"lnapprox;\": \"⪉\",\r\n\t\"lrcorner;\": \"⌟\",\r\n\t\"lurdshar;\": \"⥊\",\r\n\t\"mapstoup;\": \"↥\",\r\n\t\"multimap;\": \"⊸\",\r\n\t\"naturals;\": \"ℕ\",\r\n\t\"ncongdot;\": \"⩭̸\",\r\n\t\"NotEqual;\": \"≠\",\r\n\t\"notindot;\": \"⋵̸\",\r\n\t\"NotTilde;\": \"≁\",\r\n\t\"otimesas;\": \"⨶\",\r\n\t\"parallel;\": \"∥\",\r\n\t\"PartialD;\": \"∂\",\r\n\t\"plusacir;\": \"⨣\",\r\n\t\"pointint;\": \"⨕\",\r\n\t\"Precedes;\": \"≺\",\r\n\t\"precneqq;\": \"⪵\",\r\n\t\"precnsim;\": \"⋨\",\r\n\t\"profalar;\": \"⌮\",\r\n\t\"profline;\": \"⌒\",\r\n\t\"profsurf;\": \"⌓\",\r\n\t\"raemptyv;\": \"⦳\",\r\n\t\"realpart;\": \"ℜ\",\r\n\t\"RightTee;\": \"⊢\",\r\n\t\"rppolint;\": \"⨒\",\r\n\t\"rtriltri;\": \"⧎\",\r\n\t\"scpolint;\": \"⨓\",\r\n\t\"setminus;\": \"∖\",\r\n\t\"shortmid;\": \"∣\",\r\n\t\"smeparsl;\": \"⧤\",\r\n\t\"sqsubset;\": \"⊏\",\r\n\t\"sqsupset;\": \"⊐\",\r\n\t\"subseteq;\": \"⊆\",\r\n\t\"Succeeds;\": \"≻\",\r\n\t\"succneqq;\": \"⪶\",\r\n\t\"succnsim;\": \"⋩\",\r\n\t\"SuchThat;\": \"∋\",\r\n\t\"Superset;\": \"⊃\",\r\n\t\"supseteq;\": \"⊇\",\r\n\t\"thetasym;\": \"ϑ\",\r\n\t\"thicksim;\": \"∼\",\r\n\t\"timesbar;\": \"⨱\",\r\n\t\"triangle;\": \"▵\",\r\n\t\"triminus;\": \"⨺\",\r\n\t\"trpezium;\": \"⏢\",\r\n\t\"Uarrocir;\": \"⥉\",\r\n\t\"ulcorner;\": \"⌜\",\r\n\t\"UnderBar;\": \"_\",\r\n\t\"urcorner;\": \"⌝\",\r\n\t\"varkappa;\": \"ϰ\",\r\n\t\"varsigma;\": \"ς\",\r\n\t\"vartheta;\": \"ϑ\",\r\n\t\"backprime;\": \"‵\",\r\n\t\"backsimeq;\": \"⋍\",\r\n\t\"Backslash;\": \"∖\",\r\n\t\"bigotimes;\": \"⨂\",\r\n\t\"CenterDot;\": \"·\",\r\n\t\"centerdot;\": \"·\",\r\n\t\"checkmark;\": \"✓\",\r\n\t\"CircleDot;\": \"⊙\",\r\n\t\"complexes;\": \"ℂ\",\r\n\t\"Congruent;\": \"≡\",\r\n\t\"Coproduct;\": \"∐\",\r\n\t\"dotsquare;\": \"⊡\",\r\n\t\"DoubleDot;\": \"¨\",\r\n\t\"DownArrow;\": \"↓\",\r\n\t\"Downarrow;\": \"⇓\",\r\n\t\"downarrow;\": \"↓\",\r\n\t\"DownBreve;\": \"̑\",\r\n\t\"gtrapprox;\": \"⪆\",\r\n\t\"gtreqless;\": \"⋛\",\r\n\t\"gvertneqq;\": \"≩︀\",\r\n\t\"heartsuit;\": \"♥\",\r\n\t\"HumpEqual;\": \"≏\",\r\n\t\"LeftArrow;\": \"←\",\r\n\t\"Leftarrow;\": \"⇐\",\r\n\t\"leftarrow;\": \"←\",\r\n\t\"LeftFloor;\": \"⌊\",\r\n\t\"lesseqgtr;\": \"⋚\",\r\n\t\"LessTilde;\": \"≲\",\r\n\t\"lvertneqq;\": \"≨︀\",\r\n\t\"Mellintrf;\": \"ℳ\",\r\n\t\"MinusPlus;\": \"∓\",\r\n\t\"ngeqslant;\": \"⩾̸\",\r\n\t\"nleqslant;\": \"⩽̸\",\r\n\t\"NotCupCap;\": \"≭\",\r\n\t\"NotExists;\": \"∄\",\r\n\t\"NotSubset;\": \"⊂⃒\",\r\n\t\"nparallel;\": \"∦\",\r\n\t\"nshortmid;\": \"∤\",\r\n\t\"nsubseteq;\": \"⊈\",\r\n\t\"nsupseteq;\": \"⊉\",\r\n\t\"OverBrace;\": \"⏞\",\r\n\t\"pitchfork;\": \"⋔\",\r\n\t\"PlusMinus;\": \"±\",\r\n\t\"rationals;\": \"ℚ\",\r\n\t\"spadesuit;\": \"♠\",\r\n\t\"subseteqq;\": \"⫅\",\r\n\t\"subsetneq;\": \"⊊\",\r\n\t\"supseteqq;\": \"⫆\",\r\n\t\"supsetneq;\": \"⊋\",\r\n\t\"Therefore;\": \"∴\",\r\n\t\"therefore;\": \"∴\",\r\n\t\"ThinSpace;\": \" \",\r\n\t\"triangleq;\": \"≜\",\r\n\t\"TripleDot;\": \"⃛\",\r\n\t\"UnionPlus;\": \"⊎\",\r\n\t\"varpropto;\": \"∝\",\r\n\t\"Bernoullis;\": \"ℬ\",\r\n\t\"circledast;\": \"⊛\",\r\n\t\"CirclePlus;\": \"⊕\",\r\n\t\"complement;\": \"∁\",\r\n\t\"curlywedge;\": \"⋏\",\r\n\t\"eqslantgtr;\": \"⪖\",\r\n\t\"EqualTilde;\": \"≂\",\r\n\t\"Fouriertrf;\": \"ℱ\",\r\n\t\"gtreqqless;\": \"⪌\",\r\n\t\"ImaginaryI;\": \"ⅈ\",\r\n\t\"Laplacetrf;\": \"ℒ\",\r\n\t\"LeftVector;\": \"↼\",\r\n\t\"lessapprox;\": \"⪅\",\r\n\t\"lesseqqgtr;\": \"⪋\",\r\n\t\"Lleftarrow;\": \"⇚\",\r\n\t\"lmoustache;\": \"⎰\",\r\n\t\"longmapsto;\": \"⟼\",\r\n\t\"mapstodown;\": \"↧\",\r\n\t\"mapstoleft;\": \"↤\",\r\n\t\"nLeftarrow;\": \"⇍\",\r\n\t\"nleftarrow;\": \"↚\",\r\n\t\"NotElement;\": \"∉\",\r\n\t\"NotGreater;\": \"≯\",\r\n\t\"nsubseteqq;\": \"⫅̸\",\r\n\t\"nsupseteqq;\": \"⫆̸\",\r\n\t\"precapprox;\": \"⪷\",\r\n\t\"Proportion;\": \"∷\",\r\n\t\"RightArrow;\": \"→\",\r\n\t\"Rightarrow;\": \"⇒\",\r\n\t\"rightarrow;\": \"→\",\r\n\t\"RightFloor;\": \"⌋\",\r\n\t\"rmoustache;\": \"⎱\",\r\n\t\"sqsubseteq;\": \"⊑\",\r\n\t\"sqsupseteq;\": \"⊒\",\r\n\t\"subsetneqq;\": \"⫋\",\r\n\t\"succapprox;\": \"⪸\",\r\n\t\"supsetneqq;\": \"⫌\",\r\n\t\"ThickSpace;\": \"  \",\r\n\t\"TildeEqual;\": \"≃\",\r\n\t\"TildeTilde;\": \"≈\",\r\n\t\"UnderBrace;\": \"⏟\",\r\n\t\"UpArrowBar;\": \"⤒\",\r\n\t\"UpTeeArrow;\": \"↥\",\r\n\t\"upuparrows;\": \"⇈\",\r\n\t\"varepsilon;\": \"ϵ\",\r\n\t\"varnothing;\": \"∅\",\r\n\t\"backepsilon;\": \"϶\",\r\n\t\"blacksquare;\": \"▪\",\r\n\t\"circledcirc;\": \"⊚\",\r\n\t\"circleddash;\": \"⊝\",\r\n\t\"CircleMinus;\": \"⊖\",\r\n\t\"CircleTimes;\": \"⊗\",\r\n\t\"curlyeqprec;\": \"⋞\",\r\n\t\"curlyeqsucc;\": \"⋟\",\r\n\t\"diamondsuit;\": \"♦\",\r\n\t\"eqslantless;\": \"⪕\",\r\n\t\"Equilibrium;\": \"⇌\",\r\n\t\"expectation;\": \"ℰ\",\r\n\t\"GreaterLess;\": \"≷\",\r\n\t\"LeftCeiling;\": \"⌈\",\r\n\t\"LessGreater;\": \"≶\",\r\n\t\"MediumSpace;\": \" \",\r\n\t\"NotLessLess;\": \"≪̸\",\r\n\t\"NotPrecedes;\": \"⊀\",\r\n\t\"NotSucceeds;\": \"⊁\",\r\n\t\"NotSuperset;\": \"⊃⃒\",\r\n\t\"nRightarrow;\": \"⇏\",\r\n\t\"nrightarrow;\": \"↛\",\r\n\t\"OverBracket;\": \"⎴\",\r\n\t\"preccurlyeq;\": \"≼\",\r\n\t\"precnapprox;\": \"⪹\",\r\n\t\"quaternions;\": \"ℍ\",\r\n\t\"RightVector;\": \"⇀\",\r\n\t\"Rrightarrow;\": \"⇛\",\r\n\t\"RuleDelayed;\": \"⧴\",\r\n\t\"SmallCircle;\": \"∘\",\r\n\t\"SquareUnion;\": \"⊔\",\r\n\t\"straightphi;\": \"ϕ\",\r\n\t\"SubsetEqual;\": \"⊆\",\r\n\t\"succcurlyeq;\": \"≽\",\r\n\t\"succnapprox;\": \"⪺\",\r\n\t\"thickapprox;\": \"≈\",\r\n\t\"UpDownArrow;\": \"↕\",\r\n\t\"Updownarrow;\": \"⇕\",\r\n\t\"updownarrow;\": \"↕\",\r\n\t\"VerticalBar;\": \"∣\",\r\n\t\"blacklozenge;\": \"⧫\",\r\n\t\"DownArrowBar;\": \"⤓\",\r\n\t\"DownTeeArrow;\": \"↧\",\r\n\t\"ExponentialE;\": \"ⅇ\",\r\n\t\"exponentiale;\": \"ⅇ\",\r\n\t\"GreaterEqual;\": \"≥\",\r\n\t\"GreaterTilde;\": \"≳\",\r\n\t\"HilbertSpace;\": \"ℋ\",\r\n\t\"HumpDownHump;\": \"≎\",\r\n\t\"Intersection;\": \"⋂\",\r\n\t\"LeftArrowBar;\": \"⇤\",\r\n\t\"LeftTeeArrow;\": \"↤\",\r\n\t\"LeftTriangle;\": \"⊲\",\r\n\t\"LeftUpVector;\": \"↿\",\r\n\t\"NotCongruent;\": \"≢\",\r\n\t\"NotHumpEqual;\": \"≏̸\",\r\n\t\"NotLessEqual;\": \"≰\",\r\n\t\"NotLessTilde;\": \"≴\",\r\n\t\"Proportional;\": \"∝\",\r\n\t\"RightCeiling;\": \"⌉\",\r\n\t\"risingdotseq;\": \"≓\",\r\n\t\"RoundImplies;\": \"⥰\",\r\n\t\"ShortUpArrow;\": \"↑\",\r\n\t\"SquareSubset;\": \"⊏\",\r\n\t\"triangledown;\": \"▿\",\r\n\t\"triangleleft;\": \"◃\",\r\n\t\"UnderBracket;\": \"⎵\",\r\n\t\"varsubsetneq;\": \"⊊︀\",\r\n\t\"varsupsetneq;\": \"⊋︀\",\r\n\t\"VerticalLine;\": \"|\",\r\n\t\"ApplyFunction;\": \"⁡\",\r\n\t\"bigtriangleup;\": \"△\",\r\n\t\"blacktriangle;\": \"▴\",\r\n\t\"DifferentialD;\": \"ⅆ\",\r\n\t\"divideontimes;\": \"⋇\",\r\n\t\"DoubleLeftTee;\": \"⫤\",\r\n\t\"DoubleUpArrow;\": \"⇑\",\r\n\t\"fallingdotseq;\": \"≒\",\r\n\t\"hookleftarrow;\": \"↩\",\r\n\t\"leftarrowtail;\": \"↢\",\r\n\t\"leftharpoonup;\": \"↼\",\r\n\t\"LeftTeeVector;\": \"⥚\",\r\n\t\"LeftVectorBar;\": \"⥒\",\r\n\t\"LessFullEqual;\": \"≦\",\r\n\t\"LongLeftArrow;\": \"⟵\",\r\n\t\"Longleftarrow;\": \"⟸\",\r\n\t\"longleftarrow;\": \"⟵\",\r\n\t\"looparrowleft;\": \"↫\",\r\n\t\"measuredangle;\": \"∡\",\r\n\t\"NotEqualTilde;\": \"≂̸\",\r\n\t\"NotTildeEqual;\": \"≄\",\r\n\t\"NotTildeTilde;\": \"≉\",\r\n\t\"ntriangleleft;\": \"⋪\",\r\n\t\"Poincareplane;\": \"ℌ\",\r\n\t\"PrecedesEqual;\": \"⪯\",\r\n\t\"PrecedesTilde;\": \"≾\",\r\n\t\"RightArrowBar;\": \"⇥\",\r\n\t\"RightTeeArrow;\": \"↦\",\r\n\t\"RightTriangle;\": \"⊳\",\r\n\t\"RightUpVector;\": \"↾\",\r\n\t\"shortparallel;\": \"∥\",\r\n\t\"smallsetminus;\": \"∖\",\r\n\t\"SucceedsEqual;\": \"⪰\",\r\n\t\"SucceedsTilde;\": \"≿\",\r\n\t\"SupersetEqual;\": \"⊇\",\r\n\t\"triangleright;\": \"▹\",\r\n\t\"UpEquilibrium;\": \"⥮\",\r\n\t\"upharpoonleft;\": \"↿\",\r\n\t\"varsubsetneqq;\": \"⫋︀\",\r\n\t\"varsupsetneqq;\": \"⫌︀\",\r\n\t\"VerticalTilde;\": \"≀\",\r\n\t\"VeryThinSpace;\": \" \",\r\n\t\"curvearrowleft;\": \"↶\",\r\n\t\"DiacriticalDot;\": \"˙\",\r\n\t\"doublebarwedge;\": \"⌆\",\r\n\t\"DoubleRightTee;\": \"⊨\",\r\n\t\"downdownarrows;\": \"⇊\",\r\n\t\"DownLeftVector;\": \"↽\",\r\n\t\"GreaterGreater;\": \"⪢\",\r\n\t\"hookrightarrow;\": \"↪\",\r\n\t\"HorizontalLine;\": \"─\",\r\n\t\"InvisibleComma;\": \"⁣\",\r\n\t\"InvisibleTimes;\": \"⁢\",\r\n\t\"LeftDownVector;\": \"⇃\",\r\n\t\"leftleftarrows;\": \"⇇\",\r\n\t\"LeftRightArrow;\": \"↔\",\r\n\t\"Leftrightarrow;\": \"⇔\",\r\n\t\"leftrightarrow;\": \"↔\",\r\n\t\"leftthreetimes;\": \"⋋\",\r\n\t\"LessSlantEqual;\": \"⩽\",\r\n\t\"LongRightArrow;\": \"⟶\",\r\n\t\"Longrightarrow;\": \"⟹\",\r\n\t\"longrightarrow;\": \"⟶\",\r\n\t\"looparrowright;\": \"↬\",\r\n\t\"LowerLeftArrow;\": \"↙\",\r\n\t\"NestedLessLess;\": \"≪\",\r\n\t\"NotGreaterLess;\": \"≹\",\r\n\t\"NotLessGreater;\": \"≸\",\r\n\t\"NotSubsetEqual;\": \"⊈\",\r\n\t\"NotVerticalBar;\": \"∤\",\r\n\t\"nshortparallel;\": \"∦\",\r\n\t\"ntriangleright;\": \"⋫\",\r\n\t\"OpenCurlyQuote;\": \"‘\",\r\n\t\"ReverseElement;\": \"∋\",\r\n\t\"rightarrowtail;\": \"↣\",\r\n\t\"rightharpoonup;\": \"⇀\",\r\n\t\"RightTeeVector;\": \"⥛\",\r\n\t\"RightVectorBar;\": \"⥓\",\r\n\t\"ShortDownArrow;\": \"↓\",\r\n\t\"ShortLeftArrow;\": \"←\",\r\n\t\"SquareSuperset;\": \"⊐\",\r\n\t\"TildeFullEqual;\": \"≅\",\r\n\t\"trianglelefteq;\": \"⊴\",\r\n\t\"upharpoonright;\": \"↾\",\r\n\t\"UpperLeftArrow;\": \"↖\",\r\n\t\"ZeroWidthSpace;\": \"​\",\r\n\t\"bigtriangledown;\": \"▽\",\r\n\t\"circlearrowleft;\": \"↺\",\r\n\t\"CloseCurlyQuote;\": \"’\",\r\n\t\"ContourIntegral;\": \"∮\",\r\n\t\"curvearrowright;\": \"↷\",\r\n\t\"DoubleDownArrow;\": \"⇓\",\r\n\t\"DoubleLeftArrow;\": \"⇐\",\r\n\t\"downharpoonleft;\": \"⇃\",\r\n\t\"DownRightVector;\": \"⇁\",\r\n\t\"leftharpoondown;\": \"↽\",\r\n\t\"leftrightarrows;\": \"⇆\",\r\n\t\"LeftRightVector;\": \"⥎\",\r\n\t\"LeftTriangleBar;\": \"⧏\",\r\n\t\"LeftUpTeeVector;\": \"⥠\",\r\n\t\"LeftUpVectorBar;\": \"⥘\",\r\n\t\"LowerRightArrow;\": \"↘\",\r\n\t\"nLeftrightarrow;\": \"⇎\",\r\n\t\"nleftrightarrow;\": \"↮\",\r\n\t\"NotGreaterEqual;\": \"≱\",\r\n\t\"NotGreaterTilde;\": \"≵\",\r\n\t\"NotHumpDownHump;\": \"≎̸\",\r\n\t\"NotLeftTriangle;\": \"⋪\",\r\n\t\"NotSquareSubset;\": \"⊏̸\",\r\n\t\"ntrianglelefteq;\": \"⋬\",\r\n\t\"OverParenthesis;\": \"⏜\",\r\n\t\"RightDownVector;\": \"⇂\",\r\n\t\"rightleftarrows;\": \"⇄\",\r\n\t\"rightsquigarrow;\": \"↝\",\r\n\t\"rightthreetimes;\": \"⋌\",\r\n\t\"ShortRightArrow;\": \"→\",\r\n\t\"straightepsilon;\": \"ϵ\",\r\n\t\"trianglerighteq;\": \"⊵\",\r\n\t\"UpperRightArrow;\": \"↗\",\r\n\t\"vartriangleleft;\": \"⊲\",\r\n\t\"circlearrowright;\": \"↻\",\r\n\t\"DiacriticalAcute;\": \"´\",\r\n\t\"DiacriticalGrave;\": \"`\",\r\n\t\"DiacriticalTilde;\": \"˜\",\r\n\t\"DoubleRightArrow;\": \"⇒\",\r\n\t\"DownArrowUpArrow;\": \"⇵\",\r\n\t\"downharpoonright;\": \"⇂\",\r\n\t\"EmptySmallSquare;\": \"◻\",\r\n\t\"GreaterEqualLess;\": \"⋛\",\r\n\t\"GreaterFullEqual;\": \"≧\",\r\n\t\"LeftAngleBracket;\": \"⟨\",\r\n\t\"LeftUpDownVector;\": \"⥑\",\r\n\t\"LessEqualGreater;\": \"⋚\",\r\n\t\"NonBreakingSpace;\": \" \",\r\n\t\"NotPrecedesEqual;\": \"⪯̸\",\r\n\t\"NotRightTriangle;\": \"⋫\",\r\n\t\"NotSucceedsEqual;\": \"⪰̸\",\r\n\t\"NotSucceedsTilde;\": \"≿̸\",\r\n\t\"NotSupersetEqual;\": \"⊉\",\r\n\t\"ntrianglerighteq;\": \"⋭\",\r\n\t\"rightharpoondown;\": \"⇁\",\r\n\t\"rightrightarrows;\": \"⇉\",\r\n\t\"RightTriangleBar;\": \"⧐\",\r\n\t\"RightUpTeeVector;\": \"⥜\",\r\n\t\"RightUpVectorBar;\": \"⥔\",\r\n\t\"twoheadleftarrow;\": \"↞\",\r\n\t\"UnderParenthesis;\": \"⏝\",\r\n\t\"UpArrowDownArrow;\": \"⇅\",\r\n\t\"vartriangleright;\": \"⊳\",\r\n\t\"blacktriangledown;\": \"▾\",\r\n\t\"blacktriangleleft;\": \"◂\",\r\n\t\"DoubleUpDownArrow;\": \"⇕\",\r\n\t\"DoubleVerticalBar;\": \"∥\",\r\n\t\"DownLeftTeeVector;\": \"⥞\",\r\n\t\"DownLeftVectorBar;\": \"⥖\",\r\n\t\"FilledSmallSquare;\": \"◼\",\r\n\t\"GreaterSlantEqual;\": \"⩾\",\r\n\t\"LeftDoubleBracket;\": \"⟦\",\r\n\t\"LeftDownTeeVector;\": \"⥡\",\r\n\t\"LeftDownVectorBar;\": \"⥙\",\r\n\t\"leftrightharpoons;\": \"⇋\",\r\n\t\"LeftTriangleEqual;\": \"⊴\",\r\n\t\"NegativeThinSpace;\": \"​\",\r\n\t\"NotGreaterGreater;\": \"≫̸\",\r\n\t\"NotLessSlantEqual;\": \"⩽̸\",\r\n\t\"NotNestedLessLess;\": \"⪡̸\",\r\n\t\"NotReverseElement;\": \"∌\",\r\n\t\"NotSquareSuperset;\": \"⊐̸\",\r\n\t\"NotTildeFullEqual;\": \"≇\",\r\n\t\"RightAngleBracket;\": \"⟩\",\r\n\t\"rightleftharpoons;\": \"⇌\",\r\n\t\"RightUpDownVector;\": \"⥏\",\r\n\t\"SquareSubsetEqual;\": \"⊑\",\r\n\t\"twoheadrightarrow;\": \"↠\",\r\n\t\"VerticalSeparator;\": \"❘\",\r\n\t\"blacktriangleright;\": \"▸\",\r\n\t\"DownRightTeeVector;\": \"⥟\",\r\n\t\"DownRightVectorBar;\": \"⥗\",\r\n\t\"LongLeftRightArrow;\": \"⟷\",\r\n\t\"Longleftrightarrow;\": \"⟺\",\r\n\t\"longleftrightarrow;\": \"⟷\",\r\n\t\"NegativeThickSpace;\": \"​\",\r\n\t\"NotLeftTriangleBar;\": \"⧏̸\",\r\n\t\"PrecedesSlantEqual;\": \"≼\",\r\n\t\"ReverseEquilibrium;\": \"⇋\",\r\n\t\"RightDoubleBracket;\": \"⟧\",\r\n\t\"RightDownTeeVector;\": \"⥝\",\r\n\t\"RightDownVectorBar;\": \"⥕\",\r\n\t\"RightTriangleEqual;\": \"⊵\",\r\n\t\"SquareIntersection;\": \"⊓\",\r\n\t\"SucceedsSlantEqual;\": \"≽\",\r\n\t\"DoubleLongLeftArrow;\": \"⟸\",\r\n\t\"DownLeftRightVector;\": \"⥐\",\r\n\t\"LeftArrowRightArrow;\": \"⇆\",\r\n\t\"leftrightsquigarrow;\": \"↭\",\r\n\t\"NegativeMediumSpace;\": \"​\",\r\n\t\"NotGreaterFullEqual;\": \"≧̸\",\r\n\t\"NotRightTriangleBar;\": \"⧐̸\",\r\n\t\"RightArrowLeftArrow;\": \"⇄\",\r\n\t\"SquareSupersetEqual;\": \"⊒\",\r\n\t\"CapitalDifferentialD;\": \"ⅅ\",\r\n\t\"DoubleLeftRightArrow;\": \"⇔\",\r\n\t\"DoubleLongRightArrow;\": \"⟹\",\r\n\t\"EmptyVerySmallSquare;\": \"▫\",\r\n\t\"NestedGreaterGreater;\": \"≫\",\r\n\t\"NotDoubleVerticalBar;\": \"∦\",\r\n\t\"NotGreaterSlantEqual;\": \"⩾̸\",\r\n\t\"NotLeftTriangleEqual;\": \"⋬\",\r\n\t\"NotSquareSubsetEqual;\": \"⋢\",\r\n\t\"OpenCurlyDoubleQuote;\": \"“\",\r\n\t\"ReverseUpEquilibrium;\": \"⥯\",\r\n\t\"CloseCurlyDoubleQuote;\": \"”\",\r\n\t\"DoubleContourIntegral;\": \"∯\",\r\n\t\"FilledVerySmallSquare;\": \"▪\",\r\n\t\"NegativeVeryThinSpace;\": \"​\",\r\n\t\"NotPrecedesSlantEqual;\": \"⋠\",\r\n\t\"NotRightTriangleEqual;\": \"⋭\",\r\n\t\"NotSucceedsSlantEqual;\": \"⋡\",\r\n\t\"DiacriticalDoubleAcute;\": \"˝\",\r\n\t\"NotSquareSupersetEqual;\": \"⋣\",\r\n\t\"NotNestedGreaterGreater;\": \"⪢̸\",\r\n\t\"ClockwiseContourIntegral;\": \"∲\",\r\n\t\"DoubleLongLeftRightArrow;\": \"⟺\",\r\n\t\"CounterClockwiseContourIntegral;\": \"∳\"\r\n};\r\n\r\nlet maxCRNameLength;\r\nconst decodeHtml = (rawText, asAttr) => {\r\n  let offset = 0;\r\n  const end = rawText.length;\r\n  let decodedText = \"\";\r\n  function advance(length) {\r\n    offset += length;\r\n    rawText = rawText.slice(length);\r\n  }\r\n  while (offset < end) {\r\n    const head = /&(?:#x?)?/i.exec(rawText);\r\n    if (!head || offset + head.index >= end) {\r\n      const remaining = end - offset;\r\n      decodedText += rawText.slice(0, remaining);\r\n      advance(remaining);\r\n      break;\r\n    }\r\n    decodedText += rawText.slice(0, head.index);\r\n    advance(head.index);\r\n    if (head[0] === \"&\") {\r\n      let name = \"\";\r\n      let value = void 0;\r\n      if (/[0-9a-z]/i.test(rawText[1])) {\r\n        if (!maxCRNameLength) {\r\n          maxCRNameLength = Object.keys(namedCharacterReferences).reduce(\r\n            (max, name2) => Math.max(max, name2.length),\r\n            0\r\n          );\r\n        }\r\n        for (let length = maxCRNameLength; !value && length > 0; --length) {\r\n          name = rawText.slice(1, 1 + length);\r\n          value = namedCharacterReferences[name];\r\n        }\r\n        if (value) {\r\n          const semi = name.endsWith(\";\");\r\n          if (asAttr && !semi && /[=a-z0-9]/i.test(rawText[name.length + 1] || \"\")) {\r\n            decodedText += \"&\" + name;\r\n            advance(1 + name.length);\r\n          } else {\r\n            decodedText += value;\r\n            advance(1 + name.length);\r\n          }\r\n        } else {\r\n          decodedText += \"&\" + name;\r\n          advance(1 + name.length);\r\n        }\r\n      } else {\r\n        decodedText += \"&\";\r\n        advance(1);\r\n      }\r\n    } else {\r\n      const hex = head[0] === \"&#x\";\r\n      const pattern = hex ? /^&#x([0-9a-f]+);?/i : /^&#([0-9]+);?/;\r\n      const body = pattern.exec(rawText);\r\n      if (!body) {\r\n        decodedText += head[0];\r\n        advance(head[0].length);\r\n      } else {\r\n        let cp = Number.parseInt(body[1], hex ? 16 : 10);\r\n        if (cp === 0) {\r\n          cp = 65533;\r\n        } else if (cp > 1114111) {\r\n          cp = 65533;\r\n        } else if (cp >= 55296 && cp <= 57343) {\r\n          cp = 65533;\r\n        } else if (cp >= 64976 && cp <= 65007 || (cp & 65534) === 65534) ; else if (cp >= 1 && cp <= 8 || cp === 11 || cp >= 13 && cp <= 31 || cp >= 127 && cp <= 159) {\r\n          cp = CCR_REPLACEMENTS[cp] || cp;\r\n        }\r\n        decodedText += String.fromCodePoint(cp);\r\n        advance(body[0].length);\r\n      }\r\n    }\r\n  }\r\n  return decodedText;\r\n};\r\nconst CCR_REPLACEMENTS = {\r\n  128: 8364,\r\n  130: 8218,\r\n  131: 402,\r\n  132: 8222,\r\n  133: 8230,\r\n  134: 8224,\r\n  135: 8225,\r\n  136: 710,\r\n  137: 8240,\r\n  138: 352,\r\n  139: 8249,\r\n  140: 338,\r\n  142: 381,\r\n  145: 8216,\r\n  146: 8217,\r\n  147: 8220,\r\n  148: 8221,\r\n  149: 8226,\r\n  150: 8211,\r\n  151: 8212,\r\n  152: 732,\r\n  153: 8482,\r\n  154: 353,\r\n  155: 8250,\r\n  156: 339,\r\n  158: 382,\r\n  159: 376\r\n};\r\n\r\nconst isRawTextContainer = /* @__PURE__ */ makeMap(\r\n  \"style,iframe,script,noscript\",\r\n  true\r\n);\r\nconst parserOptions = {\r\n  isVoidTag,\r\n  isNativeTag: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n  isPreTag: (tag) => tag === \"pre\",\r\n  decodeEntities: decodeHtml,\r\n  isBuiltInComponent: (tag) => {\r\n    if (isBuiltInType(tag, `Transition`)) {\r\n      return TRANSITION;\r\n    } else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n      return TRANSITION_GROUP;\r\n    }\r\n  },\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n  getNamespace(tag, parent) {\r\n    let ns = parent ? parent.ns : 0;\r\n    if (parent && ns === 2) {\r\n      if (parent.tag === \"annotation-xml\") {\r\n        if (tag === \"svg\") {\r\n          return 1;\r\n        }\r\n        if (parent.props.some(\r\n          (a) => a.type === 6 && a.name === \"encoding\" && a.value != null && (a.value.content === \"text/html\" || a.value.content === \"application/xhtml+xml\")\r\n        )) {\r\n          ns = 0;\r\n        }\r\n      } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== \"mglyph\" && tag !== \"malignmark\") {\r\n        ns = 0;\r\n      }\r\n    } else if (parent && ns === 1) {\r\n      if (parent.tag === \"foreignObject\" || parent.tag === \"desc\" || parent.tag === \"title\") {\r\n        ns = 0;\r\n      }\r\n    }\r\n    if (ns === 0) {\r\n      if (tag === \"svg\") {\r\n        return 1;\r\n      }\r\n      if (tag === \"math\") {\r\n        return 2;\r\n      }\r\n    }\r\n    return ns;\r\n  },\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n  getTextMode({ tag, ns }) {\r\n    if (ns === 0) {\r\n      if (tag === \"textarea\" || tag === \"title\") {\r\n        return 1;\r\n      }\r\n      if (isRawTextContainer(tag)) {\r\n        return 2;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n};\r\n\r\nconst transformStyle = (node) => {\r\n  if (node.type === 1) {\r\n    node.props.forEach((p, i) => {\r\n      if (p.type === 6 && p.name === \"style\" && p.value) {\r\n        node.props[i] = {\r\n          type: 7,\r\n          name: `bind`,\r\n          arg: createSimpleExpression(`style`, true, p.loc),\r\n          exp: parseInlineCSS(p.value.content, p.loc),\r\n          modifiers: [],\r\n          loc: p.loc\r\n        };\r\n      }\r\n    });\r\n  }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n  const normalized = parseStringStyle(cssText);\r\n  return createSimpleExpression(\r\n    JSON.stringify(normalized),\r\n    false,\r\n    loc,\r\n    3\r\n  );\r\n};\r\n\r\nfunction createDOMCompilerError(code, loc) {\r\n  return createCompilerError(\r\n    code,\r\n    loc,\r\n    DOMErrorMessages \r\n  );\r\n}\r\nconst DOMErrorMessages = {\r\n  [53]: `v-html is missing expression.`,\r\n  [54]: `v-html will override element children.`,\r\n  [55]: `v-text is missing expression.`,\r\n  [56]: `v-text will override element children.`,\r\n  [57]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n  [58]: `v-model argument is not supported on plain elements.`,\r\n  [59]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n  [60]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n  [61]: `v-show is missing expression.`,\r\n  [62]: `<Transition> expects exactly one child element or component.`,\r\n  [63]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\r\n\r\nconst transformVHtml = (dir, node, context) => {\r\n  const { exp, loc } = dir;\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(53, loc)\r\n    );\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(54, loc)\r\n    );\r\n    node.children.length = 0;\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`innerHTML`, true, loc),\r\n        exp || createSimpleExpression(\"\", true)\r\n      )\r\n    ]\r\n  };\r\n};\r\n\r\nconst transformVText = (dir, node, context) => {\r\n  const { exp, loc } = dir;\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(55, loc)\r\n    );\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(56, loc)\r\n    );\r\n    node.children.length = 0;\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`textContent`, true),\r\n        exp ? getConstantType(exp, context) > 0 ? exp : createCallExpression(\r\n          context.helperString(TO_DISPLAY_STRING),\r\n          [exp],\r\n          loc\r\n        ) : createSimpleExpression(\"\", true)\r\n      )\r\n    ]\r\n  };\r\n};\r\n\r\nconst transformModel = (dir, node, context) => {\r\n  const baseResult = transformModel$1(dir, node, context);\r\n  if (!baseResult.props.length || node.tagType === 1) {\r\n    return baseResult;\r\n  }\r\n  if (dir.arg) {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        58,\r\n        dir.arg.loc\r\n      )\r\n    );\r\n  }\r\n  function checkDuplicatedValue() {\r\n    const value = findProp(node, \"value\");\r\n    if (value) {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          60,\r\n          value.loc\r\n        )\r\n      );\r\n    }\r\n  }\r\n  const { tag } = node;\r\n  const isCustomElement = context.isCustomElement(tag);\r\n  if (tag === \"input\" || tag === \"textarea\" || tag === \"select\" || isCustomElement) {\r\n    let directiveToUse = V_MODEL_TEXT;\r\n    let isInvalidType = false;\r\n    if (tag === \"input\" || isCustomElement) {\r\n      const type = findProp(node, `type`);\r\n      if (type) {\r\n        if (type.type === 7) {\r\n          directiveToUse = V_MODEL_DYNAMIC;\r\n        } else if (type.value) {\r\n          switch (type.value.content) {\r\n            case \"radio\":\r\n              directiveToUse = V_MODEL_RADIO;\r\n              break;\r\n            case \"checkbox\":\r\n              directiveToUse = V_MODEL_CHECKBOX;\r\n              break;\r\n            case \"file\":\r\n              isInvalidType = true;\r\n              context.onError(\r\n                createDOMCompilerError(\r\n                  59,\r\n                  dir.loc\r\n                )\r\n              );\r\n              break;\r\n            default:\r\n              checkDuplicatedValue();\r\n              break;\r\n          }\r\n        }\r\n      } else if (hasDynamicKeyVBind(node)) {\r\n        directiveToUse = V_MODEL_DYNAMIC;\r\n      } else {\r\n        checkDuplicatedValue();\r\n      }\r\n    } else if (tag === \"select\") {\r\n      directiveToUse = V_MODEL_SELECT;\r\n    } else {\r\n      checkDuplicatedValue();\r\n    }\r\n    if (!isInvalidType) {\r\n      baseResult.needRuntime = context.helper(directiveToUse);\r\n    }\r\n  } else {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        57,\r\n        dir.loc\r\n      )\r\n    );\r\n  }\r\n  baseResult.props = baseResult.props.filter(\r\n    (p) => !(p.key.type === 4 && p.key.content === \"modelValue\")\r\n  );\r\n  return baseResult;\r\n};\r\n\r\nconst isEventOptionModifier = /* @__PURE__ */ makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /* @__PURE__ */ makeMap(\r\n  // event propagation management\r\n  `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`\r\n);\r\nconst maybeKeyModifier = /* @__PURE__ */ makeMap(\"left,right\");\r\nconst isKeyboardEvent = /* @__PURE__ */ makeMap(\r\n  `onkeyup,onkeydown,onkeypress`,\r\n  true\r\n);\r\nconst resolveModifiers = (key, modifiers, context, loc) => {\r\n  const keyModifiers = [];\r\n  const nonKeyModifiers = [];\r\n  const eventOptionModifiers = [];\r\n  for (let i = 0; i < modifiers.length; i++) {\r\n    const modifier = modifiers[i];\r\n    if (isEventOptionModifier(modifier)) {\r\n      eventOptionModifiers.push(modifier);\r\n    } else {\r\n      if (maybeKeyModifier(modifier)) {\r\n        if (isStaticExp(key)) {\r\n          if (isKeyboardEvent(key.content)) {\r\n            keyModifiers.push(modifier);\r\n          } else {\r\n            nonKeyModifiers.push(modifier);\r\n          }\r\n        } else {\r\n          keyModifiers.push(modifier);\r\n          nonKeyModifiers.push(modifier);\r\n        }\r\n      } else {\r\n        if (isNonKeyModifier(modifier)) {\r\n          nonKeyModifiers.push(modifier);\r\n        } else {\r\n          keyModifiers.push(modifier);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    keyModifiers,\r\n    nonKeyModifiers,\r\n    eventOptionModifiers\r\n  };\r\n};\r\nconst transformClick = (key, event) => {\r\n  const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === \"onclick\";\r\n  return isStaticClick ? createSimpleExpression(event, true) : key.type !== 4 ? createCompoundExpression([\r\n    `(`,\r\n    key,\r\n    `) === \"onClick\" ? \"${event}\" : (`,\r\n    key,\r\n    `)`\r\n  ]) : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n  return transformOn$1(dir, node, context, (baseResult) => {\r\n    const { modifiers } = dir;\r\n    if (!modifiers.length)\r\n      return baseResult;\r\n    let { key, value: handlerExp } = baseResult.props[0];\r\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\r\n    if (nonKeyModifiers.includes(\"right\")) {\r\n      key = transformClick(key, `onContextmenu`);\r\n    }\r\n    if (nonKeyModifiers.includes(\"middle\")) {\r\n      key = transformClick(key, `onMouseup`);\r\n    }\r\n    if (nonKeyModifiers.length) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n        handlerExp,\r\n        JSON.stringify(nonKeyModifiers)\r\n      ]);\r\n    }\r\n    if (keyModifiers.length && // if event name is dynamic, always wrap with keys guard\r\n    (!isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n        handlerExp,\r\n        JSON.stringify(keyModifiers)\r\n      ]);\r\n    }\r\n    if (eventOptionModifiers.length) {\r\n      const modifierPostfix = eventOptionModifiers.map(capitalize$1).join(\"\");\r\n      key = isStaticExp(key) ? createSimpleExpression(`${key.content}${modifierPostfix}`, true) : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n    }\r\n    return {\r\n      props: [createObjectProperty(key, handlerExp)]\r\n    };\r\n  });\r\n};\r\n\r\nconst transformShow = (dir, node, context) => {\r\n  const { exp, loc } = dir;\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(61, loc)\r\n    );\r\n  }\r\n  return {\r\n    props: [],\r\n    needRuntime: context.helper(V_SHOW)\r\n  };\r\n};\r\n\r\nconst transformTransition = (node, context) => {\r\n  if (node.type === 1 && node.tagType === 1) {\r\n    const component = context.isBuiltInComponent(node.tag);\r\n    if (component === TRANSITION) {\r\n      return () => {\r\n        if (!node.children.length) {\r\n          return;\r\n        }\r\n        if (hasMultipleChildren(node)) {\r\n          context.onError(\r\n            createDOMCompilerError(\r\n              62,\r\n              {\r\n                start: node.children[0].loc.start,\r\n                end: node.children[node.children.length - 1].loc.end,\r\n                source: \"\"\r\n              }\r\n            )\r\n          );\r\n        }\r\n        const child = node.children[0];\r\n        if (child.type === 1) {\r\n          for (const p of child.props) {\r\n            if (p.type === 7 && p.name === \"show\") {\r\n              node.props.push({\r\n                type: 6,\r\n                name: \"persisted\",\r\n                value: void 0,\r\n                loc: node.loc\r\n              });\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n  const children = node.children = node.children.filter(\r\n    (c) => c.type !== 3 && !(c.type === 2 && !c.content.trim())\r\n  );\r\n  const child = children[0];\r\n  return children.length !== 1 || child.type === 11 || child.type === 9 && child.branches.some(hasMultipleChildren);\r\n}\r\n\r\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\r\nconst stringifyStatic = (children, context, parent) => {\r\n  if (context.scopes.vSlot > 0) {\r\n    return;\r\n  }\r\n  let nc = 0;\r\n  let ec = 0;\r\n  const currentChunk = [];\r\n  const stringifyCurrentChunk = (currentIndex) => {\r\n    if (nc >= 20 || ec >= 5) {\r\n      const staticCall = createCallExpression(context.helper(CREATE_STATIC), [\r\n        JSON.stringify(\r\n          currentChunk.map((node) => stringifyNode(node, context)).join(\"\")\r\n        ).replace(expReplaceRE, `\" + $1 + \"`),\r\n        // the 2nd argument indicates the number of DOM nodes this static vnode\r\n        // will insert / hydrate\r\n        String(currentChunk.length)\r\n      ]);\r\n      replaceHoist(currentChunk[0], staticCall, context);\r\n      if (currentChunk.length > 1) {\r\n        for (let i2 = 1; i2 < currentChunk.length; i2++) {\r\n          replaceHoist(currentChunk[i2], null, context);\r\n        }\r\n        const deleteCount = currentChunk.length - 1;\r\n        children.splice(currentIndex - currentChunk.length + 1, deleteCount);\r\n        return deleteCount;\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n  let i = 0;\r\n  for (; i < children.length; i++) {\r\n    const child = children[i];\r\n    const hoisted = getHoistedNode(child);\r\n    if (hoisted) {\r\n      const node = child;\r\n      const result = analyzeNode(node);\r\n      if (result) {\r\n        nc += result[0];\r\n        ec += result[1];\r\n        currentChunk.push(node);\r\n        continue;\r\n      }\r\n    }\r\n    i -= stringifyCurrentChunk(i);\r\n    nc = 0;\r\n    ec = 0;\r\n    currentChunk.length = 0;\r\n  }\r\n  stringifyCurrentChunk(i);\r\n};\r\nconst getHoistedNode = (node) => (node.type === 1 && node.tagType === 0 || node.type == 12) && node.codegenNode && node.codegenNode.type === 4 && node.codegenNode.hoisted;\r\nconst dataAriaRE = /^(data|aria)-/;\r\nconst isStringifiableAttr = (name, ns) => {\r\n  return (ns === 0 ? isKnownHtmlAttr(name) : ns === 1 ? isKnownSvgAttr(name) : false) || dataAriaRE.test(name);\r\n};\r\nconst replaceHoist = (node, replacement, context) => {\r\n  const hoistToReplace = node.codegenNode.hoisted;\r\n  context.hoists[context.hoists.indexOf(hoistToReplace)] = replacement;\r\n};\r\nconst isNonStringifiable = /* @__PURE__ */ makeMap(\r\n  `caption,thead,tr,th,tbody,td,tfoot,colgroup,col`\r\n);\r\nfunction analyzeNode(node) {\r\n  if (node.type === 1 && isNonStringifiable(node.tag)) {\r\n    return false;\r\n  }\r\n  if (node.type === 12) {\r\n    return [1, 0];\r\n  }\r\n  let nc = 1;\r\n  let ec = node.props.length > 0 ? 1 : 0;\r\n  let bailed = false;\r\n  const bail = () => {\r\n    bailed = true;\r\n    return false;\r\n  };\r\n  function walk(node2) {\r\n    for (let i = 0; i < node2.props.length; i++) {\r\n      const p = node2.props[i];\r\n      if (p.type === 6 && !isStringifiableAttr(p.name, node2.ns)) {\r\n        return bail();\r\n      }\r\n      if (p.type === 7 && p.name === \"bind\") {\r\n        if (p.arg && (p.arg.type === 8 || p.arg.isStatic && !isStringifiableAttr(p.arg.content, node2.ns))) {\r\n          return bail();\r\n        }\r\n        if (p.exp && (p.exp.type === 8 || p.exp.constType < 3)) {\r\n          return bail();\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < node2.children.length; i++) {\r\n      nc++;\r\n      const child = node2.children[i];\r\n      if (child.type === 1) {\r\n        if (child.props.length > 0) {\r\n          ec++;\r\n        }\r\n        walk(child);\r\n        if (bailed) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return walk(node) ? [nc, ec] : false;\r\n}\r\nfunction stringifyNode(node, context) {\r\n  if (isString$2(node)) {\r\n    return node;\r\n  }\r\n  if (isSymbol$1(node)) {\r\n    return ``;\r\n  }\r\n  switch (node.type) {\r\n    case 1:\r\n      return stringifyElement(node, context);\r\n    case 2:\r\n      return escapeHtml(node.content);\r\n    case 3:\r\n      return `<!--${escapeHtml(node.content)}-->`;\r\n    case 5:\r\n      return escapeHtml(toDisplayString(evaluateConstant(node.content)));\r\n    case 8:\r\n      return escapeHtml(evaluateConstant(node));\r\n    case 12:\r\n      return stringifyNode(node.content, context);\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\nfunction stringifyElement(node, context) {\r\n  let res = `<${node.tag}`;\r\n  let innerHTML = \"\";\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i];\r\n    if (p.type === 6) {\r\n      res += ` ${p.name}`;\r\n      if (p.value) {\r\n        res += `=\"${escapeHtml(p.value.content)}\"`;\r\n      }\r\n    } else if (p.type === 7) {\r\n      if (p.name === \"bind\") {\r\n        const exp = p.exp;\r\n        if (exp.content[0] === \"_\") {\r\n          res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\r\n          continue;\r\n        }\r\n        if (isBooleanAttr(p.arg.content) && exp.content === \"false\") {\r\n          continue;\r\n        }\r\n        let evaluated = evaluateConstant(exp);\r\n        if (evaluated != null) {\r\n          const arg = p.arg && p.arg.content;\r\n          if (arg === \"class\") {\r\n            evaluated = normalizeClass(evaluated);\r\n          } else if (arg === \"style\") {\r\n            evaluated = stringifyStyle(normalizeStyle(evaluated));\r\n          }\r\n          res += ` ${p.arg.content}=\"${escapeHtml(\r\n            evaluated\r\n          )}\"`;\r\n        }\r\n      } else if (p.name === \"html\") {\r\n        innerHTML = evaluateConstant(p.exp);\r\n      } else if (p.name === \"text\") {\r\n        innerHTML = escapeHtml(\r\n          toDisplayString(evaluateConstant(p.exp))\r\n        );\r\n      }\r\n    }\r\n  }\r\n  if (context.scopeId) {\r\n    res += ` ${context.scopeId}`;\r\n  }\r\n  res += `>`;\r\n  if (innerHTML) {\r\n    res += innerHTML;\r\n  } else {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n      res += stringifyNode(node.children[i], context);\r\n    }\r\n  }\r\n  if (!isVoidTag(node.tag)) {\r\n    res += `</${node.tag}>`;\r\n  }\r\n  return res;\r\n}\r\nfunction evaluateConstant(exp) {\r\n  if (exp.type === 4) {\r\n    return new Function(`return (${exp.content})`)();\r\n  } else {\r\n    let res = ``;\r\n    exp.children.forEach((c) => {\r\n      if (isString$2(c) || isSymbol$1(c)) {\r\n        return;\r\n      }\r\n      if (c.type === 2) {\r\n        res += c.content;\r\n      } else if (c.type === 5) {\r\n        res += toDisplayString(evaluateConstant(c.content));\r\n      } else {\r\n        res += evaluateConstant(c);\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n}\r\n\r\nconst ignoreSideEffectTags = (node, context) => {\r\n  if (node.type === 1 && node.tagType === 0 && (node.tag === \"script\" || node.tag === \"style\")) {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        63,\r\n        node.loc\r\n      )\r\n    );\r\n    context.removeNode();\r\n  }\r\n};\r\n\r\nconst DOMNodeTransforms = [\r\n  transformStyle,\r\n  ...[transformTransition] \r\n];\r\nconst DOMDirectiveTransforms = {\r\n  cloak: noopDirectiveTransform,\r\n  html: transformVHtml,\r\n  text: transformVText,\r\n  model: transformModel,\r\n  // override compiler-core\r\n  on: transformOn,\r\n  // override compiler-core\r\n  show: transformShow\r\n};\r\nfunction compile$1(template, options = {}) {\r\n  return baseCompile(\r\n    template,\r\n    extend({}, parserOptions, options, {\r\n      nodeTransforms: [\r\n        // ignore <script> and <tag>\r\n        // this is not put inside DOMNodeTransforms because that list is used\r\n        // by compiler-ssr to generate vnode fallback branches\r\n        ignoreSideEffectTags,\r\n        ...DOMNodeTransforms,\r\n        ...options.nodeTransforms || []\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        DOMDirectiveTransforms,\r\n        options.directiveTransforms || {}\r\n      ),\r\n      transformHoist: stringifyStatic\r\n    })\r\n  );\r\n}\r\nfunction parse$8(template, options = {}) {\r\n  return baseParse(template, extend({}, parserOptions, options));\r\n}\r\n\r\nvar CompilerDOM = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  BASE_TRANSITION: BASE_TRANSITION,\r\n  CAMELIZE: CAMELIZE,\r\n  CAPITALIZE: CAPITALIZE,\r\n  CREATE_BLOCK: CREATE_BLOCK,\r\n  CREATE_COMMENT: CREATE_COMMENT,\r\n  CREATE_ELEMENT_BLOCK: CREATE_ELEMENT_BLOCK,\r\n  CREATE_ELEMENT_VNODE: CREATE_ELEMENT_VNODE,\r\n  CREATE_SLOTS: CREATE_SLOTS,\r\n  CREATE_STATIC: CREATE_STATIC,\r\n  CREATE_TEXT: CREATE_TEXT,\r\n  CREATE_VNODE: CREATE_VNODE,\r\n  DOMDirectiveTransforms: DOMDirectiveTransforms,\r\n  DOMNodeTransforms: DOMNodeTransforms,\r\n  FRAGMENT: FRAGMENT,\r\n  GUARD_REACTIVE_PROPS: GUARD_REACTIVE_PROPS,\r\n  IS_MEMO_SAME: IS_MEMO_SAME,\r\n  IS_REF: IS_REF,\r\n  KEEP_ALIVE: KEEP_ALIVE,\r\n  MERGE_PROPS: MERGE_PROPS,\r\n  NORMALIZE_CLASS: NORMALIZE_CLASS,\r\n  NORMALIZE_PROPS: NORMALIZE_PROPS,\r\n  NORMALIZE_STYLE: NORMALIZE_STYLE,\r\n  OPEN_BLOCK: OPEN_BLOCK,\r\n  POP_SCOPE_ID: POP_SCOPE_ID,\r\n  PUSH_SCOPE_ID: PUSH_SCOPE_ID,\r\n  RENDER_LIST: RENDER_LIST,\r\n  RENDER_SLOT: RENDER_SLOT,\r\n  RESOLVE_COMPONENT: RESOLVE_COMPONENT,\r\n  RESOLVE_DIRECTIVE: RESOLVE_DIRECTIVE,\r\n  RESOLVE_DYNAMIC_COMPONENT: RESOLVE_DYNAMIC_COMPONENT,\r\n  RESOLVE_FILTER: RESOLVE_FILTER,\r\n  SET_BLOCK_TRACKING: SET_BLOCK_TRACKING,\r\n  SUSPENSE: SUSPENSE,\r\n  TELEPORT: TELEPORT,\r\n  TO_DISPLAY_STRING: TO_DISPLAY_STRING,\r\n  TO_HANDLERS: TO_HANDLERS,\r\n  TO_HANDLER_KEY: TO_HANDLER_KEY,\r\n  TRANSITION: TRANSITION,\r\n  TRANSITION_GROUP: TRANSITION_GROUP,\r\n  TS_NODE_TYPES: TS_NODE_TYPES,\r\n  UNREF: UNREF,\r\n  V_MODEL_CHECKBOX: V_MODEL_CHECKBOX,\r\n  V_MODEL_DYNAMIC: V_MODEL_DYNAMIC,\r\n  V_MODEL_RADIO: V_MODEL_RADIO,\r\n  V_MODEL_SELECT: V_MODEL_SELECT,\r\n  V_MODEL_TEXT: V_MODEL_TEXT,\r\n  V_ON_WITH_KEYS: V_ON_WITH_KEYS,\r\n  V_ON_WITH_MODIFIERS: V_ON_WITH_MODIFIERS,\r\n  V_SHOW: V_SHOW,\r\n  WITH_CTX: WITH_CTX,\r\n  WITH_DIRECTIVES: WITH_DIRECTIVES,\r\n  WITH_MEMO: WITH_MEMO,\r\n  advancePositionWithClone: advancePositionWithClone,\r\n  advancePositionWithMutation: advancePositionWithMutation,\r\n  assert: assert,\r\n  baseCompile: baseCompile,\r\n  baseParse: baseParse,\r\n  buildDirectiveArgs: buildDirectiveArgs,\r\n  buildProps: buildProps,\r\n  buildSlots: buildSlots,\r\n  checkCompatEnabled: checkCompatEnabled,\r\n  compile: compile$1,\r\n  convertToBlock: convertToBlock,\r\n  createArrayExpression: createArrayExpression,\r\n  createAssignmentExpression: createAssignmentExpression,\r\n  createBlockStatement: createBlockStatement,\r\n  createCacheExpression: createCacheExpression,\r\n  createCallExpression: createCallExpression,\r\n  createCompilerError: createCompilerError,\r\n  createCompoundExpression: createCompoundExpression,\r\n  createConditionalExpression: createConditionalExpression,\r\n  createDOMCompilerError: createDOMCompilerError,\r\n  createForLoopParams: createForLoopParams,\r\n  createFunctionExpression: createFunctionExpression,\r\n  createIfStatement: createIfStatement,\r\n  createInterpolation: createInterpolation,\r\n  createObjectExpression: createObjectExpression,\r\n  createObjectProperty: createObjectProperty,\r\n  createReturnStatement: createReturnStatement,\r\n  createRoot: createRoot,\r\n  createSequenceExpression: createSequenceExpression,\r\n  createSimpleExpression: createSimpleExpression,\r\n  createStructuralDirectiveTransform: createStructuralDirectiveTransform,\r\n  createTemplateLiteral: createTemplateLiteral,\r\n  createTransformContext: createTransformContext,\r\n  createVNodeCall: createVNodeCall,\r\n  extractIdentifiers: extractIdentifiers,\r\n  findDir: findDir,\r\n  findProp: findProp,\r\n  generate: generate,\r\n  generateCodeFrame: generateCodeFrame,\r\n  getBaseTransformPreset: getBaseTransformPreset,\r\n  getConstantType: getConstantType,\r\n  getInnerRange: getInnerRange,\r\n  getMemoedVNodeCall: getMemoedVNodeCall,\r\n  getVNodeBlockHelper: getVNodeBlockHelper,\r\n  getVNodeHelper: getVNodeHelper,\r\n  hasDynamicKeyVBind: hasDynamicKeyVBind,\r\n  hasScopeRef: hasScopeRef,\r\n  helperNameMap: helperNameMap,\r\n  injectProp: injectProp,\r\n  isBuiltInType: isBuiltInType,\r\n  isCoreComponent: isCoreComponent,\r\n  isFunctionType: isFunctionType,\r\n  isInDestructureAssignment: isInDestructureAssignment,\r\n  isMemberExpression: isMemberExpression,\r\n  isMemberExpressionBrowser: isMemberExpressionBrowser,\r\n  isMemberExpressionNode: isMemberExpressionNode,\r\n  isReferencedIdentifier: isReferencedIdentifier,\r\n  isSimpleIdentifier: isSimpleIdentifier,\r\n  isSlotOutlet: isSlotOutlet,\r\n  isStaticArgOf: isStaticArgOf,\r\n  isStaticExp: isStaticExp,\r\n  isStaticProperty: isStaticProperty,\r\n  isStaticPropertyKey: isStaticPropertyKey,\r\n  isTemplateNode: isTemplateNode,\r\n  isText: isText$1,\r\n  isVSlot: isVSlot,\r\n  locStub: locStub,\r\n  noopDirectiveTransform: noopDirectiveTransform,\r\n  parse: parse$8,\r\n  parserOptions: parserOptions,\r\n  processExpression: processExpression,\r\n  processFor: processFor,\r\n  processIf: processIf,\r\n  processSlotOutlet: processSlotOutlet,\r\n  registerRuntimeHelpers: registerRuntimeHelpers,\r\n  resolveComponentType: resolveComponentType,\r\n  stringifyExpression: stringifyExpression,\r\n  toValidAssetId: toValidAssetId,\r\n  trackSlotScopes: trackSlotScopes,\r\n  trackVForSlotScopes: trackVForSlotScopes,\r\n  transform: transform$1,\r\n  transformBind: transformBind,\r\n  transformElement: transformElement,\r\n  transformExpression: transformExpression,\r\n  transformModel: transformModel$1,\r\n  transformOn: transformOn$1,\r\n  transformStyle: transformStyle,\r\n  traverseNode: traverseNode,\r\n  walkBlockDeclarations: walkBlockDeclarations,\r\n  walkFunctionParams: walkFunctionParams,\r\n  walkIdentifiers: walkIdentifiers,\r\n  warnDeprecation: warnDeprecation\r\n});\r\n\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// resolves . and .. elements in a path array with directory names there\r\n// must be no slashes, empty elements, or device names (c:\\) in the array\r\n// (so also no leading and trailing slashes - it does not distinguish\r\n// relative and absolute paths)\r\nfunction normalizeArray(parts, allowAboveRoot) {\r\n  // if the path tries to go above the root, `up` ends up > 0\r\n  var up = 0;\r\n  for (var i = parts.length - 1; i >= 0; i--) {\r\n    var last = parts[i];\r\n    if (last === '.') {\r\n      parts.splice(i, 1);\r\n    } else if (last === '..') {\r\n      parts.splice(i, 1);\r\n      up++;\r\n    } else if (up) {\r\n      parts.splice(i, 1);\r\n      up--;\r\n    }\r\n  }\r\n\r\n  // if the path is allowed to go above the root, restore leading ..s\r\n  if (allowAboveRoot) {\r\n    for (; up--; up) {\r\n      parts.unshift('..');\r\n    }\r\n  }\r\n\r\n  return parts;\r\n}\r\n\r\n// Split a filename into [root, dir, basename, ext], unix version\r\n// 'root' is just a slash, or nothing.\r\nvar splitPathRe =\r\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\nvar splitPath = function(filename) {\r\n  return splitPathRe.exec(filename).slice(1);\r\n};\r\n\r\n// path.resolve([from ...], to)\r\n// posix version\r\nfunction resolve$2() {\r\n  var resolvedPath = '',\r\n      resolvedAbsolute = false;\r\n\r\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n    var path = (i >= 0) ? arguments[i] : '/';\r\n\r\n    // Skip empty and invalid entries\r\n    if (typeof path !== 'string') {\r\n      throw new TypeError('Arguments to path.resolve must be strings');\r\n    } else if (!path) {\r\n      continue;\r\n    }\r\n\r\n    resolvedPath = path + '/' + resolvedPath;\r\n    resolvedAbsolute = path.charAt(0) === '/';\r\n  }\r\n\r\n  // At this point the path should be resolved to a full absolute path, but\r\n  // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n  // Normalize the path\r\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\r\n    return !!p;\r\n  }), !resolvedAbsolute).join('/');\r\n\r\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n}\r\n// path.normalize(path)\r\n// posix version\r\nfunction normalize$1(path) {\r\n  var isPathAbsolute = isAbsolute$1(path),\r\n      trailingSlash = substr(path, -1) === '/';\r\n\r\n  // Normalize the path\r\n  path = normalizeArray(filter(path.split('/'), function(p) {\r\n    return !!p;\r\n  }), !isPathAbsolute).join('/');\r\n\r\n  if (!path && !isPathAbsolute) {\r\n    path = '.';\r\n  }\r\n  if (path && trailingSlash) {\r\n    path += '/';\r\n  }\r\n\r\n  return (isPathAbsolute ? '/' : '') + path;\r\n}\r\n// posix version\r\nfunction isAbsolute$1(path) {\r\n  return path.charAt(0) === '/';\r\n}\r\n\r\n// posix version\r\nfunction join$1() {\r\n  var paths = Array.prototype.slice.call(arguments, 0);\r\n  return normalize$1(filter(paths, function(p, index) {\r\n    if (typeof p !== 'string') {\r\n      throw new TypeError('Arguments to path.join must be strings');\r\n    }\r\n    return p;\r\n  }).join('/'));\r\n}\r\n\r\n\r\n// path.relative(from, to)\r\n// posix version\r\nfunction relative$1(from, to) {\r\n  from = resolve$2(from).substr(1);\r\n  to = resolve$2(to).substr(1);\r\n\r\n  function trim(arr) {\r\n    var start = 0;\r\n    for (; start < arr.length; start++) {\r\n      if (arr[start] !== '') break;\r\n    }\r\n\r\n    var end = arr.length - 1;\r\n    for (; end >= 0; end--) {\r\n      if (arr[end] !== '') break;\r\n    }\r\n\r\n    if (start > end) return [];\r\n    return arr.slice(start, end - start + 1);\r\n  }\r\n\r\n  var fromParts = trim(from.split('/'));\r\n  var toParts = trim(to.split('/'));\r\n\r\n  var length = Math.min(fromParts.length, toParts.length);\r\n  var samePartsLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n    if (fromParts[i] !== toParts[i]) {\r\n      samePartsLength = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var outputParts = [];\r\n  for (var i = samePartsLength; i < fromParts.length; i++) {\r\n    outputParts.push('..');\r\n  }\r\n\r\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\r\n  return outputParts.join('/');\r\n}\r\n\r\nvar sep$1 = '/';\r\nvar delimiter$1 = ':';\r\n\r\nfunction dirname$2(path) {\r\n  var result = splitPath(path),\r\n      root = result[0],\r\n      dir = result[1];\r\n\r\n  if (!root && !dir) {\r\n    // No dirname whatsoever\r\n    return '.';\r\n  }\r\n\r\n  if (dir) {\r\n    // It has a dirname, strip trailing slash\r\n    dir = dir.substr(0, dir.length - 1);\r\n  }\r\n\r\n  return root + dir;\r\n}\r\n\r\nfunction basename(path, ext) {\r\n  var f = splitPath(path)[2];\r\n  // TODO: make this comparison case-insensitive on windows?\r\n  if (ext && f.substr(-1 * ext.length) === ext) {\r\n    f = f.substr(0, f.length - ext.length);\r\n  }\r\n  return f;\r\n}\r\n\r\n\r\nfunction extname(path) {\r\n  return splitPath(path)[3];\r\n}\r\nvar path = {\r\n  extname: extname,\r\n  basename: basename,\r\n  dirname: dirname$2,\r\n  sep: sep$1,\r\n  delimiter: delimiter$1,\r\n  relative: relative$1,\r\n  join: join$1,\r\n  isAbsolute: isAbsolute$1,\r\n  normalize: normalize$1,\r\n  resolve: resolve$2\r\n};\r\nfunction filter (xs, f) {\r\n    if (xs.filter) return xs.filter(f);\r\n    var res = [];\r\n    for (var i = 0; i < xs.length; i++) {\r\n        if (f(xs[i], i, xs)) res.push(xs[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\n// String.prototype.substr - negative index don't work in IE8\r\nvar substr = 'ab'.substr(-1) === 'b' ?\r\n    function (str, start, len) { return str.substr(start, len) } :\r\n    function (str, start, len) {\r\n        if (start < 0) start = str.length + start;\r\n        return str.substr(start, len);\r\n    }\r\n;\r\n\r\nvar _polyfillNode_path = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  basename: basename,\r\n  default: path,\r\n  delimiter: delimiter$1,\r\n  dirname: dirname$2,\r\n  extname: extname,\r\n  isAbsolute: isAbsolute$1,\r\n  join: join$1,\r\n  normalize: normalize$1,\r\n  relative: relative$1,\r\n  resolve: resolve$2,\r\n  sep: sep$1\r\n});\r\n\r\nconst UNKNOWN_TYPE = \"Unknown\";\r\nfunction resolveObjectKey(node, computed) {\r\n  switch (node.type) {\r\n    case \"StringLiteral\":\r\n    case \"NumericLiteral\":\r\n      return String(node.value);\r\n    case \"Identifier\":\r\n      if (!computed)\r\n        return node.name;\r\n  }\r\n  return void 0;\r\n}\r\nfunction concatStrings(strs) {\r\n  return strs.filter((s) => !!s).join(\", \");\r\n}\r\nfunction isLiteralNode(node) {\r\n  return node.type.endsWith(\"Literal\");\r\n}\r\nfunction unwrapTSNode(node) {\r\n  if (TS_NODE_TYPES.includes(node.type)) {\r\n    return unwrapTSNode(node.expression);\r\n  } else {\r\n    return node;\r\n  }\r\n}\r\nfunction isCallOf(node, test) {\r\n  return !!(node && test && node.type === \"CallExpression\" && node.callee.type === \"Identifier\" && (typeof test === \"string\" ? node.callee.name === test : test(node.callee.name)));\r\n}\r\nfunction toRuntimeTypeString(types) {\r\n  return types.length > 1 ? `[${types.join(\", \")}]` : types[0];\r\n}\r\nfunction getImportedName(specifier) {\r\n  if (specifier.type === \"ImportSpecifier\")\r\n    return specifier.imported.type === \"Identifier\" ? specifier.imported.name : specifier.imported.value;\r\n  else if (specifier.type === \"ImportNamespaceSpecifier\")\r\n    return \"*\";\r\n  return \"default\";\r\n}\r\nfunction getId(node) {\r\n  return node.type === \"Identifier\" ? node.name : node.type === \"StringLiteral\" ? node.value : null;\r\n}\r\nconst normalize = (path.posix || path).normalize;\r\nconst windowsSlashRE = /\\\\/g;\r\nfunction normalizePath(p) {\r\n  return normalize(p.replace(windowsSlashRE, \"/\"));\r\n}\r\nconst joinPaths = (path.posix || path).join;\r\nconst escapeSymbolsRE = /[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~]/g;\r\nfunction getEscapedKey(key) {\r\n  return escapeSymbolsRE.test(key) ? JSON.stringify(key) : key;\r\n}\r\n\r\nfunction pad$1 (hash, len) {\r\n  while (hash.length < len) {\r\n    hash = '0' + hash;\r\n  }\r\n  return hash;\r\n}\r\n\r\nfunction fold (hash, text) {\r\n  var i;\r\n  var chr;\r\n  var len;\r\n  if (text.length === 0) {\r\n    return hash;\r\n  }\r\n  for (i = 0, len = text.length; i < len; i++) {\r\n    chr = text.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + chr;\r\n    hash |= 0;\r\n  }\r\n  return hash < 0 ? hash * -2 : hash;\r\n}\r\n\r\nfunction foldObject (hash, o, seen) {\r\n  return Object.keys(o).sort().reduce(foldKey, hash);\r\n  function foldKey (hash, key) {\r\n    return foldValue(hash, o[key], key, seen);\r\n  }\r\n}\r\n\r\nfunction foldValue (input, value, key, seen) {\r\n  var hash = fold(fold(fold(input, key), toString$2(value)), typeof value);\r\n  if (value === null) {\r\n    return fold(hash, 'null');\r\n  }\r\n  if (value === undefined) {\r\n    return fold(hash, 'undefined');\r\n  }\r\n  if (typeof value === 'object' || typeof value === 'function') {\r\n    if (seen.indexOf(value) !== -1) {\r\n      return fold(hash, '[Circular]' + key);\r\n    }\r\n    seen.push(value);\r\n\r\n    var objHash = foldObject(hash, value, seen);\r\n\r\n    if (!('valueOf' in value) || typeof value.valueOf !== 'function') {\r\n      return objHash;\r\n    }\r\n\r\n    try {\r\n      return fold(objHash, String(value.valueOf()))\r\n    } catch (err) {\r\n      return fold(objHash, '[valueOf exception]' + (err.stack || err.message))\r\n    }\r\n  }\r\n  return fold(hash, value.toString());\r\n}\r\n\r\nfunction toString$2 (o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n\r\nfunction sum (o) {\r\n  return pad$1(foldValue(0, o, '', []).toString(16), 8);\r\n}\r\n\r\nvar hashSum = sum;\r\n\r\nvar hash = hashSum;\r\n\r\nconst CSS_VARS_HELPER = `useCssVars`;\r\nfunction genCssVarsFromList(vars, id, isProd, isSSR = false) {\r\n  return `{\r\n  ${vars.map(\r\n    (key) => `\"${isSSR ? `--` : ``}${genVarName(id, key, isProd)}\": (${key})`\r\n  ).join(\",\\n  \")}\r\n}`;\r\n}\r\nfunction genVarName(id, raw, isProd) {\r\n  if (isProd) {\r\n    return hash(id + raw);\r\n  } else {\r\n    return `${id}-${raw.replace(escapeSymbolsRE, (s) => `\\\\${s}`)}`;\r\n  }\r\n}\r\nfunction normalizeExpression(exp) {\r\n  exp = exp.trim();\r\n  if (exp[0] === `'` && exp[exp.length - 1] === `'` || exp[0] === `\"` && exp[exp.length - 1] === `\"`) {\r\n    return exp.slice(1, -1);\r\n  }\r\n  return exp;\r\n}\r\nconst vBindRE = /v-bind\\s*\\(/g;\r\nfunction parseCssVars(sfc) {\r\n  const vars = [];\r\n  sfc.styles.forEach((style) => {\r\n    let match;\r\n    const content = style.content.replace(/\\/\\*([\\s\\S]*?)\\*\\//g, \"\");\r\n    while (match = vBindRE.exec(content)) {\r\n      const start = match.index + match[0].length;\r\n      const end = lexBinding(content, start);\r\n      if (end !== null) {\r\n        const variable = normalizeExpression(content.slice(start, end));\r\n        if (!vars.includes(variable)) {\r\n          vars.push(variable);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return vars;\r\n}\r\nfunction lexBinding(content, start) {\r\n  let state = 0 /* inParens */;\r\n  let parenDepth = 0;\r\n  for (let i = start; i < content.length; i++) {\r\n    const char = content.charAt(i);\r\n    switch (state) {\r\n      case 0 /* inParens */:\r\n        if (char === `'`) {\r\n          state = 1 /* inSingleQuoteString */;\r\n        } else if (char === `\"`) {\r\n          state = 2 /* inDoubleQuoteString */;\r\n        } else if (char === `(`) {\r\n          parenDepth++;\r\n        } else if (char === `)`) {\r\n          if (parenDepth > 0) {\r\n            parenDepth--;\r\n          } else {\r\n            return i;\r\n          }\r\n        }\r\n        break;\r\n      case 1 /* inSingleQuoteString */:\r\n        if (char === `'`) {\r\n          state = 0 /* inParens */;\r\n        }\r\n        break;\r\n      case 2 /* inDoubleQuoteString */:\r\n        if (char === `\"`) {\r\n          state = 0 /* inParens */;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nconst cssVarsPlugin = (opts) => {\r\n  const { id, isProd } = opts;\r\n  return {\r\n    postcssPlugin: \"vue-sfc-vars\",\r\n    Declaration(decl) {\r\n      const value = decl.value;\r\n      if (vBindRE.test(value)) {\r\n        vBindRE.lastIndex = 0;\r\n        let transformed = \"\";\r\n        let lastIndex = 0;\r\n        let match;\r\n        while (match = vBindRE.exec(value)) {\r\n          const start = match.index + match[0].length;\r\n          const end = lexBinding(value, start);\r\n          if (end !== null) {\r\n            const variable = normalizeExpression(value.slice(start, end));\r\n            transformed += value.slice(lastIndex, match.index) + `var(--${genVarName(id, variable, isProd)})`;\r\n            lastIndex = end + 1;\r\n          }\r\n        }\r\n        decl.value = transformed + value.slice(lastIndex);\r\n      }\r\n    }\r\n  };\r\n};\r\ncssVarsPlugin.postcss = true;\r\nfunction genCssVarsCode(vars, bindings, id, isProd) {\r\n  const varsExp = genCssVarsFromList(vars, id, isProd);\r\n  const exp = createSimpleExpression(varsExp, false);\r\n  const context = createTransformContext(createRoot([]), {\r\n    prefixIdentifiers: true,\r\n    inline: true,\r\n    bindingMetadata: bindings.__isScriptSetup === false ? void 0 : bindings\r\n  });\r\n  const transformed = processExpression(exp, context);\r\n  const transformedString = transformed.type === 4 ? transformed.content : transformed.children.map((c) => {\r\n    return typeof c === \"string\" ? c : c.content;\r\n  }).join(\"\");\r\n  return `_${CSS_VARS_HELPER}(_ctx => (${transformedString}))`;\r\n}\r\nfunction genNormalScriptCssVarsCode(cssVars, bindings, id, isProd, defaultVar) {\r\n  return `\r\nimport { ${CSS_VARS_HELPER} as _${CSS_VARS_HELPER} } from 'vue'\r\nconst __injectCSSVars__ = () => {\r\n${genCssVarsCode(\r\n    cssVars,\r\n    bindings,\r\n    id,\r\n    isProd\r\n  )}}\r\nconst __setup__ = ${defaultVar}.setup\r\n${defaultVar}.setup = __setup__\r\n  ? (props, ctx) => { __injectCSSVars__();return __setup__(props, ctx) }\r\n  : __injectCSSVars__\r\n`;\r\n}\r\n\r\nfunction createCache(size = 500) {\r\n  {\r\n    return /* @__PURE__ */ new Map();\r\n  }\r\n}\r\n\r\nfunction isImportUsed(local, sfc) {\r\n  return new RegExp(\r\n    // #4274 escape $ since it's a special char in regex\r\n    // (and is the only regex special char that is valid in identifiers)\r\n    `[^\\\\w$_]${local.replace(/\\$/g, \"\\\\$\")}[^\\\\w$_]`\r\n  ).test(resolveTemplateUsageCheckString(sfc));\r\n}\r\nconst templateUsageCheckCache = createCache();\r\nfunction resolveTemplateUsageCheckString(sfc) {\r\n  const { content, ast } = sfc.template;\r\n  const cached = templateUsageCheckCache.get(content);\r\n  if (cached) {\r\n    return cached;\r\n  }\r\n  let code = \"\";\r\n  transform$1(createRoot([ast]), {\r\n    nodeTransforms: [\r\n      (node) => {\r\n        if (node.type === 1) {\r\n          if (!parserOptions.isNativeTag(node.tag) && !parserOptions.isBuiltInComponent(node.tag)) {\r\n            code += `,${camelize(node.tag)},${capitalize$1(camelize(node.tag))}`;\r\n          }\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const prop = node.props[i];\r\n            if (prop.type === 7) {\r\n              if (!isBuiltInDirective(prop.name)) {\r\n                code += `,v${capitalize$1(camelize(prop.name))}`;\r\n              }\r\n              if (prop.exp) {\r\n                code += `,${processExp(\r\n                  prop.exp.content,\r\n                  prop.name\r\n                )}`;\r\n              }\r\n            }\r\n          }\r\n        } else if (node.type === 5) {\r\n          code += `,${processExp(\r\n            node.content.content\r\n          )}`;\r\n        }\r\n      }\r\n    ]\r\n  });\r\n  code += \";\";\r\n  templateUsageCheckCache.set(content, code);\r\n  return code;\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\nfunction processExp(exp, dir) {\r\n  if (/ as\\s+\\w|<.*>|:/.test(exp)) {\r\n    if (dir === \"slot\") {\r\n      exp = `(${exp})=>{}`;\r\n    } else if (dir === \"on\") {\r\n      exp = `()=>{return ${exp}}`;\r\n    } else if (dir === \"for\") {\r\n      const inMatch = exp.match(forAliasRE);\r\n      if (inMatch) {\r\n        let [, LHS, RHS] = inMatch;\r\n        LHS = LHS.trim().replace(/^\\(|\\)$/g, \"\");\r\n        return processExp(`(${LHS})=>{}`) + processExp(RHS);\r\n      }\r\n    }\r\n    let ret = \"\";\r\n    const ast = parseExpression_1(exp, { plugins: [\"typescript\"] });\r\n    walkIdentifiers(ast, (node) => {\r\n      ret += `,` + node.name;\r\n    });\r\n    return ret;\r\n  }\r\n  return stripStrings(exp);\r\n}\r\nfunction stripStrings(exp) {\r\n  return exp.replace(/'[^']*'|\"[^\"]*\"/g, \"\").replace(/`[^`]+`/g, stripTemplateString);\r\n}\r\nfunction stripTemplateString(str) {\r\n  const interpMatch = str.match(/\\${[^}]+}/g);\r\n  if (interpMatch) {\r\n    return interpMatch.map((m) => m.slice(2, -1)).join(\",\");\r\n  }\r\n  return \"\";\r\n}\r\n\r\nvar __defProp$a = Object.defineProperty;\r\nvar __getOwnPropSymbols$a = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$a = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$a = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$a = (obj, key, value) => key in obj ? __defProp$a(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$a = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$a.call(b, prop))\r\n      __defNormalProp$a(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$a)\r\n    for (var prop of __getOwnPropSymbols$a(b)) {\r\n      if (__propIsEnum$a.call(b, prop))\r\n        __defNormalProp$a(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nconst DEFAULT_FILENAME = \"anonymous.vue\";\r\nconst parseCache = createCache();\r\nfunction parse$7(source, {\r\n  sourceMap = true,\r\n  filename = DEFAULT_FILENAME,\r\n  sourceRoot = \"\",\r\n  pad = false,\r\n  ignoreEmpty = true,\r\n  compiler = CompilerDOM\r\n} = {}) {\r\n  const sourceKey = source + sourceMap + filename + sourceRoot + pad + compiler.parse;\r\n  const cache = parseCache.get(sourceKey);\r\n  if (cache) {\r\n    return cache;\r\n  }\r\n  const descriptor = {\r\n    filename,\r\n    source,\r\n    template: null,\r\n    script: null,\r\n    scriptSetup: null,\r\n    styles: [],\r\n    customBlocks: [],\r\n    cssVars: [],\r\n    slotted: false,\r\n    shouldForceReload: (prevImports) => hmrShouldReload(prevImports, descriptor)\r\n  };\r\n  const errors = [];\r\n  const ast = compiler.parse(source, {\r\n    // there are no components at SFC parsing level\r\n    isNativeTag: () => true,\r\n    // preserve all whitespaces\r\n    isPreTag: () => true,\r\n    getTextMode: ({ tag, props }, parent) => {\r\n      if (!parent && tag !== \"template\" || // <template lang=\"xxx\"> should also be treated as raw text\r\n      tag === \"template\" && props.some(\r\n        (p) => p.type === 6 && p.name === \"lang\" && p.value && p.value.content && p.value.content !== \"html\"\r\n      )) {\r\n        return 2;\r\n      } else {\r\n        return 0;\r\n      }\r\n    },\r\n    onError: (e) => {\r\n      errors.push(e);\r\n    }\r\n  });\r\n  ast.children.forEach((node) => {\r\n    if (node.type !== 1) {\r\n      return;\r\n    }\r\n    if (ignoreEmpty && node.tag !== \"template\" && isEmpty(node) && !hasSrc(node)) {\r\n      return;\r\n    }\r\n    switch (node.tag) {\r\n      case \"template\":\r\n        if (!descriptor.template) {\r\n          const templateBlock = descriptor.template = createBlock(\r\n            node,\r\n            source,\r\n            false\r\n          );\r\n          templateBlock.ast = node;\r\n          if (templateBlock.attrs.functional) {\r\n            const err = new SyntaxError(\r\n              `<template functional> is no longer supported in Vue 3, since functional components no longer have significant performance difference from stateful ones. Just use a normal <template> instead.`\r\n            );\r\n            err.loc = node.props.find((p) => p.name === \"functional\").loc;\r\n            errors.push(err);\r\n          }\r\n        } else {\r\n          errors.push(createDuplicateBlockError(node));\r\n        }\r\n        break;\r\n      case \"script\":\r\n        const scriptBlock = createBlock(node, source, pad);\r\n        const isSetup = !!scriptBlock.attrs.setup;\r\n        if (isSetup && !descriptor.scriptSetup) {\r\n          descriptor.scriptSetup = scriptBlock;\r\n          break;\r\n        }\r\n        if (!isSetup && !descriptor.script) {\r\n          descriptor.script = scriptBlock;\r\n          break;\r\n        }\r\n        errors.push(createDuplicateBlockError(node, isSetup));\r\n        break;\r\n      case \"style\":\r\n        const styleBlock = createBlock(node, source, pad);\r\n        if (styleBlock.attrs.vars) {\r\n          errors.push(\r\n            new SyntaxError(\r\n              `<style vars> has been replaced by a new proposal: https://github.com/vuejs/rfcs/pull/231`\r\n            )\r\n          );\r\n        }\r\n        descriptor.styles.push(styleBlock);\r\n        break;\r\n      default:\r\n        descriptor.customBlocks.push(createBlock(node, source, pad));\r\n        break;\r\n    }\r\n  });\r\n  if (!descriptor.template && !descriptor.script && !descriptor.scriptSetup) {\r\n    errors.push(\r\n      new SyntaxError(\r\n        `At least one <template> or <script> is required in a single file component.`\r\n      )\r\n    );\r\n  }\r\n  if (descriptor.scriptSetup) {\r\n    if (descriptor.scriptSetup.src) {\r\n      errors.push(\r\n        new SyntaxError(\r\n          `<script setup> cannot use the \"src\" attribute because its syntax will be ambiguous outside of the component.`\r\n        )\r\n      );\r\n      descriptor.scriptSetup = null;\r\n    }\r\n    if (descriptor.script && descriptor.script.src) {\r\n      errors.push(\r\n        new SyntaxError(\r\n          `<script> cannot use the \"src\" attribute when <script setup> is also present because they must be processed together.`\r\n        )\r\n      );\r\n      descriptor.script = null;\r\n    }\r\n  }\r\n  if (sourceMap) {\r\n    const genMap = (block) => {\r\n      if (block && !block.src) {\r\n        block.map = generateSourceMap(\r\n          filename,\r\n          source,\r\n          block.content,\r\n          sourceRoot,\r\n          !pad || block.type === \"template\" ? block.loc.start.line - 1 : 0\r\n        );\r\n      }\r\n    };\r\n    genMap(descriptor.template);\r\n    genMap(descriptor.script);\r\n    descriptor.styles.forEach(genMap);\r\n    descriptor.customBlocks.forEach(genMap);\r\n  }\r\n  descriptor.cssVars = parseCssVars(descriptor);\r\n  const slottedRE = /(?:::v-|:)slotted\\(/;\r\n  descriptor.slotted = descriptor.styles.some(\r\n    (s) => s.scoped && slottedRE.test(s.content)\r\n  );\r\n  const result = {\r\n    descriptor,\r\n    errors\r\n  };\r\n  parseCache.set(sourceKey, result);\r\n  return result;\r\n}\r\nfunction createDuplicateBlockError(node, isScriptSetup = false) {\r\n  const err = new SyntaxError(\r\n    `Single file component can contain only one <${node.tag}${isScriptSetup ? ` setup` : ``}> element`\r\n  );\r\n  err.loc = node.loc;\r\n  return err;\r\n}\r\nfunction createBlock(node, source, pad) {\r\n  const type = node.tag;\r\n  let { start, end } = node.loc;\r\n  let content = \"\";\r\n  if (node.children.length) {\r\n    start = node.children[0].loc.start;\r\n    end = node.children[node.children.length - 1].loc.end;\r\n    content = source.slice(start.offset, end.offset);\r\n  } else {\r\n    const offset = node.loc.source.indexOf(`</`);\r\n    if (offset > -1) {\r\n      start = {\r\n        line: start.line,\r\n        column: start.column + offset,\r\n        offset: start.offset + offset\r\n      };\r\n    }\r\n    end = __spreadValues$a({}, start);\r\n  }\r\n  const loc = {\r\n    source: content,\r\n    start,\r\n    end\r\n  };\r\n  const attrs = {};\r\n  const block = {\r\n    type,\r\n    content,\r\n    loc,\r\n    attrs\r\n  };\r\n  if (pad) {\r\n    block.content = padContent(source, block, pad) + block.content;\r\n  }\r\n  node.props.forEach((p) => {\r\n    if (p.type === 6) {\r\n      attrs[p.name] = p.value ? p.value.content || true : true;\r\n      if (p.name === \"lang\") {\r\n        block.lang = p.value && p.value.content;\r\n      } else if (p.name === \"src\") {\r\n        block.src = p.value && p.value.content;\r\n      } else if (type === \"style\") {\r\n        if (p.name === \"scoped\") {\r\n          block.scoped = true;\r\n        } else if (p.name === \"module\") {\r\n          block.module = attrs[p.name];\r\n        }\r\n      } else if (type === \"script\" && p.name === \"setup\") {\r\n        block.setup = attrs.setup;\r\n      }\r\n    }\r\n  });\r\n  return block;\r\n}\r\nconst splitRE = /\\r?\\n/g;\r\nconst emptyRE = /^(?:\\/\\/)?\\s*$/;\r\nconst replaceRE = /./g;\r\nfunction generateSourceMap(filename, source, generated, sourceRoot, lineOffset) {\r\n  const map = new SourceMapGenerator$6({\r\n    file: filename.replace(/\\\\/g, \"/\"),\r\n    sourceRoot: sourceRoot.replace(/\\\\/g, \"/\")\r\n  });\r\n  map.setSourceContent(filename, source);\r\n  generated.split(splitRE).forEach((line, index) => {\r\n    if (!emptyRE.test(line)) {\r\n      const originalLine = index + 1 + lineOffset;\r\n      const generatedLine = index + 1;\r\n      for (let i = 0; i < line.length; i++) {\r\n        if (!/\\s/.test(line[i])) {\r\n          map.addMapping({\r\n            source: filename,\r\n            original: {\r\n              line: originalLine,\r\n              column: i\r\n            },\r\n            generated: {\r\n              line: generatedLine,\r\n              column: i\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return JSON.parse(map.toString());\r\n}\r\nfunction padContent(content, block, pad) {\r\n  content = content.slice(0, block.loc.start.offset);\r\n  if (pad === \"space\") {\r\n    return content.replace(replaceRE, \" \");\r\n  } else {\r\n    const offset = content.split(splitRE).length;\r\n    const padChar = block.type === \"script\" && !block.lang ? \"//\\n\" : \"\\n\";\r\n    return Array(offset).join(padChar);\r\n  }\r\n}\r\nfunction hasSrc(node) {\r\n  return node.props.some((p) => {\r\n    if (p.type !== 6) {\r\n      return false;\r\n    }\r\n    return p.name === \"src\";\r\n  });\r\n}\r\nfunction isEmpty(node) {\r\n  for (let i = 0; i < node.children.length; i++) {\r\n    const child = node.children[i];\r\n    if (child.type !== 2 || child.content.trim() !== \"\") {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction hmrShouldReload(prevImports, next) {\r\n  if (!next.scriptSetup || next.scriptSetup.lang !== \"ts\" && next.scriptSetup.lang !== \"tsx\") {\r\n    return false;\r\n  }\r\n  for (const key in prevImports) {\r\n    if (!prevImports[key].isUsedInTemplate && isImportUsed(key, next)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar global$1 = (typeof global !== \"undefined\" ? global :\r\n  typeof self !== \"undefined\" ? self :\r\n  typeof window !== \"undefined\" ? window : {});\r\n\r\n/*! https://mths.be/punycode v1.4.1 by @mathias */\r\n\r\n\r\n/** Highest positive signed 32-bit float value */\r\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\r\n\r\n/** Bootstring parameters */\r\nvar base = 36;\r\nvar tMin = 1;\r\nvar tMax = 26;\r\nvar skew = 38;\r\nvar damp = 700;\r\nvar initialBias = 72;\r\nvar initialN = 128; // 0x80\r\nvar delimiter = '-'; // '\\x2D'\r\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\r\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\r\n\r\n/** Error messages */\r\nvar errors = {\r\n  'overflow': 'Overflow: input needs wider integers to process',\r\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\r\n  'invalid-input': 'Invalid input'\r\n};\r\n\r\n/** Convenience shortcuts */\r\nvar baseMinusTMin = base - tMin;\r\nvar floor = Math.floor;\r\nvar stringFromCharCode = String.fromCharCode;\r\n\r\n/*--------------------------------------------------------------------------*/\r\n\r\n/**\r\n * A generic error utility function.\r\n * @private\r\n * @param {String} type The error type.\r\n * @returns {Error} Throws a `RangeError` with the applicable error message.\r\n */\r\nfunction error(type) {\r\n  throw new RangeError(errors[type]);\r\n}\r\n\r\n/**\r\n * A generic `Array#map` utility function.\r\n * @private\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} callback The function that gets called for every array\r\n * item.\r\n * @returns {Array} A new array of values returned by the callback function.\r\n */\r\nfunction map$1(array, fn) {\r\n  var length = array.length;\r\n  var result = [];\r\n  while (length--) {\r\n    result[length] = fn(array[length]);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * A simple `Array#map`-like wrapper to work with domain name strings or email\r\n * addresses.\r\n * @private\r\n * @param {String} domain The domain name or email address.\r\n * @param {Function} callback The function that gets called for every\r\n * character.\r\n * @returns {Array} A new string of characters returned by the callback\r\n * function.\r\n */\r\nfunction mapDomain(string, fn) {\r\n  var parts = string.split('@');\r\n  var result = '';\r\n  if (parts.length > 1) {\r\n    // In email addresses, only the domain name should be punycoded. Leave\r\n    // the local part (i.e. everything up to `@`) intact.\r\n    result = parts[0] + '@';\r\n    string = parts[1];\r\n  }\r\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\r\n  string = string.replace(regexSeparators, '\\x2E');\r\n  var labels = string.split('.');\r\n  var encoded = map$1(labels, fn).join('.');\r\n  return result + encoded;\r\n}\r\n\r\n/**\r\n * Creates an array containing the numeric code points of each Unicode\r\n * character in the string. While JavaScript uses UCS-2 internally,\r\n * this function will convert a pair of surrogate halves (each of which\r\n * UCS-2 exposes as separate characters) into a single code point,\r\n * matching UTF-16.\r\n * @see `punycode.ucs2.encode`\r\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\r\n * @memberOf punycode.ucs2\r\n * @name decode\r\n * @param {String} string The Unicode input string (UCS-2).\r\n * @returns {Array} The new array of code points.\r\n */\r\nfunction ucs2decode(string) {\r\n  var output = [],\r\n    counter = 0,\r\n    length = string.length,\r\n    value,\r\n    extra;\r\n  while (counter < length) {\r\n    value = string.charCodeAt(counter++);\r\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\r\n      // high surrogate, and there is a next character\r\n      extra = string.charCodeAt(counter++);\r\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\r\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\r\n      } else {\r\n        // unmatched surrogate; only append this code unit, in case the next\r\n        // code unit is the high surrogate of a surrogate pair\r\n        output.push(value);\r\n        counter--;\r\n      }\r\n    } else {\r\n      output.push(value);\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\n/**\r\n * Converts a digit/integer into a basic code point.\r\n * @see `basicToDigit()`\r\n * @private\r\n * @param {Number} digit The numeric value of a basic code point.\r\n * @returns {Number} The basic code point whose value (when used for\r\n * representing integers) is `digit`, which needs to be in the range\r\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\r\n * used; else, the lowercase form is used. The behavior is undefined\r\n * if `flag` is non-zero and `digit` has no uppercase form.\r\n */\r\nfunction digitToBasic(digit, flag) {\r\n  //  0..25 map to ASCII a..z or A..Z\r\n  // 26..35 map to ASCII 0..9\r\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\r\n}\r\n\r\n/**\r\n * Bias adaptation function as per section 3.4 of RFC 3492.\r\n * https://tools.ietf.org/html/rfc3492#section-3.4\r\n * @private\r\n */\r\nfunction adapt(delta, numPoints, firstTime) {\r\n  var k = 0;\r\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\r\n  delta += floor(delta / numPoints);\r\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\r\n    delta = floor(delta / baseMinusTMin);\r\n  }\r\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\r\n}\r\n\r\n/**\r\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\r\n * Punycode string of ASCII-only symbols.\r\n * @memberOf punycode\r\n * @param {String} input The string of Unicode symbols.\r\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\r\n */\r\nfunction encode$1(input) {\r\n  var n,\r\n    delta,\r\n    handledCPCount,\r\n    basicLength,\r\n    bias,\r\n    j,\r\n    m,\r\n    q,\r\n    k,\r\n    t,\r\n    currentValue,\r\n    output = [],\r\n    /** `inputLength` will hold the number of code points in `input`. */\r\n    inputLength,\r\n    /** Cached calculation results */\r\n    handledCPCountPlusOne,\r\n    baseMinusT,\r\n    qMinusT;\r\n\r\n  // Convert the input in UCS-2 to Unicode\r\n  input = ucs2decode(input);\r\n\r\n  // Cache the length\r\n  inputLength = input.length;\r\n\r\n  // Initialize the state\r\n  n = initialN;\r\n  delta = 0;\r\n  bias = initialBias;\r\n\r\n  // Handle the basic code points\r\n  for (j = 0; j < inputLength; ++j) {\r\n    currentValue = input[j];\r\n    if (currentValue < 0x80) {\r\n      output.push(stringFromCharCode(currentValue));\r\n    }\r\n  }\r\n\r\n  handledCPCount = basicLength = output.length;\r\n\r\n  // `handledCPCount` is the number of code points that have been handled;\r\n  // `basicLength` is the number of basic code points.\r\n\r\n  // Finish the basic string - if it is not empty - with a delimiter\r\n  if (basicLength) {\r\n    output.push(delimiter);\r\n  }\r\n\r\n  // Main encoding loop:\r\n  while (handledCPCount < inputLength) {\r\n\r\n    // All non-basic code points < n have been handled already. Find the next\r\n    // larger one:\r\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\r\n      currentValue = input[j];\r\n      if (currentValue >= n && currentValue < m) {\r\n        m = currentValue;\r\n      }\r\n    }\r\n\r\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\r\n    // but guard against overflow\r\n    handledCPCountPlusOne = handledCPCount + 1;\r\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\r\n      error('overflow');\r\n    }\r\n\r\n    delta += (m - n) * handledCPCountPlusOne;\r\n    n = m;\r\n\r\n    for (j = 0; j < inputLength; ++j) {\r\n      currentValue = input[j];\r\n\r\n      if (currentValue < n && ++delta > maxInt) {\r\n        error('overflow');\r\n      }\r\n\r\n      if (currentValue == n) {\r\n        // Represent delta as a generalized variable-length integer\r\n        for (q = delta, k = base; /* no condition */ ; k += base) {\r\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\r\n          if (q < t) {\r\n            break;\r\n          }\r\n          qMinusT = q - t;\r\n          baseMinusT = base - t;\r\n          output.push(\r\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\r\n          );\r\n          q = floor(qMinusT / baseMinusT);\r\n        }\r\n\r\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\r\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\r\n        delta = 0;\r\n        ++handledCPCount;\r\n      }\r\n    }\r\n\r\n    ++delta;\r\n    ++n;\r\n\r\n  }\r\n  return output.join('');\r\n}\r\n\r\n/**\r\n * Converts a Unicode string representing a domain name or an email address to\r\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\r\n * i.e. it doesn't matter if you call it with a domain that's already in\r\n * ASCII.\r\n * @memberOf punycode\r\n * @param {String} input The domain name or email address to convert, as a\r\n * Unicode string.\r\n * @returns {String} The Punycode representation of the given domain name or\r\n * email address.\r\n */\r\nfunction toASCII(input) {\r\n  return mapDomain(input, function(string) {\r\n    return regexNonASCII.test(string) ?\r\n      'xn--' + encode$1(string) :\r\n      string;\r\n  });\r\n}\r\n\r\nvar lookup = [];\r\nvar revLookup = [];\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\r\nvar inited = false;\r\nfunction init () {\r\n  inited = true;\r\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n  for (var i = 0, len = code.length; i < len; ++i) {\r\n    lookup[i] = code[i];\r\n    revLookup[code.charCodeAt(i)] = i;\r\n  }\r\n\r\n  revLookup['-'.charCodeAt(0)] = 62;\r\n  revLookup['_'.charCodeAt(0)] = 63;\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  if (!inited) {\r\n    init();\r\n  }\r\n  var i, j, l, tmp, placeHolders, arr;\r\n  var len = b64.length;\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // the number of equal signs (place holders)\r\n  // if there are two placeholders, than the two characters before it\r\n  // represent one byte\r\n  // if there is only one, then the three characters before it represent 2 bytes\r\n  // this is just a cheap hack to not do indexOf twice\r\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\r\n\r\n  // base64 is 4/3 + up to two characters of the original data\r\n  arr = new Arr(len * 3 / 4 - placeHolders);\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  l = placeHolders > 0 ? len - 4 : len;\r\n\r\n  var L = 0;\r\n\r\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\r\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\r\n    arr[L++] = (tmp >> 16) & 0xFF;\r\n    arr[L++] = (tmp >> 8) & 0xFF;\r\n    arr[L++] = tmp & 0xFF;\r\n  }\r\n\r\n  if (placeHolders === 2) {\r\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\r\n    arr[L++] = tmp & 0xFF;\r\n  } else if (placeHolders === 1) {\r\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\r\n    arr[L++] = (tmp >> 8) & 0xFF;\r\n    arr[L++] = tmp & 0xFF;\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp;\r\n  var output = [];\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\r\n    output.push(tripletToBase64(tmp));\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  if (!inited) {\r\n    init();\r\n  }\r\n  var tmp;\r\n  var len = uint8.length;\r\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\r\n  var output = '';\r\n  var parts = [];\r\n  var maxChunkLength = 16383; // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1];\r\n    output += lookup[tmp >> 2];\r\n    output += lookup[(tmp << 4) & 0x3F];\r\n    output += '==';\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\r\n    output += lookup[tmp >> 10];\r\n    output += lookup[(tmp >> 4) & 0x3F];\r\n    output += lookup[(tmp << 2) & 0x3F];\r\n    output += '=';\r\n  }\r\n\r\n  parts.push(output);\r\n\r\n  return parts.join('')\r\n}\r\n\r\nfunction read (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m;\r\n  var eLen = nBytes * 8 - mLen - 1;\r\n  var eMax = (1 << eLen) - 1;\r\n  var eBias = eMax >> 1;\r\n  var nBits = -7;\r\n  var i = isLE ? (nBytes - 1) : 0;\r\n  var d = isLE ? -1 : 1;\r\n  var s = buffer[offset + i];\r\n\r\n  i += d;\r\n\r\n  e = s & ((1 << (-nBits)) - 1);\r\n  s >>= (-nBits);\r\n  nBits += eLen;\r\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1);\r\n  e >>= (-nBits);\r\n  nBits += mLen;\r\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias;\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen);\r\n    e = e - eBias;\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c;\r\n  var eLen = nBytes * 8 - mLen - 1;\r\n  var eMax = (1 << eLen) - 1;\r\n  var eBias = eMax >> 1;\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\r\n  var i = isLE ? 0 : (nBytes - 1);\r\n  var d = isLE ? 1 : -1;\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\r\n\r\n  value = Math.abs(value);\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0;\r\n    e = eMax;\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2);\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--;\r\n      c *= 2;\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c;\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias);\r\n    }\r\n    if (value * c >= 2) {\r\n      e++;\r\n      c /= 2;\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0;\r\n      e = eMax;\r\n    } else if (e + eBias >= 1) {\r\n      m = (value * c - 1) * Math.pow(2, mLen);\r\n      e = e + eBias;\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\r\n      e = 0;\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m;\r\n  eLen += mLen;\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128;\r\n}\r\n\r\nvar toString$1 = {}.toString;\r\n\r\nvar isArray$2 = Array.isArray || function (arr) {\r\n  return toString$1.call(arr) == '[object Array]';\r\n};\r\n\r\n/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\r\n * @license  MIT\r\n */\r\n\r\nvar INSPECT_MAX_BYTES = 50;\r\n\r\n/**\r\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n *   === true    Use Uint8Array implementation (fastest)\r\n *   === false   Use Object implementation (most compatible, even IE6)\r\n *\r\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n * Opera 11.6+, iOS 4.2+.\r\n *\r\n * Due to various browser bugs, sometimes the Object implementation will be used even\r\n * when the browser supports typed arrays.\r\n *\r\n * Note:\r\n *\r\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\r\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\r\n *\r\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\r\n *\r\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\r\n *     incorrect length in some situations.\r\n\r\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\r\n * get the Object implementation, which is slower but behaves correctly.\r\n */\r\nBuffer$1.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\r\n  ? global$1.TYPED_ARRAY_SUPPORT\r\n  : true;\r\n\r\n/*\r\n * Export kMaxLength after typed array support is determined.\r\n */\r\nkMaxLength();\r\n\r\nfunction kMaxLength () {\r\n  return Buffer$1.TYPED_ARRAY_SUPPORT\r\n    ? 0x7fffffff\r\n    : 0x3fffffff\r\n}\r\n\r\nfunction createBuffer (that, length) {\r\n  if (kMaxLength() < length) {\r\n    throw new RangeError('Invalid typed array length')\r\n  }\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    // Return an augmented `Uint8Array` instance, for best performance\r\n    that = new Uint8Array(length);\r\n    that.__proto__ = Buffer$1.prototype;\r\n  } else {\r\n    // Fallback: Return an object instance of the Buffer class\r\n    if (that === null) {\r\n      that = new Buffer$1(length);\r\n    }\r\n    that.length = length;\r\n  }\r\n\r\n  return that\r\n}\r\n\r\n/**\r\n * The Buffer constructor returns instances of `Uint8Array` that have their\r\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n * returns a single octet.\r\n *\r\n * The `Uint8Array` prototype remains unmodified.\r\n */\r\n\r\nfunction Buffer$1 (arg, encodingOrOffset, length) {\r\n  if (!Buffer$1.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer$1)) {\r\n    return new Buffer$1(arg, encodingOrOffset, length)\r\n  }\r\n\r\n  // Common case.\r\n  if (typeof arg === 'number') {\r\n    if (typeof encodingOrOffset === 'string') {\r\n      throw new Error(\r\n        'If encoding is specified then the first argument must be a string'\r\n      )\r\n    }\r\n    return allocUnsafe(this, arg)\r\n  }\r\n  return from(this, arg, encodingOrOffset, length)\r\n}\r\n\r\nBuffer$1.poolSize = 8192; // not used by this implementation\r\n\r\n// TODO: Legacy, not needed anymore. Remove in next major version.\r\nBuffer$1._augment = function (arr) {\r\n  arr.__proto__ = Buffer$1.prototype;\r\n  return arr\r\n};\r\n\r\nfunction from (that, value, encodingOrOffset, length) {\r\n  if (typeof value === 'number') {\r\n    throw new TypeError('\"value\" argument must not be a number')\r\n  }\r\n\r\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\r\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    return fromString(that, value, encodingOrOffset)\r\n  }\r\n\r\n  return fromObject(that, value)\r\n}\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n **/\r\nBuffer$1.from = function (value, encodingOrOffset, length) {\r\n  return from(null, value, encodingOrOffset, length)\r\n};\r\n\r\nif (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n  Buffer$1.prototype.__proto__ = Uint8Array.prototype;\r\n  Buffer$1.__proto__ = Uint8Array;\r\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\r\n      Buffer$1[Symbol.species] === Buffer$1) ;\r\n}\r\n\r\nfunction assertSize (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('\"size\" argument must be a number')\r\n  } else if (size < 0) {\r\n    throw new RangeError('\"size\" argument must not be negative')\r\n  }\r\n}\r\n\r\nfunction alloc (that, size, fill, encoding) {\r\n  assertSize(size);\r\n  if (size <= 0) {\r\n    return createBuffer(that, size)\r\n  }\r\n  if (fill !== undefined) {\r\n    // Only pay attention to encoding if it's a string. This\r\n    // prevents accidentally sending in a number that would\r\n    // be interpretted as a start offset.\r\n    return typeof encoding === 'string'\r\n      ? createBuffer(that, size).fill(fill, encoding)\r\n      : createBuffer(that, size).fill(fill)\r\n  }\r\n  return createBuffer(that, size)\r\n}\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n **/\r\nBuffer$1.alloc = function (size, fill, encoding) {\r\n  return alloc(null, size, fill, encoding)\r\n};\r\n\r\nfunction allocUnsafe (that, size) {\r\n  assertSize(size);\r\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\r\n  if (!Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    for (var i = 0; i < size; ++i) {\r\n      that[i] = 0;\r\n    }\r\n  }\r\n  return that\r\n}\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n * */\r\nBuffer$1.allocUnsafe = function (size) {\r\n  return allocUnsafe(null, size)\r\n};\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n */\r\nBuffer$1.allocUnsafeSlow = function (size) {\r\n  return allocUnsafe(null, size)\r\n};\r\n\r\nfunction fromString (that, string, encoding) {\r\n  if (typeof encoding !== 'string' || encoding === '') {\r\n    encoding = 'utf8';\r\n  }\r\n\r\n  if (!Buffer$1.isEncoding(encoding)) {\r\n    throw new TypeError('\"encoding\" must be a valid string encoding')\r\n  }\r\n\r\n  var length = byteLength(string, encoding) | 0;\r\n  that = createBuffer(that, length);\r\n\r\n  var actual = that.write(string, encoding);\r\n\r\n  if (actual !== length) {\r\n    // Writing a hex string, for example, that contains invalid characters will\r\n    // cause everything after the first invalid character to be ignored. (e.g.\r\n    // 'abxxcd' will be treated as 'ab')\r\n    that = that.slice(0, actual);\r\n  }\r\n\r\n  return that\r\n}\r\n\r\nfunction fromArrayLike (that, array) {\r\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\r\n  that = createBuffer(that, length);\r\n  for (var i = 0; i < length; i += 1) {\r\n    that[i] = array[i] & 255;\r\n  }\r\n  return that\r\n}\r\n\r\nfunction fromArrayBuffer (that, array, byteOffset, length) {\r\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\r\n\r\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n    throw new RangeError('\\'offset\\' is out of bounds')\r\n  }\r\n\r\n  if (array.byteLength < byteOffset + (length || 0)) {\r\n    throw new RangeError('\\'length\\' is out of bounds')\r\n  }\r\n\r\n  if (byteOffset === undefined && length === undefined) {\r\n    array = new Uint8Array(array);\r\n  } else if (length === undefined) {\r\n    array = new Uint8Array(array, byteOffset);\r\n  } else {\r\n    array = new Uint8Array(array, byteOffset, length);\r\n  }\r\n\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    // Return an augmented `Uint8Array` instance, for best performance\r\n    that = array;\r\n    that.__proto__ = Buffer$1.prototype;\r\n  } else {\r\n    // Fallback: Return an object instance of the Buffer class\r\n    that = fromArrayLike(that, array);\r\n  }\r\n  return that\r\n}\r\n\r\nfunction fromObject (that, obj) {\r\n  if (internalIsBuffer(obj)) {\r\n    var len = checked(obj.length) | 0;\r\n    that = createBuffer(that, len);\r\n\r\n    if (that.length === 0) {\r\n      return that\r\n    }\r\n\r\n    obj.copy(that, 0, 0, len);\r\n    return that\r\n  }\r\n\r\n  if (obj) {\r\n    if ((typeof ArrayBuffer !== 'undefined' &&\r\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\r\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\r\n        return createBuffer(that, 0)\r\n      }\r\n      return fromArrayLike(that, obj)\r\n    }\r\n\r\n    if (obj.type === 'Buffer' && isArray$2(obj.data)) {\r\n      return fromArrayLike(that, obj.data)\r\n    }\r\n  }\r\n\r\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\r\n}\r\n\r\nfunction checked (length) {\r\n  // Note: cannot use `length < kMaxLength()` here because that fails when\r\n  // length is NaN (which is otherwise coerced to zero.)\r\n  if (length >= kMaxLength()) {\r\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\r\n  }\r\n  return length | 0\r\n}\r\nBuffer$1.isBuffer = isBuffer$1;\r\nfunction internalIsBuffer (b) {\r\n  return !!(b != null && b._isBuffer)\r\n}\r\n\r\nBuffer$1.compare = function compare (a, b) {\r\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\r\n    throw new TypeError('Arguments must be Buffers')\r\n  }\r\n\r\n  if (a === b) return 0\r\n\r\n  var x = a.length;\r\n  var y = b.length;\r\n\r\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\r\n    if (a[i] !== b[i]) {\r\n      x = a[i];\r\n      y = b[i];\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n};\r\n\r\nBuffer$1.isEncoding = function isEncoding (encoding) {\r\n  switch (String(encoding).toLowerCase()) {\r\n    case 'hex':\r\n    case 'utf8':\r\n    case 'utf-8':\r\n    case 'ascii':\r\n    case 'latin1':\r\n    case 'binary':\r\n    case 'base64':\r\n    case 'ucs2':\r\n    case 'ucs-2':\r\n    case 'utf16le':\r\n    case 'utf-16le':\r\n      return true\r\n    default:\r\n      return false\r\n  }\r\n};\r\n\r\nBuffer$1.concat = function concat (list, length) {\r\n  if (!isArray$2(list)) {\r\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n  }\r\n\r\n  if (list.length === 0) {\r\n    return Buffer$1.alloc(0)\r\n  }\r\n\r\n  var i;\r\n  if (length === undefined) {\r\n    length = 0;\r\n    for (i = 0; i < list.length; ++i) {\r\n      length += list[i].length;\r\n    }\r\n  }\r\n\r\n  var buffer = Buffer$1.allocUnsafe(length);\r\n  var pos = 0;\r\n  for (i = 0; i < list.length; ++i) {\r\n    var buf = list[i];\r\n    if (!internalIsBuffer(buf)) {\r\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    }\r\n    buf.copy(buffer, pos);\r\n    pos += buf.length;\r\n  }\r\n  return buffer\r\n};\r\n\r\nfunction byteLength (string, encoding) {\r\n  if (internalIsBuffer(string)) {\r\n    return string.length\r\n  }\r\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\r\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\r\n    return string.byteLength\r\n  }\r\n  if (typeof string !== 'string') {\r\n    string = '' + string;\r\n  }\r\n\r\n  var len = string.length;\r\n  if (len === 0) return 0\r\n\r\n  // Use a for loop to avoid recursion\r\n  var loweredCase = false;\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return len\r\n      case 'utf8':\r\n      case 'utf-8':\r\n      case undefined:\r\n        return utf8ToBytes(string).length\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return len * 2\r\n      case 'hex':\r\n        return len >>> 1\r\n      case 'base64':\r\n        return base64ToBytes(string).length\r\n      default:\r\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\r\n        encoding = ('' + encoding).toLowerCase();\r\n        loweredCase = true;\r\n    }\r\n  }\r\n}\r\nBuffer$1.byteLength = byteLength;\r\n\r\nfunction slowToString (encoding, start, end) {\r\n  var loweredCase = false;\r\n\r\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n  // property of a typed array.\r\n\r\n  // This behaves neither like String nor Uint8Array in that we set start/end\r\n  // to their upper/lower bounds if the value passed is out of range.\r\n  // undefined is handled specially as per ECMA-262 6th Edition,\r\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n  if (start === undefined || start < 0) {\r\n    start = 0;\r\n  }\r\n  // Return early if start > this.length. Done here to prevent potential uint32\r\n  // coercion fail below.\r\n  if (start > this.length) {\r\n    return ''\r\n  }\r\n\r\n  if (end === undefined || end > this.length) {\r\n    end = this.length;\r\n  }\r\n\r\n  if (end <= 0) {\r\n    return ''\r\n  }\r\n\r\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\r\n  end >>>= 0;\r\n  start >>>= 0;\r\n\r\n  if (end <= start) {\r\n    return ''\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8';\r\n\r\n  while (true) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexSlice(this, start, end)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Slice(this, start, end)\r\n\r\n      case 'ascii':\r\n        return asciiSlice(this, start, end)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Slice(this, start, end)\r\n\r\n      case 'base64':\r\n        return base64Slice(this, start, end)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return utf16leSlice(this, start, end)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = (encoding + '').toLowerCase();\r\n        loweredCase = true;\r\n    }\r\n  }\r\n}\r\n\r\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\r\n// Buffer instances.\r\nBuffer$1.prototype._isBuffer = true;\r\n\r\nfunction swap$1 (b, n, m) {\r\n  var i = b[n];\r\n  b[n] = b[m];\r\n  b[m] = i;\r\n}\r\n\r\nBuffer$1.prototype.swap16 = function swap16 () {\r\n  var len = this.length;\r\n  if (len % 2 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 2) {\r\n    swap$1(this, i, i + 1);\r\n  }\r\n  return this\r\n};\r\n\r\nBuffer$1.prototype.swap32 = function swap32 () {\r\n  var len = this.length;\r\n  if (len % 4 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 4) {\r\n    swap$1(this, i, i + 3);\r\n    swap$1(this, i + 1, i + 2);\r\n  }\r\n  return this\r\n};\r\n\r\nBuffer$1.prototype.swap64 = function swap64 () {\r\n  var len = this.length;\r\n  if (len % 8 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 8) {\r\n    swap$1(this, i, i + 7);\r\n    swap$1(this, i + 1, i + 6);\r\n    swap$1(this, i + 2, i + 5);\r\n    swap$1(this, i + 3, i + 4);\r\n  }\r\n  return this\r\n};\r\n\r\nBuffer$1.prototype.toString = function toString () {\r\n  var length = this.length | 0;\r\n  if (length === 0) return ''\r\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n  return slowToString.apply(this, arguments)\r\n};\r\n\r\nBuffer$1.prototype.equals = function equals (b) {\r\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n  if (this === b) return true\r\n  return Buffer$1.compare(this, b) === 0\r\n};\r\n\r\nBuffer$1.prototype.inspect = function inspect () {\r\n  var str = '';\r\n  var max = INSPECT_MAX_BYTES;\r\n  if (this.length > 0) {\r\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\r\n    if (this.length > max) str += ' ... ';\r\n  }\r\n  return '<Buffer ' + str + '>'\r\n};\r\n\r\nBuffer$1.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\r\n  if (!internalIsBuffer(target)) {\r\n    throw new TypeError('Argument must be a Buffer')\r\n  }\r\n\r\n  if (start === undefined) {\r\n    start = 0;\r\n  }\r\n  if (end === undefined) {\r\n    end = target ? target.length : 0;\r\n  }\r\n  if (thisStart === undefined) {\r\n    thisStart = 0;\r\n  }\r\n  if (thisEnd === undefined) {\r\n    thisEnd = this.length;\r\n  }\r\n\r\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\r\n    throw new RangeError('out of range index')\r\n  }\r\n\r\n  if (thisStart >= thisEnd && start >= end) {\r\n    return 0\r\n  }\r\n  if (thisStart >= thisEnd) {\r\n    return -1\r\n  }\r\n  if (start >= end) {\r\n    return 1\r\n  }\r\n\r\n  start >>>= 0;\r\n  end >>>= 0;\r\n  thisStart >>>= 0;\r\n  thisEnd >>>= 0;\r\n\r\n  if (this === target) return 0\r\n\r\n  var x = thisEnd - thisStart;\r\n  var y = end - start;\r\n  var len = Math.min(x, y);\r\n\r\n  var thisCopy = this.slice(thisStart, thisEnd);\r\n  var targetCopy = target.slice(start, end);\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    if (thisCopy[i] !== targetCopy[i]) {\r\n      x = thisCopy[i];\r\n      y = targetCopy[i];\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n};\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant is val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\r\n  // Empty buffer means no match\r\n  if (buffer.length === 0) return -1\r\n\r\n  // Normalize byteOffset\r\n  if (typeof byteOffset === 'string') {\r\n    encoding = byteOffset;\r\n    byteOffset = 0;\r\n  } else if (byteOffset > 0x7fffffff) {\r\n    byteOffset = 0x7fffffff;\r\n  } else if (byteOffset < -0x80000000) {\r\n    byteOffset = -0x80000000;\r\n  }\r\n  byteOffset = +byteOffset;  // Coerce to Number.\r\n  if (isNaN(byteOffset)) {\r\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n    byteOffset = dir ? 0 : (buffer.length - 1);\r\n  }\r\n\r\n  // Normalize byteOffset: negative offsets start from the end of the buffer\r\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\r\n  if (byteOffset >= buffer.length) {\r\n    if (dir) return -1\r\n    else byteOffset = buffer.length - 1;\r\n  } else if (byteOffset < 0) {\r\n    if (dir) byteOffset = 0;\r\n    else return -1\r\n  }\r\n\r\n  // Normalize val\r\n  if (typeof val === 'string') {\r\n    val = Buffer$1.from(val, encoding);\r\n  }\r\n\r\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n  if (internalIsBuffer(val)) {\r\n    // Special case: looking for empty string/buffer always fails\r\n    if (val.length === 0) {\r\n      return -1\r\n    }\r\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n  } else if (typeof val === 'number') {\r\n    val = val & 0xFF; // Search for a byte value [0-255]\r\n    if (Buffer$1.TYPED_ARRAY_SUPPORT &&\r\n        typeof Uint8Array.prototype.indexOf === 'function') {\r\n      if (dir) {\r\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\r\n      } else {\r\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\r\n      }\r\n    }\r\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\r\n  }\r\n\r\n  throw new TypeError('val must be string, number or Buffer')\r\n}\r\n\r\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\r\n  var indexSize = 1;\r\n  var arrLength = arr.length;\r\n  var valLength = val.length;\r\n\r\n  if (encoding !== undefined) {\r\n    encoding = String(encoding).toLowerCase();\r\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\r\n        encoding === 'utf16le' || encoding === 'utf-16le') {\r\n      if (arr.length < 2 || val.length < 2) {\r\n        return -1\r\n      }\r\n      indexSize = 2;\r\n      arrLength /= 2;\r\n      valLength /= 2;\r\n      byteOffset /= 2;\r\n    }\r\n  }\r\n\r\n  function read (buf, i) {\r\n    if (indexSize === 1) {\r\n      return buf[i]\r\n    } else {\r\n      return buf.readUInt16BE(i * indexSize)\r\n    }\r\n  }\r\n\r\n  var i;\r\n  if (dir) {\r\n    var foundIndex = -1;\r\n    for (i = byteOffset; i < arrLength; i++) {\r\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\r\n        if (foundIndex === -1) foundIndex = i;\r\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\r\n      } else {\r\n        if (foundIndex !== -1) i -= i - foundIndex;\r\n        foundIndex = -1;\r\n      }\r\n    }\r\n  } else {\r\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\r\n    for (i = byteOffset; i >= 0; i--) {\r\n      var found = true;\r\n      for (var j = 0; j < valLength; j++) {\r\n        if (read(arr, i + j) !== read(val, j)) {\r\n          found = false;\r\n          break\r\n        }\r\n      }\r\n      if (found) return i\r\n    }\r\n  }\r\n\r\n  return -1\r\n}\r\n\r\nBuffer$1.prototype.includes = function includes (val, byteOffset, encoding) {\r\n  return this.indexOf(val, byteOffset, encoding) !== -1\r\n};\r\n\r\nBuffer$1.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n};\r\n\r\nBuffer$1.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n};\r\n\r\nfunction hexWrite (buf, string, offset, length) {\r\n  offset = Number(offset) || 0;\r\n  var remaining = buf.length - offset;\r\n  if (!length) {\r\n    length = remaining;\r\n  } else {\r\n    length = Number(length);\r\n    if (length > remaining) {\r\n      length = remaining;\r\n    }\r\n  }\r\n\r\n  // must be an even number of digits\r\n  var strLen = string.length;\r\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\r\n\r\n  if (length > strLen / 2) {\r\n    length = strLen / 2;\r\n  }\r\n  for (var i = 0; i < length; ++i) {\r\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\r\n    if (isNaN(parsed)) return i\r\n    buf[offset + i] = parsed;\r\n  }\r\n  return i\r\n}\r\n\r\nfunction utf8Write (buf, string, offset, length) {\r\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nfunction asciiWrite (buf, string, offset, length) {\r\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction latin1Write (buf, string, offset, length) {\r\n  return asciiWrite(buf, string, offset, length)\r\n}\r\n\r\nfunction base64Write (buf, string, offset, length) {\r\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction ucs2Write (buf, string, offset, length) {\r\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nBuffer$1.prototype.write = function write (string, offset, length, encoding) {\r\n  // Buffer#write(string)\r\n  if (offset === undefined) {\r\n    encoding = 'utf8';\r\n    length = this.length;\r\n    offset = 0;\r\n  // Buffer#write(string, encoding)\r\n  } else if (length === undefined && typeof offset === 'string') {\r\n    encoding = offset;\r\n    length = this.length;\r\n    offset = 0;\r\n  // Buffer#write(string, offset[, length][, encoding])\r\n  } else if (isFinite(offset)) {\r\n    offset = offset | 0;\r\n    if (isFinite(length)) {\r\n      length = length | 0;\r\n      if (encoding === undefined) encoding = 'utf8';\r\n    } else {\r\n      encoding = length;\r\n      length = undefined;\r\n    }\r\n  // legacy write(string, encoding, offset, length) - remove in v0.13\r\n  } else {\r\n    throw new Error(\r\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\r\n    )\r\n  }\r\n\r\n  var remaining = this.length - offset;\r\n  if (length === undefined || length > remaining) length = remaining;\r\n\r\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n    throw new RangeError('Attempt to write outside buffer bounds')\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8';\r\n\r\n  var loweredCase = false;\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexWrite(this, string, offset, length)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Write(this, string, offset, length)\r\n\r\n      case 'ascii':\r\n        return asciiWrite(this, string, offset, length)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Write(this, string, offset, length)\r\n\r\n      case 'base64':\r\n        // Warning: maxLength not taken into account in base64Write\r\n        return base64Write(this, string, offset, length)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return ucs2Write(this, string, offset, length)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = ('' + encoding).toLowerCase();\r\n        loweredCase = true;\r\n    }\r\n  }\r\n};\r\n\r\nBuffer$1.prototype.toJSON = function toJSON () {\r\n  return {\r\n    type: 'Buffer',\r\n    data: Array.prototype.slice.call(this._arr || this, 0)\r\n  }\r\n};\r\n\r\nfunction base64Slice (buf, start, end) {\r\n  if (start === 0 && end === buf.length) {\r\n    return fromByteArray(buf)\r\n  } else {\r\n    return fromByteArray(buf.slice(start, end))\r\n  }\r\n}\r\n\r\nfunction utf8Slice (buf, start, end) {\r\n  end = Math.min(buf.length, end);\r\n  var res = [];\r\n\r\n  var i = start;\r\n  while (i < end) {\r\n    var firstByte = buf[i];\r\n    var codePoint = null;\r\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\r\n      : (firstByte > 0xDF) ? 3\r\n      : (firstByte > 0xBF) ? 2\r\n      : 1;\r\n\r\n    if (i + bytesPerSequence <= end) {\r\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\r\n\r\n      switch (bytesPerSequence) {\r\n        case 1:\r\n          if (firstByte < 0x80) {\r\n            codePoint = firstByte;\r\n          }\r\n          break\r\n        case 2:\r\n          secondByte = buf[i + 1];\r\n          if ((secondByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\r\n            if (tempCodePoint > 0x7F) {\r\n              codePoint = tempCodePoint;\r\n            }\r\n          }\r\n          break\r\n        case 3:\r\n          secondByte = buf[i + 1];\r\n          thirdByte = buf[i + 2];\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\r\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n              codePoint = tempCodePoint;\r\n            }\r\n          }\r\n          break\r\n        case 4:\r\n          secondByte = buf[i + 1];\r\n          thirdByte = buf[i + 2];\r\n          fourthByte = buf[i + 3];\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\r\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n              codePoint = tempCodePoint;\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    if (codePoint === null) {\r\n      // we did not generate a valid codePoint so insert a\r\n      // replacement char (U+FFFD) and advance only 1 byte\r\n      codePoint = 0xFFFD;\r\n      bytesPerSequence = 1;\r\n    } else if (codePoint > 0xFFFF) {\r\n      // encode to utf16 (surrogate pair dance)\r\n      codePoint -= 0x10000;\r\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\r\n      codePoint = 0xDC00 | codePoint & 0x3FF;\r\n    }\r\n\r\n    res.push(codePoint);\r\n    i += bytesPerSequence;\r\n  }\r\n\r\n  return decodeCodePointsArray(res)\r\n}\r\n\r\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n// the lowest limit is Chrome, with 0x10000 args.\r\n// We go 1 magnitude less, for safety\r\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\r\n\r\nfunction decodeCodePointsArray (codePoints) {\r\n  var len = codePoints.length;\r\n  if (len <= MAX_ARGUMENTS_LENGTH) {\r\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n  }\r\n\r\n  // Decode in chunks to avoid \"call stack size exceeded\".\r\n  var res = '';\r\n  var i = 0;\r\n  while (i < len) {\r\n    res += String.fromCharCode.apply(\r\n      String,\r\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n    );\r\n  }\r\n  return res\r\n}\r\n\r\nfunction asciiSlice (buf, start, end) {\r\n  var ret = '';\r\n  end = Math.min(buf.length, end);\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i] & 0x7F);\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction latin1Slice (buf, start, end) {\r\n  var ret = '';\r\n  end = Math.min(buf.length, end);\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i]);\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction hexSlice (buf, start, end) {\r\n  var len = buf.length;\r\n\r\n  if (!start || start < 0) start = 0;\r\n  if (!end || end < 0 || end > len) end = len;\r\n\r\n  var out = '';\r\n  for (var i = start; i < end; ++i) {\r\n    out += toHex(buf[i]);\r\n  }\r\n  return out\r\n}\r\n\r\nfunction utf16leSlice (buf, start, end) {\r\n  var bytes = buf.slice(start, end);\r\n  var res = '';\r\n  for (var i = 0; i < bytes.length; i += 2) {\r\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\r\n  }\r\n  return res\r\n}\r\n\r\nBuffer$1.prototype.slice = function slice (start, end) {\r\n  var len = this.length;\r\n  start = ~~start;\r\n  end = end === undefined ? len : ~~end;\r\n\r\n  if (start < 0) {\r\n    start += len;\r\n    if (start < 0) start = 0;\r\n  } else if (start > len) {\r\n    start = len;\r\n  }\r\n\r\n  if (end < 0) {\r\n    end += len;\r\n    if (end < 0) end = 0;\r\n  } else if (end > len) {\r\n    end = len;\r\n  }\r\n\r\n  if (end < start) end = start;\r\n\r\n  var newBuf;\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    newBuf = this.subarray(start, end);\r\n    newBuf.__proto__ = Buffer$1.prototype;\r\n  } else {\r\n    var sliceLen = end - start;\r\n    newBuf = new Buffer$1(sliceLen, undefined);\r\n    for (var i = 0; i < sliceLen; ++i) {\r\n      newBuf[i] = this[i + start];\r\n    }\r\n  }\r\n\r\n  return newBuf\r\n};\r\n\r\n/*\r\n * Need to make sure that buffer isn't trying to write out of bounds.\r\n */\r\nfunction checkOffset (offset, ext, length) {\r\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\r\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\r\n}\r\n\r\nBuffer$1.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\r\n\r\n  var val = this[offset];\r\n  var mul = 1;\r\n  var i = 0;\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul;\r\n  }\r\n\r\n  return val\r\n};\r\n\r\nBuffer$1.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) {\r\n    checkOffset(offset, byteLength, this.length);\r\n  }\r\n\r\n  var val = this[offset + --byteLength];\r\n  var mul = 1;\r\n  while (byteLength > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --byteLength] * mul;\r\n  }\r\n\r\n  return val\r\n};\r\n\r\nBuffer$1.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 1, this.length);\r\n  return this[offset]\r\n};\r\n\r\nBuffer$1.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length);\r\n  return this[offset] | (this[offset + 1] << 8)\r\n};\r\n\r\nBuffer$1.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length);\r\n  return (this[offset] << 8) | this[offset + 1]\r\n};\r\n\r\nBuffer$1.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n\r\n  return ((this[offset]) |\r\n      (this[offset + 1] << 8) |\r\n      (this[offset + 2] << 16)) +\r\n      (this[offset + 3] * 0x1000000)\r\n};\r\n\r\nBuffer$1.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n\r\n  return (this[offset] * 0x1000000) +\r\n    ((this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    this[offset + 3])\r\n};\r\n\r\nBuffer$1.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\r\n\r\n  var val = this[offset];\r\n  var mul = 1;\r\n  var i = 0;\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul;\r\n  }\r\n  mul *= 0x80;\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\r\n\r\n  return val\r\n};\r\n\r\nBuffer$1.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\r\n\r\n  var i = byteLength;\r\n  var mul = 1;\r\n  var val = this[offset + --i];\r\n  while (i > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --i] * mul;\r\n  }\r\n  mul *= 0x80;\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\r\n\r\n  return val\r\n};\r\n\r\nBuffer$1.prototype.readInt8 = function readInt8 (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 1, this.length);\r\n  if (!(this[offset] & 0x80)) return (this[offset])\r\n  return ((0xff - this[offset] + 1) * -1)\r\n};\r\n\r\nBuffer$1.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length);\r\n  var val = this[offset] | (this[offset + 1] << 8);\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n};\r\n\r\nBuffer$1.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length);\r\n  var val = this[offset + 1] | (this[offset] << 8);\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n};\r\n\r\nBuffer$1.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n\r\n  return (this[offset]) |\r\n    (this[offset + 1] << 8) |\r\n    (this[offset + 2] << 16) |\r\n    (this[offset + 3] << 24)\r\n};\r\n\r\nBuffer$1.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n\r\n  return (this[offset] << 24) |\r\n    (this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    (this[offset + 3])\r\n};\r\n\r\nBuffer$1.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n  return read(this, offset, true, 23, 4)\r\n};\r\n\r\nBuffer$1.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n  return read(this, offset, false, 23, 4)\r\n};\r\n\r\nBuffer$1.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 8, this.length);\r\n  return read(this, offset, true, 52, 8)\r\n};\r\n\r\nBuffer$1.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 8, this.length);\r\n  return read(this, offset, false, 52, 8)\r\n};\r\n\r\nfunction checkInt (buf, value, offset, ext, max, min) {\r\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n}\r\n\r\nBuffer$1.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\r\n  }\r\n\r\n  var mul = 1;\r\n  var i = 0;\r\n  this[offset] = value & 0xFF;\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF;\r\n  }\r\n\r\n  return offset + byteLength\r\n};\r\n\r\nBuffer$1.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\r\n  }\r\n\r\n  var i = byteLength - 1;\r\n  var mul = 1;\r\n  this[offset + i] = value & 0xFF;\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF;\r\n  }\r\n\r\n  return offset + byteLength\r\n};\r\n\r\nBuffer$1.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\r\n  if (!Buffer$1.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\r\n  this[offset] = (value & 0xff);\r\n  return offset + 1\r\n};\r\n\r\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\r\n  if (value < 0) value = 0xffff + value + 1;\r\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\r\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\r\n      (littleEndian ? i : 1 - i) * 8;\r\n  }\r\n}\r\n\r\nBuffer$1.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff);\r\n    this[offset + 1] = (value >>> 8);\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, true);\r\n  }\r\n  return offset + 2\r\n};\r\n\r\nBuffer$1.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 8);\r\n    this[offset + 1] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, false);\r\n  }\r\n  return offset + 2\r\n};\r\n\r\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\r\n  if (value < 0) value = 0xffffffff + value + 1;\r\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\r\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\r\n  }\r\n}\r\n\r\nBuffer$1.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    this[offset + 3] = (value >>> 24);\r\n    this[offset + 2] = (value >>> 16);\r\n    this[offset + 1] = (value >>> 8);\r\n    this[offset] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, true);\r\n  }\r\n  return offset + 4\r\n};\r\n\r\nBuffer$1.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 24);\r\n    this[offset + 1] = (value >>> 16);\r\n    this[offset + 2] = (value >>> 8);\r\n    this[offset + 3] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, false);\r\n  }\r\n  return offset + 4\r\n};\r\n\r\nBuffer$1.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, 8 * byteLength - 1);\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\r\n  }\r\n\r\n  var i = 0;\r\n  var mul = 1;\r\n  var sub = 0;\r\n  this[offset] = value & 0xFF;\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n      sub = 1;\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\r\n  }\r\n\r\n  return offset + byteLength\r\n};\r\n\r\nBuffer$1.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, 8 * byteLength - 1);\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\r\n  }\r\n\r\n  var i = byteLength - 1;\r\n  var mul = 1;\r\n  var sub = 0;\r\n  this[offset + i] = value & 0xFF;\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n      sub = 1;\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\r\n  }\r\n\r\n  return offset + byteLength\r\n};\r\n\r\nBuffer$1.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\r\n  if (!Buffer$1.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\r\n  if (value < 0) value = 0xff + value + 1;\r\n  this[offset] = (value & 0xff);\r\n  return offset + 1\r\n};\r\n\r\nBuffer$1.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff);\r\n    this[offset + 1] = (value >>> 8);\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, true);\r\n  }\r\n  return offset + 2\r\n};\r\n\r\nBuffer$1.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 8);\r\n    this[offset + 1] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, false);\r\n  }\r\n  return offset + 2\r\n};\r\n\r\nBuffer$1.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff);\r\n    this[offset + 1] = (value >>> 8);\r\n    this[offset + 2] = (value >>> 16);\r\n    this[offset + 3] = (value >>> 24);\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, true);\r\n  }\r\n  return offset + 4\r\n};\r\n\r\nBuffer$1.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\r\n  if (value < 0) value = 0xffffffff + value + 1;\r\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 24);\r\n    this[offset + 1] = (value >>> 16);\r\n    this[offset + 2] = (value >>> 8);\r\n    this[offset + 3] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, false);\r\n  }\r\n  return offset + 4\r\n};\r\n\r\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n  if (offset < 0) throw new RangeError('Index out of range')\r\n}\r\n\r\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 4);\r\n  }\r\n  write(buf, value, offset, littleEndian, 23, 4);\r\n  return offset + 4\r\n}\r\n\r\nBuffer$1.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, true, noAssert)\r\n};\r\n\r\nBuffer$1.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, false, noAssert)\r\n};\r\n\r\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 8);\r\n  }\r\n  write(buf, value, offset, littleEndian, 52, 8);\r\n  return offset + 8\r\n}\r\n\r\nBuffer$1.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, true, noAssert)\r\n};\r\n\r\nBuffer$1.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, false, noAssert)\r\n};\r\n\r\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\nBuffer$1.prototype.copy = function copy (target, targetStart, start, end) {\r\n  if (!start) start = 0;\r\n  if (!end && end !== 0) end = this.length;\r\n  if (targetStart >= target.length) targetStart = target.length;\r\n  if (!targetStart) targetStart = 0;\r\n  if (end > 0 && end < start) end = start;\r\n\r\n  // Copy 0 bytes; we're done\r\n  if (end === start) return 0\r\n  if (target.length === 0 || this.length === 0) return 0\r\n\r\n  // Fatal error conditions\r\n  if (targetStart < 0) {\r\n    throw new RangeError('targetStart out of bounds')\r\n  }\r\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\r\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n  // Are we oob?\r\n  if (end > this.length) end = this.length;\r\n  if (target.length - targetStart < end - start) {\r\n    end = target.length - targetStart + start;\r\n  }\r\n\r\n  var len = end - start;\r\n  var i;\r\n\r\n  if (this === target && start < targetStart && targetStart < end) {\r\n    // descending copy from end\r\n    for (i = len - 1; i >= 0; --i) {\r\n      target[i + targetStart] = this[i + start];\r\n    }\r\n  } else if (len < 1000 || !Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    // ascending copy from start\r\n    for (i = 0; i < len; ++i) {\r\n      target[i + targetStart] = this[i + start];\r\n    }\r\n  } else {\r\n    Uint8Array.prototype.set.call(\r\n      target,\r\n      this.subarray(start, start + len),\r\n      targetStart\r\n    );\r\n  }\r\n\r\n  return len\r\n};\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer$1.prototype.fill = function fill (val, start, end, encoding) {\r\n  // Handle string cases:\r\n  if (typeof val === 'string') {\r\n    if (typeof start === 'string') {\r\n      encoding = start;\r\n      start = 0;\r\n      end = this.length;\r\n    } else if (typeof end === 'string') {\r\n      encoding = end;\r\n      end = this.length;\r\n    }\r\n    if (val.length === 1) {\r\n      var code = val.charCodeAt(0);\r\n      if (code < 256) {\r\n        val = code;\r\n      }\r\n    }\r\n    if (encoding !== undefined && typeof encoding !== 'string') {\r\n      throw new TypeError('encoding must be a string')\r\n    }\r\n    if (typeof encoding === 'string' && !Buffer$1.isEncoding(encoding)) {\r\n      throw new TypeError('Unknown encoding: ' + encoding)\r\n    }\r\n  } else if (typeof val === 'number') {\r\n    val = val & 255;\r\n  }\r\n\r\n  // Invalid ranges are not set to a default, so can range check early.\r\n  if (start < 0 || this.length < start || this.length < end) {\r\n    throw new RangeError('Out of range index')\r\n  }\r\n\r\n  if (end <= start) {\r\n    return this\r\n  }\r\n\r\n  start = start >>> 0;\r\n  end = end === undefined ? this.length : end >>> 0;\r\n\r\n  if (!val) val = 0;\r\n\r\n  var i;\r\n  if (typeof val === 'number') {\r\n    for (i = start; i < end; ++i) {\r\n      this[i] = val;\r\n    }\r\n  } else {\r\n    var bytes = internalIsBuffer(val)\r\n      ? val\r\n      : utf8ToBytes(new Buffer$1(val, encoding).toString());\r\n    var len = bytes.length;\r\n    for (i = 0; i < end - start; ++i) {\r\n      this[i + start] = bytes[i % len];\r\n    }\r\n  }\r\n\r\n  return this\r\n};\r\n\r\n// HELPER FUNCTIONS\r\n// ================\r\n\r\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\r\n\r\nfunction base64clean (str) {\r\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\r\n  // Node converts strings with length < 2 to ''\r\n  if (str.length < 2) return ''\r\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n  while (str.length % 4 !== 0) {\r\n    str = str + '=';\r\n  }\r\n  return str\r\n}\r\n\r\nfunction stringtrim (str) {\r\n  if (str.trim) return str.trim()\r\n  return str.replace(/^\\s+|\\s+$/g, '')\r\n}\r\n\r\nfunction toHex (n) {\r\n  if (n < 16) return '0' + n.toString(16)\r\n  return n.toString(16)\r\n}\r\n\r\nfunction utf8ToBytes (string, units) {\r\n  units = units || Infinity;\r\n  var codePoint;\r\n  var length = string.length;\r\n  var leadSurrogate = null;\r\n  var bytes = [];\r\n\r\n  for (var i = 0; i < length; ++i) {\r\n    codePoint = string.charCodeAt(i);\r\n\r\n    // is surrogate component\r\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n      // last char was a lead\r\n      if (!leadSurrogate) {\r\n        // no lead yet\r\n        if (codePoint > 0xDBFF) {\r\n          // unexpected trail\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\r\n          continue\r\n        } else if (i + 1 === length) {\r\n          // unpaired lead\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\r\n          continue\r\n        }\r\n\r\n        // valid lead\r\n        leadSurrogate = codePoint;\r\n\r\n        continue\r\n      }\r\n\r\n      // 2 leads in a row\r\n      if (codePoint < 0xDC00) {\r\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\r\n        leadSurrogate = codePoint;\r\n        continue\r\n      }\r\n\r\n      // valid surrogate pair\r\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\r\n    } else if (leadSurrogate) {\r\n      // valid bmp char, but last char was a lead\r\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\r\n    }\r\n\r\n    leadSurrogate = null;\r\n\r\n    // encode utf8\r\n    if (codePoint < 0x80) {\r\n      if ((units -= 1) < 0) break\r\n      bytes.push(codePoint);\r\n    } else if (codePoint < 0x800) {\r\n      if ((units -= 2) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x6 | 0xC0,\r\n        codePoint & 0x3F | 0x80\r\n      );\r\n    } else if (codePoint < 0x10000) {\r\n      if ((units -= 3) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0xC | 0xE0,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      );\r\n    } else if (codePoint < 0x110000) {\r\n      if ((units -= 4) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x12 | 0xF0,\r\n        codePoint >> 0xC & 0x3F | 0x80,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      );\r\n    } else {\r\n      throw new Error('Invalid code point')\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nfunction asciiToBytes (str) {\r\n  var byteArray = [];\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Node's code seems to be doing this and not & 0x7F..\r\n    byteArray.push(str.charCodeAt(i) & 0xFF);\r\n  }\r\n  return byteArray\r\n}\r\n\r\nfunction utf16leToBytes (str, units) {\r\n  var c, hi, lo;\r\n  var byteArray = [];\r\n  for (var i = 0; i < str.length; ++i) {\r\n    if ((units -= 2) < 0) break\r\n\r\n    c = str.charCodeAt(i);\r\n    hi = c >> 8;\r\n    lo = c % 256;\r\n    byteArray.push(lo);\r\n    byteArray.push(hi);\r\n  }\r\n\r\n  return byteArray\r\n}\r\n\r\n\r\nfunction base64ToBytes (str) {\r\n  return toByteArray(base64clean(str))\r\n}\r\n\r\nfunction blitBuffer (src, dst, offset, length) {\r\n  for (var i = 0; i < length; ++i) {\r\n    if ((i + offset >= dst.length) || (i >= src.length)) break\r\n    dst[i + offset] = src[i];\r\n  }\r\n  return i\r\n}\r\n\r\nfunction isnan (val) {\r\n  return val !== val // eslint-disable-line no-self-compare\r\n}\r\n\r\n\r\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\r\n// The _isBuffer check is for Safari 5-7 support, because it's missing\r\n// Object.prototype.constructor. Remove this eventually\r\nfunction isBuffer$1(obj) {\r\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\r\n}\r\n\r\nfunction isFastBuffer (obj) {\r\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\r\n}\r\n\r\n// For Node v0.10 support. Remove this eventually.\r\nfunction isSlowBuffer (obj) {\r\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\r\n}\r\n\r\n// shim for using process in browser\r\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\r\n\r\nfunction defaultSetTimout() {\r\n    throw new Error('setTimeout has not been defined');\r\n}\r\nfunction defaultClearTimeout () {\r\n    throw new Error('clearTimeout has not been defined');\r\n}\r\nvar cachedSetTimeout = defaultSetTimout;\r\nvar cachedClearTimeout = defaultClearTimeout;\r\nif (typeof global$1.setTimeout === 'function') {\r\n    cachedSetTimeout = setTimeout;\r\n}\r\nif (typeof global$1.clearTimeout === 'function') {\r\n    cachedClearTimeout = clearTimeout;\r\n}\r\n\r\nfunction runTimeout(fun) {\r\n    if (cachedSetTimeout === setTimeout) {\r\n        //normal enviroments in sane situations\r\n        return setTimeout(fun, 0);\r\n    }\r\n    // if setTimeout wasn't available but was latter defined\r\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\r\n        cachedSetTimeout = setTimeout;\r\n        return setTimeout(fun, 0);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedSetTimeout(fun, 0);\r\n    } catch(e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n            return cachedSetTimeout.call(null, fun, 0);\r\n        } catch(e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n            return cachedSetTimeout.call(this, fun, 0);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction runClearTimeout(marker) {\r\n    if (cachedClearTimeout === clearTimeout) {\r\n        //normal enviroments in sane situations\r\n        return clearTimeout(marker);\r\n    }\r\n    // if clearTimeout wasn't available but was latter defined\r\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\r\n        cachedClearTimeout = clearTimeout;\r\n        return clearTimeout(marker);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedClearTimeout(marker);\r\n    } catch (e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n            return cachedClearTimeout.call(null, marker);\r\n        } catch (e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n            return cachedClearTimeout.call(this, marker);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n    if (!draining || !currentQueue) {\r\n        return;\r\n    }\r\n    draining = false;\r\n    if (currentQueue.length) {\r\n        queue = currentQueue.concat(queue);\r\n    } else {\r\n        queueIndex = -1;\r\n    }\r\n    if (queue.length) {\r\n        drainQueue();\r\n    }\r\n}\r\n\r\nfunction drainQueue() {\r\n    if (draining) {\r\n        return;\r\n    }\r\n    var timeout = runTimeout(cleanUpNextTick);\r\n    draining = true;\r\n\r\n    var len = queue.length;\r\n    while(len) {\r\n        currentQueue = queue;\r\n        queue = [];\r\n        while (++queueIndex < len) {\r\n            if (currentQueue) {\r\n                currentQueue[queueIndex].run();\r\n            }\r\n        }\r\n        queueIndex = -1;\r\n        len = queue.length;\r\n    }\r\n    currentQueue = null;\r\n    draining = false;\r\n    runClearTimeout(timeout);\r\n}\r\nfunction nextTick(fun) {\r\n    var args = new Array(arguments.length - 1);\r\n    if (arguments.length > 1) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            args[i - 1] = arguments[i];\r\n        }\r\n    }\r\n    queue.push(new Item(fun, args));\r\n    if (queue.length === 1 && !draining) {\r\n        runTimeout(drainQueue);\r\n    }\r\n}\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n    this.fun = fun;\r\n    this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n    this.fun.apply(null, this.array);\r\n};\r\nvar title = 'browser';\r\nvar platform = 'browser';\r\nvar browser = true;\r\nvar env = {};\r\nvar argv = [];\r\nvar version$1 = ''; // empty string to avoid regexp issues\r\nvar versions = {};\r\nvar release = {};\r\nvar config = {};\r\n\r\nfunction noop() {}\r\n\r\nvar on = noop;\r\nvar addListener = noop;\r\nvar once = noop;\r\nvar off = noop;\r\nvar removeListener = noop;\r\nvar removeAllListeners = noop;\r\nvar emit = noop;\r\n\r\nfunction binding(name) {\r\n    throw new Error('process.binding is not supported');\r\n}\r\n\r\nfunction cwd () { return '/' }\r\nfunction chdir (dir) {\r\n    throw new Error('process.chdir is not supported');\r\n}function umask() { return 0; }\r\n\r\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\r\nvar performance = global$1.performance || {};\r\nvar performanceNow =\r\n  performance.now        ||\r\n  performance.mozNow     ||\r\n  performance.msNow      ||\r\n  performance.oNow       ||\r\n  performance.webkitNow  ||\r\n  function(){ return (new Date()).getTime() };\r\n\r\n// generate timestamp or delta\r\n// see http://nodejs.org/api/process.html#process_process_hrtime\r\nfunction hrtime(previousTimestamp){\r\n  var clocktime = performanceNow.call(performance)*1e-3;\r\n  var seconds = Math.floor(clocktime);\r\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\r\n  if (previousTimestamp) {\r\n    seconds = seconds - previousTimestamp[0];\r\n    nanoseconds = nanoseconds - previousTimestamp[1];\r\n    if (nanoseconds<0) {\r\n      seconds--;\r\n      nanoseconds += 1e9;\r\n    }\r\n  }\r\n  return [seconds,nanoseconds]\r\n}\r\n\r\nvar startTime = new Date();\r\nfunction uptime() {\r\n  var currentTime = new Date();\r\n  var dif = currentTime - startTime;\r\n  return dif / 1000;\r\n}\r\n\r\nvar browser$1 = {\r\n  nextTick: nextTick,\r\n  title: title,\r\n  browser: browser,\r\n  env: env,\r\n  argv: argv,\r\n  version: version$1,\r\n  versions: versions,\r\n  on: on,\r\n  addListener: addListener,\r\n  once: once,\r\n  off: off,\r\n  removeListener: removeListener,\r\n  removeAllListeners: removeAllListeners,\r\n  emit: emit,\r\n  binding: binding,\r\n  cwd: cwd,\r\n  chdir: chdir,\r\n  umask: umask,\r\n  hrtime: hrtime,\r\n  platform: platform,\r\n  release: release,\r\n  config: config,\r\n  uptime: uptime\r\n};\r\n\r\nvar inherits;\r\nif (typeof Object.create === 'function'){\r\n  inherits = function inherits(ctor, superCtor) {\r\n    // implementation from standard node.js 'util' module\r\n    ctor.super_ = superCtor;\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  };\r\n} else {\r\n  inherits = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor;\r\n    var TempCtor = function () {};\r\n    TempCtor.prototype = superCtor.prototype;\r\n    ctor.prototype = new TempCtor();\r\n    ctor.prototype.constructor = ctor;\r\n  };\r\n}\r\nvar inherits$1 = inherits;\r\n\r\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\r\n  function getOwnPropertyDescriptors(obj) {\r\n    var keys = Object.keys(obj);\r\n    var descriptors = {};\r\n    for (var i = 0; i < keys.length; i++) {\r\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\r\n    }\r\n    return descriptors;\r\n  };\r\n\r\nvar formatRegExp = /%[sdj%]/g;\r\nfunction format$1(f) {\r\n  if (!isString$1(f)) {\r\n    var objects = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      objects.push(inspect(arguments[i]));\r\n    }\r\n    return objects.join(' ');\r\n  }\r\n\r\n  var i = 1;\r\n  var args = arguments;\r\n  var len = args.length;\r\n  var str = String(f).replace(formatRegExp, function(x) {\r\n    if (x === '%%') return '%';\r\n    if (i >= len) return x;\r\n    switch (x) {\r\n      case '%s': return String(args[i++]);\r\n      case '%d': return Number(args[i++]);\r\n      case '%j':\r\n        try {\r\n          return JSON.stringify(args[i++]);\r\n        } catch (_) {\r\n          return '[Circular]';\r\n        }\r\n      default:\r\n        return x;\r\n    }\r\n  });\r\n  for (var x = args[i]; i < len; x = args[++i]) {\r\n    if (isNull(x) || !isObject$1(x)) {\r\n      str += ' ' + x;\r\n    } else {\r\n      str += ' ' + inspect(x);\r\n    }\r\n  }\r\n  return str;\r\n}\r\n\r\n// Mark that a method should not be used.\r\n// Returns a modified function which warns once by default.\r\n// If --no-deprecation is set, then it is a no-op.\r\nfunction deprecate(fn, msg) {\r\n  // Allow for deprecating things in the process of starting up.\r\n  if (isUndefined(global$1.process)) {\r\n    return function() {\r\n      return deprecate(fn, msg).apply(this, arguments);\r\n    };\r\n  }\r\n\r\n  if (browser$1.noDeprecation === true) {\r\n    return fn;\r\n  }\r\n\r\n  var warned = false;\r\n  function deprecated() {\r\n    if (!warned) {\r\n      if (browser$1.throwDeprecation) {\r\n        throw new Error(msg);\r\n      } else if (browser$1.traceDeprecation) {\r\n        console.trace(msg);\r\n      } else {\r\n        console.error(msg);\r\n      }\r\n      warned = true;\r\n    }\r\n    return fn.apply(this, arguments);\r\n  }\r\n\r\n  return deprecated;\r\n}\r\n\r\nvar debugs = {};\r\nvar debugEnviron;\r\nfunction debuglog(set) {\r\n  if (isUndefined(debugEnviron))\r\n    debugEnviron = browser$1.env.NODE_DEBUG || '';\r\n  set = set.toUpperCase();\r\n  if (!debugs[set]) {\r\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\r\n      var pid = 0;\r\n      debugs[set] = function() {\r\n        var msg = format$1.apply(null, arguments);\r\n        console.error('%s %d: %s', set, pid, msg);\r\n      };\r\n    } else {\r\n      debugs[set] = function() {};\r\n    }\r\n  }\r\n  return debugs[set];\r\n}\r\n\r\n/**\r\n * Echos the value of a value. Trys to print the value out\r\n * in the best way possible given the different types.\r\n *\r\n * @param {Object} obj The object to print out.\r\n * @param {Object} opts Optional options object that alters the output.\r\n */\r\n/* legacy: obj, showHidden, depth, colors*/\r\nfunction inspect(obj, opts) {\r\n  // default options\r\n  var ctx = {\r\n    seen: [],\r\n    stylize: stylizeNoColor\r\n  };\r\n  // legacy...\r\n  if (arguments.length >= 3) ctx.depth = arguments[2];\r\n  if (arguments.length >= 4) ctx.colors = arguments[3];\r\n  if (isBoolean(opts)) {\r\n    // legacy...\r\n    ctx.showHidden = opts;\r\n  } else if (opts) {\r\n    // got an \"options\" object\r\n    _extend(ctx, opts);\r\n  }\r\n  // set default options\r\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\r\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\r\n  if (isUndefined(ctx.colors)) ctx.colors = false;\r\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\r\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\r\n  return formatValue(ctx, obj, ctx.depth);\r\n}\r\n\r\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\r\ninspect.colors = {\r\n  'bold' : [1, 22],\r\n  'italic' : [3, 23],\r\n  'underline' : [4, 24],\r\n  'inverse' : [7, 27],\r\n  'white' : [37, 39],\r\n  'grey' : [90, 39],\r\n  'black' : [30, 39],\r\n  'blue' : [34, 39],\r\n  'cyan' : [36, 39],\r\n  'green' : [32, 39],\r\n  'magenta' : [35, 39],\r\n  'red' : [31, 39],\r\n  'yellow' : [33, 39]\r\n};\r\n\r\n// Don't use 'blue' not visible on cmd.exe\r\ninspect.styles = {\r\n  'special': 'cyan',\r\n  'number': 'yellow',\r\n  'boolean': 'yellow',\r\n  'undefined': 'grey',\r\n  'null': 'bold',\r\n  'string': 'green',\r\n  'date': 'magenta',\r\n  // \"name\": intentionally not styling\r\n  'regexp': 'red'\r\n};\r\n\r\n\r\nfunction stylizeWithColor(str, styleType) {\r\n  var style = inspect.styles[styleType];\r\n\r\n  if (style) {\r\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\r\n           '\\u001b[' + inspect.colors[style][1] + 'm';\r\n  } else {\r\n    return str;\r\n  }\r\n}\r\n\r\n\r\nfunction stylizeNoColor(str, styleType) {\r\n  return str;\r\n}\r\n\r\n\r\nfunction arrayToHash(array) {\r\n  var hash = {};\r\n\r\n  array.forEach(function(val, idx) {\r\n    hash[val] = true;\r\n  });\r\n\r\n  return hash;\r\n}\r\n\r\n\r\nfunction formatValue(ctx, value, recurseTimes) {\r\n  // Provide a hook for user-specified inspect functions.\r\n  // Check that value is an object with an inspect function on it\r\n  if (ctx.customInspect &&\r\n      value &&\r\n      isFunction(value.inspect) &&\r\n      // Filter out the util module, it's inspect function is special\r\n      value.inspect !== inspect &&\r\n      // Also filter out any prototype objects using the circular check.\r\n      !(value.constructor && value.constructor.prototype === value)) {\r\n    var ret = value.inspect(recurseTimes, ctx);\r\n    if (!isString$1(ret)) {\r\n      ret = formatValue(ctx, ret, recurseTimes);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  // Primitive types cannot have properties\r\n  var primitive = formatPrimitive(ctx, value);\r\n  if (primitive) {\r\n    return primitive;\r\n  }\r\n\r\n  // Look up the keys of the object.\r\n  var keys = Object.keys(value);\r\n  var visibleKeys = arrayToHash(keys);\r\n\r\n  if (ctx.showHidden) {\r\n    keys = Object.getOwnPropertyNames(value);\r\n  }\r\n\r\n  // IE doesn't make error fields non-enumerable\r\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\r\n  if (isError(value)\r\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\r\n    return formatError(value);\r\n  }\r\n\r\n  // Some type of object without properties can be shortcutted.\r\n  if (keys.length === 0) {\r\n    if (isFunction(value)) {\r\n      var name = value.name ? ': ' + value.name : '';\r\n      return ctx.stylize('[Function' + name + ']', 'special');\r\n    }\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    }\r\n    if (isDate(value)) {\r\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\r\n    }\r\n    if (isError(value)) {\r\n      return formatError(value);\r\n    }\r\n  }\r\n\r\n  var base = '', array = false, braces = ['{', '}'];\r\n\r\n  // Make Array say that they are Array\r\n  if (isArray$1(value)) {\r\n    array = true;\r\n    braces = ['[', ']'];\r\n  }\r\n\r\n  // Make functions say that they are functions\r\n  if (isFunction(value)) {\r\n    var n = value.name ? ': ' + value.name : '';\r\n    base = ' [Function' + n + ']';\r\n  }\r\n\r\n  // Make RegExps say that they are RegExps\r\n  if (isRegExp(value)) {\r\n    base = ' ' + RegExp.prototype.toString.call(value);\r\n  }\r\n\r\n  // Make dates with properties first say the date\r\n  if (isDate(value)) {\r\n    base = ' ' + Date.prototype.toUTCString.call(value);\r\n  }\r\n\r\n  // Make error with message first say the error\r\n  if (isError(value)) {\r\n    base = ' ' + formatError(value);\r\n  }\r\n\r\n  if (keys.length === 0 && (!array || value.length == 0)) {\r\n    return braces[0] + base + braces[1];\r\n  }\r\n\r\n  if (recurseTimes < 0) {\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    } else {\r\n      return ctx.stylize('[Object]', 'special');\r\n    }\r\n  }\r\n\r\n  ctx.seen.push(value);\r\n\r\n  var output;\r\n  if (array) {\r\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\r\n  } else {\r\n    output = keys.map(function(key) {\r\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\r\n    });\r\n  }\r\n\r\n  ctx.seen.pop();\r\n\r\n  return reduceToSingleString(output, base, braces);\r\n}\r\n\r\n\r\nfunction formatPrimitive(ctx, value) {\r\n  if (isUndefined(value))\r\n    return ctx.stylize('undefined', 'undefined');\r\n  if (isString$1(value)) {\r\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\r\n                                             .replace(/'/g, \"\\\\'\")\r\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\r\n    return ctx.stylize(simple, 'string');\r\n  }\r\n  if (isNumber(value))\r\n    return ctx.stylize('' + value, 'number');\r\n  if (isBoolean(value))\r\n    return ctx.stylize('' + value, 'boolean');\r\n  // For some reason typeof null is \"object\", so special case here.\r\n  if (isNull(value))\r\n    return ctx.stylize('null', 'null');\r\n}\r\n\r\n\r\nfunction formatError(value) {\r\n  return '[' + Error.prototype.toString.call(value) + ']';\r\n}\r\n\r\n\r\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\r\n  var output = [];\r\n  for (var i = 0, l = value.length; i < l; ++i) {\r\n    if (hasOwnProperty$2(value, String(i))) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          String(i), true));\r\n    } else {\r\n      output.push('');\r\n    }\r\n  }\r\n  keys.forEach(function(key) {\r\n    if (!key.match(/^\\d+$/)) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          key, true));\r\n    }\r\n  });\r\n  return output;\r\n}\r\n\r\n\r\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\r\n  var name, str, desc;\r\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\r\n  if (desc.get) {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Getter/Setter]', 'special');\r\n    } else {\r\n      str = ctx.stylize('[Getter]', 'special');\r\n    }\r\n  } else {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Setter]', 'special');\r\n    }\r\n  }\r\n  if (!hasOwnProperty$2(visibleKeys, key)) {\r\n    name = '[' + key + ']';\r\n  }\r\n  if (!str) {\r\n    if (ctx.seen.indexOf(desc.value) < 0) {\r\n      if (isNull(recurseTimes)) {\r\n        str = formatValue(ctx, desc.value, null);\r\n      } else {\r\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\r\n      }\r\n      if (str.indexOf('\\n') > -1) {\r\n        if (array) {\r\n          str = str.split('\\n').map(function(line) {\r\n            return '  ' + line;\r\n          }).join('\\n').substr(2);\r\n        } else {\r\n          str = '\\n' + str.split('\\n').map(function(line) {\r\n            return '   ' + line;\r\n          }).join('\\n');\r\n        }\r\n      }\r\n    } else {\r\n      str = ctx.stylize('[Circular]', 'special');\r\n    }\r\n  }\r\n  if (isUndefined(name)) {\r\n    if (array && key.match(/^\\d+$/)) {\r\n      return str;\r\n    }\r\n    name = JSON.stringify('' + key);\r\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\r\n      name = name.substr(1, name.length - 2);\r\n      name = ctx.stylize(name, 'name');\r\n    } else {\r\n      name = name.replace(/'/g, \"\\\\'\")\r\n                 .replace(/\\\\\"/g, '\"')\r\n                 .replace(/(^\"|\"$)/g, \"'\");\r\n      name = ctx.stylize(name, 'string');\r\n    }\r\n  }\r\n\r\n  return name + ': ' + str;\r\n}\r\n\r\n\r\nfunction reduceToSingleString(output, base, braces) {\r\n  var length = output.reduce(function(prev, cur) {\r\n    if (cur.indexOf('\\n') >= 0) ;\r\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\r\n  }, 0);\r\n\r\n  if (length > 60) {\r\n    return braces[0] +\r\n           (base === '' ? '' : base + '\\n ') +\r\n           ' ' +\r\n           output.join(',\\n  ') +\r\n           ' ' +\r\n           braces[1];\r\n  }\r\n\r\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\r\n}\r\n\r\n\r\n// NOTE: These type checking functions intentionally don't use `instanceof`\r\n// because it is fragile and can be easily faked with `Object.create()`.\r\nfunction isArray$1(ar) {\r\n  return Array.isArray(ar);\r\n}\r\n\r\nfunction isBoolean(arg) {\r\n  return typeof arg === 'boolean';\r\n}\r\n\r\nfunction isNull(arg) {\r\n  return arg === null;\r\n}\r\n\r\nfunction isNullOrUndefined(arg) {\r\n  return arg == null;\r\n}\r\n\r\nfunction isNumber(arg) {\r\n  return typeof arg === 'number';\r\n}\r\n\r\nfunction isString$1(arg) {\r\n  return typeof arg === 'string';\r\n}\r\n\r\nfunction isSymbol(arg) {\r\n  return typeof arg === 'symbol';\r\n}\r\n\r\nfunction isUndefined(arg) {\r\n  return arg === void 0;\r\n}\r\n\r\nfunction isRegExp(re) {\r\n  return isObject$1(re) && objectToString(re) === '[object RegExp]';\r\n}\r\n\r\nfunction isObject$1(arg) {\r\n  return typeof arg === 'object' && arg !== null;\r\n}\r\n\r\nfunction isDate(d) {\r\n  return isObject$1(d) && objectToString(d) === '[object Date]';\r\n}\r\n\r\nfunction isError(e) {\r\n  return isObject$1(e) &&\r\n      (objectToString(e) === '[object Error]' || e instanceof Error);\r\n}\r\n\r\nfunction isFunction(arg) {\r\n  return typeof arg === 'function';\r\n}\r\n\r\nfunction isPrimitive(arg) {\r\n  return arg === null ||\r\n         typeof arg === 'boolean' ||\r\n         typeof arg === 'number' ||\r\n         typeof arg === 'string' ||\r\n         typeof arg === 'symbol' ||  // ES6 symbol\r\n         typeof arg === 'undefined';\r\n}\r\n\r\nfunction isBuffer(maybeBuf) {\r\n  return Buffer$1.isBuffer(maybeBuf);\r\n}\r\n\r\nfunction objectToString(o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n\r\n\r\nfunction pad(n) {\r\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\r\n}\r\n\r\n\r\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\r\n              'Oct', 'Nov', 'Dec'];\r\n\r\n// 26 Feb 16:19:34\r\nfunction timestamp() {\r\n  var d = new Date();\r\n  var time = [pad(d.getHours()),\r\n              pad(d.getMinutes()),\r\n              pad(d.getSeconds())].join(':');\r\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\r\n}\r\n\r\n\r\n// log is just a thin wrapper to console.log that prepends a timestamp\r\nfunction log() {\r\n  console.log('%s - %s', timestamp(), format$1.apply(null, arguments));\r\n}\r\n\r\nfunction _extend(origin, add) {\r\n  // Don't do anything if add isn't an object\r\n  if (!add || !isObject$1(add)) return origin;\r\n\r\n  var keys = Object.keys(add);\r\n  var i = keys.length;\r\n  while (i--) {\r\n    origin[keys[i]] = add[keys[i]];\r\n  }\r\n  return origin;\r\n}\r\nfunction hasOwnProperty$2(obj, prop) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\n\r\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\r\n\r\nfunction promisify(original) {\r\n  if (typeof original !== 'function')\r\n    throw new TypeError('The \"original\" argument must be of type Function');\r\n\r\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\r\n    var fn = original[kCustomPromisifiedSymbol];\r\n    if (typeof fn !== 'function') {\r\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\r\n    }\r\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\r\n      value: fn, enumerable: false, writable: false, configurable: true\r\n    });\r\n    return fn;\r\n  }\r\n\r\n  function fn() {\r\n    var promiseResolve, promiseReject;\r\n    var promise = new Promise(function (resolve, reject) {\r\n      promiseResolve = resolve;\r\n      promiseReject = reject;\r\n    });\r\n\r\n    var args = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      args.push(arguments[i]);\r\n    }\r\n    args.push(function (err, value) {\r\n      if (err) {\r\n        promiseReject(err);\r\n      } else {\r\n        promiseResolve(value);\r\n      }\r\n    });\r\n\r\n    try {\r\n      original.apply(this, args);\r\n    } catch (err) {\r\n      promiseReject(err);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\r\n\r\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\r\n    value: fn, enumerable: false, writable: false, configurable: true\r\n  });\r\n  return Object.defineProperties(\r\n    fn,\r\n    getOwnPropertyDescriptors(original)\r\n  );\r\n}\r\n\r\npromisify.custom = kCustomPromisifiedSymbol;\r\n\r\nfunction callbackifyOnRejected(reason, cb) {\r\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\r\n  // Because `null` is a special error value in callbacks which means \"no error\r\n  // occurred\", we error-wrap so the callback consumer can distinguish between\r\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\r\n  if (!reason) {\r\n    var newReason = new Error('Promise was rejected with a falsy value');\r\n    newReason.reason = reason;\r\n    reason = newReason;\r\n  }\r\n  return cb(reason);\r\n}\r\n\r\nfunction callbackify(original) {\r\n  if (typeof original !== 'function') {\r\n    throw new TypeError('The \"original\" argument must be of type Function');\r\n  }\r\n\r\n  // We DO NOT return the promise as it gives the user a false sense that\r\n  // the promise is actually somehow related to the callback's execution\r\n  // and that the callback throwing will reject the promise.\r\n  function callbackified() {\r\n    var args = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      args.push(arguments[i]);\r\n    }\r\n\r\n    var maybeCb = args.pop();\r\n    if (typeof maybeCb !== 'function') {\r\n      throw new TypeError('The last argument must be of type Function');\r\n    }\r\n    var self = this;\r\n    var cb = function() {\r\n      return maybeCb.apply(self, arguments);\r\n    };\r\n    // In true node style we process the callback on `nextTick` with all the\r\n    // implications (stack, `uncaughtException`, `async_hooks`)\r\n    original.apply(this, args)\r\n      .then(function(ret) { browser$1.nextTick(cb.bind(null, null, ret)); },\r\n        function(rej) { browser$1.nextTick(callbackifyOnRejected.bind(null, rej, cb)); });\r\n  }\r\n\r\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\r\n  Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));\r\n  return callbackified;\r\n}\r\n\r\nvar _polyfillNode_util = {\r\n  inherits: inherits$1,\r\n  _extend: _extend,\r\n  log: log,\r\n  isBuffer: isBuffer,\r\n  isPrimitive: isPrimitive,\r\n  isFunction: isFunction,\r\n  isError: isError,\r\n  isDate: isDate,\r\n  isObject: isObject$1,\r\n  isRegExp: isRegExp,\r\n  isUndefined: isUndefined,\r\n  isSymbol: isSymbol,\r\n  isString: isString$1,\r\n  isNumber: isNumber,\r\n  isNullOrUndefined: isNullOrUndefined,\r\n  isNull: isNull,\r\n  isBoolean: isBoolean,\r\n  isArray: isArray$1,\r\n  inspect: inspect,\r\n  deprecate: deprecate,\r\n  format: format$1,\r\n  debuglog: debuglog,\r\n  promisify: promisify,\r\n  callbackify: callbackify,\r\n};\r\n\r\nvar _polyfillNode_util$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  _extend: _extend,\r\n  callbackify: callbackify,\r\n  debuglog: debuglog,\r\n  default: _polyfillNode_util,\r\n  deprecate: deprecate,\r\n  format: format$1,\r\n  inherits: inherits$1,\r\n  inspect: inspect,\r\n  isArray: isArray$1,\r\n  isBoolean: isBoolean,\r\n  isBuffer: isBuffer,\r\n  isDate: isDate,\r\n  isError: isError,\r\n  isFunction: isFunction,\r\n  isNull: isNull,\r\n  isNullOrUndefined: isNullOrUndefined,\r\n  isNumber: isNumber,\r\n  isObject: isObject$1,\r\n  isPrimitive: isPrimitive,\r\n  isRegExp: isRegExp,\r\n  isString: isString$1,\r\n  isSymbol: isSymbol,\r\n  isUndefined: isUndefined,\r\n  log: log,\r\n  promisify: promisify\r\n});\r\n\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n// If obj.hasOwnProperty has been overridden, then calling\r\n// obj.hasOwnProperty(prop) will break.\r\n// See: https://github.com/joyent/node/issues/1707\r\nfunction hasOwnProperty$1(obj, prop) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\nvar isArray = Array.isArray || function (xs) {\r\n  return Object.prototype.toString.call(xs) === '[object Array]';\r\n};\r\nfunction stringifyPrimitive(v) {\r\n  switch (typeof v) {\r\n    case 'string':\r\n      return v;\r\n\r\n    case 'boolean':\r\n      return v ? 'true' : 'false';\r\n\r\n    case 'number':\r\n      return isFinite(v) ? v : '';\r\n\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nfunction stringify$5 (obj, sep, eq, name) {\r\n  sep = sep || '&';\r\n  eq = eq || '=';\r\n  if (obj === null) {\r\n    obj = undefined;\r\n  }\r\n\r\n  if (typeof obj === 'object') {\r\n    return map(objectKeys(obj), function(k) {\r\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\r\n      if (isArray(obj[k])) {\r\n        return map(obj[k], function(v) {\r\n          return ks + encodeURIComponent(stringifyPrimitive(v));\r\n        }).join(sep);\r\n      } else {\r\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\r\n      }\r\n    }).join(sep);\r\n\r\n  }\r\n\r\n  if (!name) return '';\r\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\r\n         encodeURIComponent(stringifyPrimitive(obj));\r\n}\r\nfunction map (xs, f) {\r\n  if (xs.map) return xs.map(f);\r\n  var res = [];\r\n  for (var i = 0; i < xs.length; i++) {\r\n    res.push(f(xs[i], i));\r\n  }\r\n  return res;\r\n}\r\n\r\nvar objectKeys = Object.keys || function (obj) {\r\n  var res = [];\r\n  for (var key in obj) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\r\n  }\r\n  return res;\r\n};\r\n\r\nfunction parse$6(qs, sep, eq, options) {\r\n  sep = sep || '&';\r\n  eq = eq || '=';\r\n  var obj = {};\r\n\r\n  if (typeof qs !== 'string' || qs.length === 0) {\r\n    return obj;\r\n  }\r\n\r\n  var regexp = /\\+/g;\r\n  qs = qs.split(sep);\r\n\r\n  var maxKeys = 1000;\r\n  if (options && typeof options.maxKeys === 'number') {\r\n    maxKeys = options.maxKeys;\r\n  }\r\n\r\n  var len = qs.length;\r\n  // maxKeys <= 0 means that we should not limit keys count\r\n  if (maxKeys > 0 && len > maxKeys) {\r\n    len = maxKeys;\r\n  }\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    var x = qs[i].replace(regexp, '%20'),\r\n        idx = x.indexOf(eq),\r\n        kstr, vstr, k, v;\r\n\r\n    if (idx >= 0) {\r\n      kstr = x.substr(0, idx);\r\n      vstr = x.substr(idx + 1);\r\n    } else {\r\n      kstr = x;\r\n      vstr = '';\r\n    }\r\n\r\n    k = decodeURIComponent(kstr);\r\n    v = decodeURIComponent(vstr);\r\n\r\n    if (!hasOwnProperty$1(obj, k)) {\r\n      obj[k] = v;\r\n    } else if (isArray(obj[k])) {\r\n      obj[k].push(v);\r\n    } else {\r\n      obj[k] = [obj[k], v];\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n// WHATWG API\r\nconst URL$1 = global$1.URL;\r\nconst URLSearchParams = global$1.URLSearchParams;\r\nvar _polyfillNode_url = {\r\n  parse: urlParse,\r\n  resolve: urlResolve,\r\n  resolveObject: urlResolveObject,\r\n  fileURLToPath: urlFileURLToPath,\r\n  format: urlFormat,\r\n  Url: Url,\r\n\r\n  // WHATWG API\r\n  URL: URL$1,\r\n  URLSearchParams,  \r\n};\r\nfunction Url() {\r\n  this.protocol = null;\r\n  this.slashes = null;\r\n  this.auth = null;\r\n  this.host = null;\r\n  this.port = null;\r\n  this.hostname = null;\r\n  this.hash = null;\r\n  this.search = null;\r\n  this.query = null;\r\n  this.pathname = null;\r\n  this.path = null;\r\n  this.href = null;\r\n}\r\n\r\n// Reference: RFC 3986, RFC 1808, RFC 2396\r\n\r\n// define these here so at least they only have to be\r\n// compiled once on the first module load.\r\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\r\n  portPattern = /:[0-9]*$/,\r\n\r\n  // Special case for a simple path URL\r\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\r\n\r\n  // RFC 2396: characters reserved for delimiting URLs.\r\n  // We actually just auto-escape these.\r\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\r\n\r\n  // RFC 2396: characters not allowed for various reasons.\r\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\r\n\r\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\r\n  autoEscape = ['\\''].concat(unwise),\r\n  // Characters that are never ever allowed in a hostname.\r\n  // Note that any invalid chars are also handled, but these\r\n  // are the ones that are *expected* to be seen, so we fast-path\r\n  // them.\r\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\r\n  hostEndingChars = ['/', '?', '#'],\r\n  hostnameMaxLen = 255,\r\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\r\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\r\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\r\n  unsafeProtocol = {\r\n    'javascript': true,\r\n    'javascript:': true\r\n  },\r\n  // protocols that never have a hostname.\r\n  hostlessProtocol = {\r\n    'javascript': true,\r\n    'javascript:': true\r\n  },\r\n  // protocols that always contain a // bit.\r\n  slashedProtocol = {\r\n    'http': true,\r\n    'https': true,\r\n    'ftp': true,\r\n    'gopher': true,\r\n    'file': true,\r\n    'http:': true,\r\n    'https:': true,\r\n    'ftp:': true,\r\n    'gopher:': true,\r\n    'file:': true\r\n  };\r\n\r\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\r\n  if (url && isObject$1(url) && url instanceof Url) return url;\r\n\r\n  var u = new Url;\r\n  u.parse(url, parseQueryString, slashesDenoteHost);\r\n  return u;\r\n}\r\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\r\n  return parse$5(this, url, parseQueryString, slashesDenoteHost);\r\n};\r\n\r\nfunction parse$5(self, url, parseQueryString, slashesDenoteHost) {\r\n  if (!isString$1(url)) {\r\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\r\n  }\r\n\r\n  // Copy chrome, IE, opera backslash-handling behavior.\r\n  // Back slashes before the query string get converted to forward slashes\r\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\r\n  var queryIndex = url.indexOf('?'),\r\n    splitter =\r\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\r\n    uSplit = url.split(splitter),\r\n    slashRegex = /\\\\/g;\r\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\r\n  url = uSplit.join(splitter);\r\n\r\n  var rest = url;\r\n\r\n  // trim before proceeding.\r\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\r\n  rest = rest.trim();\r\n\r\n  if (!slashesDenoteHost && url.split('#').length === 1) {\r\n    // Try fast path regexp\r\n    var simplePath = simplePathPattern.exec(rest);\r\n    if (simplePath) {\r\n      self.path = rest;\r\n      self.href = rest;\r\n      self.pathname = simplePath[1];\r\n      if (simplePath[2]) {\r\n        self.search = simplePath[2];\r\n        if (parseQueryString) {\r\n          self.query = parse$6(self.search.substr(1));\r\n        } else {\r\n          self.query = self.search.substr(1);\r\n        }\r\n      } else if (parseQueryString) {\r\n        self.search = '';\r\n        self.query = {};\r\n      }\r\n      return self;\r\n    }\r\n  }\r\n\r\n  var proto = protocolPattern.exec(rest);\r\n  if (proto) {\r\n    proto = proto[0];\r\n    var lowerProto = proto.toLowerCase();\r\n    self.protocol = lowerProto;\r\n    rest = rest.substr(proto.length);\r\n  }\r\n\r\n  // figure out if it's got a host\r\n  // user@server is *always* interpreted as a hostname, and url\r\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\r\n  // how the browser resolves relative URLs.\r\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\r\n    var slashes = rest.substr(0, 2) === '//';\r\n    if (slashes && !(proto && hostlessProtocol[proto])) {\r\n      rest = rest.substr(2);\r\n      self.slashes = true;\r\n    }\r\n  }\r\n  var i, hec, l, p;\r\n  if (!hostlessProtocol[proto] &&\r\n    (slashes || (proto && !slashedProtocol[proto]))) {\r\n\r\n    // there's a hostname.\r\n    // the first instance of /, ?, ;, or # ends the host.\r\n    //\r\n    // If there is an @ in the hostname, then non-host chars *are* allowed\r\n    // to the left of the last @ sign, unless some host-ending character\r\n    // comes *before* the @-sign.\r\n    // URLs are obnoxious.\r\n    //\r\n    // ex:\r\n    // http://a@b@c/ => user:a@b host:c\r\n    // http://a@b?@c => user:a host:c path:/?@c\r\n\r\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\r\n    // Review our test case against browsers more comprehensively.\r\n\r\n    // find the first instance of any hostEndingChars\r\n    var hostEnd = -1;\r\n    for (i = 0; i < hostEndingChars.length; i++) {\r\n      hec = rest.indexOf(hostEndingChars[i]);\r\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\r\n        hostEnd = hec;\r\n    }\r\n\r\n    // at this point, either we have an explicit point where the\r\n    // auth portion cannot go past, or the last @ char is the decider.\r\n    var auth, atSign;\r\n    if (hostEnd === -1) {\r\n      // atSign can be anywhere.\r\n      atSign = rest.lastIndexOf('@');\r\n    } else {\r\n      // atSign must be in auth portion.\r\n      // http://a@b/c@d => host:b auth:a path:/c@d\r\n      atSign = rest.lastIndexOf('@', hostEnd);\r\n    }\r\n\r\n    // Now we have a portion which is definitely the auth.\r\n    // Pull that off.\r\n    if (atSign !== -1) {\r\n      auth = rest.slice(0, atSign);\r\n      rest = rest.slice(atSign + 1);\r\n      self.auth = decodeURIComponent(auth);\r\n    }\r\n\r\n    // the host is the remaining to the left of the first non-host char\r\n    hostEnd = -1;\r\n    for (i = 0; i < nonHostChars.length; i++) {\r\n      hec = rest.indexOf(nonHostChars[i]);\r\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\r\n        hostEnd = hec;\r\n    }\r\n    // if we still have not hit it, then the entire thing is a host.\r\n    if (hostEnd === -1)\r\n      hostEnd = rest.length;\r\n\r\n    self.host = rest.slice(0, hostEnd);\r\n    rest = rest.slice(hostEnd);\r\n\r\n    // pull out port.\r\n    parseHost(self);\r\n\r\n    // we've indicated that there is a hostname,\r\n    // so even if it's empty, it has to be present.\r\n    self.hostname = self.hostname || '';\r\n\r\n    // if hostname begins with [ and ends with ]\r\n    // assume that it's an IPv6 address.\r\n    var ipv6Hostname = self.hostname[0] === '[' &&\r\n      self.hostname[self.hostname.length - 1] === ']';\r\n\r\n    // validate a little.\r\n    if (!ipv6Hostname) {\r\n      var hostparts = self.hostname.split(/\\./);\r\n      for (i = 0, l = hostparts.length; i < l; i++) {\r\n        var part = hostparts[i];\r\n        if (!part) continue;\r\n        if (!part.match(hostnamePartPattern)) {\r\n          var newpart = '';\r\n          for (var j = 0, k = part.length; j < k; j++) {\r\n            if (part.charCodeAt(j) > 127) {\r\n              // we replace non-ASCII char with a temporary placeholder\r\n              // we need this to make sure size of hostname is not\r\n              // broken by replacing non-ASCII by nothing\r\n              newpart += 'x';\r\n            } else {\r\n              newpart += part[j];\r\n            }\r\n          }\r\n          // we test again with ASCII char only\r\n          if (!newpart.match(hostnamePartPattern)) {\r\n            var validParts = hostparts.slice(0, i);\r\n            var notHost = hostparts.slice(i + 1);\r\n            var bit = part.match(hostnamePartStart);\r\n            if (bit) {\r\n              validParts.push(bit[1]);\r\n              notHost.unshift(bit[2]);\r\n            }\r\n            if (notHost.length) {\r\n              rest = '/' + notHost.join('.') + rest;\r\n            }\r\n            self.hostname = validParts.join('.');\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (self.hostname.length > hostnameMaxLen) {\r\n      self.hostname = '';\r\n    } else {\r\n      // hostnames are always lower case.\r\n      self.hostname = self.hostname.toLowerCase();\r\n    }\r\n\r\n    if (!ipv6Hostname) {\r\n      // IDNA Support: Returns a punycoded representation of \"domain\".\r\n      // It only converts parts of the domain name that\r\n      // have non-ASCII characters, i.e. it doesn't matter if\r\n      // you call it with a domain that already is ASCII-only.\r\n      self.hostname = toASCII(self.hostname);\r\n    }\r\n\r\n    p = self.port ? ':' + self.port : '';\r\n    var h = self.hostname || '';\r\n    self.host = h + p;\r\n    self.href += self.host;\r\n\r\n    // strip [ and ] from the hostname\r\n    // the host field still retains them, though\r\n    if (ipv6Hostname) {\r\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\r\n      if (rest[0] !== '/') {\r\n        rest = '/' + rest;\r\n      }\r\n    }\r\n  }\r\n\r\n  // now rest is set to the post-host stuff.\r\n  // chop off any delim chars.\r\n  if (!unsafeProtocol[lowerProto]) {\r\n\r\n    // First, make 100% sure that any \"autoEscape\" chars get\r\n    // escaped, even if encodeURIComponent doesn't think they\r\n    // need to be.\r\n    for (i = 0, l = autoEscape.length; i < l; i++) {\r\n      var ae = autoEscape[i];\r\n      if (rest.indexOf(ae) === -1)\r\n        continue;\r\n      var esc = encodeURIComponent(ae);\r\n      if (esc === ae) {\r\n        esc = escape(ae);\r\n      }\r\n      rest = rest.split(ae).join(esc);\r\n    }\r\n  }\r\n\r\n\r\n  // chop off from the tail first.\r\n  var hash = rest.indexOf('#');\r\n  if (hash !== -1) {\r\n    // got a fragment string.\r\n    self.hash = rest.substr(hash);\r\n    rest = rest.slice(0, hash);\r\n  }\r\n  var qm = rest.indexOf('?');\r\n  if (qm !== -1) {\r\n    self.search = rest.substr(qm);\r\n    self.query = rest.substr(qm + 1);\r\n    if (parseQueryString) {\r\n      self.query = parse$6(self.query);\r\n    }\r\n    rest = rest.slice(0, qm);\r\n  } else if (parseQueryString) {\r\n    // no query string, but parseQueryString still requested\r\n    self.search = '';\r\n    self.query = {};\r\n  }\r\n  if (rest) self.pathname = rest;\r\n  if (slashedProtocol[lowerProto] &&\r\n    self.hostname && !self.pathname) {\r\n    self.pathname = '/';\r\n  }\r\n\r\n  //to support http.request\r\n  if (self.pathname || self.search) {\r\n    p = self.pathname || '';\r\n    var s = self.search || '';\r\n    self.path = p + s;\r\n  }\r\n\r\n  // finally, reconstruct the href based on what has been validated.\r\n  self.href = format(self);\r\n  return self;\r\n}\r\n\r\nfunction urlFileURLToPath(path) {\r\n  if (typeof path === 'string')\r\n    path = new Url().parse(path);\r\n  else if (!(path instanceof Url))\r\n    throw new TypeError('The \"path\" argument must be of type string or an instance of URL. Received type ' + (typeof path) + String(path));\r\n  if (path.protocol !== 'file:')\r\n    throw new TypeError('The URL must be of scheme file');\r\n  return getPathFromURLPosix(path);\r\n}\r\n\r\nfunction getPathFromURLPosix(url) {\r\n  const pathname = url.pathname;\r\n  for (let n = 0; n < pathname.length; n++) {\r\n    if (pathname[n] === '%') {\r\n      const third = pathname.codePointAt(n + 2) | 0x20;\r\n      if (pathname[n + 1] === '2' && third === 102) {\r\n        throw new TypeError(\r\n          'must not include encoded / characters'\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return decodeURIComponent(pathname);\r\n}\r\n\r\n// format a parsed object into a url string\r\nfunction urlFormat(obj) {\r\n  // ensure it's an object, and not a string url.\r\n  // If it's an obj, this is a no-op.\r\n  // this way, you can call url_format() on strings\r\n  // to clean up potentially wonky urls.\r\n  if (isString$1(obj)) obj = parse$5({}, obj);\r\n  return format(obj);\r\n}\r\n\r\nfunction format(self) {\r\n  var auth = self.auth || '';\r\n  if (auth) {\r\n    auth = encodeURIComponent(auth);\r\n    auth = auth.replace(/%3A/i, ':');\r\n    auth += '@';\r\n  }\r\n\r\n  var protocol = self.protocol || '',\r\n    pathname = self.pathname || '',\r\n    hash = self.hash || '',\r\n    host = false,\r\n    query = '';\r\n\r\n  if (self.host) {\r\n    host = auth + self.host;\r\n  } else if (self.hostname) {\r\n    host = auth + (self.hostname.indexOf(':') === -1 ?\r\n      self.hostname :\r\n      '[' + this.hostname + ']');\r\n    if (self.port) {\r\n      host += ':' + self.port;\r\n    }\r\n  }\r\n\r\n  if (self.query &&\r\n    isObject$1(self.query) &&\r\n    Object.keys(self.query).length) {\r\n    query = stringify$5(self.query);\r\n  }\r\n\r\n  var search = self.search || (query && ('?' + query)) || '';\r\n\r\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\r\n\r\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\r\n  // unless they had them to begin with.\r\n  if (self.slashes ||\r\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\r\n    host = '//' + (host || '');\r\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\r\n  } else if (!host) {\r\n    host = '';\r\n  }\r\n\r\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\r\n  if (search && search.charAt(0) !== '?') search = '?' + search;\r\n\r\n  pathname = pathname.replace(/[?#]/g, function(match) {\r\n    return encodeURIComponent(match);\r\n  });\r\n  search = search.replace('#', '%23');\r\n\r\n  return protocol + host + pathname + search + hash;\r\n}\r\n\r\nUrl.prototype.format = function() {\r\n  return format(this);\r\n};\r\n\r\nfunction urlResolve(source, relative) {\r\n  return urlParse(source, false, true).resolve(relative);\r\n}\r\n\r\nUrl.prototype.resolve = function(relative) {\r\n  return this.resolveObject(urlParse(relative, false, true)).format();\r\n};\r\n\r\nfunction urlResolveObject(source, relative) {\r\n  if (!source) return relative;\r\n  return urlParse(source, false, true).resolveObject(relative);\r\n}\r\n\r\nUrl.prototype.resolveObject = function(relative) {\r\n  if (isString$1(relative)) {\r\n    var rel = new Url();\r\n    rel.parse(relative, false, true);\r\n    relative = rel;\r\n  }\r\n\r\n  var result = new Url();\r\n  var tkeys = Object.keys(this);\r\n  for (var tk = 0; tk < tkeys.length; tk++) {\r\n    var tkey = tkeys[tk];\r\n    result[tkey] = this[tkey];\r\n  }\r\n\r\n  // hash is always overridden, no matter what.\r\n  // even href=\"\" will remove it.\r\n  result.hash = relative.hash;\r\n\r\n  // if the relative url is empty, then there's nothing left to do here.\r\n  if (relative.href === '') {\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n\r\n  // hrefs like //foo/bar always cut to the protocol.\r\n  if (relative.slashes && !relative.protocol) {\r\n    // take everything except the protocol from relative\r\n    var rkeys = Object.keys(relative);\r\n    for (var rk = 0; rk < rkeys.length; rk++) {\r\n      var rkey = rkeys[rk];\r\n      if (rkey !== 'protocol')\r\n        result[rkey] = relative[rkey];\r\n    }\r\n\r\n    //urlParse appends trailing / to urls like http://www.example.com\r\n    if (slashedProtocol[result.protocol] &&\r\n      result.hostname && !result.pathname) {\r\n      result.path = result.pathname = '/';\r\n    }\r\n\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n  var relPath;\r\n  if (relative.protocol && relative.protocol !== result.protocol) {\r\n    // if it's a known url protocol, then changing\r\n    // the protocol does weird things\r\n    // first, if it's not file:, then we MUST have a host,\r\n    // and if there was a path\r\n    // to begin with, then we MUST have a path.\r\n    // if it is file:, then the host is dropped,\r\n    // because that's known to be hostless.\r\n    // anything else is assumed to be absolute.\r\n    if (!slashedProtocol[relative.protocol]) {\r\n      var keys = Object.keys(relative);\r\n      for (var v = 0; v < keys.length; v++) {\r\n        var k = keys[v];\r\n        result[k] = relative[k];\r\n      }\r\n      result.href = result.format();\r\n      return result;\r\n    }\r\n\r\n    result.protocol = relative.protocol;\r\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\r\n      relPath = (relative.pathname || '').split('/');\r\n      while (relPath.length && !(relative.host = relPath.shift()));\r\n      if (!relative.host) relative.host = '';\r\n      if (!relative.hostname) relative.hostname = '';\r\n      if (relPath[0] !== '') relPath.unshift('');\r\n      if (relPath.length < 2) relPath.unshift('');\r\n      result.pathname = relPath.join('/');\r\n    } else {\r\n      result.pathname = relative.pathname;\r\n    }\r\n    result.search = relative.search;\r\n    result.query = relative.query;\r\n    result.host = relative.host || '';\r\n    result.auth = relative.auth;\r\n    result.hostname = relative.hostname || relative.host;\r\n    result.port = relative.port;\r\n    // to support http.request\r\n    if (result.pathname || result.search) {\r\n      var p = result.pathname || '';\r\n      var s = result.search || '';\r\n      result.path = p + s;\r\n    }\r\n    result.slashes = result.slashes || relative.slashes;\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n\r\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\r\n    isRelAbs = (\r\n      relative.host ||\r\n      relative.pathname && relative.pathname.charAt(0) === '/'\r\n    ),\r\n    mustEndAbs = (isRelAbs || isSourceAbs ||\r\n      (result.host && relative.pathname)),\r\n    removeAllDots = mustEndAbs,\r\n    srcPath = result.pathname && result.pathname.split('/') || [],\r\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\r\n  relPath = relative.pathname && relative.pathname.split('/') || [];\r\n  // if the url is a non-slashed url, then relative\r\n  // links like ../.. should be able\r\n  // to crawl up to the hostname, as well.  This is strange.\r\n  // result.protocol has already been set by now.\r\n  // Later on, put the first path part into the host field.\r\n  if (psychotic) {\r\n    result.hostname = '';\r\n    result.port = null;\r\n    if (result.host) {\r\n      if (srcPath[0] === '') srcPath[0] = result.host;\r\n      else srcPath.unshift(result.host);\r\n    }\r\n    result.host = '';\r\n    if (relative.protocol) {\r\n      relative.hostname = null;\r\n      relative.port = null;\r\n      if (relative.host) {\r\n        if (relPath[0] === '') relPath[0] = relative.host;\r\n        else relPath.unshift(relative.host);\r\n      }\r\n      relative.host = null;\r\n    }\r\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\r\n  }\r\n  var authInHost;\r\n  if (isRelAbs) {\r\n    // it's absolute.\r\n    result.host = (relative.host || relative.host === '') ?\r\n      relative.host : result.host;\r\n    result.hostname = (relative.hostname || relative.hostname === '') ?\r\n      relative.hostname : result.hostname;\r\n    result.search = relative.search;\r\n    result.query = relative.query;\r\n    srcPath = relPath;\r\n    // fall through to the dot-handling below.\r\n  } else if (relPath.length) {\r\n    // it's relative\r\n    // throw away the existing file, and take the new path instead.\r\n    if (!srcPath) srcPath = [];\r\n    srcPath.pop();\r\n    srcPath = srcPath.concat(relPath);\r\n    result.search = relative.search;\r\n    result.query = relative.query;\r\n  } else if (!isNullOrUndefined(relative.search)) {\r\n    // just pull out the search.\r\n    // like href='?foo'.\r\n    // Put this after the other two cases because it simplifies the booleans\r\n    if (psychotic) {\r\n      result.hostname = result.host = srcPath.shift();\r\n      //occationaly the auth can get stuck only in host\r\n      //this especially happens in cases like\r\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\r\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\r\n        result.host.split('@') : false;\r\n      if (authInHost) {\r\n        result.auth = authInHost.shift();\r\n        result.host = result.hostname = authInHost.shift();\r\n      }\r\n    }\r\n    result.search = relative.search;\r\n    result.query = relative.query;\r\n    //to support http.request\r\n    if (!isNull(result.pathname) || !isNull(result.search)) {\r\n      result.path = (result.pathname ? result.pathname : '') +\r\n        (result.search ? result.search : '');\r\n    }\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n\r\n  if (!srcPath.length) {\r\n    // no path at all.  easy.\r\n    // we've already handled the other stuff above.\r\n    result.pathname = null;\r\n    //to support http.request\r\n    if (result.search) {\r\n      result.path = '/' + result.search;\r\n    } else {\r\n      result.path = null;\r\n    }\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n\r\n  // if a url ENDs in . or .., then it must get a trailing slash.\r\n  // however, if it ends in anything else non-slashy,\r\n  // then it must NOT get a trailing slash.\r\n  var last = srcPath.slice(-1)[0];\r\n  var hasTrailingSlash = (\r\n    (result.host || relative.host || srcPath.length > 1) &&\r\n    (last === '.' || last === '..') || last === '');\r\n\r\n  // strip single dots, resolve double dots to parent dir\r\n  // if the path tries to go above the root, `up` ends up > 0\r\n  var up = 0;\r\n  for (var i = srcPath.length; i >= 0; i--) {\r\n    last = srcPath[i];\r\n    if (last === '.') {\r\n      srcPath.splice(i, 1);\r\n    } else if (last === '..') {\r\n      srcPath.splice(i, 1);\r\n      up++;\r\n    } else if (up) {\r\n      srcPath.splice(i, 1);\r\n      up--;\r\n    }\r\n  }\r\n\r\n  // if the path is allowed to go above the root, restore leading ..s\r\n  if (!mustEndAbs && !removeAllDots) {\r\n    for (; up--; up) {\r\n      srcPath.unshift('..');\r\n    }\r\n  }\r\n\r\n  if (mustEndAbs && srcPath[0] !== '' &&\r\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\r\n    srcPath.unshift('');\r\n  }\r\n\r\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\r\n    srcPath.push('');\r\n  }\r\n\r\n  var isAbsolute = srcPath[0] === '' ||\r\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\r\n\r\n  // put the host back\r\n  if (psychotic) {\r\n    result.hostname = result.host = isAbsolute ? '' :\r\n      srcPath.length ? srcPath.shift() : '';\r\n    //occationaly the auth can get stuck only in host\r\n    //this especially happens in cases like\r\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\r\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\r\n      result.host.split('@') : false;\r\n    if (authInHost) {\r\n      result.auth = authInHost.shift();\r\n      result.host = result.hostname = authInHost.shift();\r\n    }\r\n  }\r\n\r\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\r\n\r\n  if (mustEndAbs && !isAbsolute) {\r\n    srcPath.unshift('');\r\n  }\r\n\r\n  if (!srcPath.length) {\r\n    result.pathname = null;\r\n    result.path = null;\r\n  } else {\r\n    result.pathname = srcPath.join('/');\r\n  }\r\n\r\n  //to support request.http\r\n  if (!isNull(result.pathname) || !isNull(result.search)) {\r\n    result.path = (result.pathname ? result.pathname : '') +\r\n      (result.search ? result.search : '');\r\n  }\r\n  result.auth = relative.auth || result.auth;\r\n  result.slashes = result.slashes || relative.slashes;\r\n  result.href = result.format();\r\n  return result;\r\n};\r\n\r\nUrl.prototype.parseHost = function() {\r\n  return parseHost(this);\r\n};\r\n\r\nfunction parseHost(self) {\r\n  var host = self.host;\r\n  var port = portPattern.exec(host);\r\n  if (port) {\r\n    port = port[0];\r\n    if (port !== ':') {\r\n      self.port = port.substr(1);\r\n    }\r\n    host = host.substr(0, host.length - port.length);\r\n  }\r\n  if (host) self.hostname = host;\r\n}\r\n\r\nvar _polyfillNode_url$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  URL: URL$1,\r\n  URLSearchParams: URLSearchParams,\r\n  Url: Url,\r\n  default: _polyfillNode_url,\r\n  fileURLToPath: urlFileURLToPath,\r\n  format: urlFormat,\r\n  parse: urlParse,\r\n  resolve: urlResolve,\r\n  resolveObject: urlResolveObject\r\n});\r\n\r\nfunction isRelativeUrl(url) {\r\n  const firstChar = url.charAt(0);\r\n  return firstChar === \".\" || firstChar === \"~\" || firstChar === \"@\";\r\n}\r\nconst externalRE = /^(https?:)?\\/\\//;\r\nfunction isExternalUrl(url) {\r\n  return externalRE.test(url);\r\n}\r\nconst dataUrlRE = /^\\s*data:/i;\r\nfunction isDataUrl(url) {\r\n  return dataUrlRE.test(url);\r\n}\r\nfunction parseUrl(url) {\r\n  const firstChar = url.charAt(0);\r\n  if (firstChar === \"~\") {\r\n    const secondChar = url.charAt(1);\r\n    url = url.slice(secondChar === \"/\" ? 2 : 1);\r\n  }\r\n  return parseUriParts(url);\r\n}\r\nfunction parseUriParts(urlString) {\r\n  return urlParse(isString$2(urlString) ? urlString : \"\", false, true);\r\n}\r\n\r\nvar __defProp$9 = Object.defineProperty;\r\nvar __defProps$9 = Object.defineProperties;\r\nvar __getOwnPropDescs$9 = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$9 = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$9 = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$9 = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$9.call(b, prop))\r\n      __defNormalProp$9(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$9)\r\n    for (var prop of __getOwnPropSymbols$9(b)) {\r\n      if (__propIsEnum$9.call(b, prop))\r\n        __defNormalProp$9(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps$9 = (a, b) => __defProps$9(a, __getOwnPropDescs$9(b));\r\nconst defaultAssetUrlOptions = {\r\n  base: null,\r\n  includeAbsolute: false,\r\n  tags: {\r\n    video: [\"src\", \"poster\"],\r\n    source: [\"src\"],\r\n    img: [\"src\"],\r\n    image: [\"xlink:href\", \"href\"],\r\n    use: [\"xlink:href\", \"href\"]\r\n  }\r\n};\r\nconst normalizeOptions = (options) => {\r\n  if (Object.keys(options).some((key) => isArray$3(options[key]))) {\r\n    return __spreadProps$9(__spreadValues$9({}, defaultAssetUrlOptions), {\r\n      tags: options\r\n    });\r\n  }\r\n  return __spreadValues$9(__spreadValues$9({}, defaultAssetUrlOptions), options);\r\n};\r\nconst createAssetUrlTransformWithOptions = (options) => {\r\n  return (node, context) => transformAssetUrl(node, context, options);\r\n};\r\nconst transformAssetUrl = (node, context, options = defaultAssetUrlOptions) => {\r\n  if (node.type === 1) {\r\n    if (!node.props.length) {\r\n      return;\r\n    }\r\n    const tags = options.tags || defaultAssetUrlOptions.tags;\r\n    const attrs = tags[node.tag];\r\n    const wildCardAttrs = tags[\"*\"];\r\n    if (!attrs && !wildCardAttrs) {\r\n      return;\r\n    }\r\n    const assetAttrs = (attrs || []).concat(wildCardAttrs || []);\r\n    node.props.forEach((attr, index) => {\r\n      if (attr.type !== 6 || !assetAttrs.includes(attr.name) || !attr.value || isExternalUrl(attr.value.content) || isDataUrl(attr.value.content) || attr.value.content[0] === \"#\" || !options.includeAbsolute && !isRelativeUrl(attr.value.content)) {\r\n        return;\r\n      }\r\n      const url = parseUrl(attr.value.content);\r\n      if (options.base && attr.value.content[0] === \".\") {\r\n        const base = parseUrl(options.base);\r\n        const protocol = base.protocol || \"\";\r\n        const host = base.host ? protocol + \"//\" + base.host : \"\";\r\n        const basePath = base.path || \"/\";\r\n        attr.value.content = host + (path.posix || path).join(basePath, url.path + (url.hash || \"\"));\r\n        return;\r\n      }\r\n      const exp = getImportsExpressionExp(url.path, url.hash, attr.loc, context);\r\n      node.props[index] = {\r\n        type: 7,\r\n        name: \"bind\",\r\n        arg: createSimpleExpression(attr.name, true, attr.loc),\r\n        exp,\r\n        modifiers: [],\r\n        loc: attr.loc\r\n      };\r\n    });\r\n  }\r\n};\r\nfunction getImportsExpressionExp(path2, hash, loc, context) {\r\n  if (path2) {\r\n    let name;\r\n    let exp;\r\n    const existingIndex = context.imports.findIndex((i) => i.path === path2);\r\n    if (existingIndex > -1) {\r\n      name = `_imports_${existingIndex}`;\r\n      exp = context.imports[existingIndex].exp;\r\n    } else {\r\n      name = `_imports_${context.imports.length}`;\r\n      exp = createSimpleExpression(\r\n        name,\r\n        false,\r\n        loc,\r\n        3\r\n      );\r\n      context.imports.push({ exp, path: path2 });\r\n    }\r\n    if (!hash) {\r\n      return exp;\r\n    }\r\n    const hashExp = `${name} + '${hash}'`;\r\n    const finalExp = createSimpleExpression(\r\n      hashExp,\r\n      false,\r\n      loc,\r\n      3\r\n    );\r\n    if (!context.hoistStatic) {\r\n      return finalExp;\r\n    }\r\n    const existingHoistIndex = context.hoists.findIndex((h) => {\r\n      return h && h.type === 4 && !h.isStatic && h.content === hashExp;\r\n    });\r\n    if (existingHoistIndex > -1) {\r\n      return createSimpleExpression(\r\n        `_hoisted_${existingHoistIndex + 1}`,\r\n        false,\r\n        loc,\r\n        3\r\n      );\r\n    }\r\n    return context.hoist(finalExp);\r\n  } else {\r\n    return createSimpleExpression(`''`, false, loc, 3);\r\n  }\r\n}\r\n\r\nconst srcsetTags = [\"img\", \"source\"];\r\nconst escapedSpaceCharacters = /( |\\\\t|\\\\n|\\\\f|\\\\r)+/g;\r\nconst createSrcsetTransformWithOptions = (options) => {\r\n  return (node, context) => transformSrcset(node, context, options);\r\n};\r\nconst transformSrcset = (node, context, options = defaultAssetUrlOptions) => {\r\n  if (node.type === 1) {\r\n    if (srcsetTags.includes(node.tag) && node.props.length) {\r\n      node.props.forEach((attr, index) => {\r\n        if (attr.name === \"srcset\" && attr.type === 6) {\r\n          if (!attr.value)\r\n            return;\r\n          const value = attr.value.content;\r\n          if (!value)\r\n            return;\r\n          const imageCandidates = value.split(\",\").map((s) => {\r\n            const [url, descriptor] = s.replace(escapedSpaceCharacters, \" \").trim().split(\" \", 2);\r\n            return { url, descriptor };\r\n          });\r\n          for (let i = 0; i < imageCandidates.length; i++) {\r\n            const { url } = imageCandidates[i];\r\n            if (isDataUrl(url)) {\r\n              imageCandidates[i + 1].url = url + \",\" + imageCandidates[i + 1].url;\r\n              imageCandidates.splice(i, 1);\r\n            }\r\n          }\r\n          const shouldProcessUrl = (url) => {\r\n            return !isExternalUrl(url) && !isDataUrl(url) && (options.includeAbsolute || isRelativeUrl(url));\r\n          };\r\n          if (!imageCandidates.some(({ url }) => shouldProcessUrl(url))) {\r\n            return;\r\n          }\r\n          if (options.base) {\r\n            const base = options.base;\r\n            const set = [];\r\n            let needImportTransform = false;\r\n            imageCandidates.forEach((candidate) => {\r\n              let { url, descriptor } = candidate;\r\n              descriptor = descriptor ? ` ${descriptor}` : ``;\r\n              if (url[0] === \".\") {\r\n                candidate.url = (path.posix || path).join(base, url);\r\n                set.push(candidate.url + descriptor);\r\n              } else if (shouldProcessUrl(url)) {\r\n                needImportTransform = true;\r\n              } else {\r\n                set.push(url + descriptor);\r\n              }\r\n            });\r\n            if (!needImportTransform) {\r\n              attr.value.content = set.join(\", \");\r\n              return;\r\n            }\r\n          }\r\n          const compoundExpression = createCompoundExpression([], attr.loc);\r\n          imageCandidates.forEach(({ url, descriptor }, index2) => {\r\n            if (shouldProcessUrl(url)) {\r\n              const { path: path2 } = parseUrl(url);\r\n              let exp2;\r\n              if (path2) {\r\n                const existingImportsIndex = context.imports.findIndex(\r\n                  (i) => i.path === path2\r\n                );\r\n                if (existingImportsIndex > -1) {\r\n                  exp2 = createSimpleExpression(\r\n                    `_imports_${existingImportsIndex}`,\r\n                    false,\r\n                    attr.loc,\r\n                    3\r\n                  );\r\n                } else {\r\n                  exp2 = createSimpleExpression(\r\n                    `_imports_${context.imports.length}`,\r\n                    false,\r\n                    attr.loc,\r\n                    3\r\n                  );\r\n                  context.imports.push({ exp: exp2, path: path2 });\r\n                }\r\n                compoundExpression.children.push(exp2);\r\n              }\r\n            } else {\r\n              const exp2 = createSimpleExpression(\r\n                `\"${url}\"`,\r\n                false,\r\n                attr.loc,\r\n                3\r\n              );\r\n              compoundExpression.children.push(exp2);\r\n            }\r\n            const isNotLast = imageCandidates.length - 1 > index2;\r\n            if (descriptor && isNotLast) {\r\n              compoundExpression.children.push(` + ' ${descriptor}, ' + `);\r\n            } else if (descriptor) {\r\n              compoundExpression.children.push(` + ' ${descriptor}'`);\r\n            } else if (isNotLast) {\r\n              compoundExpression.children.push(` + ', ' + `);\r\n            }\r\n          });\r\n          let exp = compoundExpression;\r\n          if (context.hoistStatic) {\r\n            exp = context.hoist(compoundExpression);\r\n            exp.constType = 3;\r\n          }\r\n          node.props[index] = {\r\n            type: 7,\r\n            name: \"bind\",\r\n            arg: createSimpleExpression(\"srcset\", true, attr.loc),\r\n            exp,\r\n            modifiers: [],\r\n            loc: attr.loc\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nconst SSR_INTERPOLATE = Symbol(`ssrInterpolate`);\r\nconst SSR_RENDER_VNODE = Symbol(`ssrRenderVNode`);\r\nconst SSR_RENDER_COMPONENT = Symbol(`ssrRenderComponent`);\r\nconst SSR_RENDER_SLOT = Symbol(`ssrRenderSlot`);\r\nconst SSR_RENDER_SLOT_INNER = Symbol(`ssrRenderSlotInner`);\r\nconst SSR_RENDER_CLASS = Symbol(`ssrRenderClass`);\r\nconst SSR_RENDER_STYLE = Symbol(`ssrRenderStyle`);\r\nconst SSR_RENDER_ATTRS = Symbol(`ssrRenderAttrs`);\r\nconst SSR_RENDER_ATTR = Symbol(`ssrRenderAttr`);\r\nconst SSR_RENDER_DYNAMIC_ATTR = Symbol(`ssrRenderDynamicAttr`);\r\nconst SSR_RENDER_LIST = Symbol(`ssrRenderList`);\r\nconst SSR_INCLUDE_BOOLEAN_ATTR = Symbol(`ssrIncludeBooleanAttr`);\r\nconst SSR_LOOSE_EQUAL = Symbol(`ssrLooseEqual`);\r\nconst SSR_LOOSE_CONTAIN = Symbol(`ssrLooseContain`);\r\nconst SSR_RENDER_DYNAMIC_MODEL = Symbol(`ssrRenderDynamicModel`);\r\nconst SSR_GET_DYNAMIC_MODEL_PROPS = Symbol(`ssrGetDynamicModelProps`);\r\nconst SSR_RENDER_TELEPORT = Symbol(`ssrRenderTeleport`);\r\nconst SSR_RENDER_SUSPENSE = Symbol(`ssrRenderSuspense`);\r\nconst SSR_GET_DIRECTIVE_PROPS = Symbol(`ssrGetDirectiveProps`);\r\nconst ssrHelpers = {\r\n  [SSR_INTERPOLATE]: `ssrInterpolate`,\r\n  [SSR_RENDER_VNODE]: `ssrRenderVNode`,\r\n  [SSR_RENDER_COMPONENT]: `ssrRenderComponent`,\r\n  [SSR_RENDER_SLOT]: `ssrRenderSlot`,\r\n  [SSR_RENDER_SLOT_INNER]: `ssrRenderSlotInner`,\r\n  [SSR_RENDER_CLASS]: `ssrRenderClass`,\r\n  [SSR_RENDER_STYLE]: `ssrRenderStyle`,\r\n  [SSR_RENDER_ATTRS]: `ssrRenderAttrs`,\r\n  [SSR_RENDER_ATTR]: `ssrRenderAttr`,\r\n  [SSR_RENDER_DYNAMIC_ATTR]: `ssrRenderDynamicAttr`,\r\n  [SSR_RENDER_LIST]: `ssrRenderList`,\r\n  [SSR_INCLUDE_BOOLEAN_ATTR]: `ssrIncludeBooleanAttr`,\r\n  [SSR_LOOSE_EQUAL]: `ssrLooseEqual`,\r\n  [SSR_LOOSE_CONTAIN]: `ssrLooseContain`,\r\n  [SSR_RENDER_DYNAMIC_MODEL]: `ssrRenderDynamicModel`,\r\n  [SSR_GET_DYNAMIC_MODEL_PROPS]: `ssrGetDynamicModelProps`,\r\n  [SSR_RENDER_TELEPORT]: `ssrRenderTeleport`,\r\n  [SSR_RENDER_SUSPENSE]: `ssrRenderSuspense`,\r\n  [SSR_GET_DIRECTIVE_PROPS]: `ssrGetDirectiveProps`\r\n};\r\nregisterRuntimeHelpers(ssrHelpers);\r\n\r\nconst ssrTransformIf = createStructuralDirectiveTransform(\r\n  /^(if|else|else-if)$/,\r\n  processIf\r\n);\r\nfunction ssrProcessIf(node, context, disableNestedFragments = false) {\r\n  const [rootBranch] = node.branches;\r\n  const ifStatement = createIfStatement(\r\n    rootBranch.condition,\r\n    processIfBranch(rootBranch, context, disableNestedFragments)\r\n  );\r\n  context.pushStatement(ifStatement);\r\n  let currentIf = ifStatement;\r\n  for (let i = 1; i < node.branches.length; i++) {\r\n    const branch = node.branches[i];\r\n    const branchBlockStatement = processIfBranch(\r\n      branch,\r\n      context,\r\n      disableNestedFragments\r\n    );\r\n    if (branch.condition) {\r\n      currentIf = currentIf.alternate = createIfStatement(\r\n        branch.condition,\r\n        branchBlockStatement\r\n      );\r\n    } else {\r\n      currentIf.alternate = branchBlockStatement;\r\n    }\r\n  }\r\n  if (!currentIf.alternate) {\r\n    currentIf.alternate = createBlockStatement([\r\n      createCallExpression(`_push`, [\"`<!---->`\"])\r\n    ]);\r\n  }\r\n}\r\nfunction processIfBranch(branch, context, disableNestedFragments = false) {\r\n  const { children } = branch;\r\n  const needFragmentWrapper = !disableNestedFragments && (children.length !== 1 || children[0].type !== 1) && // optimize away nested fragments when the only child is a ForNode\r\n  !(children.length === 1 && children[0].type === 11);\r\n  return processChildrenAsStatement(branch, context, needFragmentWrapper);\r\n}\r\n\r\nconst ssrTransformFor = createStructuralDirectiveTransform(\r\n  \"for\",\r\n  processFor\r\n);\r\nfunction ssrProcessFor(node, context, disableNestedFragments = false) {\r\n  const needFragmentWrapper = !disableNestedFragments && (node.children.length !== 1 || node.children[0].type !== 1);\r\n  const renderLoop = createFunctionExpression(\r\n    createForLoopParams(node.parseResult)\r\n  );\r\n  renderLoop.body = processChildrenAsStatement(\r\n    node,\r\n    context,\r\n    needFragmentWrapper\r\n  );\r\n  if (!disableNestedFragments) {\r\n    context.pushStringPart(`<!--[-->`);\r\n  }\r\n  context.pushStatement(\r\n    createCallExpression(context.helper(SSR_RENDER_LIST), [\r\n      node.source,\r\n      renderLoop\r\n    ])\r\n  );\r\n  if (!disableNestedFragments) {\r\n    context.pushStringPart(`<!--]-->`);\r\n  }\r\n}\r\n\r\nconst ssrTransformSlotOutlet = (node, context) => {\r\n  if (isSlotOutlet(node)) {\r\n    const { slotName, slotProps } = processSlotOutlet(node, context);\r\n    const args = [\r\n      `_ctx.$slots`,\r\n      slotName,\r\n      slotProps || `{}`,\r\n      // fallback content placeholder. will be replaced in the process phase\r\n      `null`,\r\n      `_push`,\r\n      `_parent`\r\n    ];\r\n    if (context.scopeId && context.slotted !== false) {\r\n      args.push(`\"${context.scopeId}-s\"`);\r\n    }\r\n    let method = SSR_RENDER_SLOT;\r\n    const parent = context.parent;\r\n    if (parent && parent.type === 1 && parent.tagType === 1 && resolveComponentType(parent, context, true) === TRANSITION && parent.children.filter((c) => c.type === 1).length === 1) {\r\n      method = SSR_RENDER_SLOT_INNER;\r\n      if (!(context.scopeId && context.slotted !== false)) {\r\n        args.push(\"null\");\r\n      }\r\n      args.push(\"true\");\r\n    }\r\n    node.ssrCodegenNode = createCallExpression(context.helper(method), args);\r\n  }\r\n};\r\nfunction ssrProcessSlotOutlet(node, context) {\r\n  const renderCall = node.ssrCodegenNode;\r\n  if (node.children.length) {\r\n    const fallbackRenderFn = createFunctionExpression([]);\r\n    fallbackRenderFn.body = processChildrenAsStatement(node, context);\r\n    renderCall.arguments[3] = fallbackRenderFn;\r\n  }\r\n  if (context.withSlotScopeId) {\r\n    const slotScopeId = renderCall.arguments[6];\r\n    renderCall.arguments[6] = slotScopeId ? `${slotScopeId} + _scopeId` : `_scopeId`;\r\n  }\r\n  context.pushStatement(node.ssrCodegenNode);\r\n}\r\n\r\nfunction createSSRCompilerError(code, loc) {\r\n  return createCompilerError(code, loc, SSRErrorMessages);\r\n}\r\nconst SSRErrorMessages = {\r\n  [65]: `Unsafe attribute name for SSR.`,\r\n  [66]: `Missing the 'to' prop on teleport element.`,\r\n  [67]: `Invalid AST node during SSR transform.`\r\n};\r\n\r\nfunction ssrProcessTeleport(node, context) {\r\n  const targetProp = findProp(node, \"to\");\r\n  if (!targetProp) {\r\n    context.onError(\r\n      createSSRCompilerError(66, node.loc)\r\n    );\r\n    return;\r\n  }\r\n  let target;\r\n  if (targetProp.type === 6) {\r\n    target = targetProp.value && createSimpleExpression(targetProp.value.content, true);\r\n  } else {\r\n    target = targetProp.exp;\r\n  }\r\n  if (!target) {\r\n    context.onError(\r\n      createSSRCompilerError(\r\n        66,\r\n        targetProp.loc\r\n      )\r\n    );\r\n    return;\r\n  }\r\n  const disabledProp = findProp(\r\n    node,\r\n    \"disabled\",\r\n    false,\r\n    true\r\n    /* allow empty */\r\n  );\r\n  const disabled = disabledProp ? disabledProp.type === 6 ? `true` : disabledProp.exp || `false` : `false`;\r\n  const contentRenderFn = createFunctionExpression(\r\n    [`_push`],\r\n    void 0,\r\n    // Body is added later\r\n    true,\r\n    // newline\r\n    false,\r\n    // isSlot\r\n    node.loc\r\n  );\r\n  contentRenderFn.body = processChildrenAsStatement(node, context);\r\n  context.pushStatement(\r\n    createCallExpression(context.helper(SSR_RENDER_TELEPORT), [\r\n      `_push`,\r\n      contentRenderFn,\r\n      target,\r\n      disabled,\r\n      `_parent`\r\n    ])\r\n  );\r\n}\r\n\r\nconst wipMap$2 = /* @__PURE__ */ new WeakMap();\r\nfunction ssrTransformSuspense(node, context) {\r\n  return () => {\r\n    if (node.children.length) {\r\n      const wipEntry = {\r\n        slotsExp: null,\r\n        // to be immediately set\r\n        wipSlots: []\r\n      };\r\n      wipMap$2.set(node, wipEntry);\r\n      wipEntry.slotsExp = buildSlots(node, context, (_props, children, loc) => {\r\n        const fn = createFunctionExpression(\r\n          [],\r\n          void 0,\r\n          // no return, assign body later\r\n          true,\r\n          // newline\r\n          false,\r\n          // suspense slots are not treated as normal slots\r\n          loc\r\n        );\r\n        wipEntry.wipSlots.push({\r\n          fn,\r\n          children\r\n        });\r\n        return fn;\r\n      }).slots;\r\n    }\r\n  };\r\n}\r\nfunction ssrProcessSuspense(node, context) {\r\n  const wipEntry = wipMap$2.get(node);\r\n  if (!wipEntry) {\r\n    return;\r\n  }\r\n  const { slotsExp, wipSlots } = wipEntry;\r\n  for (let i = 0; i < wipSlots.length; i++) {\r\n    const slot = wipSlots[i];\r\n    slot.fn.body = processChildrenAsStatement(slot, context);\r\n  }\r\n  context.pushStatement(\r\n    createCallExpression(context.helper(SSR_RENDER_SUSPENSE), [\r\n      `_push`,\r\n      slotsExp\r\n    ])\r\n  );\r\n}\r\n\r\nconst rawChildrenMap = /* @__PURE__ */ new WeakMap();\r\nconst ssrTransformElement = (node, context) => {\r\n  if (node.type !== 1 || node.tagType !== 0) {\r\n    return;\r\n  }\r\n  return function ssrPostTransformElement() {\r\n    const openTag = [`<${node.tag}`];\r\n    const needTagForRuntime = node.tag === \"textarea\" || node.tag.indexOf(\"-\") > 0;\r\n    const hasDynamicVBind = hasDynamicKeyVBind(node);\r\n    const hasCustomDir = node.props.some(\r\n      (p) => p.type === 7 && !isBuiltInDirective(p.name)\r\n    );\r\n    const needMergeProps = hasDynamicVBind || hasCustomDir;\r\n    if (needMergeProps) {\r\n      const { props, directives } = buildProps(\r\n        node,\r\n        context,\r\n        node.props,\r\n        false,\r\n        false,\r\n        true\r\n        /* ssr */\r\n      );\r\n      if (props || directives.length) {\r\n        const mergedProps = buildSSRProps(props, directives, context);\r\n        const propsExp = createCallExpression(\r\n          context.helper(SSR_RENDER_ATTRS),\r\n          [mergedProps]\r\n        );\r\n        if (node.tag === \"textarea\") {\r\n          const existingText = node.children[0];\r\n          if (!existingText || existingText.type !== 5) {\r\n            const tempId = `_temp${context.temps++}`;\r\n            propsExp.arguments = [\r\n              createAssignmentExpression(\r\n                createSimpleExpression(tempId, false),\r\n                mergedProps\r\n              )\r\n            ];\r\n            rawChildrenMap.set(\r\n              node,\r\n              createCallExpression(context.helper(SSR_INTERPOLATE), [\r\n                createConditionalExpression(\r\n                  createSimpleExpression(`\"value\" in ${tempId}`, false),\r\n                  createSimpleExpression(`${tempId}.value`, false),\r\n                  createSimpleExpression(\r\n                    existingText ? existingText.content : ``,\r\n                    true\r\n                  ),\r\n                  false\r\n                )\r\n              ])\r\n            );\r\n          }\r\n        } else if (node.tag === \"input\") {\r\n          const vModel = findVModel(node);\r\n          if (vModel) {\r\n            const tempId = `_temp${context.temps++}`;\r\n            const tempExp = createSimpleExpression(tempId, false);\r\n            propsExp.arguments = [\r\n              createSequenceExpression([\r\n                createAssignmentExpression(tempExp, mergedProps),\r\n                createCallExpression(context.helper(MERGE_PROPS), [\r\n                  tempExp,\r\n                  createCallExpression(\r\n                    context.helper(SSR_GET_DYNAMIC_MODEL_PROPS),\r\n                    [\r\n                      tempExp,\r\n                      // existing props\r\n                      vModel.exp\r\n                      // model\r\n                    ]\r\n                  )\r\n                ])\r\n              ])\r\n            ];\r\n          }\r\n        }\r\n        if (needTagForRuntime) {\r\n          propsExp.arguments.push(`\"${node.tag}\"`);\r\n        }\r\n        openTag.push(propsExp);\r\n      }\r\n    }\r\n    let dynamicClassBinding = void 0;\r\n    let staticClassBinding = void 0;\r\n    let dynamicStyleBinding = void 0;\r\n    for (let i = 0; i < node.props.length; i++) {\r\n      const prop = node.props[i];\r\n      if (node.tag === \"input\" && isTrueFalseValue(prop)) {\r\n        continue;\r\n      }\r\n      if (prop.type === 7) {\r\n        if (prop.name === \"html\" && prop.exp) {\r\n          rawChildrenMap.set(node, prop.exp);\r\n        } else if (prop.name === \"text\" && prop.exp) {\r\n          node.children = [createInterpolation(prop.exp, prop.loc)];\r\n        } else if (prop.name === \"slot\") {\r\n          context.onError(\r\n            createCompilerError(40, prop.loc)\r\n          );\r\n        } else if (isTextareaWithValue(node, prop) && prop.exp) {\r\n          if (!needMergeProps) {\r\n            node.children = [createInterpolation(prop.exp, prop.loc)];\r\n          }\r\n        } else if (!needMergeProps && prop.name !== \"on\") {\r\n          const directiveTransform = context.directiveTransforms[prop.name];\r\n          if (directiveTransform) {\r\n            const { props, ssrTagParts } = directiveTransform(\r\n              prop,\r\n              node,\r\n              context\r\n            );\r\n            if (ssrTagParts) {\r\n              openTag.push(...ssrTagParts);\r\n            }\r\n            for (let j = 0; j < props.length; j++) {\r\n              const { key, value } = props[j];\r\n              if (isStaticExp(key)) {\r\n                let attrName = key.content;\r\n                if (attrName === \"key\" || attrName === \"ref\") {\r\n                  continue;\r\n                }\r\n                if (attrName === \"class\") {\r\n                  openTag.push(\r\n                    ` class=\"`,\r\n                    dynamicClassBinding = createCallExpression(\r\n                      context.helper(SSR_RENDER_CLASS),\r\n                      [value]\r\n                    ),\r\n                    `\"`\r\n                  );\r\n                } else if (attrName === \"style\") {\r\n                  if (dynamicStyleBinding) {\r\n                    mergeCall(dynamicStyleBinding, value);\r\n                  } else {\r\n                    openTag.push(\r\n                      ` style=\"`,\r\n                      dynamicStyleBinding = createCallExpression(\r\n                        context.helper(SSR_RENDER_STYLE),\r\n                        [value]\r\n                      ),\r\n                      `\"`\r\n                    );\r\n                  }\r\n                } else {\r\n                  attrName = node.tag.indexOf(\"-\") > 0 ? attrName : propsToAttrMap[attrName] || attrName.toLowerCase();\r\n                  if (isBooleanAttr(attrName)) {\r\n                    openTag.push(\r\n                      createConditionalExpression(\r\n                        createCallExpression(\r\n                          context.helper(SSR_INCLUDE_BOOLEAN_ATTR),\r\n                          [value]\r\n                        ),\r\n                        createSimpleExpression(\" \" + attrName, true),\r\n                        createSimpleExpression(\"\", true),\r\n                        false\r\n                        /* no newline */\r\n                      )\r\n                    );\r\n                  } else if (isSSRSafeAttrName(attrName)) {\r\n                    openTag.push(\r\n                      createCallExpression(context.helper(SSR_RENDER_ATTR), [\r\n                        key,\r\n                        value\r\n                      ])\r\n                    );\r\n                  } else {\r\n                    context.onError(\r\n                      createSSRCompilerError(\r\n                        65,\r\n                        key.loc\r\n                      )\r\n                    );\r\n                  }\r\n                }\r\n              } else {\r\n                const args = [key, value];\r\n                if (needTagForRuntime) {\r\n                  args.push(`\"${node.tag}\"`);\r\n                }\r\n                openTag.push(\r\n                  createCallExpression(\r\n                    context.helper(SSR_RENDER_DYNAMIC_ATTR),\r\n                    args\r\n                  )\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (node.tag === \"textarea\" && prop.name === \"value\" && prop.value) {\r\n          rawChildrenMap.set(node, escapeHtml(prop.value.content));\r\n        } else if (!needMergeProps) {\r\n          if (prop.name === \"key\" || prop.name === \"ref\") {\r\n            continue;\r\n          }\r\n          if (prop.name === \"class\" && prop.value) {\r\n            staticClassBinding = JSON.stringify(prop.value.content);\r\n          }\r\n          openTag.push(\r\n            ` ${prop.name}` + (prop.value ? `=\"${escapeHtml(prop.value.content)}\"` : ``)\r\n          );\r\n        }\r\n      }\r\n    }\r\n    if (dynamicClassBinding && staticClassBinding) {\r\n      mergeCall(dynamicClassBinding, staticClassBinding);\r\n      removeStaticBinding(openTag, \"class\");\r\n    }\r\n    if (context.scopeId) {\r\n      openTag.push(` ${context.scopeId}`);\r\n    }\r\n    node.ssrCodegenNode = createTemplateLiteral(openTag);\r\n  };\r\n};\r\nfunction buildSSRProps(props, directives, context) {\r\n  let mergePropsArgs = [];\r\n  if (props) {\r\n    if (props.type === 14) {\r\n      mergePropsArgs = props.arguments;\r\n    } else {\r\n      mergePropsArgs.push(props);\r\n    }\r\n  }\r\n  if (directives.length) {\r\n    for (const dir of directives) {\r\n      mergePropsArgs.push(\r\n        createCallExpression(context.helper(SSR_GET_DIRECTIVE_PROPS), [\r\n          `_ctx`,\r\n          ...buildDirectiveArgs(dir, context).elements\r\n        ])\r\n      );\r\n    }\r\n  }\r\n  return mergePropsArgs.length > 1 ? createCallExpression(context.helper(MERGE_PROPS), mergePropsArgs) : mergePropsArgs[0];\r\n}\r\nfunction isTrueFalseValue(prop) {\r\n  if (prop.type === 7) {\r\n    return prop.name === \"bind\" && prop.arg && isStaticExp(prop.arg) && (prop.arg.content === \"true-value\" || prop.arg.content === \"false-value\");\r\n  } else {\r\n    return prop.name === \"true-value\" || prop.name === \"false-value\";\r\n  }\r\n}\r\nfunction isTextareaWithValue(node, prop) {\r\n  return !!(node.tag === \"textarea\" && prop.name === \"bind\" && isStaticArgOf(prop.arg, \"value\"));\r\n}\r\nfunction mergeCall(call, arg) {\r\n  const existing = call.arguments[0];\r\n  if (existing.type === 17) {\r\n    existing.elements.push(arg);\r\n  } else {\r\n    call.arguments[0] = createArrayExpression([existing, arg]);\r\n  }\r\n}\r\nfunction removeStaticBinding(tag, binding) {\r\n  const regExp = new RegExp(`^ ${binding}=\".+\"$`);\r\n  const i = tag.findIndex((e) => typeof e === \"string\" && regExp.test(e));\r\n  if (i > -1) {\r\n    tag.splice(i, 1);\r\n  }\r\n}\r\nfunction findVModel(node) {\r\n  return node.props.find(\r\n    (p) => p.type === 7 && p.name === \"model\" && p.exp\r\n  );\r\n}\r\nfunction ssrProcessElement(node, context) {\r\n  const isVoidTag = context.options.isVoidTag || NO;\r\n  const elementsToAdd = node.ssrCodegenNode.elements;\r\n  for (let j = 0; j < elementsToAdd.length; j++) {\r\n    context.pushStringPart(elementsToAdd[j]);\r\n  }\r\n  if (context.withSlotScopeId) {\r\n    context.pushStringPart(createSimpleExpression(`_scopeId`, false));\r\n  }\r\n  context.pushStringPart(`>`);\r\n  const rawChildren = rawChildrenMap.get(node);\r\n  if (rawChildren) {\r\n    context.pushStringPart(rawChildren);\r\n  } else if (node.children.length) {\r\n    processChildren(node, context);\r\n  }\r\n  if (!isVoidTag(node.tag)) {\r\n    context.pushStringPart(`</${node.tag}>`);\r\n  }\r\n}\r\n\r\nconst wipMap$1 = /* @__PURE__ */ new WeakMap();\r\nfunction ssrTransformTransitionGroup(node, context) {\r\n  return () => {\r\n    const tag = findProp(node, \"tag\");\r\n    if (tag) {\r\n      const otherProps = node.props.filter((p) => p !== tag);\r\n      const { props, directives } = buildProps(\r\n        node,\r\n        context,\r\n        otherProps,\r\n        true,\r\n        false,\r\n        true\r\n        /* ssr (skip event listeners) */\r\n      );\r\n      let propsExp = null;\r\n      if (props || directives.length) {\r\n        propsExp = createCallExpression(context.helper(SSR_RENDER_ATTRS), [\r\n          buildSSRProps(props, directives, context)\r\n        ]);\r\n      }\r\n      wipMap$1.set(node, {\r\n        tag,\r\n        propsExp\r\n      });\r\n    }\r\n  };\r\n}\r\nfunction ssrProcessTransitionGroup(node, context) {\r\n  const entry = wipMap$1.get(node);\r\n  if (entry) {\r\n    const { tag, propsExp } = entry;\r\n    if (tag.type === 7) {\r\n      context.pushStringPart(`<`);\r\n      context.pushStringPart(tag.exp);\r\n      if (propsExp) {\r\n        context.pushStringPart(propsExp);\r\n      }\r\n      context.pushStringPart(`>`);\r\n      processChildren(\r\n        node,\r\n        context,\r\n        false,\r\n        /**\r\n         * TransitionGroup has the special runtime behavior of flattening and\r\n         * concatenating all children into a single fragment (in order for them to\r\n         * be patched using the same key map) so we need to account for that here\r\n         * by disabling nested fragment wrappers from being generated.\r\n         */\r\n        true\r\n      );\r\n      context.pushStringPart(`</`);\r\n      context.pushStringPart(tag.exp);\r\n      context.pushStringPart(`>`);\r\n    } else {\r\n      context.pushStringPart(`<${tag.value.content}`);\r\n      if (propsExp) {\r\n        context.pushStringPart(propsExp);\r\n      }\r\n      context.pushStringPart(`>`);\r\n      processChildren(node, context, false, true);\r\n      context.pushStringPart(`</${tag.value.content}>`);\r\n    }\r\n  } else {\r\n    processChildren(node, context, true, true);\r\n  }\r\n}\r\n\r\nvar __defProp$8 = Object.defineProperty;\r\nvar __defProps$8 = Object.defineProperties;\r\nvar __getOwnPropDescs$8 = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$8 = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$8 = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$8 = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$8.call(b, prop))\r\n      __defNormalProp$8(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$8)\r\n    for (var prop of __getOwnPropSymbols$8(b)) {\r\n      if (__propIsEnum$8.call(b, prop))\r\n        __defNormalProp$8(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps$8 = (a, b) => __defProps$8(a, __getOwnPropDescs$8(b));\r\nconst wipMap = /* @__PURE__ */ new WeakMap();\r\nconst WIP_SLOT = Symbol();\r\nconst componentTypeMap = /* @__PURE__ */ new WeakMap();\r\nconst ssrTransformComponent = (node, context) => {\r\n  if (node.type !== 1 || node.tagType !== 1) {\r\n    return;\r\n  }\r\n  const component = resolveComponentType(\r\n    node,\r\n    context,\r\n    true\r\n    /* ssr */\r\n  );\r\n  const isDynamicComponent = isObject$2(component) && component.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n  componentTypeMap.set(node, component);\r\n  if (isSymbol$1(component)) {\r\n    if (component === SUSPENSE) {\r\n      return ssrTransformSuspense(node, context);\r\n    }\r\n    if (component === TRANSITION_GROUP) {\r\n      return ssrTransformTransitionGroup(node, context);\r\n    }\r\n    return;\r\n  }\r\n  const vnodeBranches = [];\r\n  const clonedNode = clone(node);\r\n  return function ssrPostTransformComponent() {\r\n    if (clonedNode.children.length) {\r\n      buildSlots(clonedNode, context, (props, children) => {\r\n        vnodeBranches.push(createVNodeSlotBranch(props, children, context));\r\n        return createFunctionExpression(void 0);\r\n      });\r\n    }\r\n    let propsExp = `null`;\r\n    if (node.props.length) {\r\n      const { props, directives } = buildProps(\r\n        node,\r\n        context,\r\n        void 0,\r\n        true,\r\n        isDynamicComponent\r\n      );\r\n      if (props || directives.length) {\r\n        propsExp = buildSSRProps(props, directives, context);\r\n      }\r\n    }\r\n    const wipEntries = [];\r\n    wipMap.set(node, wipEntries);\r\n    const buildSSRSlotFn = (props, children, loc) => {\r\n      const param0 = props && stringifyExpression(props) || `_`;\r\n      const fn = createFunctionExpression(\r\n        [param0, `_push`, `_parent`, `_scopeId`],\r\n        void 0,\r\n        // no return, assign body later\r\n        true,\r\n        // newline\r\n        true,\r\n        // isSlot\r\n        loc\r\n      );\r\n      wipEntries.push({\r\n        type: WIP_SLOT,\r\n        fn,\r\n        children,\r\n        // also collect the corresponding vnode branch built earlier\r\n        vnodeBranch: vnodeBranches[wipEntries.length]\r\n      });\r\n      return fn;\r\n    };\r\n    const slots = node.children.length ? buildSlots(node, context, buildSSRSlotFn).slots : `null`;\r\n    if (typeof component !== \"string\") {\r\n      node.ssrCodegenNode = createCallExpression(\r\n        context.helper(SSR_RENDER_VNODE),\r\n        [\r\n          `_push`,\r\n          createCallExpression(context.helper(CREATE_VNODE), [\r\n            component,\r\n            propsExp,\r\n            slots\r\n          ]),\r\n          `_parent`\r\n        ]\r\n      );\r\n    } else {\r\n      node.ssrCodegenNode = createCallExpression(\r\n        context.helper(SSR_RENDER_COMPONENT),\r\n        [component, propsExp, slots, `_parent`]\r\n      );\r\n    }\r\n  };\r\n};\r\nfunction ssrProcessComponent(node, context, parent) {\r\n  const component = componentTypeMap.get(node);\r\n  if (!node.ssrCodegenNode) {\r\n    if (component === TELEPORT) {\r\n      return ssrProcessTeleport(node, context);\r\n    } else if (component === SUSPENSE) {\r\n      return ssrProcessSuspense(node, context);\r\n    } else if (component === TRANSITION_GROUP) {\r\n      return ssrProcessTransitionGroup(node, context);\r\n    } else {\r\n      if (parent.type === WIP_SLOT) {\r\n        context.pushStringPart(``);\r\n      }\r\n      if (component === TRANSITION) {\r\n        node.children = node.children.filter((c) => c.type !== 3);\r\n      }\r\n      processChildren(node, context);\r\n    }\r\n  } else {\r\n    const wipEntries = wipMap.get(node) || [];\r\n    for (let i = 0; i < wipEntries.length; i++) {\r\n      const { fn, vnodeBranch } = wipEntries[i];\r\n      fn.body = createIfStatement(\r\n        createSimpleExpression(`_push`, false),\r\n        processChildrenAsStatement(\r\n          wipEntries[i],\r\n          context,\r\n          false,\r\n          true\r\n          /* withSlotScopeId */\r\n        ),\r\n        vnodeBranch\r\n      );\r\n    }\r\n    if (context.withSlotScopeId) {\r\n      node.ssrCodegenNode.arguments.push(`_scopeId`);\r\n    }\r\n    if (typeof component === \"string\") {\r\n      context.pushStatement(\r\n        createCallExpression(`_push`, [node.ssrCodegenNode])\r\n      );\r\n    } else {\r\n      context.pushStatement(node.ssrCodegenNode);\r\n    }\r\n  }\r\n}\r\nconst rawOptionsMap = /* @__PURE__ */ new WeakMap();\r\nconst [baseNodeTransforms, baseDirectiveTransforms] = getBaseTransformPreset(true);\r\nconst vnodeNodeTransforms = [...baseNodeTransforms, ...DOMNodeTransforms];\r\nconst vnodeDirectiveTransforms = __spreadValues$8(__spreadValues$8({}, baseDirectiveTransforms), DOMDirectiveTransforms);\r\nfunction createVNodeSlotBranch(props, children, parentContext) {\r\n  const rawOptions = rawOptionsMap.get(parentContext.root);\r\n  const subOptions = __spreadProps$8(__spreadValues$8({}, rawOptions), {\r\n    // overwrite with vnode-based transforms\r\n    nodeTransforms: [\r\n      ...vnodeNodeTransforms,\r\n      ...rawOptions.nodeTransforms || []\r\n    ],\r\n    directiveTransforms: __spreadValues$8(__spreadValues$8({}, vnodeDirectiveTransforms), rawOptions.directiveTransforms || {})\r\n  });\r\n  const wrapperNode = {\r\n    type: 1,\r\n    ns: 0,\r\n    tag: \"template\",\r\n    tagType: 3,\r\n    isSelfClosing: false,\r\n    // important: provide v-slot=\"props\" on the wrapper for proper\r\n    // scope analysis\r\n    props: [\r\n      {\r\n        type: 7,\r\n        name: \"slot\",\r\n        exp: props,\r\n        arg: void 0,\r\n        modifiers: [],\r\n        loc: locStub\r\n      }\r\n    ],\r\n    children,\r\n    loc: locStub,\r\n    codegenNode: void 0\r\n  };\r\n  subTransform(wrapperNode, subOptions, parentContext);\r\n  return createReturnStatement(children);\r\n}\r\nfunction subTransform(node, options, parentContext) {\r\n  const childRoot = createRoot([node]);\r\n  const childContext = createTransformContext(childRoot, options);\r\n  childContext.ssr = false;\r\n  childContext.scopes = __spreadValues$8({}, parentContext.scopes);\r\n  childContext.identifiers = __spreadValues$8({}, parentContext.identifiers);\r\n  childContext.imports = parentContext.imports;\r\n  traverseNode(childRoot, childContext);\r\n  [\"helpers\", \"components\", \"directives\"].forEach((key) => {\r\n    childContext[key].forEach((value, helperKey) => {\r\n      if (key === \"helpers\") {\r\n        const parentCount = parentContext.helpers.get(helperKey);\r\n        if (parentCount === void 0) {\r\n          parentContext.helpers.set(helperKey, value);\r\n        } else {\r\n          parentContext.helpers.set(helperKey, value + parentCount);\r\n        }\r\n      } else {\r\n        parentContext[key].add(value);\r\n      }\r\n    });\r\n  });\r\n}\r\nfunction clone(v) {\r\n  if (isArray$3(v)) {\r\n    return v.map(clone);\r\n  } else if (isObject$2(v)) {\r\n    const res = {};\r\n    for (const key in v) {\r\n      res[key] = clone(v[key]);\r\n    }\r\n    return res;\r\n  } else {\r\n    return v;\r\n  }\r\n}\r\n\r\nfunction ssrCodegenTransform(ast, options) {\r\n  const context = createSSRTransformContext(ast, options);\r\n  if (options.ssrCssVars) {\r\n    const cssContext = createTransformContext(createRoot([]), options);\r\n    const varsExp = processExpression(\r\n      createSimpleExpression(options.ssrCssVars, false),\r\n      cssContext\r\n    );\r\n    context.body.push(\r\n      createCompoundExpression([`const _cssVars = { style: `, varsExp, `}`])\r\n    );\r\n    Array.from(cssContext.helpers.keys()).forEach((helper) => {\r\n      ast.helpers.add(helper);\r\n    });\r\n  }\r\n  const isFragment = ast.children.length > 1 && ast.children.some((c) => !isText$1(c));\r\n  processChildren(ast, context, isFragment);\r\n  ast.codegenNode = createBlockStatement(context.body);\r\n  ast.ssrHelpers = Array.from(\r\n    /* @__PURE__ */ new Set([\r\n      ...Array.from(ast.helpers).filter((h) => h in ssrHelpers),\r\n      ...context.helpers\r\n    ])\r\n  );\r\n  ast.helpers = new Set(Array.from(ast.helpers).filter((h) => !(h in ssrHelpers)));\r\n}\r\nfunction createSSRTransformContext(root, options, helpers = /* @__PURE__ */ new Set(), withSlotScopeId = false) {\r\n  const body = [];\r\n  let currentString = null;\r\n  return {\r\n    root,\r\n    options,\r\n    body,\r\n    helpers,\r\n    withSlotScopeId,\r\n    onError: options.onError || ((e) => {\r\n      throw e;\r\n    }),\r\n    helper(name) {\r\n      helpers.add(name);\r\n      return name;\r\n    },\r\n    pushStringPart(part) {\r\n      if (!currentString) {\r\n        const currentCall = createCallExpression(`_push`);\r\n        body.push(currentCall);\r\n        currentString = createTemplateLiteral([]);\r\n        currentCall.arguments.push(currentString);\r\n      }\r\n      const bufferedElements = currentString.elements;\r\n      const lastItem = bufferedElements[bufferedElements.length - 1];\r\n      if (isString$2(part) && isString$2(lastItem)) {\r\n        bufferedElements[bufferedElements.length - 1] += part;\r\n      } else {\r\n        bufferedElements.push(part);\r\n      }\r\n    },\r\n    pushStatement(statement) {\r\n      currentString = null;\r\n      body.push(statement);\r\n    }\r\n  };\r\n}\r\nfunction createChildContext(parent, withSlotScopeId = parent.withSlotScopeId) {\r\n  return createSSRTransformContext(\r\n    parent.root,\r\n    parent.options,\r\n    parent.helpers,\r\n    withSlotScopeId\r\n  );\r\n}\r\nfunction processChildren(parent, context, asFragment = false, disableNestedFragments = false) {\r\n  if (asFragment) {\r\n    context.pushStringPart(`<!--[-->`);\r\n  }\r\n  const { children } = parent;\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i];\r\n    switch (child.type) {\r\n      case 1:\r\n        switch (child.tagType) {\r\n          case 0:\r\n            ssrProcessElement(child, context);\r\n            break;\r\n          case 1:\r\n            ssrProcessComponent(child, context, parent);\r\n            break;\r\n          case 2:\r\n            ssrProcessSlotOutlet(child, context);\r\n            break;\r\n          case 3:\r\n            break;\r\n          default:\r\n            context.onError(\r\n              createSSRCompilerError(\r\n                67,\r\n                child.loc\r\n              )\r\n            );\r\n            const exhaustiveCheck2 = child;\r\n            return exhaustiveCheck2;\r\n        }\r\n        break;\r\n      case 2:\r\n        context.pushStringPart(escapeHtml(child.content));\r\n        break;\r\n      case 3:\r\n        context.pushStringPart(`<!--${child.content}-->`);\r\n        break;\r\n      case 5:\r\n        context.pushStringPart(\r\n          createCallExpression(context.helper(SSR_INTERPOLATE), [child.content])\r\n        );\r\n        break;\r\n      case 9:\r\n        ssrProcessIf(child, context, disableNestedFragments);\r\n        break;\r\n      case 11:\r\n        ssrProcessFor(child, context, disableNestedFragments);\r\n        break;\r\n      case 10:\r\n        break;\r\n      case 12:\r\n      case 8:\r\n        break;\r\n      default:\r\n        context.onError(\r\n          createSSRCompilerError(\r\n            67,\r\n            child.loc\r\n          )\r\n        );\r\n        const exhaustiveCheck = child;\r\n        return exhaustiveCheck;\r\n    }\r\n  }\r\n  if (asFragment) {\r\n    context.pushStringPart(`<!--]-->`);\r\n  }\r\n}\r\nfunction processChildrenAsStatement(parent, parentContext, asFragment = false, withSlotScopeId = parentContext.withSlotScopeId) {\r\n  const childContext = createChildContext(parentContext, withSlotScopeId);\r\n  processChildren(parent, childContext, asFragment);\r\n  return createBlockStatement(childContext.body);\r\n}\r\n\r\nconst ssrTransformModel = (dir, node, context) => {\r\n  const model = dir.exp;\r\n  function checkDuplicatedValue() {\r\n    const value = findProp(node, \"value\");\r\n    if (value) {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          60,\r\n          value.loc\r\n        )\r\n      );\r\n    }\r\n  }\r\n  if (node.tagType === 0) {\r\n    const res = { props: [] };\r\n    const defaultProps = [\r\n      // default value binding for text type inputs\r\n      createObjectProperty(`value`, model)\r\n    ];\r\n    if (node.tag === \"input\") {\r\n      const type = findProp(node, \"type\");\r\n      if (type) {\r\n        const value = findValueBinding(node);\r\n        if (type.type === 7) {\r\n          res.ssrTagParts = [\r\n            createCallExpression(context.helper(SSR_RENDER_DYNAMIC_MODEL), [\r\n              type.exp,\r\n              model,\r\n              value\r\n            ])\r\n          ];\r\n        } else if (type.value) {\r\n          switch (type.value.content) {\r\n            case \"radio\":\r\n              res.props = [\r\n                createObjectProperty(\r\n                  `checked`,\r\n                  createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\r\n                    model,\r\n                    value\r\n                  ])\r\n                )\r\n              ];\r\n              break;\r\n            case \"checkbox\":\r\n              const trueValueBinding = findProp(node, \"true-value\");\r\n              if (trueValueBinding) {\r\n                const trueValue = trueValueBinding.type === 6 ? JSON.stringify(trueValueBinding.value.content) : trueValueBinding.exp;\r\n                res.props = [\r\n                  createObjectProperty(\r\n                    `checked`,\r\n                    createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\r\n                      model,\r\n                      trueValue\r\n                    ])\r\n                  )\r\n                ];\r\n              } else {\r\n                res.props = [\r\n                  createObjectProperty(\r\n                    `checked`,\r\n                    createConditionalExpression(\r\n                      createCallExpression(`Array.isArray`, [model]),\r\n                      createCallExpression(context.helper(SSR_LOOSE_CONTAIN), [\r\n                        model,\r\n                        value\r\n                      ]),\r\n                      model\r\n                    )\r\n                  )\r\n                ];\r\n              }\r\n              break;\r\n            case \"file\":\r\n              context.onError(\r\n                createDOMCompilerError(\r\n                  59,\r\n                  dir.loc\r\n                )\r\n              );\r\n              break;\r\n            default:\r\n              checkDuplicatedValue();\r\n              res.props = defaultProps;\r\n              break;\r\n          }\r\n        }\r\n      } else if (hasDynamicKeyVBind(node)) ; else {\r\n        checkDuplicatedValue();\r\n        res.props = defaultProps;\r\n      }\r\n    } else if (node.tag === \"textarea\") {\r\n      checkDuplicatedValue();\r\n      node.children = [createInterpolation(model, model.loc)];\r\n    } else if (node.tag === \"select\") ; else {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          57,\r\n          dir.loc\r\n        )\r\n      );\r\n    }\r\n    return res;\r\n  } else {\r\n    return transformModel$1(dir, node, context);\r\n  }\r\n};\r\nfunction findValueBinding(node) {\r\n  const valueBinding = findProp(node, \"value\");\r\n  return valueBinding ? valueBinding.type === 7 ? valueBinding.exp : createSimpleExpression(valueBinding.value.content, true) : createSimpleExpression(`null`, false);\r\n}\r\n\r\nconst ssrTransformShow = (dir, node, context) => {\r\n  if (!dir.exp) {\r\n    context.onError(\r\n      createDOMCompilerError(61)\r\n    );\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        `style`,\r\n        createConditionalExpression(\r\n          dir.exp,\r\n          createSimpleExpression(`null`, false),\r\n          createObjectExpression([\r\n            createObjectProperty(\r\n              `display`,\r\n              createSimpleExpression(`none`, true)\r\n            )\r\n          ]),\r\n          false\r\n          /* no newline */\r\n        )\r\n      )\r\n    ]\r\n  };\r\n};\r\n\r\nconst filterChild = (node) => node.children.filter((n) => n.type !== 3);\r\nconst hasSingleChild = (node) => filterChild(node).length === 1;\r\nconst ssrInjectFallthroughAttrs = (node, context) => {\r\n  if (node.type === 0) {\r\n    context.identifiers._attrs = 1;\r\n  }\r\n  if (node.type === 1 && node.tagType === 1 && (isBuiltInType(node.tag, \"Transition\") || isBuiltInType(node.tag, \"KeepAlive\"))) {\r\n    const rootChildren = filterChild(context.root);\r\n    if (rootChildren.length === 1 && rootChildren[0] === node) {\r\n      if (hasSingleChild(node)) {\r\n        injectFallthroughAttrs(node.children[0]);\r\n      }\r\n      return;\r\n    }\r\n  }\r\n  const parent = context.parent;\r\n  if (!parent || parent.type !== 0) {\r\n    return;\r\n  }\r\n  if (node.type === 10 && hasSingleChild(node)) {\r\n    let hasEncounteredIf = false;\r\n    for (const c of filterChild(parent)) {\r\n      if (c.type === 9 || c.type === 1 && findDir(c, \"if\")) {\r\n        if (hasEncounteredIf)\r\n          return;\r\n        hasEncounteredIf = true;\r\n      } else if (\r\n        // node before v-if\r\n        !hasEncounteredIf || // non else nodes\r\n        !(c.type === 1 && findDir(c, /else/, true))\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    injectFallthroughAttrs(node.children[0]);\r\n  } else if (hasSingleChild(parent)) {\r\n    injectFallthroughAttrs(node);\r\n  }\r\n};\r\nfunction injectFallthroughAttrs(node) {\r\n  if (node.type === 1 && (node.tagType === 0 || node.tagType === 1) && !findDir(node, \"for\")) {\r\n    node.props.push({\r\n      type: 7,\r\n      name: \"bind\",\r\n      arg: void 0,\r\n      exp: createSimpleExpression(`_attrs`, false),\r\n      modifiers: [],\r\n      loc: locStub\r\n    });\r\n  }\r\n}\r\n\r\nconst ssrInjectCssVars = (node, context) => {\r\n  if (!context.ssrCssVars) {\r\n    return;\r\n  }\r\n  if (node.type === 0) {\r\n    context.identifiers._cssVars = 1;\r\n  }\r\n  const parent = context.parent;\r\n  if (!parent || parent.type !== 0) {\r\n    return;\r\n  }\r\n  if (node.type === 10) {\r\n    for (const child of node.children) {\r\n      injectCssVars(child);\r\n    }\r\n  } else {\r\n    injectCssVars(node);\r\n  }\r\n};\r\nfunction injectCssVars(node) {\r\n  if (node.type === 1 && (node.tagType === 0 || node.tagType === 1) && !findDir(node, \"for\")) {\r\n    if (isBuiltInType(node.tag, \"Suspense\")) {\r\n      for (const child of node.children) {\r\n        if (child.type === 1 && child.tagType === 3) {\r\n          child.children.forEach(injectCssVars);\r\n        } else {\r\n          injectCssVars(child);\r\n        }\r\n      }\r\n    } else {\r\n      node.props.push({\r\n        type: 7,\r\n        name: \"bind\",\r\n        arg: void 0,\r\n        exp: createSimpleExpression(`_cssVars`, false),\r\n        modifiers: [],\r\n        loc: locStub\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nvar __defProp$7 = Object.defineProperty;\r\nvar __defProps$7 = Object.defineProperties;\r\nvar __getOwnPropDescs$7 = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$7 = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$7 = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$7 = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$7.call(b, prop))\r\n      __defNormalProp$7(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$7)\r\n    for (var prop of __getOwnPropSymbols$7(b)) {\r\n      if (__propIsEnum$7.call(b, prop))\r\n        __defNormalProp$7(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps$7 = (a, b) => __defProps$7(a, __getOwnPropDescs$7(b));\r\nfunction compile(template, options = {}) {\r\n  options = __spreadProps$7(__spreadValues$7(__spreadValues$7({}, options), parserOptions), {\r\n    ssr: true,\r\n    inSSR: true,\r\n    scopeId: options.mode === \"function\" ? null : options.scopeId,\r\n    // always prefix since compiler-ssr doesn't have size concern\r\n    prefixIdentifiers: true,\r\n    // disable optimizations that are unnecessary for ssr\r\n    cacheHandlers: false,\r\n    hoistStatic: false\r\n  });\r\n  const ast = baseParse(template, options);\r\n  rawOptionsMap.set(ast, options);\r\n  transform$1(ast, __spreadProps$7(__spreadValues$7({}, options), {\r\n    hoistStatic: false,\r\n    nodeTransforms: [\r\n      ssrTransformIf,\r\n      ssrTransformFor,\r\n      trackVForSlotScopes,\r\n      transformExpression,\r\n      ssrTransformSlotOutlet,\r\n      ssrInjectFallthroughAttrs,\r\n      ssrInjectCssVars,\r\n      ssrTransformElement,\r\n      ssrTransformComponent,\r\n      trackSlotScopes,\r\n      transformStyle,\r\n      ...options.nodeTransforms || []\r\n      // user transforms\r\n    ],\r\n    directiveTransforms: __spreadValues$7({\r\n      // reusing core v-bind\r\n      bind: transformBind,\r\n      on: transformOn$1,\r\n      // model and show has dedicated SSR handling\r\n      model: ssrTransformModel,\r\n      show: ssrTransformShow,\r\n      // the following are ignored during SSR\r\n      // on: noopDirectiveTransform,\r\n      cloak: noopDirectiveTransform,\r\n      once: noopDirectiveTransform,\r\n      memo: noopDirectiveTransform\r\n    }, options.directiveTransforms || {})\r\n  }));\r\n  ssrCodegenTransform(ast, options);\r\n  return generate(ast, options);\r\n}\r\n\r\nvar CompilerSSR = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  compile: compile\r\n});\r\n\r\nvar _polyfillNode_fs = {};\r\n\r\nvar _polyfillNode_fs$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  default: _polyfillNode_fs\r\n});\r\n\r\nvar require$$0$2 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_fs$1);\r\n\r\nvar require$$2$1 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_path);\r\n\r\nvar require$$0$1 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_util$1);\r\n\r\nconst hasWarned$1 = {};\r\nfunction warnOnce$4(msg) {\r\n  const isNodeProd = typeof process !== \"undefined\" && process.env.NODE_ENV === \"production\";\r\n  if (!isNodeProd && true && !hasWarned$1[msg]) {\r\n    hasWarned$1[msg] = true;\r\n    warn$1(msg);\r\n  }\r\n}\r\nfunction warn$1(msg) {\r\n  console.warn(\r\n    `\\x1B[1m\\x1B[33m[@vue/compiler-sfc]\\x1B[0m\\x1B[33m ${msg}\\x1B[0m\r\n`\r\n  );\r\n}\r\n\r\nvar __defProp$6 = Object.defineProperty;\r\nvar __defProps$6 = Object.defineProperties;\r\nvar __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$6 = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$6.call(b, prop))\r\n      __defNormalProp$6(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$6)\r\n    for (var prop of __getOwnPropSymbols$6(b)) {\r\n      if (__propIsEnum$6.call(b, prop))\r\n        __defNormalProp$6(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));\r\nfunction preprocess$1({ source, filename, preprocessOptions }, preprocessor) {\r\n  let res = \"\";\r\n  let err = null;\r\n  preprocessor.render(\r\n    source,\r\n    __spreadValues$6({ filename }, preprocessOptions),\r\n    (_err, _res) => {\r\n      if (_err)\r\n        err = _err;\r\n      res = _res;\r\n    }\r\n  );\r\n  if (err)\r\n    throw err;\r\n  return res;\r\n}\r\nfunction compileTemplate(options) {\r\n  const { preprocessLang, preprocessCustomRequire } = options;\r\n  if (preprocessLang && !preprocessCustomRequire) {\r\n    throw new Error(\r\n      `[@vue/compiler-sfc] Template preprocessing in the browser build must provide the \\`preprocessCustomRequire\\` option to return the in-browser version of the preprocessor in the shape of { render(): string }.`\r\n    );\r\n  }\r\n  const preprocessor = preprocessLang ? preprocessCustomRequire ? preprocessCustomRequire(preprocessLang) : void 0  : false;\r\n  if (preprocessor) {\r\n    try {\r\n      return doCompileTemplate(__spreadProps$6(__spreadValues$6({}, options), {\r\n        source: preprocess$1(options, preprocessor)\r\n      }));\r\n    } catch (e) {\r\n      return {\r\n        code: `export default function render() {}`,\r\n        source: options.source,\r\n        tips: [],\r\n        errors: [e]\r\n      };\r\n    }\r\n  } else if (preprocessLang) {\r\n    return {\r\n      code: `export default function render() {}`,\r\n      source: options.source,\r\n      tips: [\r\n        `Component ${options.filename} uses lang ${preprocessLang} for template. Please install the language preprocessor.`\r\n      ],\r\n      errors: [\r\n        `Component ${options.filename} uses lang ${preprocessLang} for template, however it is not installed.`\r\n      ]\r\n    };\r\n  } else {\r\n    return doCompileTemplate(options);\r\n  }\r\n}\r\nfunction doCompileTemplate({\r\n  filename,\r\n  id,\r\n  scoped,\r\n  slotted,\r\n  inMap,\r\n  source,\r\n  ssr = false,\r\n  ssrCssVars,\r\n  isProd = false,\r\n  compiler = ssr ? CompilerSSR : CompilerDOM,\r\n  compilerOptions = {},\r\n  transformAssetUrls\r\n}) {\r\n  const errors = [];\r\n  const warnings = [];\r\n  let nodeTransforms = [];\r\n  if (isObject$2(transformAssetUrls)) {\r\n    const assetOptions = normalizeOptions(transformAssetUrls);\r\n    nodeTransforms = [\r\n      createAssetUrlTransformWithOptions(assetOptions),\r\n      createSrcsetTransformWithOptions(assetOptions)\r\n    ];\r\n  } else if (transformAssetUrls !== false) {\r\n    nodeTransforms = [transformAssetUrl, transformSrcset];\r\n  }\r\n  if (ssr && !ssrCssVars) {\r\n    warnOnce$4(\r\n      `compileTemplate is called with \\`ssr: true\\` but no corresponding \\`cssVars\\` option.\\`.`\r\n    );\r\n  }\r\n  if (!id) {\r\n    warnOnce$4(`compileTemplate now requires the \\`id\\` option.\\`.`);\r\n    id = \"\";\r\n  }\r\n  const shortId = id.replace(/^data-v-/, \"\");\r\n  const longId = `data-v-${shortId}`;\r\n  let { code, ast, preamble, map } = compiler.compile(source, __spreadProps$6(__spreadValues$6({\r\n    mode: \"module\",\r\n    prefixIdentifiers: true,\r\n    hoistStatic: true,\r\n    cacheHandlers: true,\r\n    ssrCssVars: ssr && ssrCssVars && ssrCssVars.length ? genCssVarsFromList(ssrCssVars, shortId, isProd, true) : \"\",\r\n    scopeId: scoped ? longId : void 0,\r\n    slotted,\r\n    sourceMap: true\r\n  }, compilerOptions), {\r\n    nodeTransforms: nodeTransforms.concat(compilerOptions.nodeTransforms || []),\r\n    filename,\r\n    onError: (e) => errors.push(e),\r\n    onWarn: (w) => warnings.push(w)\r\n  }));\r\n  if (inMap) {\r\n    if (map) {\r\n      map = mapLines(inMap, map);\r\n    }\r\n    if (errors.length) {\r\n      patchErrors(errors, source, inMap);\r\n    }\r\n  }\r\n  const tips = warnings.map((w) => {\r\n    let msg = w.message;\r\n    if (w.loc) {\r\n      msg += `\r\n${generateCodeFrame(\r\n        source,\r\n        w.loc.start.offset,\r\n        w.loc.end.offset\r\n      )}`;\r\n    }\r\n    return msg;\r\n  });\r\n  return { code, ast, preamble, source, errors, tips, map };\r\n}\r\nfunction mapLines(oldMap, newMap) {\r\n  if (!oldMap)\r\n    return newMap;\r\n  if (!newMap)\r\n    return oldMap;\r\n  const oldMapConsumer = new SourceMapConsumer$5(oldMap);\r\n  const newMapConsumer = new SourceMapConsumer$5(newMap);\r\n  const mergedMapGenerator = new SourceMapGenerator$6();\r\n  newMapConsumer.eachMapping((m) => {\r\n    if (m.originalLine == null) {\r\n      return;\r\n    }\r\n    const origPosInOldMap = oldMapConsumer.originalPositionFor({\r\n      line: m.originalLine,\r\n      column: m.originalColumn\r\n    });\r\n    if (origPosInOldMap.source == null) {\r\n      return;\r\n    }\r\n    mergedMapGenerator.addMapping({\r\n      generated: {\r\n        line: m.generatedLine,\r\n        column: m.generatedColumn\r\n      },\r\n      original: {\r\n        line: origPosInOldMap.line,\r\n        // map line\r\n        // use current column, since the oldMap produced by @vue/compiler-sfc\r\n        // does not\r\n        column: m.originalColumn\r\n      },\r\n      source: origPosInOldMap.source,\r\n      name: origPosInOldMap.name\r\n    });\r\n  });\r\n  const generator = mergedMapGenerator;\r\n  oldMapConsumer.sources.forEach((sourceFile) => {\r\n    generator._sources.add(sourceFile);\r\n    const sourceContent = oldMapConsumer.sourceContentFor(sourceFile);\r\n    if (sourceContent != null) {\r\n      mergedMapGenerator.setSourceContent(sourceFile, sourceContent);\r\n    }\r\n  });\r\n  generator._sourceRoot = oldMap.sourceRoot;\r\n  generator._file = oldMap.file;\r\n  return generator.toJSON();\r\n}\r\nfunction patchErrors(errors, source, inMap) {\r\n  const originalSource = inMap.sourcesContent[0];\r\n  const offset = originalSource.indexOf(source);\r\n  const lineOffset = originalSource.slice(0, offset).split(/\\r?\\n/).length - 1;\r\n  errors.forEach((err) => {\r\n    if (err.loc) {\r\n      err.loc.start.line += lineOffset;\r\n      err.loc.start.offset += offset;\r\n      if (err.loc.end !== err.loc.start) {\r\n        err.loc.end.line += lineOffset;\r\n        err.loc.end.offset += offset;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nvar picocolorsExports = {};\r\nvar picocolors = {\r\n  get exports(){ return picocolorsExports; },\r\n  set exports(v){ picocolorsExports = v; },\r\n};\r\n\r\n// MIT lisence\r\n// from https://github.com/substack/tty-browserify/blob/1ba769a6429d242f36226538835b4034bf6b7886/index.js\r\n\r\nfunction isatty() {\r\n  return false;\r\n}\r\n\r\nfunction ReadStream() {\r\n  throw new Error('tty.ReadStream is not implemented');\r\n}\r\n\r\nfunction WriteStream() {\r\n  throw new Error('tty.ReadStream is not implemented');\r\n}\r\n\r\nvar _polyfillNode_tty = {\r\n  isatty: isatty,\r\n  ReadStream: ReadStream,\r\n  WriteStream: WriteStream\r\n};\r\n\r\nvar _polyfillNode_tty$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  ReadStream: ReadStream,\r\n  WriteStream: WriteStream,\r\n  default: _polyfillNode_tty,\r\n  isatty: isatty\r\n});\r\n\r\nvar require$$0 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_tty$1);\r\n\r\nlet tty = require$$0;\r\n\r\nlet isColorSupported =\r\n\t!(\"NO_COLOR\" in ({}) || browser$1.argv.includes(\"--no-color\")) &&\r\n\t(\"FORCE_COLOR\" in ({}) ||\r\n\t\tbrowser$1.argv.includes(\"--color\") ||\r\n\t\t\"\" === \"win32\" ||\r\n\t\t(tty.isatty(1) && browser$1.env.TERM !== \"dumb\") ||\r\n\t\t\"CI\" in ({}));\r\n\r\nlet formatter =\r\n\t(open, close, replace = open) =>\r\n\tinput => {\r\n\t\tlet string = \"\" + input;\r\n\t\tlet index = string.indexOf(close, open.length);\r\n\t\treturn ~index\r\n\t\t\t? open + replaceClose(string, close, replace, index) + close\r\n\t\t\t: open + string + close\r\n\t};\r\n\r\nlet replaceClose = (string, close, replace, index) => {\r\n\tlet start = string.substring(0, index) + replace;\r\n\tlet end = string.substring(index + close.length);\r\n\tlet nextIndex = end.indexOf(close);\r\n\treturn ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end\r\n};\r\n\r\nlet createColors = (enabled = isColorSupported) => ({\r\n\tisColorSupported: enabled,\r\n\treset: enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String,\r\n\tbold: enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String,\r\n\tdim: enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String,\r\n\titalic: enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String,\r\n\tunderline: enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String,\r\n\tinverse: enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String,\r\n\thidden: enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String,\r\n\tstrikethrough: enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String,\r\n\tblack: enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String,\r\n\tred: enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String,\r\n\tgreen: enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String,\r\n\tyellow: enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String,\r\n\tblue: enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String,\r\n\tmagenta: enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String,\r\n\tcyan: enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String,\r\n\twhite: enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String,\r\n\tgray: enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String,\r\n\tbgBlack: enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String,\r\n\tbgRed: enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String,\r\n\tbgGreen: enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String,\r\n\tbgYellow: enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String,\r\n\tbgBlue: enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String,\r\n\tbgMagenta: enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String,\r\n\tbgCyan: enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String,\r\n\tbgWhite: enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String,\r\n});\r\n\r\npicocolors.exports = createColors();\r\npicocolorsExports.createColors = createColors;\r\n\r\nconst SINGLE_QUOTE = \"'\".charCodeAt(0);\r\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0);\r\nconst BACKSLASH = '\\\\'.charCodeAt(0);\r\nconst SLASH = '/'.charCodeAt(0);\r\nconst NEWLINE = '\\n'.charCodeAt(0);\r\nconst SPACE = ' '.charCodeAt(0);\r\nconst FEED = '\\f'.charCodeAt(0);\r\nconst TAB = '\\t'.charCodeAt(0);\r\nconst CR = '\\r'.charCodeAt(0);\r\nconst OPEN_SQUARE = '['.charCodeAt(0);\r\nconst CLOSE_SQUARE = ']'.charCodeAt(0);\r\nconst OPEN_PARENTHESES = '('.charCodeAt(0);\r\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0);\r\nconst OPEN_CURLY = '{'.charCodeAt(0);\r\nconst CLOSE_CURLY = '}'.charCodeAt(0);\r\nconst SEMICOLON = ';'.charCodeAt(0);\r\nconst ASTERISK = '*'.charCodeAt(0);\r\nconst COLON = ':'.charCodeAt(0);\r\nconst AT = '@'.charCodeAt(0);\r\n\r\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\r\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\r\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/;\r\nconst RE_HEX_ESCAPE = /[\\da-f]/i;\r\n\r\nvar tokenize$1 = function tokenizer(input, options = {}) {\r\n  let css = input.css.valueOf();\r\n  let ignore = options.ignoreErrors;\r\n\r\n  let code, next, quote, content, escape;\r\n  let escaped, escapePos, prev, n, currentToken;\r\n\r\n  let length = css.length;\r\n  let pos = 0;\r\n  let buffer = [];\r\n  let returned = [];\r\n\r\n  function position() {\r\n    return pos\r\n  }\r\n\r\n  function unclosed(what) {\r\n    throw input.error('Unclosed ' + what, pos)\r\n  }\r\n\r\n  function endOfFile() {\r\n    return returned.length === 0 && pos >= length\r\n  }\r\n\r\n  function nextToken(opts) {\r\n    if (returned.length) return returned.pop()\r\n    if (pos >= length) return\r\n\r\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\r\n\r\n    code = css.charCodeAt(pos);\r\n\r\n    switch (code) {\r\n      case NEWLINE:\r\n      case SPACE:\r\n      case TAB:\r\n      case CR:\r\n      case FEED: {\r\n        next = pos;\r\n        do {\r\n          next += 1;\r\n          code = css.charCodeAt(next);\r\n        } while (\r\n          code === SPACE ||\r\n          code === NEWLINE ||\r\n          code === TAB ||\r\n          code === CR ||\r\n          code === FEED\r\n        )\r\n\r\n        currentToken = ['space', css.slice(pos, next)];\r\n        pos = next - 1;\r\n        break\r\n      }\r\n\r\n      case OPEN_SQUARE:\r\n      case CLOSE_SQUARE:\r\n      case OPEN_CURLY:\r\n      case CLOSE_CURLY:\r\n      case COLON:\r\n      case SEMICOLON:\r\n      case CLOSE_PARENTHESES: {\r\n        let controlChar = String.fromCharCode(code);\r\n        currentToken = [controlChar, controlChar, pos];\r\n        break\r\n      }\r\n\r\n      case OPEN_PARENTHESES: {\r\n        prev = buffer.length ? buffer.pop()[1] : '';\r\n        n = css.charCodeAt(pos + 1);\r\n        if (\r\n          prev === 'url' &&\r\n          n !== SINGLE_QUOTE &&\r\n          n !== DOUBLE_QUOTE &&\r\n          n !== SPACE &&\r\n          n !== NEWLINE &&\r\n          n !== TAB &&\r\n          n !== FEED &&\r\n          n !== CR\r\n        ) {\r\n          next = pos;\r\n          do {\r\n            escaped = false;\r\n            next = css.indexOf(')', next + 1);\r\n            if (next === -1) {\r\n              if (ignore || ignoreUnclosed) {\r\n                next = pos;\r\n                break\r\n              } else {\r\n                unclosed('bracket');\r\n              }\r\n            }\r\n            escapePos = next;\r\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\r\n              escapePos -= 1;\r\n              escaped = !escaped;\r\n            }\r\n          } while (escaped)\r\n\r\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next];\r\n\r\n          pos = next;\r\n        } else {\r\n          next = css.indexOf(')', pos + 1);\r\n          content = css.slice(pos, next + 1);\r\n\r\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\r\n            currentToken = ['(', '(', pos];\r\n          } else {\r\n            currentToken = ['brackets', content, pos, next];\r\n            pos = next;\r\n          }\r\n        }\r\n\r\n        break\r\n      }\r\n\r\n      case SINGLE_QUOTE:\r\n      case DOUBLE_QUOTE: {\r\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"';\r\n        next = pos;\r\n        do {\r\n          escaped = false;\r\n          next = css.indexOf(quote, next + 1);\r\n          if (next === -1) {\r\n            if (ignore || ignoreUnclosed) {\r\n              next = pos + 1;\r\n              break\r\n            } else {\r\n              unclosed('string');\r\n            }\r\n          }\r\n          escapePos = next;\r\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\r\n            escapePos -= 1;\r\n            escaped = !escaped;\r\n          }\r\n        } while (escaped)\r\n\r\n        currentToken = ['string', css.slice(pos, next + 1), pos, next];\r\n        pos = next;\r\n        break\r\n      }\r\n\r\n      case AT: {\r\n        RE_AT_END.lastIndex = pos + 1;\r\n        RE_AT_END.test(css);\r\n        if (RE_AT_END.lastIndex === 0) {\r\n          next = css.length - 1;\r\n        } else {\r\n          next = RE_AT_END.lastIndex - 2;\r\n        }\r\n\r\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next];\r\n\r\n        pos = next;\r\n        break\r\n      }\r\n\r\n      case BACKSLASH: {\r\n        next = pos;\r\n        escape = true;\r\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\r\n          next += 1;\r\n          escape = !escape;\r\n        }\r\n        code = css.charCodeAt(next + 1);\r\n        if (\r\n          escape &&\r\n          code !== SLASH &&\r\n          code !== SPACE &&\r\n          code !== NEWLINE &&\r\n          code !== TAB &&\r\n          code !== CR &&\r\n          code !== FEED\r\n        ) {\r\n          next += 1;\r\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\r\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\r\n              next += 1;\r\n            }\r\n            if (css.charCodeAt(next + 1) === SPACE) {\r\n              next += 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        currentToken = ['word', css.slice(pos, next + 1), pos, next];\r\n\r\n        pos = next;\r\n        break\r\n      }\r\n\r\n      default: {\r\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\r\n          next = css.indexOf('*/', pos + 2) + 1;\r\n          if (next === 0) {\r\n            if (ignore || ignoreUnclosed) {\r\n              next = css.length;\r\n            } else {\r\n              unclosed('comment');\r\n            }\r\n          }\r\n\r\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next];\r\n          pos = next;\r\n        } else {\r\n          RE_WORD_END.lastIndex = pos + 1;\r\n          RE_WORD_END.test(css);\r\n          if (RE_WORD_END.lastIndex === 0) {\r\n            next = css.length - 1;\r\n          } else {\r\n            next = RE_WORD_END.lastIndex - 2;\r\n          }\r\n\r\n          currentToken = ['word', css.slice(pos, next + 1), pos, next];\r\n          buffer.push(currentToken);\r\n          pos = next;\r\n        }\r\n\r\n        break\r\n      }\r\n    }\r\n\r\n    pos++;\r\n    return currentToken\r\n  }\r\n\r\n  function back(token) {\r\n    returned.push(token);\r\n  }\r\n\r\n  return {\r\n    back,\r\n    nextToken,\r\n    endOfFile,\r\n    position\r\n  }\r\n};\r\n\r\nlet pico$1 = picocolorsExports;\r\n\r\nlet tokenizer$1 = tokenize$1;\r\n\r\nlet Input$5;\r\n\r\nfunction registerInput(dependant) {\r\n  Input$5 = dependant;\r\n}\r\n\r\nconst HIGHLIGHT_THEME = {\r\n  'brackets': pico$1.cyan,\r\n  'at-word': pico$1.cyan,\r\n  'comment': pico$1.gray,\r\n  'string': pico$1.green,\r\n  'class': pico$1.yellow,\r\n  'hash': pico$1.magenta,\r\n  'call': pico$1.cyan,\r\n  '(': pico$1.cyan,\r\n  ')': pico$1.cyan,\r\n  '{': pico$1.yellow,\r\n  '}': pico$1.yellow,\r\n  '[': pico$1.yellow,\r\n  ']': pico$1.yellow,\r\n  ':': pico$1.yellow,\r\n  ';': pico$1.yellow\r\n};\r\n\r\nfunction getTokenType([type, value], processor) {\r\n  if (type === 'word') {\r\n    if (value[0] === '.') {\r\n      return 'class'\r\n    }\r\n    if (value[0] === '#') {\r\n      return 'hash'\r\n    }\r\n  }\r\n\r\n  if (!processor.endOfFile()) {\r\n    let next = processor.nextToken();\r\n    processor.back(next);\r\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\r\n  }\r\n\r\n  return type\r\n}\r\n\r\nfunction terminalHighlight$2(css) {\r\n  let processor = tokenizer$1(new Input$5(css), { ignoreErrors: true });\r\n  let result = '';\r\n  while (!processor.endOfFile()) {\r\n    let token = processor.nextToken();\r\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)];\r\n    if (color) {\r\n      result += token[1]\r\n        .split(/\\r?\\n/)\r\n        .map(i => color(i))\r\n        .join('\\n');\r\n    } else {\r\n      result += token[1];\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nterminalHighlight$2.registerInput = registerInput;\r\n\r\nvar terminalHighlight_1 = terminalHighlight$2;\r\n\r\nlet pico = picocolorsExports;\r\n\r\nlet terminalHighlight$1 = terminalHighlight_1;\r\n\r\nlet CssSyntaxError$3 = class CssSyntaxError extends Error {\r\n  constructor(message, line, column, source, file, plugin) {\r\n    super(message);\r\n    this.name = 'CssSyntaxError';\r\n    this.reason = message;\r\n\r\n    if (file) {\r\n      this.file = file;\r\n    }\r\n    if (source) {\r\n      this.source = source;\r\n    }\r\n    if (plugin) {\r\n      this.plugin = plugin;\r\n    }\r\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\r\n      if (typeof line === 'number') {\r\n        this.line = line;\r\n        this.column = column;\r\n      } else {\r\n        this.line = line.line;\r\n        this.column = line.column;\r\n        this.endLine = column.line;\r\n        this.endColumn = column.column;\r\n      }\r\n    }\r\n\r\n    this.setMessage();\r\n\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, CssSyntaxError);\r\n    }\r\n  }\r\n\r\n  setMessage() {\r\n    this.message = this.plugin ? this.plugin + ': ' : '';\r\n    this.message += this.file ? this.file : '<css input>';\r\n    if (typeof this.line !== 'undefined') {\r\n      this.message += ':' + this.line + ':' + this.column;\r\n    }\r\n    this.message += ': ' + this.reason;\r\n  }\r\n\r\n  showSourceCode(color) {\r\n    if (!this.source) return ''\r\n\r\n    let css = this.source;\r\n    if (color == null) color = pico.isColorSupported;\r\n    if (terminalHighlight$1) {\r\n      if (color) css = terminalHighlight$1(css);\r\n    }\r\n\r\n    let lines = css.split(/\\r?\\n/);\r\n    let start = Math.max(this.line - 3, 0);\r\n    let end = Math.min(this.line + 2, lines.length);\r\n\r\n    let maxWidth = String(end).length;\r\n\r\n    let mark, aside;\r\n    if (color) {\r\n      let { bold, red, gray } = pico.createColors(true);\r\n      mark = text => bold(red(text));\r\n      aside = text => gray(text);\r\n    } else {\r\n      mark = aside = str => str;\r\n    }\r\n\r\n    return lines\r\n      .slice(start, end)\r\n      .map((line, index) => {\r\n        let number = start + 1 + index;\r\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\r\n        if (number === this.line) {\r\n          let spacing =\r\n            aside(gutter.replace(/\\d/g, ' ')) +\r\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ');\r\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\r\n        }\r\n        return ' ' + aside(gutter) + line\r\n      })\r\n      .join('\\n')\r\n  }\r\n\r\n  toString() {\r\n    let code = this.showSourceCode();\r\n    if (code) {\r\n      code = '\\n\\n' + code + '\\n';\r\n    }\r\n    return this.name + ': ' + this.message + code\r\n  }\r\n};\r\n\r\nvar cssSyntaxError = CssSyntaxError$3;\r\nCssSyntaxError$3.default = CssSyntaxError$3;\r\n\r\nvar symbols = {};\r\n\r\nsymbols.isClean = Symbol('isClean');\r\n\r\nsymbols.my = Symbol('my');\r\n\r\nconst DEFAULT_RAW = {\r\n  colon: ': ',\r\n  indent: '    ',\r\n  beforeDecl: '\\n',\r\n  beforeRule: '\\n',\r\n  beforeOpen: ' ',\r\n  beforeClose: '\\n',\r\n  beforeComment: '\\n',\r\n  after: '\\n',\r\n  emptyBody: '',\r\n  commentLeft: ' ',\r\n  commentRight: ' ',\r\n  semicolon: false\r\n};\r\n\r\nfunction capitalize(str) {\r\n  return str[0].toUpperCase() + str.slice(1)\r\n}\r\n\r\nlet Stringifier$2 = class Stringifier {\r\n  constructor(builder) {\r\n    this.builder = builder;\r\n  }\r\n\r\n  stringify(node, semicolon) {\r\n    /* c8 ignore start */\r\n    if (!this[node.type]) {\r\n      throw new Error(\r\n        'Unknown AST node type ' +\r\n          node.type +\r\n          '. ' +\r\n          'Maybe you need to change PostCSS stringifier.'\r\n      )\r\n    }\r\n    /* c8 ignore stop */\r\n    this[node.type](node, semicolon);\r\n  }\r\n\r\n  document(node) {\r\n    this.body(node);\r\n  }\r\n\r\n  root(node) {\r\n    this.body(node);\r\n    if (node.raws.after) this.builder(node.raws.after);\r\n  }\r\n\r\n  comment(node) {\r\n    let left = this.raw(node, 'left', 'commentLeft');\r\n    let right = this.raw(node, 'right', 'commentRight');\r\n    this.builder('/*' + left + node.text + right + '*/', node);\r\n  }\r\n\r\n  decl(node, semicolon) {\r\n    let between = this.raw(node, 'between', 'colon');\r\n    let string = node.prop + between + this.rawValue(node, 'value');\r\n\r\n    if (node.important) {\r\n      string += node.raws.important || ' !important';\r\n    }\r\n\r\n    if (semicolon) string += ';';\r\n    this.builder(string, node);\r\n  }\r\n\r\n  rule(node) {\r\n    this.block(node, this.rawValue(node, 'selector'));\r\n    if (node.raws.ownSemicolon) {\r\n      this.builder(node.raws.ownSemicolon, node, 'end');\r\n    }\r\n  }\r\n\r\n  atrule(node, semicolon) {\r\n    let name = '@' + node.name;\r\n    let params = node.params ? this.rawValue(node, 'params') : '';\r\n\r\n    if (typeof node.raws.afterName !== 'undefined') {\r\n      name += node.raws.afterName;\r\n    } else if (params) {\r\n      name += ' ';\r\n    }\r\n\r\n    if (node.nodes) {\r\n      this.block(node, name + params);\r\n    } else {\r\n      let end = (node.raws.between || '') + (semicolon ? ';' : '');\r\n      this.builder(name + params + end, node);\r\n    }\r\n  }\r\n\r\n  body(node) {\r\n    let last = node.nodes.length - 1;\r\n    while (last > 0) {\r\n      if (node.nodes[last].type !== 'comment') break\r\n      last -= 1;\r\n    }\r\n\r\n    let semicolon = this.raw(node, 'semicolon');\r\n    for (let i = 0; i < node.nodes.length; i++) {\r\n      let child = node.nodes[i];\r\n      let before = this.raw(child, 'before');\r\n      if (before) this.builder(before);\r\n      this.stringify(child, last !== i || semicolon);\r\n    }\r\n  }\r\n\r\n  block(node, start) {\r\n    let between = this.raw(node, 'between', 'beforeOpen');\r\n    this.builder(start + between + '{', node, 'start');\r\n\r\n    let after;\r\n    if (node.nodes && node.nodes.length) {\r\n      this.body(node);\r\n      after = this.raw(node, 'after');\r\n    } else {\r\n      after = this.raw(node, 'after', 'emptyBody');\r\n    }\r\n\r\n    if (after) this.builder(after);\r\n    this.builder('}', node, 'end');\r\n  }\r\n\r\n  raw(node, own, detect) {\r\n    let value;\r\n    if (!detect) detect = own;\r\n\r\n    // Already had\r\n    if (own) {\r\n      value = node.raws[own];\r\n      if (typeof value !== 'undefined') return value\r\n    }\r\n\r\n    let parent = node.parent;\r\n\r\n    if (detect === 'before') {\r\n      // Hack for first rule in CSS\r\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\r\n        return ''\r\n      }\r\n\r\n      // `root` nodes in `document` should use only their own raws\r\n      if (parent && parent.type === 'document') {\r\n        return ''\r\n      }\r\n    }\r\n\r\n    // Floating child without parent\r\n    if (!parent) return DEFAULT_RAW[detect]\r\n\r\n    // Detect style by other nodes\r\n    let root = node.root();\r\n    if (!root.rawCache) root.rawCache = {};\r\n    if (typeof root.rawCache[detect] !== 'undefined') {\r\n      return root.rawCache[detect]\r\n    }\r\n\r\n    if (detect === 'before' || detect === 'after') {\r\n      return this.beforeAfter(node, detect)\r\n    } else {\r\n      let method = 'raw' + capitalize(detect);\r\n      if (this[method]) {\r\n        value = this[method](root, node);\r\n      } else {\r\n        root.walk(i => {\r\n          value = i.raws[own];\r\n          if (typeof value !== 'undefined') return false\r\n        });\r\n      }\r\n    }\r\n\r\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\r\n\r\n    root.rawCache[detect] = value;\r\n    return value\r\n  }\r\n\r\n  rawSemicolon(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\r\n        value = i.raws.semicolon;\r\n        if (typeof value !== 'undefined') return false\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  rawEmptyBody(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.nodes && i.nodes.length === 0) {\r\n        value = i.raws.after;\r\n        if (typeof value !== 'undefined') return false\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  rawIndent(root) {\r\n    if (root.raws.indent) return root.raws.indent\r\n    let value;\r\n    root.walk(i => {\r\n      let p = i.parent;\r\n      if (p && p !== root && p.parent && p.parent === root) {\r\n        if (typeof i.raws.before !== 'undefined') {\r\n          let parts = i.raws.before.split('\\n');\r\n          value = parts[parts.length - 1];\r\n          value = value.replace(/\\S/g, '');\r\n          return false\r\n        }\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  rawBeforeComment(root, node) {\r\n    let value;\r\n    root.walkComments(i => {\r\n      if (typeof i.raws.before !== 'undefined') {\r\n        value = i.raws.before;\r\n        if (value.includes('\\n')) {\r\n          value = value.replace(/[^\\n]+$/, '');\r\n        }\r\n        return false\r\n      }\r\n    });\r\n    if (typeof value === 'undefined') {\r\n      value = this.raw(node, null, 'beforeDecl');\r\n    } else if (value) {\r\n      value = value.replace(/\\S/g, '');\r\n    }\r\n    return value\r\n  }\r\n\r\n  rawBeforeDecl(root, node) {\r\n    let value;\r\n    root.walkDecls(i => {\r\n      if (typeof i.raws.before !== 'undefined') {\r\n        value = i.raws.before;\r\n        if (value.includes('\\n')) {\r\n          value = value.replace(/[^\\n]+$/, '');\r\n        }\r\n        return false\r\n      }\r\n    });\r\n    if (typeof value === 'undefined') {\r\n      value = this.raw(node, null, 'beforeRule');\r\n    } else if (value) {\r\n      value = value.replace(/\\S/g, '');\r\n    }\r\n    return value\r\n  }\r\n\r\n  rawBeforeRule(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\r\n        if (typeof i.raws.before !== 'undefined') {\r\n          value = i.raws.before;\r\n          if (value.includes('\\n')) {\r\n            value = value.replace(/[^\\n]+$/, '');\r\n          }\r\n          return false\r\n        }\r\n      }\r\n    });\r\n    if (value) value = value.replace(/\\S/g, '');\r\n    return value\r\n  }\r\n\r\n  rawBeforeClose(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.nodes && i.nodes.length > 0) {\r\n        if (typeof i.raws.after !== 'undefined') {\r\n          value = i.raws.after;\r\n          if (value.includes('\\n')) {\r\n            value = value.replace(/[^\\n]+$/, '');\r\n          }\r\n          return false\r\n        }\r\n      }\r\n    });\r\n    if (value) value = value.replace(/\\S/g, '');\r\n    return value\r\n  }\r\n\r\n  rawBeforeOpen(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.type !== 'decl') {\r\n        value = i.raws.between;\r\n        if (typeof value !== 'undefined') return false\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  rawColon(root) {\r\n    let value;\r\n    root.walkDecls(i => {\r\n      if (typeof i.raws.between !== 'undefined') {\r\n        value = i.raws.between.replace(/[^\\s:]/g, '');\r\n        return false\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  beforeAfter(node, detect) {\r\n    let value;\r\n    if (node.type === 'decl') {\r\n      value = this.raw(node, null, 'beforeDecl');\r\n    } else if (node.type === 'comment') {\r\n      value = this.raw(node, null, 'beforeComment');\r\n    } else if (detect === 'before') {\r\n      value = this.raw(node, null, 'beforeRule');\r\n    } else {\r\n      value = this.raw(node, null, 'beforeClose');\r\n    }\r\n\r\n    let buf = node.parent;\r\n    let depth = 0;\r\n    while (buf && buf.type !== 'root') {\r\n      depth += 1;\r\n      buf = buf.parent;\r\n    }\r\n\r\n    if (value.includes('\\n')) {\r\n      let indent = this.raw(node, null, 'indent');\r\n      if (indent.length) {\r\n        for (let step = 0; step < depth; step++) value += indent;\r\n      }\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n  rawValue(node, prop) {\r\n    let value = node[prop];\r\n    let raw = node.raws[prop];\r\n    if (raw && raw.value === value) {\r\n      return raw.raw\r\n    }\r\n\r\n    return value\r\n  }\r\n};\r\n\r\nvar stringifier = Stringifier$2;\r\nStringifier$2.default = Stringifier$2;\r\n\r\nlet Stringifier$1 = stringifier;\r\n\r\nfunction stringify$4(node, builder) {\r\n  let str = new Stringifier$1(builder);\r\n  str.stringify(node);\r\n}\r\n\r\nvar stringify_1 = stringify$4;\r\nstringify$4.default = stringify$4;\r\n\r\nlet { isClean: isClean$2, my: my$2 } = symbols;\r\nlet CssSyntaxError$2 = cssSyntaxError;\r\nlet Stringifier = stringifier;\r\nlet stringify$3 = stringify_1;\r\n\r\nfunction cloneNode(obj, parent) {\r\n  let cloned = new obj.constructor();\r\n\r\n  for (let i in obj) {\r\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\r\n      /* c8 ignore next 2 */\r\n      continue\r\n    }\r\n    if (i === 'proxyCache') continue\r\n    let value = obj[i];\r\n    let type = typeof value;\r\n\r\n    if (i === 'parent' && type === 'object') {\r\n      if (parent) cloned[i] = parent;\r\n    } else if (i === 'source') {\r\n      cloned[i] = value;\r\n    } else if (Array.isArray(value)) {\r\n      cloned[i] = value.map(j => cloneNode(j, cloned));\r\n    } else {\r\n      if (type === 'object' && value !== null) value = cloneNode(value);\r\n      cloned[i] = value;\r\n    }\r\n  }\r\n\r\n  return cloned\r\n}\r\n\r\nlet Node$4 = class Node {\r\n  constructor(defaults = {}) {\r\n    this.raws = {};\r\n    this[isClean$2] = false;\r\n    this[my$2] = true;\r\n\r\n    for (let name in defaults) {\r\n      if (name === 'nodes') {\r\n        this.nodes = [];\r\n        for (let node of defaults[name]) {\r\n          if (typeof node.clone === 'function') {\r\n            this.append(node.clone());\r\n          } else {\r\n            this.append(node);\r\n          }\r\n        }\r\n      } else {\r\n        this[name] = defaults[name];\r\n      }\r\n    }\r\n  }\r\n\r\n  error(message, opts = {}) {\r\n    if (this.source) {\r\n      let { start, end } = this.rangeBy(opts);\r\n      return this.source.input.error(\r\n        message,\r\n        { line: start.line, column: start.column },\r\n        { line: end.line, column: end.column },\r\n        opts\r\n      )\r\n    }\r\n    return new CssSyntaxError$2(message)\r\n  }\r\n\r\n  warn(result, text, opts) {\r\n    let data = { node: this };\r\n    for (let i in opts) data[i] = opts[i];\r\n    return result.warn(text, data)\r\n  }\r\n\r\n  remove() {\r\n    if (this.parent) {\r\n      this.parent.removeChild(this);\r\n    }\r\n    this.parent = undefined;\r\n    return this\r\n  }\r\n\r\n  toString(stringifier = stringify$3) {\r\n    if (stringifier.stringify) stringifier = stringifier.stringify;\r\n    let result = '';\r\n    stringifier(this, i => {\r\n      result += i;\r\n    });\r\n    return result\r\n  }\r\n\r\n  assign(overrides = {}) {\r\n    for (let name in overrides) {\r\n      this[name] = overrides[name];\r\n    }\r\n    return this\r\n  }\r\n\r\n  clone(overrides = {}) {\r\n    let cloned = cloneNode(this);\r\n    for (let name in overrides) {\r\n      cloned[name] = overrides[name];\r\n    }\r\n    return cloned\r\n  }\r\n\r\n  cloneBefore(overrides = {}) {\r\n    let cloned = this.clone(overrides);\r\n    this.parent.insertBefore(this, cloned);\r\n    return cloned\r\n  }\r\n\r\n  cloneAfter(overrides = {}) {\r\n    let cloned = this.clone(overrides);\r\n    this.parent.insertAfter(this, cloned);\r\n    return cloned\r\n  }\r\n\r\n  replaceWith(...nodes) {\r\n    if (this.parent) {\r\n      let bookmark = this;\r\n      let foundSelf = false;\r\n      for (let node of nodes) {\r\n        if (node === this) {\r\n          foundSelf = true;\r\n        } else if (foundSelf) {\r\n          this.parent.insertAfter(bookmark, node);\r\n          bookmark = node;\r\n        } else {\r\n          this.parent.insertBefore(bookmark, node);\r\n        }\r\n      }\r\n\r\n      if (!foundSelf) {\r\n        this.remove();\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  next() {\r\n    if (!this.parent) return undefined\r\n    let index = this.parent.index(this);\r\n    return this.parent.nodes[index + 1]\r\n  }\r\n\r\n  prev() {\r\n    if (!this.parent) return undefined\r\n    let index = this.parent.index(this);\r\n    return this.parent.nodes[index - 1]\r\n  }\r\n\r\n  before(add) {\r\n    this.parent.insertBefore(this, add);\r\n    return this\r\n  }\r\n\r\n  after(add) {\r\n    this.parent.insertAfter(this, add);\r\n    return this\r\n  }\r\n\r\n  root() {\r\n    let result = this;\r\n    while (result.parent && result.parent.type !== 'document') {\r\n      result = result.parent;\r\n    }\r\n    return result\r\n  }\r\n\r\n  raw(prop, defaultType) {\r\n    let str = new Stringifier();\r\n    return str.raw(this, prop, defaultType)\r\n  }\r\n\r\n  cleanRaws(keepBetween) {\r\n    delete this.raws.before;\r\n    delete this.raws.after;\r\n    if (!keepBetween) delete this.raws.between;\r\n  }\r\n\r\n  toJSON(_, inputs) {\r\n    let fixed = {};\r\n    let emitInputs = inputs == null;\r\n    inputs = inputs || new Map();\r\n    let inputsNextIndex = 0;\r\n\r\n    for (let name in this) {\r\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\r\n        /* c8 ignore next 2 */\r\n        continue\r\n      }\r\n      if (name === 'parent' || name === 'proxyCache') continue\r\n      let value = this[name];\r\n\r\n      if (Array.isArray(value)) {\r\n        fixed[name] = value.map(i => {\r\n          if (typeof i === 'object' && i.toJSON) {\r\n            return i.toJSON(null, inputs)\r\n          } else {\r\n            return i\r\n          }\r\n        });\r\n      } else if (typeof value === 'object' && value.toJSON) {\r\n        fixed[name] = value.toJSON(null, inputs);\r\n      } else if (name === 'source') {\r\n        let inputId = inputs.get(value.input);\r\n        if (inputId == null) {\r\n          inputId = inputsNextIndex;\r\n          inputs.set(value.input, inputsNextIndex);\r\n          inputsNextIndex++;\r\n        }\r\n        fixed[name] = {\r\n          inputId,\r\n          start: value.start,\r\n          end: value.end\r\n        };\r\n      } else {\r\n        fixed[name] = value;\r\n      }\r\n    }\r\n\r\n    if (emitInputs) {\r\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON());\r\n    }\r\n\r\n    return fixed\r\n  }\r\n\r\n  positionInside(index) {\r\n    let string = this.toString();\r\n    let column = this.source.start.column;\r\n    let line = this.source.start.line;\r\n\r\n    for (let i = 0; i < index; i++) {\r\n      if (string[i] === '\\n') {\r\n        column = 1;\r\n        line += 1;\r\n      } else {\r\n        column += 1;\r\n      }\r\n    }\r\n\r\n    return { line, column }\r\n  }\r\n\r\n  positionBy(opts) {\r\n    let pos = this.source.start;\r\n    if (opts.index) {\r\n      pos = this.positionInside(opts.index);\r\n    } else if (opts.word) {\r\n      let index = this.toString().indexOf(opts.word);\r\n      if (index !== -1) pos = this.positionInside(index);\r\n    }\r\n    return pos\r\n  }\r\n\r\n  rangeBy(opts) {\r\n    let start = {\r\n      line: this.source.start.line,\r\n      column: this.source.start.column\r\n    };\r\n    let end = this.source.end\r\n      ? {\r\n          line: this.source.end.line,\r\n          column: this.source.end.column + 1\r\n        }\r\n      : {\r\n          line: start.line,\r\n          column: start.column + 1\r\n        };\r\n\r\n    if (opts.word) {\r\n      let index = this.toString().indexOf(opts.word);\r\n      if (index !== -1) {\r\n        start = this.positionInside(index);\r\n        end = this.positionInside(index + opts.word.length);\r\n      }\r\n    } else {\r\n      if (opts.start) {\r\n        start = {\r\n          line: opts.start.line,\r\n          column: opts.start.column\r\n        };\r\n      } else if (opts.index) {\r\n        start = this.positionInside(opts.index);\r\n      }\r\n\r\n      if (opts.end) {\r\n        end = {\r\n          line: opts.end.line,\r\n          column: opts.end.column\r\n        };\r\n      } else if (opts.endIndex) {\r\n        end = this.positionInside(opts.endIndex);\r\n      } else if (opts.index) {\r\n        end = this.positionInside(opts.index + 1);\r\n      }\r\n    }\r\n\r\n    if (\r\n      end.line < start.line ||\r\n      (end.line === start.line && end.column <= start.column)\r\n    ) {\r\n      end = { line: start.line, column: start.column + 1 };\r\n    }\r\n\r\n    return { start, end }\r\n  }\r\n\r\n  getProxyProcessor() {\r\n    return {\r\n      set(node, prop, value) {\r\n        if (node[prop] === value) return true\r\n        node[prop] = value;\r\n        if (\r\n          prop === 'prop' ||\r\n          prop === 'value' ||\r\n          prop === 'name' ||\r\n          prop === 'params' ||\r\n          prop === 'important' ||\r\n          /* c8 ignore next */\r\n          prop === 'text'\r\n        ) {\r\n          node.markDirty();\r\n        }\r\n        return true\r\n      },\r\n\r\n      get(node, prop) {\r\n        if (prop === 'proxyOf') {\r\n          return node\r\n        } else if (prop === 'root') {\r\n          return () => node.root().toProxy()\r\n        } else {\r\n          return node[prop]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toProxy() {\r\n    if (!this.proxyCache) {\r\n      this.proxyCache = new Proxy(this, this.getProxyProcessor());\r\n    }\r\n    return this.proxyCache\r\n  }\r\n\r\n  addToError(error) {\r\n    error.postcssNode = this;\r\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\r\n      let s = this.source;\r\n      error.stack = error.stack.replace(\r\n        /\\n\\s{4}at /,\r\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\r\n      );\r\n    }\r\n    return error\r\n  }\r\n\r\n  markDirty() {\r\n    if (this[isClean$2]) {\r\n      this[isClean$2] = false;\r\n      let next = this;\r\n      while ((next = next.parent)) {\r\n        next[isClean$2] = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  get proxyOf() {\r\n    return this\r\n  }\r\n};\r\n\r\nvar node$2 = Node$4;\r\nNode$4.default = Node$4;\r\n\r\nlet Node$3 = node$2;\r\n\r\nlet Declaration$4 = class Declaration extends Node$3 {\r\n  constructor(defaults) {\r\n    if (\r\n      defaults &&\r\n      typeof defaults.value !== 'undefined' &&\r\n      typeof defaults.value !== 'string'\r\n    ) {\r\n      defaults = { ...defaults, value: String(defaults.value) };\r\n    }\r\n    super(defaults);\r\n    this.type = 'decl';\r\n  }\r\n\r\n  get variable() {\r\n    return this.prop.startsWith('--') || this.prop[0] === '$'\r\n  }\r\n};\r\n\r\nvar declaration = Declaration$4;\r\nDeclaration$4.default = Declaration$4;\r\n\r\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_url$1);\r\n\r\nlet urlAlphabet =\r\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\r\nlet customAlphabet = (alphabet, defaultSize = 21) => {\r\n  return (size = defaultSize) => {\r\n    let id = '';\r\n    let i = size;\r\n    while (i--) {\r\n      id += alphabet[(Math.random() * alphabet.length) | 0];\r\n    }\r\n    return id\r\n  }\r\n};\r\nlet nanoid$1 = (size = 21) => {\r\n  let id = '';\r\n  let i = size;\r\n  while (i--) {\r\n    id += urlAlphabet[(Math.random() * 64) | 0];\r\n  }\r\n  return id\r\n};\r\nvar nonSecure = { nanoid: nanoid$1, customAlphabet };\r\n\r\nlet { SourceMapConsumer: SourceMapConsumer$4, SourceMapGenerator: SourceMapGenerator$5 } = sourceMap$2;\r\nlet { existsSync, readFileSync } = require$$0$2;\r\nlet { dirname: dirname$1, join } = require$$2$1;\r\n\r\nfunction fromBase64(str) {\r\n  if (Buffer$1) {\r\n    return Buffer$1.from(str, 'base64').toString()\r\n  } else {\r\n    /* c8 ignore next 2 */\r\n    return window.atob(str)\r\n  }\r\n}\r\n\r\nlet PreviousMap$2 = class PreviousMap {\r\n  constructor(css, opts) {\r\n    if (opts.map === false) return\r\n    this.loadAnnotation(css);\r\n    this.inline = this.startWith(this.annotation, 'data:');\r\n\r\n    let prev = opts.map ? opts.map.prev : undefined;\r\n    let text = this.loadMap(opts.from, prev);\r\n    if (!this.mapFile && opts.from) {\r\n      this.mapFile = opts.from;\r\n    }\r\n    if (this.mapFile) this.root = dirname$1(this.mapFile);\r\n    if (text) this.text = text;\r\n  }\r\n\r\n  consumer() {\r\n    if (!this.consumerCache) {\r\n      this.consumerCache = new SourceMapConsumer$4(this.text);\r\n    }\r\n    return this.consumerCache\r\n  }\r\n\r\n  withContent() {\r\n    return !!(\r\n      this.consumer().sourcesContent &&\r\n      this.consumer().sourcesContent.length > 0\r\n    )\r\n  }\r\n\r\n  startWith(string, start) {\r\n    if (!string) return false\r\n    return string.substr(0, start.length) === start\r\n  }\r\n\r\n  getAnnotationURL(sourceMapString) {\r\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\r\n  }\r\n\r\n  loadAnnotation(css) {\r\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm);\r\n    if (!comments) return\r\n\r\n    // sourceMappingURLs from comments, strings, etc.\r\n    let start = css.lastIndexOf(comments.pop());\r\n    let end = css.indexOf('*/', start);\r\n\r\n    if (start > -1 && end > -1) {\r\n      // Locate the last sourceMappingURL to avoid pickin\r\n      this.annotation = this.getAnnotationURL(css.substring(start, end));\r\n    }\r\n  }\r\n\r\n  decodeInline(text) {\r\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\r\n    let baseUri = /^data:application\\/json;base64,/;\r\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\r\n    let uri = /^data:application\\/json,/;\r\n\r\n    if (charsetUri.test(text) || uri.test(text)) {\r\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\r\n    }\r\n\r\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\r\n      return fromBase64(text.substr(RegExp.lastMatch.length))\r\n    }\r\n\r\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\r\n    throw new Error('Unsupported source map encoding ' + encoding)\r\n  }\r\n\r\n  loadFile(path) {\r\n    this.root = dirname$1(path);\r\n    if (existsSync(path)) {\r\n      this.mapFile = path;\r\n      return readFileSync(path, 'utf-8').toString().trim()\r\n    }\r\n  }\r\n\r\n  loadMap(file, prev) {\r\n    if (prev === false) return false\r\n\r\n    if (prev) {\r\n      if (typeof prev === 'string') {\r\n        return prev\r\n      } else if (typeof prev === 'function') {\r\n        let prevPath = prev(file);\r\n        if (prevPath) {\r\n          let map = this.loadFile(prevPath);\r\n          if (!map) {\r\n            throw new Error(\r\n              'Unable to load previous source map: ' + prevPath.toString()\r\n            )\r\n          }\r\n          return map\r\n        }\r\n      } else if (prev instanceof SourceMapConsumer$4) {\r\n        return SourceMapGenerator$5.fromSourceMap(prev).toString()\r\n      } else if (prev instanceof SourceMapGenerator$5) {\r\n        return prev.toString()\r\n      } else if (this.isMap(prev)) {\r\n        return JSON.stringify(prev)\r\n      } else {\r\n        throw new Error(\r\n          'Unsupported previous source map format: ' + prev.toString()\r\n        )\r\n      }\r\n    } else if (this.inline) {\r\n      return this.decodeInline(this.annotation)\r\n    } else if (this.annotation) {\r\n      let map = this.annotation;\r\n      if (file) map = join(dirname$1(file), map);\r\n      return this.loadFile(map)\r\n    }\r\n  }\r\n\r\n  isMap(map) {\r\n    if (typeof map !== 'object') return false\r\n    return (\r\n      typeof map.mappings === 'string' ||\r\n      typeof map._mappings === 'string' ||\r\n      Array.isArray(map.sections)\r\n    )\r\n  }\r\n};\r\n\r\nvar previousMap = PreviousMap$2;\r\nPreviousMap$2.default = PreviousMap$2;\r\n\r\nlet { SourceMapConsumer: SourceMapConsumer$3, SourceMapGenerator: SourceMapGenerator$4 } = sourceMap$2;\r\nlet { fileURLToPath, pathToFileURL: pathToFileURL$1 } = require$$2;\r\nlet { resolve: resolve$1, isAbsolute } = require$$2$1;\r\nlet { nanoid } = nonSecure;\r\n\r\nlet terminalHighlight = terminalHighlight_1;\r\nlet CssSyntaxError$1 = cssSyntaxError;\r\nlet PreviousMap$1 = previousMap;\r\n\r\nlet fromOffsetCache = Symbol('fromOffsetCache');\r\n\r\nlet sourceMapAvailable$1 = Boolean(SourceMapConsumer$3 && SourceMapGenerator$4);\r\nlet pathAvailable$1 = Boolean(resolve$1 && isAbsolute);\r\n\r\nlet Input$4 = class Input {\r\n  constructor(css, opts = {}) {\r\n    if (\r\n      css === null ||\r\n      typeof css === 'undefined' ||\r\n      (typeof css === 'object' && !css.toString)\r\n    ) {\r\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\r\n    }\r\n\r\n    this.css = css.toString();\r\n\r\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\r\n      this.hasBOM = true;\r\n      this.css = this.css.slice(1);\r\n    } else {\r\n      this.hasBOM = false;\r\n    }\r\n\r\n    if (opts.from) {\r\n      if (\r\n        !pathAvailable$1 ||\r\n        /^\\w+:\\/\\//.test(opts.from) ||\r\n        isAbsolute(opts.from)\r\n      ) {\r\n        this.file = opts.from;\r\n      } else {\r\n        this.file = resolve$1(opts.from);\r\n      }\r\n    }\r\n\r\n    if (pathAvailable$1 && sourceMapAvailable$1) {\r\n      let map = new PreviousMap$1(this.css, opts);\r\n      if (map.text) {\r\n        this.map = map;\r\n        let file = map.consumer().file;\r\n        if (!this.file && file) this.file = this.mapResolve(file);\r\n      }\r\n    }\r\n\r\n    if (!this.file) {\r\n      this.id = '<input css ' + nanoid(6) + '>';\r\n    }\r\n    if (this.map) this.map.file = this.from;\r\n  }\r\n\r\n  fromOffset(offset) {\r\n    let lastLine, lineToIndex;\r\n    if (!this[fromOffsetCache]) {\r\n      let lines = this.css.split('\\n');\r\n      lineToIndex = new Array(lines.length);\r\n      let prevIndex = 0;\r\n\r\n      for (let i = 0, l = lines.length; i < l; i++) {\r\n        lineToIndex[i] = prevIndex;\r\n        prevIndex += lines[i].length + 1;\r\n      }\r\n\r\n      this[fromOffsetCache] = lineToIndex;\r\n    } else {\r\n      lineToIndex = this[fromOffsetCache];\r\n    }\r\n    lastLine = lineToIndex[lineToIndex.length - 1];\r\n\r\n    let min = 0;\r\n    if (offset >= lastLine) {\r\n      min = lineToIndex.length - 1;\r\n    } else {\r\n      let max = lineToIndex.length - 2;\r\n      let mid;\r\n      while (min < max) {\r\n        mid = min + ((max - min) >> 1);\r\n        if (offset < lineToIndex[mid]) {\r\n          max = mid - 1;\r\n        } else if (offset >= lineToIndex[mid + 1]) {\r\n          min = mid + 1;\r\n        } else {\r\n          min = mid;\r\n          break\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      line: min + 1,\r\n      col: offset - lineToIndex[min] + 1\r\n    }\r\n  }\r\n\r\n  error(message, line, column, opts = {}) {\r\n    let result, endLine, endColumn;\r\n\r\n    if (line && typeof line === 'object') {\r\n      let start = line;\r\n      let end = column;\r\n      if (typeof start.offset === 'number') {\r\n        let pos = this.fromOffset(start.offset);\r\n        line = pos.line;\r\n        column = pos.col;\r\n      } else {\r\n        line = start.line;\r\n        column = start.column;\r\n      }\r\n      if (typeof end.offset === 'number') {\r\n        let pos = this.fromOffset(end.offset);\r\n        endLine = pos.line;\r\n        endColumn = pos.col;\r\n      } else {\r\n        endLine = end.line;\r\n        endColumn = end.column;\r\n      }\r\n    } else if (!column) {\r\n      let pos = this.fromOffset(line);\r\n      line = pos.line;\r\n      column = pos.col;\r\n    }\r\n\r\n    let origin = this.origin(line, column, endLine, endColumn);\r\n    if (origin) {\r\n      result = new CssSyntaxError$1(\r\n        message,\r\n        origin.endLine === undefined\r\n          ? origin.line\r\n          : { line: origin.line, column: origin.column },\r\n        origin.endLine === undefined\r\n          ? origin.column\r\n          : { line: origin.endLine, column: origin.endColumn },\r\n        origin.source,\r\n        origin.file,\r\n        opts.plugin\r\n      );\r\n    } else {\r\n      result = new CssSyntaxError$1(\r\n        message,\r\n        endLine === undefined ? line : { line, column },\r\n        endLine === undefined ? column : { line: endLine, column: endColumn },\r\n        this.css,\r\n        this.file,\r\n        opts.plugin\r\n      );\r\n    }\r\n\r\n    result.input = { line, column, endLine, endColumn, source: this.css };\r\n    if (this.file) {\r\n      if (pathToFileURL$1) {\r\n        result.input.url = pathToFileURL$1(this.file).toString();\r\n      }\r\n      result.input.file = this.file;\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  origin(line, column, endLine, endColumn) {\r\n    if (!this.map) return false\r\n    let consumer = this.map.consumer();\r\n\r\n    let from = consumer.originalPositionFor({ line, column });\r\n    if (!from.source) return false\r\n\r\n    let to;\r\n    if (typeof endLine === 'number') {\r\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn });\r\n    }\r\n\r\n    let fromUrl;\r\n\r\n    if (isAbsolute(from.source)) {\r\n      fromUrl = pathToFileURL$1(from.source);\r\n    } else {\r\n      fromUrl = new URL(\r\n        from.source,\r\n        this.map.consumer().sourceRoot || pathToFileURL$1(this.map.mapFile)\r\n      );\r\n    }\r\n\r\n    let result = {\r\n      url: fromUrl.toString(),\r\n      line: from.line,\r\n      column: from.column,\r\n      endLine: to && to.line,\r\n      endColumn: to && to.column\r\n    };\r\n\r\n    if (fromUrl.protocol === 'file:') {\r\n      if (fileURLToPath) {\r\n        result.file = fileURLToPath(fromUrl);\r\n      } else {\r\n        /* c8 ignore next 2 */\r\n        throw new Error(`file: protocol is not available in this PostCSS build`)\r\n      }\r\n    }\r\n\r\n    let source = consumer.sourceContentFor(from.source);\r\n    if (source) result.source = source;\r\n\r\n    return result\r\n  }\r\n\r\n  mapResolve(file) {\r\n    if (/^\\w+:\\/\\//.test(file)) {\r\n      return file\r\n    }\r\n    return resolve$1(this.map.consumer().sourceRoot || this.map.root || '.', file)\r\n  }\r\n\r\n  get from() {\r\n    return this.file || this.id\r\n  }\r\n\r\n  toJSON() {\r\n    let json = {};\r\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\r\n      if (this[name] != null) {\r\n        json[name] = this[name];\r\n      }\r\n    }\r\n    if (this.map) {\r\n      json.map = { ...this.map };\r\n      if (json.map.consumerCache) {\r\n        json.map.consumerCache = undefined;\r\n      }\r\n    }\r\n    return json\r\n  }\r\n};\r\n\r\nvar input = Input$4;\r\nInput$4.default = Input$4;\r\n\r\nif (terminalHighlight && terminalHighlight.registerInput) {\r\n  terminalHighlight.registerInput(Input$4);\r\n}\r\n\r\nlet { SourceMapConsumer: SourceMapConsumer$2, SourceMapGenerator: SourceMapGenerator$3 } = sourceMap$2;\r\nlet { dirname, resolve, relative, sep } = require$$2$1;\r\nlet { pathToFileURL } = require$$2;\r\n\r\nlet Input$3 = input;\r\n\r\nlet sourceMapAvailable = Boolean(SourceMapConsumer$2 && SourceMapGenerator$3);\r\nlet pathAvailable = Boolean(dirname && resolve && relative && sep);\r\n\r\nlet MapGenerator$2 = class MapGenerator {\r\n  constructor(stringify, root, opts, cssString) {\r\n    this.stringify = stringify;\r\n    this.mapOpts = opts.map || {};\r\n    this.root = root;\r\n    this.opts = opts;\r\n    this.css = cssString;\r\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\r\n  }\r\n\r\n  isMap() {\r\n    if (typeof this.opts.map !== 'undefined') {\r\n      return !!this.opts.map\r\n    }\r\n    return this.previous().length > 0\r\n  }\r\n\r\n  previous() {\r\n    if (!this.previousMaps) {\r\n      this.previousMaps = [];\r\n      if (this.root) {\r\n        this.root.walk(node => {\r\n          if (node.source && node.source.input.map) {\r\n            let map = node.source.input.map;\r\n            if (!this.previousMaps.includes(map)) {\r\n              this.previousMaps.push(map);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        let input = new Input$3(this.css, this.opts);\r\n        if (input.map) this.previousMaps.push(input.map);\r\n      }\r\n    }\r\n\r\n    return this.previousMaps\r\n  }\r\n\r\n  isInline() {\r\n    if (typeof this.mapOpts.inline !== 'undefined') {\r\n      return this.mapOpts.inline\r\n    }\r\n\r\n    let annotation = this.mapOpts.annotation;\r\n    if (typeof annotation !== 'undefined' && annotation !== true) {\r\n      return false\r\n    }\r\n\r\n    if (this.previous().length) {\r\n      return this.previous().some(i => i.inline)\r\n    }\r\n    return true\r\n  }\r\n\r\n  isSourcesContent() {\r\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\r\n      return this.mapOpts.sourcesContent\r\n    }\r\n    if (this.previous().length) {\r\n      return this.previous().some(i => i.withContent())\r\n    }\r\n    return true\r\n  }\r\n\r\n  clearAnnotation() {\r\n    if (this.mapOpts.annotation === false) return\r\n\r\n    if (this.root) {\r\n      let node;\r\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\r\n        node = this.root.nodes[i];\r\n        if (node.type !== 'comment') continue\r\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\r\n          this.root.removeChild(i);\r\n        }\r\n      }\r\n    } else if (this.css) {\r\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\r\n    }\r\n  }\r\n\r\n  setSourcesContent() {\r\n    let already = {};\r\n    if (this.root) {\r\n      this.root.walk(node => {\r\n        if (node.source) {\r\n          let from = node.source.input.from;\r\n          if (from && !already[from]) {\r\n            already[from] = true;\r\n            let fromUrl = this.usesFileUrls\r\n              ? this.toFileUrl(from)\r\n              : this.toUrl(this.path(from));\r\n            this.map.setSourceContent(fromUrl, node.source.input.css);\r\n          }\r\n        }\r\n      });\r\n    } else if (this.css) {\r\n      let from = this.opts.from\r\n        ? this.toUrl(this.path(this.opts.from))\r\n        : '<no source>';\r\n      this.map.setSourceContent(from, this.css);\r\n    }\r\n  }\r\n\r\n  applyPrevMaps() {\r\n    for (let prev of this.previous()) {\r\n      let from = this.toUrl(this.path(prev.file));\r\n      let root = prev.root || dirname(prev.file);\r\n      let map;\r\n\r\n      if (this.mapOpts.sourcesContent === false) {\r\n        map = new SourceMapConsumer$2(prev.text);\r\n        if (map.sourcesContent) {\r\n          map.sourcesContent = map.sourcesContent.map(() => null);\r\n        }\r\n      } else {\r\n        map = prev.consumer();\r\n      }\r\n\r\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\r\n    }\r\n  }\r\n\r\n  isAnnotation() {\r\n    if (this.isInline()) {\r\n      return true\r\n    }\r\n    if (typeof this.mapOpts.annotation !== 'undefined') {\r\n      return this.mapOpts.annotation\r\n    }\r\n    if (this.previous().length) {\r\n      return this.previous().some(i => i.annotation)\r\n    }\r\n    return true\r\n  }\r\n\r\n  toBase64(str) {\r\n    if (Buffer$1) {\r\n      return Buffer$1.from(str).toString('base64')\r\n    } else {\r\n      return window.btoa(unescape(encodeURIComponent(str)))\r\n    }\r\n  }\r\n\r\n  addAnnotation() {\r\n    let content;\r\n\r\n    if (this.isInline()) {\r\n      content =\r\n        'data:application/json;base64,' + this.toBase64(this.map.toString());\r\n    } else if (typeof this.mapOpts.annotation === 'string') {\r\n      content = this.mapOpts.annotation;\r\n    } else if (typeof this.mapOpts.annotation === 'function') {\r\n      content = this.mapOpts.annotation(this.opts.to, this.root);\r\n    } else {\r\n      content = this.outputFile() + '.map';\r\n    }\r\n    let eol = '\\n';\r\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n';\r\n\r\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\r\n  }\r\n\r\n  outputFile() {\r\n    if (this.opts.to) {\r\n      return this.path(this.opts.to)\r\n    } else if (this.opts.from) {\r\n      return this.path(this.opts.from)\r\n    } else {\r\n      return 'to.css'\r\n    }\r\n  }\r\n\r\n  generateMap() {\r\n    if (this.root) {\r\n      this.generateString();\r\n    } else if (this.previous().length === 1) {\r\n      let prev = this.previous()[0].consumer();\r\n      prev.file = this.outputFile();\r\n      this.map = SourceMapGenerator$3.fromSourceMap(prev);\r\n    } else {\r\n      this.map = new SourceMapGenerator$3({ file: this.outputFile() });\r\n      this.map.addMapping({\r\n        source: this.opts.from\r\n          ? this.toUrl(this.path(this.opts.from))\r\n          : '<no source>',\r\n        generated: { line: 1, column: 0 },\r\n        original: { line: 1, column: 0 }\r\n      });\r\n    }\r\n\r\n    if (this.isSourcesContent()) this.setSourcesContent();\r\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\r\n    if (this.isAnnotation()) this.addAnnotation();\r\n\r\n    if (this.isInline()) {\r\n      return [this.css]\r\n    } else {\r\n      return [this.css, this.map]\r\n    }\r\n  }\r\n\r\n  path(file) {\r\n    if (file.indexOf('<') === 0) return file\r\n    if (/^\\w+:\\/\\//.test(file)) return file\r\n    if (this.mapOpts.absolute) return file\r\n\r\n    let from = this.opts.to ? dirname(this.opts.to) : '.';\r\n\r\n    if (typeof this.mapOpts.annotation === 'string') {\r\n      from = dirname(resolve(from, this.mapOpts.annotation));\r\n    }\r\n\r\n    file = relative(from, file);\r\n    return file\r\n  }\r\n\r\n  toUrl(path) {\r\n    if (sep === '\\\\') {\r\n      path = path.replace(/\\\\/g, '/');\r\n    }\r\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\r\n  }\r\n\r\n  toFileUrl(path) {\r\n    if (pathToFileURL) {\r\n      return pathToFileURL(path).toString()\r\n    } else {\r\n      throw new Error(\r\n        '`map.absolute` option is not available in this PostCSS build'\r\n      )\r\n    }\r\n  }\r\n\r\n  sourcePath(node) {\r\n    if (this.mapOpts.from) {\r\n      return this.toUrl(this.mapOpts.from)\r\n    } else if (this.usesFileUrls) {\r\n      return this.toFileUrl(node.source.input.from)\r\n    } else {\r\n      return this.toUrl(this.path(node.source.input.from))\r\n    }\r\n  }\r\n\r\n  generateString() {\r\n    this.css = '';\r\n    this.map = new SourceMapGenerator$3({ file: this.outputFile() });\r\n\r\n    let line = 1;\r\n    let column = 1;\r\n\r\n    let noSource = '<no source>';\r\n    let mapping = {\r\n      source: '',\r\n      generated: { line: 0, column: 0 },\r\n      original: { line: 0, column: 0 }\r\n    };\r\n\r\n    let lines, last;\r\n    this.stringify(this.root, (str, node, type) => {\r\n      this.css += str;\r\n\r\n      if (node && type !== 'end') {\r\n        mapping.generated.line = line;\r\n        mapping.generated.column = column - 1;\r\n        if (node.source && node.source.start) {\r\n          mapping.source = this.sourcePath(node);\r\n          mapping.original.line = node.source.start.line;\r\n          mapping.original.column = node.source.start.column - 1;\r\n          this.map.addMapping(mapping);\r\n        } else {\r\n          mapping.source = noSource;\r\n          mapping.original.line = 1;\r\n          mapping.original.column = 0;\r\n          this.map.addMapping(mapping);\r\n        }\r\n      }\r\n\r\n      lines = str.match(/\\n/g);\r\n      if (lines) {\r\n        line += lines.length;\r\n        last = str.lastIndexOf('\\n');\r\n        column = str.length - last;\r\n      } else {\r\n        column += str.length;\r\n      }\r\n\r\n      if (node && type !== 'start') {\r\n        let p = node.parent || { raws: {} };\r\n        let childless =\r\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes);\r\n        if (!childless || node !== p.last || p.raws.semicolon) {\r\n          if (node.source && node.source.end) {\r\n            mapping.source = this.sourcePath(node);\r\n            mapping.original.line = node.source.end.line;\r\n            mapping.original.column = node.source.end.column - 1;\r\n            mapping.generated.line = line;\r\n            mapping.generated.column = column - 2;\r\n            this.map.addMapping(mapping);\r\n          } else {\r\n            mapping.source = noSource;\r\n            mapping.original.line = 1;\r\n            mapping.original.column = 0;\r\n            mapping.generated.line = line;\r\n            mapping.generated.column = column - 1;\r\n            this.map.addMapping(mapping);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  generate() {\r\n    this.clearAnnotation();\r\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\r\n      return this.generateMap()\r\n    } else {\r\n      let result = '';\r\n      this.stringify(this.root, i => {\r\n        result += i;\r\n      });\r\n      return [result]\r\n    }\r\n  }\r\n};\r\n\r\nvar mapGenerator = MapGenerator$2;\r\n\r\nlet Node$2 = node$2;\r\n\r\nlet Comment$4 = class Comment extends Node$2 {\r\n  constructor(defaults) {\r\n    super(defaults);\r\n    this.type = 'comment';\r\n  }\r\n};\r\n\r\nvar comment$3 = Comment$4;\r\nComment$4.default = Comment$4;\r\n\r\nlet { isClean: isClean$1, my: my$1 } = symbols;\r\nlet Declaration$3 = declaration;\r\nlet Comment$3 = comment$3;\r\nlet Node$1 = node$2;\r\n\r\nlet parse$4, Rule$4, AtRule$4, Root$6;\r\n\r\nfunction cleanSource(nodes) {\r\n  return nodes.map(i => {\r\n    if (i.nodes) i.nodes = cleanSource(i.nodes);\r\n    delete i.source;\r\n    return i\r\n  })\r\n}\r\n\r\nfunction markDirtyUp(node) {\r\n  node[isClean$1] = false;\r\n  if (node.proxyOf.nodes) {\r\n    for (let i of node.proxyOf.nodes) {\r\n      markDirtyUp(i);\r\n    }\r\n  }\r\n}\r\n\r\nlet Container$7 = class Container extends Node$1 {\r\n  push(child) {\r\n    child.parent = this;\r\n    this.proxyOf.nodes.push(child);\r\n    return this\r\n  }\r\n\r\n  each(callback) {\r\n    if (!this.proxyOf.nodes) return undefined\r\n    let iterator = this.getIterator();\r\n\r\n    let index, result;\r\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\r\n      index = this.indexes[iterator];\r\n      result = callback(this.proxyOf.nodes[index], index);\r\n      if (result === false) break\r\n\r\n      this.indexes[iterator] += 1;\r\n    }\r\n\r\n    delete this.indexes[iterator];\r\n    return result\r\n  }\r\n\r\n  walk(callback) {\r\n    return this.each((child, i) => {\r\n      let result;\r\n      try {\r\n        result = callback(child, i);\r\n      } catch (e) {\r\n        throw child.addToError(e)\r\n      }\r\n      if (result !== false && child.walk) {\r\n        result = child.walk(callback);\r\n      }\r\n\r\n      return result\r\n    })\r\n  }\r\n\r\n  walkDecls(prop, callback) {\r\n    if (!callback) {\r\n      callback = prop;\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'decl') {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    if (prop instanceof RegExp) {\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'decl' && prop.test(child.prop)) {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    return this.walk((child, i) => {\r\n      if (child.type === 'decl' && child.prop === prop) {\r\n        return callback(child, i)\r\n      }\r\n    })\r\n  }\r\n\r\n  walkRules(selector, callback) {\r\n    if (!callback) {\r\n      callback = selector;\r\n\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'rule') {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    if (selector instanceof RegExp) {\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'rule' && selector.test(child.selector)) {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    return this.walk((child, i) => {\r\n      if (child.type === 'rule' && child.selector === selector) {\r\n        return callback(child, i)\r\n      }\r\n    })\r\n  }\r\n\r\n  walkAtRules(name, callback) {\r\n    if (!callback) {\r\n      callback = name;\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'atrule') {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    if (name instanceof RegExp) {\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'atrule' && name.test(child.name)) {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    return this.walk((child, i) => {\r\n      if (child.type === 'atrule' && child.name === name) {\r\n        return callback(child, i)\r\n      }\r\n    })\r\n  }\r\n\r\n  walkComments(callback) {\r\n    return this.walk((child, i) => {\r\n      if (child.type === 'comment') {\r\n        return callback(child, i)\r\n      }\r\n    })\r\n  }\r\n\r\n  append(...children) {\r\n    for (let child of children) {\r\n      let nodes = this.normalize(child, this.last);\r\n      for (let node of nodes) this.proxyOf.nodes.push(node);\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  prepend(...children) {\r\n    children = children.reverse();\r\n    for (let child of children) {\r\n      let nodes = this.normalize(child, this.first, 'prepend').reverse();\r\n      for (let node of nodes) this.proxyOf.nodes.unshift(node);\r\n      for (let id in this.indexes) {\r\n        this.indexes[id] = this.indexes[id] + nodes.length;\r\n      }\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  cleanRaws(keepBetween) {\r\n    super.cleanRaws(keepBetween);\r\n    if (this.nodes) {\r\n      for (let node of this.nodes) node.cleanRaws(keepBetween);\r\n    }\r\n  }\r\n\r\n  insertBefore(exist, add) {\r\n    let existIndex = this.index(exist);\r\n    let type = existIndex === 0 ? 'prepend' : false;\r\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse();\r\n    existIndex = this.index(exist);\r\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node);\r\n\r\n    let index;\r\n    for (let id in this.indexes) {\r\n      index = this.indexes[id];\r\n      if (existIndex <= index) {\r\n        this.indexes[id] = index + nodes.length;\r\n      }\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  insertAfter(exist, add) {\r\n    let existIndex = this.index(exist);\r\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();\r\n    existIndex = this.index(exist);\r\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node);\r\n\r\n    let index;\r\n    for (let id in this.indexes) {\r\n      index = this.indexes[id];\r\n      if (existIndex < index) {\r\n        this.indexes[id] = index + nodes.length;\r\n      }\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  removeChild(child) {\r\n    child = this.index(child);\r\n    this.proxyOf.nodes[child].parent = undefined;\r\n    this.proxyOf.nodes.splice(child, 1);\r\n\r\n    let index;\r\n    for (let id in this.indexes) {\r\n      index = this.indexes[id];\r\n      if (index >= child) {\r\n        this.indexes[id] = index - 1;\r\n      }\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  removeAll() {\r\n    for (let node of this.proxyOf.nodes) node.parent = undefined;\r\n    this.proxyOf.nodes = [];\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  replaceValues(pattern, opts, callback) {\r\n    if (!callback) {\r\n      callback = opts;\r\n      opts = {};\r\n    }\r\n\r\n    this.walkDecls(decl => {\r\n      if (opts.props && !opts.props.includes(decl.prop)) return\r\n      if (opts.fast && !decl.value.includes(opts.fast)) return\r\n\r\n      decl.value = decl.value.replace(pattern, callback);\r\n    });\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  every(condition) {\r\n    return this.nodes.every(condition)\r\n  }\r\n\r\n  some(condition) {\r\n    return this.nodes.some(condition)\r\n  }\r\n\r\n  index(child) {\r\n    if (typeof child === 'number') return child\r\n    if (child.proxyOf) child = child.proxyOf;\r\n    return this.proxyOf.nodes.indexOf(child)\r\n  }\r\n\r\n  get first() {\r\n    if (!this.proxyOf.nodes) return undefined\r\n    return this.proxyOf.nodes[0]\r\n  }\r\n\r\n  get last() {\r\n    if (!this.proxyOf.nodes) return undefined\r\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\r\n  }\r\n\r\n  normalize(nodes, sample) {\r\n    if (typeof nodes === 'string') {\r\n      nodes = cleanSource(parse$4(nodes).nodes);\r\n    } else if (Array.isArray(nodes)) {\r\n      nodes = nodes.slice(0);\r\n      for (let i of nodes) {\r\n        if (i.parent) i.parent.removeChild(i, 'ignore');\r\n      }\r\n    } else if (nodes.type === 'root' && this.type !== 'document') {\r\n      nodes = nodes.nodes.slice(0);\r\n      for (let i of nodes) {\r\n        if (i.parent) i.parent.removeChild(i, 'ignore');\r\n      }\r\n    } else if (nodes.type) {\r\n      nodes = [nodes];\r\n    } else if (nodes.prop) {\r\n      if (typeof nodes.value === 'undefined') {\r\n        throw new Error('Value field is missed in node creation')\r\n      } else if (typeof nodes.value !== 'string') {\r\n        nodes.value = String(nodes.value);\r\n      }\r\n      nodes = [new Declaration$3(nodes)];\r\n    } else if (nodes.selector) {\r\n      nodes = [new Rule$4(nodes)];\r\n    } else if (nodes.name) {\r\n      nodes = [new AtRule$4(nodes)];\r\n    } else if (nodes.text) {\r\n      nodes = [new Comment$3(nodes)];\r\n    } else {\r\n      throw new Error('Unknown node type in node creation')\r\n    }\r\n\r\n    let processed = nodes.map(i => {\r\n      /* c8 ignore next */\r\n      if (!i[my$1]) Container.rebuild(i);\r\n      i = i.proxyOf;\r\n      if (i.parent) i.parent.removeChild(i);\r\n      if (i[isClean$1]) markDirtyUp(i);\r\n      if (typeof i.raws.before === 'undefined') {\r\n        if (sample && typeof sample.raws.before !== 'undefined') {\r\n          i.raws.before = sample.raws.before.replace(/\\S/g, '');\r\n        }\r\n      }\r\n      i.parent = this.proxyOf;\r\n      return i\r\n    });\r\n\r\n    return processed\r\n  }\r\n\r\n  getProxyProcessor() {\r\n    return {\r\n      set(node, prop, value) {\r\n        if (node[prop] === value) return true\r\n        node[prop] = value;\r\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\r\n          node.markDirty();\r\n        }\r\n        return true\r\n      },\r\n\r\n      get(node, prop) {\r\n        if (prop === 'proxyOf') {\r\n          return node\r\n        } else if (!node[prop]) {\r\n          return node[prop]\r\n        } else if (\r\n          prop === 'each' ||\r\n          (typeof prop === 'string' && prop.startsWith('walk'))\r\n        ) {\r\n          return (...args) => {\r\n            return node[prop](\r\n              ...args.map(i => {\r\n                if (typeof i === 'function') {\r\n                  return (child, index) => i(child.toProxy(), index)\r\n                } else {\r\n                  return i\r\n                }\r\n              })\r\n            )\r\n          }\r\n        } else if (prop === 'every' || prop === 'some') {\r\n          return cb => {\r\n            return node[prop]((child, ...other) =>\r\n              cb(child.toProxy(), ...other)\r\n            )\r\n          }\r\n        } else if (prop === 'root') {\r\n          return () => node.root().toProxy()\r\n        } else if (prop === 'nodes') {\r\n          return node.nodes.map(i => i.toProxy())\r\n        } else if (prop === 'first' || prop === 'last') {\r\n          return node[prop].toProxy()\r\n        } else {\r\n          return node[prop]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getIterator() {\r\n    if (!this.lastEach) this.lastEach = 0;\r\n    if (!this.indexes) this.indexes = {};\r\n\r\n    this.lastEach += 1;\r\n    let iterator = this.lastEach;\r\n    this.indexes[iterator] = 0;\r\n\r\n    return iterator\r\n  }\r\n};\r\n\r\nContainer$7.registerParse = dependant => {\r\n  parse$4 = dependant;\r\n};\r\n\r\nContainer$7.registerRule = dependant => {\r\n  Rule$4 = dependant;\r\n};\r\n\r\nContainer$7.registerAtRule = dependant => {\r\n  AtRule$4 = dependant;\r\n};\r\n\r\nContainer$7.registerRoot = dependant => {\r\n  Root$6 = dependant;\r\n};\r\n\r\nvar container$1 = Container$7;\r\nContainer$7.default = Container$7;\r\n\r\n/* c8 ignore start */\r\nContainer$7.rebuild = node => {\r\n  if (node.type === 'atrule') {\r\n    Object.setPrototypeOf(node, AtRule$4.prototype);\r\n  } else if (node.type === 'rule') {\r\n    Object.setPrototypeOf(node, Rule$4.prototype);\r\n  } else if (node.type === 'decl') {\r\n    Object.setPrototypeOf(node, Declaration$3.prototype);\r\n  } else if (node.type === 'comment') {\r\n    Object.setPrototypeOf(node, Comment$3.prototype);\r\n  } else if (node.type === 'root') {\r\n    Object.setPrototypeOf(node, Root$6.prototype);\r\n  }\r\n\r\n  node[my$1] = true;\r\n\r\n  if (node.nodes) {\r\n    node.nodes.forEach(child => {\r\n      Container$7.rebuild(child);\r\n    });\r\n  }\r\n};\r\n\r\nlet Container$6 = container$1;\r\n\r\nlet LazyResult$4, Processor$3;\r\n\r\nlet Document$3 = class Document extends Container$6 {\r\n  constructor(defaults) {\r\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\r\n    super({ type: 'document', ...defaults });\r\n\r\n    if (!this.nodes) {\r\n      this.nodes = [];\r\n    }\r\n  }\r\n\r\n  toResult(opts = {}) {\r\n    let lazy = new LazyResult$4(new Processor$3(), this, opts);\r\n\r\n    return lazy.stringify()\r\n  }\r\n};\r\n\r\nDocument$3.registerLazyResult = dependant => {\r\n  LazyResult$4 = dependant;\r\n};\r\n\r\nDocument$3.registerProcessor = dependant => {\r\n  Processor$3 = dependant;\r\n};\r\n\r\nvar document = Document$3;\r\nDocument$3.default = Document$3;\r\n\r\n/* eslint-disable no-console */\r\n\r\nlet printed = {};\r\n\r\nvar warnOnce$3 = function warnOnce(message) {\r\n  if (printed[message]) return\r\n  printed[message] = true;\r\n\r\n  if (typeof console !== 'undefined' && console.warn) {\r\n    console.warn(message);\r\n  }\r\n};\r\n\r\nlet Warning$2 = class Warning {\r\n  constructor(text, opts = {}) {\r\n    this.type = 'warning';\r\n    this.text = text;\r\n\r\n    if (opts.node && opts.node.source) {\r\n      let range = opts.node.rangeBy(opts);\r\n      this.line = range.start.line;\r\n      this.column = range.start.column;\r\n      this.endLine = range.end.line;\r\n      this.endColumn = range.end.column;\r\n    }\r\n\r\n    for (let opt in opts) this[opt] = opts[opt];\r\n  }\r\n\r\n  toString() {\r\n    if (this.node) {\r\n      return this.node.error(this.text, {\r\n        plugin: this.plugin,\r\n        index: this.index,\r\n        word: this.word\r\n      }).message\r\n    }\r\n\r\n    if (this.plugin) {\r\n      return this.plugin + ': ' + this.text\r\n    }\r\n\r\n    return this.text\r\n  }\r\n};\r\n\r\nvar warning = Warning$2;\r\nWarning$2.default = Warning$2;\r\n\r\nlet Warning$1 = warning;\r\n\r\nlet Result$3 = class Result {\r\n  constructor(processor, root, opts) {\r\n    this.processor = processor;\r\n    this.messages = [];\r\n    this.root = root;\r\n    this.opts = opts;\r\n    this.css = undefined;\r\n    this.map = undefined;\r\n  }\r\n\r\n  toString() {\r\n    return this.css\r\n  }\r\n\r\n  warn(text, opts = {}) {\r\n    if (!opts.plugin) {\r\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\r\n        opts.plugin = this.lastPlugin.postcssPlugin;\r\n      }\r\n    }\r\n\r\n    let warning = new Warning$1(text, opts);\r\n    this.messages.push(warning);\r\n\r\n    return warning\r\n  }\r\n\r\n  warnings() {\r\n    return this.messages.filter(i => i.type === 'warning')\r\n  }\r\n\r\n  get content() {\r\n    return this.css\r\n  }\r\n};\r\n\r\nvar result = Result$3;\r\nResult$3.default = Result$3;\r\n\r\nlet Container$5 = container$1;\r\n\r\nlet AtRule$3 = class AtRule extends Container$5 {\r\n  constructor(defaults) {\r\n    super(defaults);\r\n    this.type = 'atrule';\r\n  }\r\n\r\n  append(...children) {\r\n    if (!this.proxyOf.nodes) this.nodes = [];\r\n    return super.append(...children)\r\n  }\r\n\r\n  prepend(...children) {\r\n    if (!this.proxyOf.nodes) this.nodes = [];\r\n    return super.prepend(...children)\r\n  }\r\n};\r\n\r\nvar atRule = AtRule$3;\r\nAtRule$3.default = AtRule$3;\r\n\r\nContainer$5.registerAtRule(AtRule$3);\r\n\r\nlet Container$4 = container$1;\r\n\r\nlet LazyResult$3, Processor$2;\r\n\r\nlet Root$5 = class Root extends Container$4 {\r\n  constructor(defaults) {\r\n    super(defaults);\r\n    this.type = 'root';\r\n    if (!this.nodes) this.nodes = [];\r\n  }\r\n\r\n  removeChild(child, ignore) {\r\n    let index = this.index(child);\r\n\r\n    if (!ignore && index === 0 && this.nodes.length > 1) {\r\n      this.nodes[1].raws.before = this.nodes[index].raws.before;\r\n    }\r\n\r\n    return super.removeChild(child)\r\n  }\r\n\r\n  normalize(child, sample, type) {\r\n    let nodes = super.normalize(child);\r\n\r\n    if (sample) {\r\n      if (type === 'prepend') {\r\n        if (this.nodes.length > 1) {\r\n          sample.raws.before = this.nodes[1].raws.before;\r\n        } else {\r\n          delete sample.raws.before;\r\n        }\r\n      } else if (this.first !== sample) {\r\n        for (let node of nodes) {\r\n          node.raws.before = sample.raws.before;\r\n        }\r\n      }\r\n    }\r\n\r\n    return nodes\r\n  }\r\n\r\n  toResult(opts = {}) {\r\n    let lazy = new LazyResult$3(new Processor$2(), this, opts);\r\n    return lazy.stringify()\r\n  }\r\n};\r\n\r\nRoot$5.registerLazyResult = dependant => {\r\n  LazyResult$3 = dependant;\r\n};\r\n\r\nRoot$5.registerProcessor = dependant => {\r\n  Processor$2 = dependant;\r\n};\r\n\r\nvar root$2 = Root$5;\r\nRoot$5.default = Root$5;\r\n\r\nContainer$4.registerRoot(Root$5);\r\n\r\nlet list$2 = {\r\n  split(string, separators, last) {\r\n    let array = [];\r\n    let current = '';\r\n    let split = false;\r\n\r\n    let func = 0;\r\n    let inQuote = false;\r\n    let prevQuote = '';\r\n    let escape = false;\r\n\r\n    for (let letter of string) {\r\n      if (escape) {\r\n        escape = false;\r\n      } else if (letter === '\\\\') {\r\n        escape = true;\r\n      } else if (inQuote) {\r\n        if (letter === prevQuote) {\r\n          inQuote = false;\r\n        }\r\n      } else if (letter === '\"' || letter === \"'\") {\r\n        inQuote = true;\r\n        prevQuote = letter;\r\n      } else if (letter === '(') {\r\n        func += 1;\r\n      } else if (letter === ')') {\r\n        if (func > 0) func -= 1;\r\n      } else if (func === 0) {\r\n        if (separators.includes(letter)) split = true;\r\n      }\r\n\r\n      if (split) {\r\n        if (current !== '') array.push(current.trim());\r\n        current = '';\r\n        split = false;\r\n      } else {\r\n        current += letter;\r\n      }\r\n    }\r\n\r\n    if (last || current !== '') array.push(current.trim());\r\n    return array\r\n  },\r\n\r\n  space(string) {\r\n    let spaces = [' ', '\\n', '\\t'];\r\n    return list$2.split(string, spaces)\r\n  },\r\n\r\n  comma(string) {\r\n    return list$2.split(string, [','], true)\r\n  }\r\n};\r\n\r\nvar list_1 = list$2;\r\nlist$2.default = list$2;\r\n\r\nlet Container$3 = container$1;\r\nlet list$1 = list_1;\r\n\r\nlet Rule$3 = class Rule extends Container$3 {\r\n  constructor(defaults) {\r\n    super(defaults);\r\n    this.type = 'rule';\r\n    if (!this.nodes) this.nodes = [];\r\n  }\r\n\r\n  get selectors() {\r\n    return list$1.comma(this.selector)\r\n  }\r\n\r\n  set selectors(values) {\r\n    let match = this.selector ? this.selector.match(/,\\s*/) : null;\r\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\r\n    this.selector = values.join(sep);\r\n  }\r\n};\r\n\r\nvar rule = Rule$3;\r\nRule$3.default = Rule$3;\r\n\r\nContainer$3.registerRule(Rule$3);\r\n\r\nlet Declaration$2 = declaration;\r\nlet tokenizer = tokenize$1;\r\nlet Comment$2 = comment$3;\r\nlet AtRule$2 = atRule;\r\nlet Root$4 = root$2;\r\nlet Rule$2 = rule;\r\n\r\nconst SAFE_COMMENT_NEIGHBOR = {\r\n  empty: true,\r\n  space: true\r\n};\r\n\r\nfunction findLastWithPosition(tokens) {\r\n  for (let i = tokens.length - 1; i >= 0; i--) {\r\n    let token = tokens[i];\r\n    let pos = token[3] || token[2];\r\n    if (pos) return pos\r\n  }\r\n}\r\n\r\nlet Parser$1 = class Parser {\r\n  constructor(input) {\r\n    this.input = input;\r\n\r\n    this.root = new Root$4();\r\n    this.current = this.root;\r\n    this.spaces = '';\r\n    this.semicolon = false;\r\n    this.customProperty = false;\r\n\r\n    this.createTokenizer();\r\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } };\r\n  }\r\n\r\n  createTokenizer() {\r\n    this.tokenizer = tokenizer(this.input);\r\n  }\r\n\r\n  parse() {\r\n    let token;\r\n    while (!this.tokenizer.endOfFile()) {\r\n      token = this.tokenizer.nextToken();\r\n\r\n      switch (token[0]) {\r\n        case 'space':\r\n          this.spaces += token[1];\r\n          break\r\n\r\n        case ';':\r\n          this.freeSemicolon(token);\r\n          break\r\n\r\n        case '}':\r\n          this.end(token);\r\n          break\r\n\r\n        case 'comment':\r\n          this.comment(token);\r\n          break\r\n\r\n        case 'at-word':\r\n          this.atrule(token);\r\n          break\r\n\r\n        case '{':\r\n          this.emptyRule(token);\r\n          break\r\n\r\n        default:\r\n          this.other(token);\r\n          break\r\n      }\r\n    }\r\n    this.endFile();\r\n  }\r\n\r\n  comment(token) {\r\n    let node = new Comment$2();\r\n    this.init(node, token[2]);\r\n    node.source.end = this.getPosition(token[3] || token[2]);\r\n\r\n    let text = token[1].slice(2, -2);\r\n    if (/^\\s*$/.test(text)) {\r\n      node.text = '';\r\n      node.raws.left = text;\r\n      node.raws.right = '';\r\n    } else {\r\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\r\n      node.text = match[2];\r\n      node.raws.left = match[1];\r\n      node.raws.right = match[3];\r\n    }\r\n  }\r\n\r\n  emptyRule(token) {\r\n    let node = new Rule$2();\r\n    this.init(node, token[2]);\r\n    node.selector = '';\r\n    node.raws.between = '';\r\n    this.current = node;\r\n  }\r\n\r\n  other(start) {\r\n    let end = false;\r\n    let type = null;\r\n    let colon = false;\r\n    let bracket = null;\r\n    let brackets = [];\r\n    let customProperty = start[1].startsWith('--');\r\n\r\n    let tokens = [];\r\n    let token = start;\r\n    while (token) {\r\n      type = token[0];\r\n      tokens.push(token);\r\n\r\n      if (type === '(' || type === '[') {\r\n        if (!bracket) bracket = token;\r\n        brackets.push(type === '(' ? ')' : ']');\r\n      } else if (customProperty && colon && type === '{') {\r\n        if (!bracket) bracket = token;\r\n        brackets.push('}');\r\n      } else if (brackets.length === 0) {\r\n        if (type === ';') {\r\n          if (colon) {\r\n            this.decl(tokens, customProperty);\r\n            return\r\n          } else {\r\n            break\r\n          }\r\n        } else if (type === '{') {\r\n          this.rule(tokens);\r\n          return\r\n        } else if (type === '}') {\r\n          this.tokenizer.back(tokens.pop());\r\n          end = true;\r\n          break\r\n        } else if (type === ':') {\r\n          colon = true;\r\n        }\r\n      } else if (type === brackets[brackets.length - 1]) {\r\n        brackets.pop();\r\n        if (brackets.length === 0) bracket = null;\r\n      }\r\n\r\n      token = this.tokenizer.nextToken();\r\n    }\r\n\r\n    if (this.tokenizer.endOfFile()) end = true;\r\n    if (brackets.length > 0) this.unclosedBracket(bracket);\r\n\r\n    if (end && colon) {\r\n      if (!customProperty) {\r\n        while (tokens.length) {\r\n          token = tokens[tokens.length - 1][0];\r\n          if (token !== 'space' && token !== 'comment') break\r\n          this.tokenizer.back(tokens.pop());\r\n        }\r\n      }\r\n      this.decl(tokens, customProperty);\r\n    } else {\r\n      this.unknownWord(tokens);\r\n    }\r\n  }\r\n\r\n  rule(tokens) {\r\n    tokens.pop();\r\n\r\n    let node = new Rule$2();\r\n    this.init(node, tokens[0][2]);\r\n\r\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens);\r\n    this.raw(node, 'selector', tokens);\r\n    this.current = node;\r\n  }\r\n\r\n  decl(tokens, customProperty) {\r\n    let node = new Declaration$2();\r\n    this.init(node, tokens[0][2]);\r\n\r\n    let last = tokens[tokens.length - 1];\r\n    if (last[0] === ';') {\r\n      this.semicolon = true;\r\n      tokens.pop();\r\n    }\r\n\r\n    node.source.end = this.getPosition(\r\n      last[3] || last[2] || findLastWithPosition(tokens)\r\n    );\r\n\r\n    while (tokens[0][0] !== 'word') {\r\n      if (tokens.length === 1) this.unknownWord(tokens);\r\n      node.raws.before += tokens.shift()[1];\r\n    }\r\n    node.source.start = this.getPosition(tokens[0][2]);\r\n\r\n    node.prop = '';\r\n    while (tokens.length) {\r\n      let type = tokens[0][0];\r\n      if (type === ':' || type === 'space' || type === 'comment') {\r\n        break\r\n      }\r\n      node.prop += tokens.shift()[1];\r\n    }\r\n\r\n    node.raws.between = '';\r\n\r\n    let token;\r\n    while (tokens.length) {\r\n      token = tokens.shift();\r\n\r\n      if (token[0] === ':') {\r\n        node.raws.between += token[1];\r\n        break\r\n      } else {\r\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\r\n          this.unknownWord([token]);\r\n        }\r\n        node.raws.between += token[1];\r\n      }\r\n    }\r\n\r\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\r\n      node.raws.before += node.prop[0];\r\n      node.prop = node.prop.slice(1);\r\n    }\r\n\r\n    let firstSpaces = [];\r\n    let next;\r\n    while (tokens.length) {\r\n      next = tokens[0][0];\r\n      if (next !== 'space' && next !== 'comment') break\r\n      firstSpaces.push(tokens.shift());\r\n    }\r\n\r\n    this.precheckMissedSemicolon(tokens);\r\n\r\n    for (let i = tokens.length - 1; i >= 0; i--) {\r\n      token = tokens[i];\r\n      if (token[1].toLowerCase() === '!important') {\r\n        node.important = true;\r\n        let string = this.stringFrom(tokens, i);\r\n        string = this.spacesFromEnd(tokens) + string;\r\n        if (string !== ' !important') node.raws.important = string;\r\n        break\r\n      } else if (token[1].toLowerCase() === 'important') {\r\n        let cache = tokens.slice(0);\r\n        let str = '';\r\n        for (let j = i; j > 0; j--) {\r\n          let type = cache[j][0];\r\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\r\n            break\r\n          }\r\n          str = cache.pop()[1] + str;\r\n        }\r\n        if (str.trim().indexOf('!') === 0) {\r\n          node.important = true;\r\n          node.raws.important = str;\r\n          tokens = cache;\r\n        }\r\n      }\r\n\r\n      if (token[0] !== 'space' && token[0] !== 'comment') {\r\n        break\r\n      }\r\n    }\r\n\r\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment');\r\n\r\n    if (hasWord) {\r\n      node.raws.between += firstSpaces.map(i => i[1]).join('');\r\n      firstSpaces = [];\r\n    }\r\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty);\r\n\r\n    if (node.value.includes(':') && !customProperty) {\r\n      this.checkMissedSemicolon(tokens);\r\n    }\r\n  }\r\n\r\n  atrule(token) {\r\n    let node = new AtRule$2();\r\n    node.name = token[1].slice(1);\r\n    if (node.name === '') {\r\n      this.unnamedAtrule(node, token);\r\n    }\r\n    this.init(node, token[2]);\r\n\r\n    let type;\r\n    let prev;\r\n    let shift;\r\n    let last = false;\r\n    let open = false;\r\n    let params = [];\r\n    let brackets = [];\r\n\r\n    while (!this.tokenizer.endOfFile()) {\r\n      token = this.tokenizer.nextToken();\r\n      type = token[0];\r\n\r\n      if (type === '(' || type === '[') {\r\n        brackets.push(type === '(' ? ')' : ']');\r\n      } else if (type === '{' && brackets.length > 0) {\r\n        brackets.push('}');\r\n      } else if (type === brackets[brackets.length - 1]) {\r\n        brackets.pop();\r\n      }\r\n\r\n      if (brackets.length === 0) {\r\n        if (type === ';') {\r\n          node.source.end = this.getPosition(token[2]);\r\n          this.semicolon = true;\r\n          break\r\n        } else if (type === '{') {\r\n          open = true;\r\n          break\r\n        } else if (type === '}') {\r\n          if (params.length > 0) {\r\n            shift = params.length - 1;\r\n            prev = params[shift];\r\n            while (prev && prev[0] === 'space') {\r\n              prev = params[--shift];\r\n            }\r\n            if (prev) {\r\n              node.source.end = this.getPosition(prev[3] || prev[2]);\r\n            }\r\n          }\r\n          this.end(token);\r\n          break\r\n        } else {\r\n          params.push(token);\r\n        }\r\n      } else {\r\n        params.push(token);\r\n      }\r\n\r\n      if (this.tokenizer.endOfFile()) {\r\n        last = true;\r\n        break\r\n      }\r\n    }\r\n\r\n    node.raws.between = this.spacesAndCommentsFromEnd(params);\r\n    if (params.length) {\r\n      node.raws.afterName = this.spacesAndCommentsFromStart(params);\r\n      this.raw(node, 'params', params);\r\n      if (last) {\r\n        token = params[params.length - 1];\r\n        node.source.end = this.getPosition(token[3] || token[2]);\r\n        this.spaces = node.raws.between;\r\n        node.raws.between = '';\r\n      }\r\n    } else {\r\n      node.raws.afterName = '';\r\n      node.params = '';\r\n    }\r\n\r\n    if (open) {\r\n      node.nodes = [];\r\n      this.current = node;\r\n    }\r\n  }\r\n\r\n  end(token) {\r\n    if (this.current.nodes && this.current.nodes.length) {\r\n      this.current.raws.semicolon = this.semicolon;\r\n    }\r\n    this.semicolon = false;\r\n\r\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\r\n    this.spaces = '';\r\n\r\n    if (this.current.parent) {\r\n      this.current.source.end = this.getPosition(token[2]);\r\n      this.current = this.current.parent;\r\n    } else {\r\n      this.unexpectedClose(token);\r\n    }\r\n  }\r\n\r\n  endFile() {\r\n    if (this.current.parent) this.unclosedBlock();\r\n    if (this.current.nodes && this.current.nodes.length) {\r\n      this.current.raws.semicolon = this.semicolon;\r\n    }\r\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\r\n  }\r\n\r\n  freeSemicolon(token) {\r\n    this.spaces += token[1];\r\n    if (this.current.nodes) {\r\n      let prev = this.current.nodes[this.current.nodes.length - 1];\r\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\r\n        prev.raws.ownSemicolon = this.spaces;\r\n        this.spaces = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Helpers\r\n\r\n  getPosition(offset) {\r\n    let pos = this.input.fromOffset(offset);\r\n    return {\r\n      offset,\r\n      line: pos.line,\r\n      column: pos.col\r\n    }\r\n  }\r\n\r\n  init(node, offset) {\r\n    this.current.push(node);\r\n    node.source = {\r\n      start: this.getPosition(offset),\r\n      input: this.input\r\n    };\r\n    node.raws.before = this.spaces;\r\n    this.spaces = '';\r\n    if (node.type !== 'comment') this.semicolon = false;\r\n  }\r\n\r\n  raw(node, prop, tokens, customProperty) {\r\n    let token, type;\r\n    let length = tokens.length;\r\n    let value = '';\r\n    let clean = true;\r\n    let next, prev;\r\n\r\n    for (let i = 0; i < length; i += 1) {\r\n      token = tokens[i];\r\n      type = token[0];\r\n      if (type === 'space' && i === length - 1 && !customProperty) {\r\n        clean = false;\r\n      } else if (type === 'comment') {\r\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty';\r\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty';\r\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\r\n          if (value.slice(-1) === ',') {\r\n            clean = false;\r\n          } else {\r\n            value += token[1];\r\n          }\r\n        } else {\r\n          clean = false;\r\n        }\r\n      } else {\r\n        value += token[1];\r\n      }\r\n    }\r\n    if (!clean) {\r\n      let raw = tokens.reduce((all, i) => all + i[1], '');\r\n      node.raws[prop] = { value, raw };\r\n    }\r\n    node[prop] = value;\r\n  }\r\n\r\n  spacesAndCommentsFromEnd(tokens) {\r\n    let lastTokenType;\r\n    let spaces = '';\r\n    while (tokens.length) {\r\n      lastTokenType = tokens[tokens.length - 1][0];\r\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\r\n      spaces = tokens.pop()[1] + spaces;\r\n    }\r\n    return spaces\r\n  }\r\n\r\n  spacesAndCommentsFromStart(tokens) {\r\n    let next;\r\n    let spaces = '';\r\n    while (tokens.length) {\r\n      next = tokens[0][0];\r\n      if (next !== 'space' && next !== 'comment') break\r\n      spaces += tokens.shift()[1];\r\n    }\r\n    return spaces\r\n  }\r\n\r\n  spacesFromEnd(tokens) {\r\n    let lastTokenType;\r\n    let spaces = '';\r\n    while (tokens.length) {\r\n      lastTokenType = tokens[tokens.length - 1][0];\r\n      if (lastTokenType !== 'space') break\r\n      spaces = tokens.pop()[1] + spaces;\r\n    }\r\n    return spaces\r\n  }\r\n\r\n  stringFrom(tokens, from) {\r\n    let result = '';\r\n    for (let i = from; i < tokens.length; i++) {\r\n      result += tokens[i][1];\r\n    }\r\n    tokens.splice(from, tokens.length - from);\r\n    return result\r\n  }\r\n\r\n  colon(tokens) {\r\n    let brackets = 0;\r\n    let token, type, prev;\r\n    for (let [i, element] of tokens.entries()) {\r\n      token = element;\r\n      type = token[0];\r\n\r\n      if (type === '(') {\r\n        brackets += 1;\r\n      }\r\n      if (type === ')') {\r\n        brackets -= 1;\r\n      }\r\n      if (brackets === 0 && type === ':') {\r\n        if (!prev) {\r\n          this.doubleColon(token);\r\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\r\n          continue\r\n        } else {\r\n          return i\r\n        }\r\n      }\r\n\r\n      prev = token;\r\n    }\r\n    return false\r\n  }\r\n\r\n  // Errors\r\n\r\n  unclosedBracket(bracket) {\r\n    throw this.input.error(\r\n      'Unclosed bracket',\r\n      { offset: bracket[2] },\r\n      { offset: bracket[2] + 1 }\r\n    )\r\n  }\r\n\r\n  unknownWord(tokens) {\r\n    throw this.input.error(\r\n      'Unknown word',\r\n      { offset: tokens[0][2] },\r\n      { offset: tokens[0][2] + tokens[0][1].length }\r\n    )\r\n  }\r\n\r\n  unexpectedClose(token) {\r\n    throw this.input.error(\r\n      'Unexpected }',\r\n      { offset: token[2] },\r\n      { offset: token[2] + 1 }\r\n    )\r\n  }\r\n\r\n  unclosedBlock() {\r\n    let pos = this.current.source.start;\r\n    throw this.input.error('Unclosed block', pos.line, pos.column)\r\n  }\r\n\r\n  doubleColon(token) {\r\n    throw this.input.error(\r\n      'Double colon',\r\n      { offset: token[2] },\r\n      { offset: token[2] + token[1].length }\r\n    )\r\n  }\r\n\r\n  unnamedAtrule(node, token) {\r\n    throw this.input.error(\r\n      'At-rule without name',\r\n      { offset: token[2] },\r\n      { offset: token[2] + token[1].length }\r\n    )\r\n  }\r\n\r\n  precheckMissedSemicolon(/* tokens */) {\r\n    // Hook for Safe Parser\r\n  }\r\n\r\n  checkMissedSemicolon(tokens) {\r\n    let colon = this.colon(tokens);\r\n    if (colon === false) return\r\n\r\n    let founded = 0;\r\n    let token;\r\n    for (let j = colon - 1; j >= 0; j--) {\r\n      token = tokens[j];\r\n      if (token[0] !== 'space') {\r\n        founded += 1;\r\n        if (founded === 2) break\r\n      }\r\n    }\r\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\r\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\r\n    // And because we need it after that one we do +1 to get the next one.\r\n    throw this.input.error(\r\n      'Missed semicolon',\r\n      token[0] === 'word' ? token[3] + 1 : token[2]\r\n    )\r\n  }\r\n};\r\n\r\nvar parser$1 = Parser$1;\r\n\r\nlet Container$2 = container$1;\r\nlet Parser = parser$1;\r\nlet Input$2 = input;\r\n\r\nfunction parse$3(css, opts) {\r\n  let input = new Input$2(css, opts);\r\n  let parser = new Parser(input);\r\n  try {\r\n    parser.parse();\r\n  } catch (e) {\r\n    if (browser$1.env.NODE_ENV !== 'production') {\r\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\r\n        if (/\\.scss$/i.test(opts.from)) {\r\n          e.message +=\r\n            '\\nYou tried to parse SCSS with ' +\r\n            'the standard CSS parser; ' +\r\n            'try again with the postcss-scss parser';\r\n        } else if (/\\.sass/i.test(opts.from)) {\r\n          e.message +=\r\n            '\\nYou tried to parse Sass with ' +\r\n            'the standard CSS parser; ' +\r\n            'try again with the postcss-sass parser';\r\n        } else if (/\\.less$/i.test(opts.from)) {\r\n          e.message +=\r\n            '\\nYou tried to parse Less with ' +\r\n            'the standard CSS parser; ' +\r\n            'try again with the postcss-less parser';\r\n        }\r\n      }\r\n    }\r\n    throw e\r\n  }\r\n\r\n  return parser.root\r\n}\r\n\r\nvar parse_1 = parse$3;\r\nparse$3.default = parse$3;\r\n\r\nContainer$2.registerParse(parse$3);\r\n\r\nlet { isClean, my } = symbols;\r\nlet MapGenerator$1 = mapGenerator;\r\nlet stringify$2 = stringify_1;\r\nlet Container$1 = container$1;\r\nlet Document$2 = document;\r\nlet warnOnce$2 = warnOnce$3;\r\nlet Result$2 = result;\r\nlet parse$2 = parse_1;\r\nlet Root$3 = root$2;\r\n\r\nconst TYPE_TO_CLASS_NAME = {\r\n  document: 'Document',\r\n  root: 'Root',\r\n  atrule: 'AtRule',\r\n  rule: 'Rule',\r\n  decl: 'Declaration',\r\n  comment: 'Comment'\r\n};\r\n\r\nconst PLUGIN_PROPS = {\r\n  postcssPlugin: true,\r\n  prepare: true,\r\n  Once: true,\r\n  Document: true,\r\n  Root: true,\r\n  Declaration: true,\r\n  Rule: true,\r\n  AtRule: true,\r\n  Comment: true,\r\n  DeclarationExit: true,\r\n  RuleExit: true,\r\n  AtRuleExit: true,\r\n  CommentExit: true,\r\n  RootExit: true,\r\n  DocumentExit: true,\r\n  OnceExit: true\r\n};\r\n\r\nconst NOT_VISITORS = {\r\n  postcssPlugin: true,\r\n  prepare: true,\r\n  Once: true\r\n};\r\n\r\nconst CHILDREN = 0;\r\n\r\nfunction isPromise(obj) {\r\n  return typeof obj === 'object' && typeof obj.then === 'function'\r\n}\r\n\r\nfunction getEvents(node) {\r\n  let key = false;\r\n  let type = TYPE_TO_CLASS_NAME[node.type];\r\n  if (node.type === 'decl') {\r\n    key = node.prop.toLowerCase();\r\n  } else if (node.type === 'atrule') {\r\n    key = node.name.toLowerCase();\r\n  }\r\n\r\n  if (key && node.append) {\r\n    return [\r\n      type,\r\n      type + '-' + key,\r\n      CHILDREN,\r\n      type + 'Exit',\r\n      type + 'Exit-' + key\r\n    ]\r\n  } else if (key) {\r\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\r\n  } else if (node.append) {\r\n    return [type, CHILDREN, type + 'Exit']\r\n  } else {\r\n    return [type, type + 'Exit']\r\n  }\r\n}\r\n\r\nfunction toStack(node) {\r\n  let events;\r\n  if (node.type === 'document') {\r\n    events = ['Document', CHILDREN, 'DocumentExit'];\r\n  } else if (node.type === 'root') {\r\n    events = ['Root', CHILDREN, 'RootExit'];\r\n  } else {\r\n    events = getEvents(node);\r\n  }\r\n\r\n  return {\r\n    node,\r\n    events,\r\n    eventIndex: 0,\r\n    visitors: [],\r\n    visitorIndex: 0,\r\n    iterator: 0\r\n  }\r\n}\r\n\r\nfunction cleanMarks(node) {\r\n  node[isClean] = false;\r\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\r\n  return node\r\n}\r\n\r\nlet postcss$2 = {};\r\n\r\nlet LazyResult$2 = class LazyResult {\r\n  constructor(processor, css, opts) {\r\n    this.stringified = false;\r\n    this.processed = false;\r\n\r\n    let root;\r\n    if (\r\n      typeof css === 'object' &&\r\n      css !== null &&\r\n      (css.type === 'root' || css.type === 'document')\r\n    ) {\r\n      root = cleanMarks(css);\r\n    } else if (css instanceof LazyResult || css instanceof Result$2) {\r\n      root = cleanMarks(css.root);\r\n      if (css.map) {\r\n        if (typeof opts.map === 'undefined') opts.map = {};\r\n        if (!opts.map.inline) opts.map.inline = false;\r\n        opts.map.prev = css.map;\r\n      }\r\n    } else {\r\n      let parser = parse$2;\r\n      if (opts.syntax) parser = opts.syntax.parse;\r\n      if (opts.parser) parser = opts.parser;\r\n      if (parser.parse) parser = parser.parse;\r\n\r\n      try {\r\n        root = parser(css, opts);\r\n      } catch (error) {\r\n        this.processed = true;\r\n        this.error = error;\r\n      }\r\n\r\n      if (root && !root[my]) {\r\n        /* c8 ignore next 2 */\r\n        Container$1.rebuild(root);\r\n      }\r\n    }\r\n\r\n    this.result = new Result$2(processor, root, opts);\r\n    this.helpers = { ...postcss$2, result: this.result, postcss: postcss$2 };\r\n    this.plugins = this.processor.plugins.map(plugin => {\r\n      if (typeof plugin === 'object' && plugin.prepare) {\r\n        return { ...plugin, ...plugin.prepare(this.result) }\r\n      } else {\r\n        return plugin\r\n      }\r\n    });\r\n  }\r\n\r\n  get [Symbol.toStringTag]() {\r\n    return 'LazyResult'\r\n  }\r\n\r\n  get processor() {\r\n    return this.result.processor\r\n  }\r\n\r\n  get opts() {\r\n    return this.result.opts\r\n  }\r\n\r\n  get css() {\r\n    return this.stringify().css\r\n  }\r\n\r\n  get content() {\r\n    return this.stringify().content\r\n  }\r\n\r\n  get map() {\r\n    return this.stringify().map\r\n  }\r\n\r\n  get root() {\r\n    return this.sync().root\r\n  }\r\n\r\n  get messages() {\r\n    return this.sync().messages\r\n  }\r\n\r\n  warnings() {\r\n    return this.sync().warnings()\r\n  }\r\n\r\n  toString() {\r\n    return this.css\r\n  }\r\n\r\n  then(onFulfilled, onRejected) {\r\n    if (browser$1.env.NODE_ENV !== 'production') {\r\n      if (!('from' in this.opts)) {\r\n        warnOnce$2(\r\n          'Without `from` option PostCSS could generate wrong source map ' +\r\n            'and will not find Browserslist config. Set it to CSS file path ' +\r\n            'or to `undefined` to prevent this warning.'\r\n        );\r\n      }\r\n    }\r\n    return this.async().then(onFulfilled, onRejected)\r\n  }\r\n\r\n  catch(onRejected) {\r\n    return this.async().catch(onRejected)\r\n  }\r\n\r\n  finally(onFinally) {\r\n    return this.async().then(onFinally, onFinally)\r\n  }\r\n\r\n  async() {\r\n    if (this.error) return Promise.reject(this.error)\r\n    if (this.processed) return Promise.resolve(this.result)\r\n    if (!this.processing) {\r\n      this.processing = this.runAsync();\r\n    }\r\n    return this.processing\r\n  }\r\n\r\n  sync() {\r\n    if (this.error) throw this.error\r\n    if (this.processed) return this.result\r\n    this.processed = true;\r\n\r\n    if (this.processing) {\r\n      throw this.getAsyncError()\r\n    }\r\n\r\n    for (let plugin of this.plugins) {\r\n      let promise = this.runOnRoot(plugin);\r\n      if (isPromise(promise)) {\r\n        throw this.getAsyncError()\r\n      }\r\n    }\r\n\r\n    this.prepareVisitors();\r\n    if (this.hasListener) {\r\n      let root = this.result.root;\r\n      while (!root[isClean]) {\r\n        root[isClean] = true;\r\n        this.walkSync(root);\r\n      }\r\n      if (this.listeners.OnceExit) {\r\n        if (root.type === 'document') {\r\n          for (let subRoot of root.nodes) {\r\n            this.visitSync(this.listeners.OnceExit, subRoot);\r\n          }\r\n        } else {\r\n          this.visitSync(this.listeners.OnceExit, root);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.result\r\n  }\r\n\r\n  stringify() {\r\n    if (this.error) throw this.error\r\n    if (this.stringified) return this.result\r\n    this.stringified = true;\r\n\r\n    this.sync();\r\n\r\n    let opts = this.result.opts;\r\n    let str = stringify$2;\r\n    if (opts.syntax) str = opts.syntax.stringify;\r\n    if (opts.stringifier) str = opts.stringifier;\r\n    if (str.stringify) str = str.stringify;\r\n\r\n    let map = new MapGenerator$1(str, this.result.root, this.result.opts);\r\n    let data = map.generate();\r\n    this.result.css = data[0];\r\n    this.result.map = data[1];\r\n\r\n    return this.result\r\n  }\r\n\r\n  walkSync(node) {\r\n    node[isClean] = true;\r\n    let events = getEvents(node);\r\n    for (let event of events) {\r\n      if (event === CHILDREN) {\r\n        if (node.nodes) {\r\n          node.each(child => {\r\n            if (!child[isClean]) this.walkSync(child);\r\n          });\r\n        }\r\n      } else {\r\n        let visitors = this.listeners[event];\r\n        if (visitors) {\r\n          if (this.visitSync(visitors, node.toProxy())) return\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  visitSync(visitors, node) {\r\n    for (let [plugin, visitor] of visitors) {\r\n      this.result.lastPlugin = plugin;\r\n      let promise;\r\n      try {\r\n        promise = visitor(node, this.helpers);\r\n      } catch (e) {\r\n        throw this.handleError(e, node.proxyOf)\r\n      }\r\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\r\n        return true\r\n      }\r\n      if (isPromise(promise)) {\r\n        throw this.getAsyncError()\r\n      }\r\n    }\r\n  }\r\n\r\n  runOnRoot(plugin) {\r\n    this.result.lastPlugin = plugin;\r\n    try {\r\n      if (typeof plugin === 'object' && plugin.Once) {\r\n        if (this.result.root.type === 'document') {\r\n          let roots = this.result.root.nodes.map(root =>\r\n            plugin.Once(root, this.helpers)\r\n          );\r\n\r\n          if (isPromise(roots[0])) {\r\n            return Promise.all(roots)\r\n          }\r\n\r\n          return roots\r\n        }\r\n\r\n        return plugin.Once(this.result.root, this.helpers)\r\n      } else if (typeof plugin === 'function') {\r\n        return plugin(this.result.root, this.result)\r\n      }\r\n    } catch (error) {\r\n      throw this.handleError(error)\r\n    }\r\n  }\r\n\r\n  getAsyncError() {\r\n    throw new Error('Use process(css).then(cb) to work with async plugins')\r\n  }\r\n\r\n  handleError(error, node) {\r\n    let plugin = this.result.lastPlugin;\r\n    try {\r\n      if (node) node.addToError(error);\r\n      this.error = error;\r\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\r\n        error.plugin = plugin.postcssPlugin;\r\n        error.setMessage();\r\n      } else if (plugin.postcssVersion) {\r\n        if (browser$1.env.NODE_ENV !== 'production') {\r\n          let pluginName = plugin.postcssPlugin;\r\n          let pluginVer = plugin.postcssVersion;\r\n          let runtimeVer = this.result.processor.version;\r\n          let a = pluginVer.split('.');\r\n          let b = runtimeVer.split('.');\r\n\r\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(\r\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\r\n                'version is ' +\r\n                runtimeVer +\r\n                ', but ' +\r\n                pluginName +\r\n                ' uses ' +\r\n                pluginVer +\r\n                '. Perhaps this is the source of the error below.'\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      /* c8 ignore next 3 */\r\n      // eslint-disable-next-line no-console\r\n      if (console && console.error) console.error(err);\r\n    }\r\n    return error\r\n  }\r\n\r\n  async runAsync() {\r\n    this.plugin = 0;\r\n    for (let i = 0; i < this.plugins.length; i++) {\r\n      let plugin = this.plugins[i];\r\n      let promise = this.runOnRoot(plugin);\r\n      if (isPromise(promise)) {\r\n        try {\r\n          await promise;\r\n        } catch (error) {\r\n          throw this.handleError(error)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.prepareVisitors();\r\n    if (this.hasListener) {\r\n      let root = this.result.root;\r\n      while (!root[isClean]) {\r\n        root[isClean] = true;\r\n        let stack = [toStack(root)];\r\n        while (stack.length > 0) {\r\n          let promise = this.visitTick(stack);\r\n          if (isPromise(promise)) {\r\n            try {\r\n              await promise;\r\n            } catch (e) {\r\n              let node = stack[stack.length - 1].node;\r\n              throw this.handleError(e, node)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.listeners.OnceExit) {\r\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\r\n          this.result.lastPlugin = plugin;\r\n          try {\r\n            if (root.type === 'document') {\r\n              let roots = root.nodes.map(subRoot =>\r\n                visitor(subRoot, this.helpers)\r\n              );\r\n\r\n              await Promise.all(roots);\r\n            } else {\r\n              await visitor(root, this.helpers);\r\n            }\r\n          } catch (e) {\r\n            throw this.handleError(e)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.processed = true;\r\n    return this.stringify()\r\n  }\r\n\r\n  prepareVisitors() {\r\n    this.listeners = {};\r\n    let add = (plugin, type, cb) => {\r\n      if (!this.listeners[type]) this.listeners[type] = [];\r\n      this.listeners[type].push([plugin, cb]);\r\n    };\r\n    for (let plugin of this.plugins) {\r\n      if (typeof plugin === 'object') {\r\n        for (let event in plugin) {\r\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\r\n            throw new Error(\r\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\r\n                `Try to update PostCSS (${this.processor.version} now).`\r\n            )\r\n          }\r\n          if (!NOT_VISITORS[event]) {\r\n            if (typeof plugin[event] === 'object') {\r\n              for (let filter in plugin[event]) {\r\n                if (filter === '*') {\r\n                  add(plugin, event, plugin[event][filter]);\r\n                } else {\r\n                  add(\r\n                    plugin,\r\n                    event + '-' + filter.toLowerCase(),\r\n                    plugin[event][filter]\r\n                  );\r\n                }\r\n              }\r\n            } else if (typeof plugin[event] === 'function') {\r\n              add(plugin, event, plugin[event]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.hasListener = Object.keys(this.listeners).length > 0;\r\n  }\r\n\r\n  visitTick(stack) {\r\n    let visit = stack[stack.length - 1];\r\n    let { node, visitors } = visit;\r\n\r\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\r\n      stack.pop();\r\n      return\r\n    }\r\n\r\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\r\n      let [plugin, visitor] = visitors[visit.visitorIndex];\r\n      visit.visitorIndex += 1;\r\n      if (visit.visitorIndex === visitors.length) {\r\n        visit.visitors = [];\r\n        visit.visitorIndex = 0;\r\n      }\r\n      this.result.lastPlugin = plugin;\r\n      try {\r\n        return visitor(node.toProxy(), this.helpers)\r\n      } catch (e) {\r\n        throw this.handleError(e, node)\r\n      }\r\n    }\r\n\r\n    if (visit.iterator !== 0) {\r\n      let iterator = visit.iterator;\r\n      let child;\r\n      while ((child = node.nodes[node.indexes[iterator]])) {\r\n        node.indexes[iterator] += 1;\r\n        if (!child[isClean]) {\r\n          child[isClean] = true;\r\n          stack.push(toStack(child));\r\n          return\r\n        }\r\n      }\r\n      visit.iterator = 0;\r\n      delete node.indexes[iterator];\r\n    }\r\n\r\n    let events = visit.events;\r\n    while (visit.eventIndex < events.length) {\r\n      let event = events[visit.eventIndex];\r\n      visit.eventIndex += 1;\r\n      if (event === CHILDREN) {\r\n        if (node.nodes && node.nodes.length) {\r\n          node[isClean] = true;\r\n          visit.iterator = node.getIterator();\r\n        }\r\n        return\r\n      } else if (this.listeners[event]) {\r\n        visit.visitors = this.listeners[event];\r\n        return\r\n      }\r\n    }\r\n    stack.pop();\r\n  }\r\n};\r\n\r\nLazyResult$2.registerPostcss = dependant => {\r\n  postcss$2 = dependant;\r\n};\r\n\r\nvar lazyResult = LazyResult$2;\r\nLazyResult$2.default = LazyResult$2;\r\n\r\nRoot$3.registerLazyResult(LazyResult$2);\r\nDocument$2.registerLazyResult(LazyResult$2);\r\n\r\nlet MapGenerator = mapGenerator;\r\nlet stringify$1 = stringify_1;\r\nlet warnOnce$1 = warnOnce$3;\r\nlet parse$1 = parse_1;\r\nconst Result$1 = result;\r\n\r\nlet NoWorkResult$1 = class NoWorkResult {\r\n  constructor(processor, css, opts) {\r\n    css = css.toString();\r\n    this.stringified = false;\r\n\r\n    this._processor = processor;\r\n    this._css = css;\r\n    this._opts = opts;\r\n    this._map = undefined;\r\n    let root;\r\n\r\n    let str = stringify$1;\r\n    this.result = new Result$1(this._processor, root, this._opts);\r\n    this.result.css = css;\r\n\r\n    let self = this;\r\n    Object.defineProperty(this.result, 'root', {\r\n      get() {\r\n        return self.root\r\n      }\r\n    });\r\n\r\n    let map = new MapGenerator(str, root, this._opts, css);\r\n    if (map.isMap()) {\r\n      let [generatedCSS, generatedMap] = map.generate();\r\n      if (generatedCSS) {\r\n        this.result.css = generatedCSS;\r\n      }\r\n      if (generatedMap) {\r\n        this.result.map = generatedMap;\r\n      }\r\n    }\r\n  }\r\n\r\n  get [Symbol.toStringTag]() {\r\n    return 'NoWorkResult'\r\n  }\r\n\r\n  get processor() {\r\n    return this.result.processor\r\n  }\r\n\r\n  get opts() {\r\n    return this.result.opts\r\n  }\r\n\r\n  get css() {\r\n    return this.result.css\r\n  }\r\n\r\n  get content() {\r\n    return this.result.css\r\n  }\r\n\r\n  get map() {\r\n    return this.result.map\r\n  }\r\n\r\n  get root() {\r\n    if (this._root) {\r\n      return this._root\r\n    }\r\n\r\n    let root;\r\n    let parser = parse$1;\r\n\r\n    try {\r\n      root = parser(this._css, this._opts);\r\n    } catch (error) {\r\n      this.error = error;\r\n    }\r\n\r\n    if (this.error) {\r\n      throw this.error\r\n    } else {\r\n      this._root = root;\r\n      return root\r\n    }\r\n  }\r\n\r\n  get messages() {\r\n    return []\r\n  }\r\n\r\n  warnings() {\r\n    return []\r\n  }\r\n\r\n  toString() {\r\n    return this._css\r\n  }\r\n\r\n  then(onFulfilled, onRejected) {\r\n    if (browser$1.env.NODE_ENV !== 'production') {\r\n      if (!('from' in this._opts)) {\r\n        warnOnce$1(\r\n          'Without `from` option PostCSS could generate wrong source map ' +\r\n            'and will not find Browserslist config. Set it to CSS file path ' +\r\n            'or to `undefined` to prevent this warning.'\r\n        );\r\n      }\r\n    }\r\n\r\n    return this.async().then(onFulfilled, onRejected)\r\n  }\r\n\r\n  catch(onRejected) {\r\n    return this.async().catch(onRejected)\r\n  }\r\n\r\n  finally(onFinally) {\r\n    return this.async().then(onFinally, onFinally)\r\n  }\r\n\r\n  async() {\r\n    if (this.error) return Promise.reject(this.error)\r\n    return Promise.resolve(this.result)\r\n  }\r\n\r\n  sync() {\r\n    if (this.error) throw this.error\r\n    return this.result\r\n  }\r\n};\r\n\r\nvar noWorkResult = NoWorkResult$1;\r\nNoWorkResult$1.default = NoWorkResult$1;\r\n\r\nlet NoWorkResult = noWorkResult;\r\nlet LazyResult$1 = lazyResult;\r\nlet Document$1 = document;\r\nlet Root$2 = root$2;\r\n\r\nlet Processor$1 = class Processor {\r\n  constructor(plugins = []) {\r\n    this.version = '8.4.21';\r\n    this.plugins = this.normalize(plugins);\r\n  }\r\n\r\n  use(plugin) {\r\n    this.plugins = this.plugins.concat(this.normalize([plugin]));\r\n    return this\r\n  }\r\n\r\n  process(css, opts = {}) {\r\n    if (\r\n      this.plugins.length === 0 &&\r\n      typeof opts.parser === 'undefined' &&\r\n      typeof opts.stringifier === 'undefined' &&\r\n      typeof opts.syntax === 'undefined'\r\n    ) {\r\n      return new NoWorkResult(this, css, opts)\r\n    } else {\r\n      return new LazyResult$1(this, css, opts)\r\n    }\r\n  }\r\n\r\n  normalize(plugins) {\r\n    let normalized = [];\r\n    for (let i of plugins) {\r\n      if (i.postcss === true) {\r\n        i = i();\r\n      } else if (i.postcss) {\r\n        i = i.postcss;\r\n      }\r\n\r\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\r\n        normalized = normalized.concat(i.plugins);\r\n      } else if (typeof i === 'object' && i.postcssPlugin) {\r\n        normalized.push(i);\r\n      } else if (typeof i === 'function') {\r\n        normalized.push(i);\r\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\r\n        if (browser$1.env.NODE_ENV !== 'production') {\r\n          throw new Error(\r\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\r\n              'one of the syntax/parser/stringifier options as outlined ' +\r\n              'in your PostCSS runner documentation.'\r\n          )\r\n        }\r\n      } else {\r\n        throw new Error(i + ' is not a PostCSS plugin')\r\n      }\r\n    }\r\n    return normalized\r\n  }\r\n};\r\n\r\nvar processor$1 = Processor$1;\r\nProcessor$1.default = Processor$1;\r\n\r\nRoot$2.registerProcessor(Processor$1);\r\nDocument$1.registerProcessor(Processor$1);\r\n\r\nlet Declaration$1 = declaration;\r\nlet PreviousMap = previousMap;\r\nlet Comment$1 = comment$3;\r\nlet AtRule$1 = atRule;\r\nlet Input$1 = input;\r\nlet Root$1 = root$2;\r\nlet Rule$1 = rule;\r\n\r\nfunction fromJSON$1(json, inputs) {\r\n  if (Array.isArray(json)) return json.map(n => fromJSON$1(n))\r\n\r\n  let { inputs: ownInputs, ...defaults } = json;\r\n  if (ownInputs) {\r\n    inputs = [];\r\n    for (let input of ownInputs) {\r\n      let inputHydrated = { ...input, __proto__: Input$1.prototype };\r\n      if (inputHydrated.map) {\r\n        inputHydrated.map = {\r\n          ...inputHydrated.map,\r\n          __proto__: PreviousMap.prototype\r\n        };\r\n      }\r\n      inputs.push(inputHydrated);\r\n    }\r\n  }\r\n  if (defaults.nodes) {\r\n    defaults.nodes = json.nodes.map(n => fromJSON$1(n, inputs));\r\n  }\r\n  if (defaults.source) {\r\n    let { inputId, ...source } = defaults.source;\r\n    defaults.source = source;\r\n    if (inputId != null) {\r\n      defaults.source.input = inputs[inputId];\r\n    }\r\n  }\r\n  if (defaults.type === 'root') {\r\n    return new Root$1(defaults)\r\n  } else if (defaults.type === 'decl') {\r\n    return new Declaration$1(defaults)\r\n  } else if (defaults.type === 'rule') {\r\n    return new Rule$1(defaults)\r\n  } else if (defaults.type === 'comment') {\r\n    return new Comment$1(defaults)\r\n  } else if (defaults.type === 'atrule') {\r\n    return new AtRule$1(defaults)\r\n  } else {\r\n    throw new Error('Unknown node type: ' + json.type)\r\n  }\r\n}\r\n\r\nvar fromJSON_1 = fromJSON$1;\r\nfromJSON$1.default = fromJSON$1;\r\n\r\nlet CssSyntaxError = cssSyntaxError;\r\nlet Declaration = declaration;\r\nlet LazyResult = lazyResult;\r\nlet Container = container$1;\r\nlet Processor = processor$1;\r\nlet stringify = stringify_1;\r\nlet fromJSON = fromJSON_1;\r\nlet Document = document;\r\nlet Warning = warning;\r\nlet Comment = comment$3;\r\nlet AtRule = atRule;\r\nlet Result = result;\r\nlet Input = input;\r\nlet parse = parse_1;\r\nlet list = list_1;\r\nlet Rule = rule;\r\nlet Root = root$2;\r\nlet Node = node$2;\r\n\r\nfunction postcss(...plugins) {\r\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\r\n    plugins = plugins[0];\r\n  }\r\n  return new Processor(plugins)\r\n}\r\n\r\npostcss.plugin = function plugin(name, initializer) {\r\n  let warningPrinted = false;\r\n  function creator(...args) {\r\n    // eslint-disable-next-line no-console\r\n    if (console && console.warn && !warningPrinted) {\r\n      warningPrinted = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        name +\r\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\r\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\r\n      );\r\n      if (browser$1.env.LANG && browser$1.env.LANG.startsWith('cn')) {\r\n        /* c8 ignore next 7 */\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          name +\r\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\r\n            'https://www.w3ctech.com/topic/2226'\r\n        );\r\n      }\r\n    }\r\n    let transformer = initializer(...args);\r\n    transformer.postcssPlugin = name;\r\n    transformer.postcssVersion = new Processor().version;\r\n    return transformer\r\n  }\r\n\r\n  let cache;\r\n  Object.defineProperty(creator, 'postcss', {\r\n    get() {\r\n      if (!cache) cache = creator();\r\n      return cache\r\n    }\r\n  });\r\n\r\n  creator.process = function (css, processOpts, pluginOpts) {\r\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\r\n  };\r\n\r\n  return creator\r\n};\r\n\r\npostcss.stringify = stringify;\r\npostcss.parse = parse;\r\npostcss.fromJSON = fromJSON;\r\npostcss.list = list;\r\n\r\npostcss.comment = defaults => new Comment(defaults);\r\npostcss.atRule = defaults => new AtRule(defaults);\r\npostcss.decl = defaults => new Declaration(defaults);\r\npostcss.rule = defaults => new Rule(defaults);\r\npostcss.root = defaults => new Root(defaults);\r\npostcss.document = defaults => new Document(defaults);\r\n\r\npostcss.CssSyntaxError = CssSyntaxError;\r\npostcss.Declaration = Declaration;\r\npostcss.Container = Container;\r\npostcss.Processor = Processor;\r\npostcss.Document = Document;\r\npostcss.Comment = Comment;\r\npostcss.Warning = Warning;\r\npostcss.AtRule = AtRule;\r\npostcss.Result = Result;\r\npostcss.Input = Input;\r\npostcss.Rule = Rule;\r\npostcss.Root = Root;\r\npostcss.Node = Node;\r\n\r\nLazyResult.registerPostcss(postcss);\r\n\r\nvar postcss_1 = postcss;\r\npostcss.default = postcss;\r\n\r\nvar postcss$1 = postcss_1;\r\n\r\npostcss$1.stringify;\r\npostcss$1.fromJSON;\r\npostcss$1.plugin;\r\npostcss$1.parse;\r\npostcss$1.list;\r\n\r\npostcss$1.document;\r\npostcss$1.comment;\r\npostcss$1.atRule;\r\npostcss$1.rule;\r\npostcss$1.decl;\r\npostcss$1.root;\r\n\r\npostcss$1.CssSyntaxError;\r\npostcss$1.Declaration;\r\npostcss$1.Container;\r\npostcss$1.Processor;\r\npostcss$1.Document;\r\npostcss$1.Comment;\r\npostcss$1.Warning;\r\npostcss$1.AtRule;\r\npostcss$1.Result;\r\npostcss$1.Input;\r\npostcss$1.Rule;\r\npostcss$1.Root;\r\npostcss$1.Node;\r\n\r\nconst trimPlugin = () => {\r\n  return {\r\n    postcssPlugin: \"vue-sfc-trim\",\r\n    Once(root) {\r\n      root.walk(({ type, raws }) => {\r\n        if (type === \"rule\" || type === \"atrule\") {\r\n          if (raws.before)\r\n            raws.before = \"\\n\";\r\n          if (\"after\" in raws && raws.after)\r\n            raws.after = \"\\n\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n};\r\ntrimPlugin.postcss = true;\r\nvar trimPlugin$1 = trimPlugin;\r\n\r\nvar distExports = {};\r\nvar dist = {\r\n  get exports(){ return distExports; },\r\n  set exports(v){ distExports = v; },\r\n};\r\n\r\nvar processorExports = {};\r\nvar processor = {\r\n  get exports(){ return processorExports; },\r\n  set exports(v){ processorExports = v; },\r\n};\r\n\r\nvar parserExports = {};\r\nvar parser = {\r\n  get exports(){ return parserExports; },\r\n  set exports(v){ parserExports = v; },\r\n};\r\n\r\nvar rootExports = {};\r\nvar root$1 = {\r\n  get exports(){ return rootExports; },\r\n  set exports(v){ rootExports = v; },\r\n};\r\n\r\nvar containerExports = {};\r\nvar container = {\r\n  get exports(){ return containerExports; },\r\n  set exports(v){ containerExports = v; },\r\n};\r\n\r\nvar nodeExports = {};\r\nvar node$1 = {\r\n  get exports(){ return nodeExports; },\r\n  set exports(v){ nodeExports = v; },\r\n};\r\n\r\nvar util$6 = {};\r\n\r\nvar unescExports = {};\r\nvar unesc = {\r\n  get exports(){ return unescExports; },\r\n  set exports(v){ unescExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = unesc;\r\n\r\n\t// Many thanks for this post which made this migration much easier.\r\n\t// https://mathiasbynens.be/notes/css-escapes\r\n\r\n\t/**\r\n\t * \r\n\t * @param {string} str \r\n\t * @returns {[string, number]|undefined}\r\n\t */\r\n\tfunction gobbleHex(str) {\r\n\t  var lower = str.toLowerCase();\r\n\t  var hex = '';\r\n\t  var spaceTerminated = false;\r\n\r\n\t  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\r\n\t    var code = lower.charCodeAt(i); // check to see if we are dealing with a valid hex char [a-f|0-9]\r\n\r\n\t    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57; // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\r\n\r\n\t    spaceTerminated = code === 32;\r\n\r\n\t    if (!valid) {\r\n\t      break;\r\n\t    }\r\n\r\n\t    hex += lower[i];\r\n\t  }\r\n\r\n\t  if (hex.length === 0) {\r\n\t    return undefined;\r\n\t  }\r\n\r\n\t  var codePoint = parseInt(hex, 16);\r\n\t  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF; // Add special case for\r\n\t  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\r\n\t  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\r\n\r\n\t  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\r\n\t    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\r\n\t  }\r\n\r\n\t  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\r\n\t}\r\n\r\n\tvar CONTAINS_ESCAPE = /\\\\/;\r\n\r\n\tfunction unesc(str) {\r\n\t  var needToProcess = CONTAINS_ESCAPE.test(str);\r\n\r\n\t  if (!needToProcess) {\r\n\t    return str;\r\n\t  }\r\n\r\n\t  var ret = \"\";\r\n\r\n\t  for (var i = 0; i < str.length; i++) {\r\n\t    if (str[i] === \"\\\\\") {\r\n\t      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\r\n\r\n\t      if (gobbled !== undefined) {\r\n\t        ret += gobbled[0];\r\n\t        i += gobbled[1];\r\n\t        continue;\r\n\t      } // Retain a pair of \\\\ if double escaped `\\\\\\\\`\r\n\t      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\r\n\r\n\r\n\t      if (str[i + 1] === \"\\\\\") {\r\n\t        ret += \"\\\\\";\r\n\t        i++;\r\n\t        continue;\r\n\t      } // if \\\\ is at the end of the string retain it\r\n\t      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\r\n\r\n\r\n\t      if (str.length === i + 1) {\r\n\t        ret += str[i];\r\n\t      }\r\n\r\n\t      continue;\r\n\t    }\r\n\r\n\t    ret += str[i];\r\n\t  }\r\n\r\n\t  return ret;\r\n\t}\r\n\r\n\tmodule.exports = exports.default;\r\n} (unesc, unescExports));\r\n\r\nvar getPropExports = {};\r\nvar getProp = {\r\n  get exports(){ return getPropExports; },\r\n  set exports(v){ getPropExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = getProp;\r\n\r\n\tfunction getProp(obj) {\r\n\t  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n\t    props[_key - 1] = arguments[_key];\r\n\t  }\r\n\r\n\t  while (props.length > 0) {\r\n\t    var prop = props.shift();\r\n\r\n\t    if (!obj[prop]) {\r\n\t      return undefined;\r\n\t    }\r\n\r\n\t    obj = obj[prop];\r\n\t  }\r\n\r\n\t  return obj;\r\n\t}\r\n\r\n\tmodule.exports = exports.default;\r\n} (getProp, getPropExports));\r\n\r\nvar ensureObjectExports = {};\r\nvar ensureObject = {\r\n  get exports(){ return ensureObjectExports; },\r\n  set exports(v){ ensureObjectExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = ensureObject;\r\n\r\n\tfunction ensureObject(obj) {\r\n\t  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n\t    props[_key - 1] = arguments[_key];\r\n\t  }\r\n\r\n\t  while (props.length > 0) {\r\n\t    var prop = props.shift();\r\n\r\n\t    if (!obj[prop]) {\r\n\t      obj[prop] = {};\r\n\t    }\r\n\r\n\t    obj = obj[prop];\r\n\t  }\r\n\t}\r\n\r\n\tmodule.exports = exports.default;\r\n} (ensureObject, ensureObjectExports));\r\n\r\nvar stripCommentsExports = {};\r\nvar stripComments = {\r\n  get exports(){ return stripCommentsExports; },\r\n  set exports(v){ stripCommentsExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = stripComments;\r\n\r\n\tfunction stripComments(str) {\r\n\t  var s = \"\";\r\n\t  var commentStart = str.indexOf(\"/*\");\r\n\t  var lastEnd = 0;\r\n\r\n\t  while (commentStart >= 0) {\r\n\t    s = s + str.slice(lastEnd, commentStart);\r\n\t    var commentEnd = str.indexOf(\"*/\", commentStart + 2);\r\n\r\n\t    if (commentEnd < 0) {\r\n\t      return s;\r\n\t    }\r\n\r\n\t    lastEnd = commentEnd + 2;\r\n\t    commentStart = str.indexOf(\"/*\", lastEnd);\r\n\t  }\r\n\r\n\t  s = s + str.slice(lastEnd);\r\n\t  return s;\r\n\t}\r\n\r\n\tmodule.exports = exports.default;\r\n} (stripComments, stripCommentsExports));\r\n\r\nutil$6.__esModule = true;\r\nutil$6.stripComments = util$6.ensureObject = util$6.getProp = util$6.unesc = void 0;\r\n\r\nvar _unesc = _interopRequireDefault$1(unescExports);\r\n\r\nutil$6.unesc = _unesc[\"default\"];\r\n\r\nvar _getProp = _interopRequireDefault$1(getPropExports);\r\n\r\nutil$6.getProp = _getProp[\"default\"];\r\n\r\nvar _ensureObject = _interopRequireDefault$1(ensureObjectExports);\r\n\r\nutil$6.ensureObject = _ensureObject[\"default\"];\r\n\r\nvar _stripComments = _interopRequireDefault$1(stripCommentsExports);\r\n\r\nutil$6.stripComments = _stripComments[\"default\"];\r\n\r\nfunction _interopRequireDefault$1(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _util = util$6;\r\n\r\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n\tvar cloneNode = function cloneNode(obj, parent) {\r\n\t  if (typeof obj !== 'object' || obj === null) {\r\n\t    return obj;\r\n\t  }\r\n\r\n\t  var cloned = new obj.constructor();\r\n\r\n\t  for (var i in obj) {\r\n\t    if (!obj.hasOwnProperty(i)) {\r\n\t      continue;\r\n\t    }\r\n\r\n\t    var value = obj[i];\r\n\t    var type = typeof value;\r\n\r\n\t    if (i === 'parent' && type === 'object') {\r\n\t      if (parent) {\r\n\t        cloned[i] = parent;\r\n\t      }\r\n\t    } else if (value instanceof Array) {\r\n\t      cloned[i] = value.map(function (j) {\r\n\t        return cloneNode(j, cloned);\r\n\t      });\r\n\t    } else {\r\n\t      cloned[i] = cloneNode(value, cloned);\r\n\t    }\r\n\t  }\r\n\r\n\t  return cloned;\r\n\t};\r\n\r\n\tvar Node = /*#__PURE__*/function () {\r\n\t  function Node(opts) {\r\n\t    if (opts === void 0) {\r\n\t      opts = {};\r\n\t    }\r\n\r\n\t    Object.assign(this, opts);\r\n\t    this.spaces = this.spaces || {};\r\n\t    this.spaces.before = this.spaces.before || '';\r\n\t    this.spaces.after = this.spaces.after || '';\r\n\t  }\r\n\r\n\t  var _proto = Node.prototype;\r\n\r\n\t  _proto.remove = function remove() {\r\n\t    if (this.parent) {\r\n\t      this.parent.removeChild(this);\r\n\t    }\r\n\r\n\t    this.parent = undefined;\r\n\t    return this;\r\n\t  };\r\n\r\n\t  _proto.replaceWith = function replaceWith() {\r\n\t    if (this.parent) {\r\n\t      for (var index in arguments) {\r\n\t        this.parent.insertBefore(this, arguments[index]);\r\n\t      }\r\n\r\n\t      this.remove();\r\n\t    }\r\n\r\n\t    return this;\r\n\t  };\r\n\r\n\t  _proto.next = function next() {\r\n\t    return this.parent.at(this.parent.index(this) + 1);\r\n\t  };\r\n\r\n\t  _proto.prev = function prev() {\r\n\t    return this.parent.at(this.parent.index(this) - 1);\r\n\t  };\r\n\r\n\t  _proto.clone = function clone(overrides) {\r\n\t    if (overrides === void 0) {\r\n\t      overrides = {};\r\n\t    }\r\n\r\n\t    var cloned = cloneNode(this);\r\n\r\n\t    for (var name in overrides) {\r\n\t      cloned[name] = overrides[name];\r\n\t    }\r\n\r\n\t    return cloned;\r\n\t  }\r\n\t  /**\r\n\t   * Some non-standard syntax doesn't follow normal escaping rules for css.\r\n\t   * This allows non standard syntax to be appended to an existing property\r\n\t   * by specifying the escaped value. By specifying the escaped value,\r\n\t   * illegal characters are allowed to be directly inserted into css output.\r\n\t   * @param {string} name the property to set\r\n\t   * @param {any} value the unescaped value of the property\r\n\t   * @param {string} valueEscaped optional. the escaped value of the property.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\r\n\t    if (!this.raws) {\r\n\t      this.raws = {};\r\n\t    }\r\n\r\n\t    var originalValue = this[name];\r\n\t    var originalEscaped = this.raws[name];\r\n\t    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\r\n\r\n\t    if (originalEscaped || valueEscaped !== value) {\r\n\t      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\r\n\t    } else {\r\n\t      delete this.raws[name]; // delete any escaped value that was created by the setter.\r\n\t    }\r\n\t  }\r\n\t  /**\r\n\t   * Some non-standard syntax doesn't follow normal escaping rules for css.\r\n\t   * This allows the escaped value to be specified directly, allowing illegal\r\n\t   * characters to be directly inserted into css output.\r\n\t   * @param {string} name the property to set\r\n\t   * @param {any} value the unescaped value of the property\r\n\t   * @param {string} valueEscaped the escaped value of the property.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\r\n\t    if (!this.raws) {\r\n\t      this.raws = {};\r\n\t    }\r\n\r\n\t    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\r\n\r\n\t    this.raws[name] = valueEscaped;\r\n\t  }\r\n\t  /**\r\n\t   * When you want a value to passed through to CSS directly. This method\r\n\t   * deletes the corresponding raw value causing the stringifier to fallback\r\n\t   * to the unescaped value.\r\n\t   * @param {string} name the property to set.\r\n\t   * @param {any} value The value that is both escaped and unescaped.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\r\n\t    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\r\n\r\n\t    if (this.raws) {\r\n\t      delete this.raws[name];\r\n\t    }\r\n\t  }\r\n\t  /**\r\n\t   *\r\n\t   * @param {number} line The number (starting with 1)\r\n\t   * @param {number} column The column number (starting with 1)\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.isAtPosition = function isAtPosition(line, column) {\r\n\t    if (this.source && this.source.start && this.source.end) {\r\n\t      if (this.source.start.line > line) {\r\n\t        return false;\r\n\t      }\r\n\r\n\t      if (this.source.end.line < line) {\r\n\t        return false;\r\n\t      }\r\n\r\n\t      if (this.source.start.line === line && this.source.start.column > column) {\r\n\t        return false;\r\n\t      }\r\n\r\n\t      if (this.source.end.line === line && this.source.end.column < column) {\r\n\t        return false;\r\n\t      }\r\n\r\n\t      return true;\r\n\t    }\r\n\r\n\t    return undefined;\r\n\t  };\r\n\r\n\t  _proto.stringifyProperty = function stringifyProperty(name) {\r\n\t    return this.raws && this.raws[name] || this[name];\r\n\t  };\r\n\r\n\t  _proto.valueToString = function valueToString() {\r\n\t    return String(this.stringifyProperty(\"value\"));\r\n\t  };\r\n\r\n\t  _proto.toString = function toString() {\r\n\t    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\r\n\t  };\r\n\r\n\t  _createClass(Node, [{\r\n\t    key: \"rawSpaceBefore\",\r\n\t    get: function get() {\r\n\t      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\r\n\r\n\t      if (rawSpace === undefined) {\r\n\t        rawSpace = this.spaces && this.spaces.before;\r\n\t      }\r\n\r\n\t      return rawSpace || \"\";\r\n\t    },\r\n\t    set: function set(raw) {\r\n\t      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\r\n\t      this.raws.spaces.before = raw;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"rawSpaceAfter\",\r\n\t    get: function get() {\r\n\t      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\r\n\r\n\t      if (rawSpace === undefined) {\r\n\t        rawSpace = this.spaces.after;\r\n\t      }\r\n\r\n\t      return rawSpace || \"\";\r\n\t    },\r\n\t    set: function set(raw) {\r\n\t      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\r\n\t      this.raws.spaces.after = raw;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return Node;\r\n\t}();\r\n\r\n\texports[\"default\"] = Node;\r\n\tmodule.exports = exports.default;\r\n} (node$1, nodeExports));\r\n\r\nvar types = {};\r\n\r\ntypes.__esModule = true;\r\ntypes.UNIVERSAL = types.ATTRIBUTE = types.CLASS = types.COMBINATOR = types.COMMENT = types.ID = types.NESTING = types.PSEUDO = types.ROOT = types.SELECTOR = types.STRING = types.TAG = void 0;\r\nvar TAG = 'tag';\r\ntypes.TAG = TAG;\r\nvar STRING = 'string';\r\ntypes.STRING = STRING;\r\nvar SELECTOR = 'selector';\r\ntypes.SELECTOR = SELECTOR;\r\nvar ROOT = 'root';\r\ntypes.ROOT = ROOT;\r\nvar PSEUDO = 'pseudo';\r\ntypes.PSEUDO = PSEUDO;\r\nvar NESTING = 'nesting';\r\ntypes.NESTING = NESTING;\r\nvar ID = 'id';\r\ntypes.ID = ID;\r\nvar COMMENT = 'comment';\r\ntypes.COMMENT = COMMENT;\r\nvar COMBINATOR = 'combinator';\r\ntypes.COMBINATOR = COMBINATOR;\r\nvar CLASS = 'class';\r\ntypes.CLASS = CLASS;\r\nvar ATTRIBUTE = 'attribute';\r\ntypes.ATTRIBUTE = ATTRIBUTE;\r\nvar UNIVERSAL = 'universal';\r\ntypes.UNIVERSAL = UNIVERSAL;\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _node = _interopRequireDefault(nodeExports);\r\n\r\n\tvar types$1 = _interopRequireWildcard(types);\r\n\r\n\tfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\r\n\r\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\r\n\r\n\tfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\n\tfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Container = /*#__PURE__*/function (_Node) {\r\n\t  _inheritsLoose(Container, _Node);\r\n\r\n\t  function Container(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Node.call(this, opts) || this;\r\n\r\n\t    if (!_this.nodes) {\r\n\t      _this.nodes = [];\r\n\t    }\r\n\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  var _proto = Container.prototype;\r\n\r\n\t  _proto.append = function append(selector) {\r\n\t    selector.parent = this;\r\n\t    this.nodes.push(selector);\r\n\t    return this;\r\n\t  };\r\n\r\n\t  _proto.prepend = function prepend(selector) {\r\n\t    selector.parent = this;\r\n\t    this.nodes.unshift(selector);\r\n\t    return this;\r\n\t  };\r\n\r\n\t  _proto.at = function at(index) {\r\n\t    return this.nodes[index];\r\n\t  };\r\n\r\n\t  _proto.index = function index(child) {\r\n\t    if (typeof child === 'number') {\r\n\t      return child;\r\n\t    }\r\n\r\n\t    return this.nodes.indexOf(child);\r\n\t  };\r\n\r\n\t  _proto.removeChild = function removeChild(child) {\r\n\t    child = this.index(child);\r\n\t    this.at(child).parent = undefined;\r\n\t    this.nodes.splice(child, 1);\r\n\t    var index;\r\n\r\n\t    for (var id in this.indexes) {\r\n\t      index = this.indexes[id];\r\n\r\n\t      if (index >= child) {\r\n\t        this.indexes[id] = index - 1;\r\n\t      }\r\n\t    }\r\n\r\n\t    return this;\r\n\t  };\r\n\r\n\t  _proto.removeAll = function removeAll() {\r\n\t    for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done;) {\r\n\t      var node = _step.value;\r\n\t      node.parent = undefined;\r\n\t    }\r\n\r\n\t    this.nodes = [];\r\n\t    return this;\r\n\t  };\r\n\r\n\t  _proto.empty = function empty() {\r\n\t    return this.removeAll();\r\n\t  };\r\n\r\n\t  _proto.insertAfter = function insertAfter(oldNode, newNode) {\r\n\t    newNode.parent = this;\r\n\t    var oldIndex = this.index(oldNode);\r\n\t    this.nodes.splice(oldIndex + 1, 0, newNode);\r\n\t    newNode.parent = this;\r\n\t    var index;\r\n\r\n\t    for (var id in this.indexes) {\r\n\t      index = this.indexes[id];\r\n\r\n\t      if (oldIndex <= index) {\r\n\t        this.indexes[id] = index + 1;\r\n\t      }\r\n\t    }\r\n\r\n\t    return this;\r\n\t  };\r\n\r\n\t  _proto.insertBefore = function insertBefore(oldNode, newNode) {\r\n\t    newNode.parent = this;\r\n\t    var oldIndex = this.index(oldNode);\r\n\t    this.nodes.splice(oldIndex, 0, newNode);\r\n\t    newNode.parent = this;\r\n\t    var index;\r\n\r\n\t    for (var id in this.indexes) {\r\n\t      index = this.indexes[id];\r\n\r\n\t      if (index <= oldIndex) {\r\n\t        this.indexes[id] = index + 1;\r\n\t      }\r\n\t    }\r\n\r\n\t    return this;\r\n\t  };\r\n\r\n\t  _proto._findChildAtPosition = function _findChildAtPosition(line, col) {\r\n\t    var found = undefined;\r\n\t    this.each(function (node) {\r\n\t      if (node.atPosition) {\r\n\t        var foundChild = node.atPosition(line, col);\r\n\r\n\t        if (foundChild) {\r\n\t          found = foundChild;\r\n\t          return false;\r\n\t        }\r\n\t      } else if (node.isAtPosition(line, col)) {\r\n\t        found = node;\r\n\t        return false;\r\n\t      }\r\n\t    });\r\n\t    return found;\r\n\t  }\r\n\t  /**\r\n\t   * Return the most specific node at the line and column number given.\r\n\t   * The source location is based on the original parsed location, locations aren't\r\n\t   * updated as selector nodes are mutated.\r\n\t   * \r\n\t   * Note that this location is relative to the location of the first character\r\n\t   * of the selector, and not the location of the selector in the overall document\r\n\t   * when used in conjunction with postcss.\r\n\t   *\r\n\t   * If not found, returns undefined.\r\n\t   * @param {number} line The line number of the node to find. (1-based index)\r\n\t   * @param {number} col  The column number of the node to find. (1-based index)\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.atPosition = function atPosition(line, col) {\r\n\t    if (this.isAtPosition(line, col)) {\r\n\t      return this._findChildAtPosition(line, col) || this;\r\n\t    } else {\r\n\t      return undefined;\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto._inferEndPosition = function _inferEndPosition() {\r\n\t    if (this.last && this.last.source && this.last.source.end) {\r\n\t      this.source = this.source || {};\r\n\t      this.source.end = this.source.end || {};\r\n\t      Object.assign(this.source.end, this.last.source.end);\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.each = function each(callback) {\r\n\t    if (!this.lastEach) {\r\n\t      this.lastEach = 0;\r\n\t    }\r\n\r\n\t    if (!this.indexes) {\r\n\t      this.indexes = {};\r\n\t    }\r\n\r\n\t    this.lastEach++;\r\n\t    var id = this.lastEach;\r\n\t    this.indexes[id] = 0;\r\n\r\n\t    if (!this.length) {\r\n\t      return undefined;\r\n\t    }\r\n\r\n\t    var index, result;\r\n\r\n\t    while (this.indexes[id] < this.length) {\r\n\t      index = this.indexes[id];\r\n\t      result = callback(this.at(index), index);\r\n\r\n\t      if (result === false) {\r\n\t        break;\r\n\t      }\r\n\r\n\t      this.indexes[id] += 1;\r\n\t    }\r\n\r\n\t    delete this.indexes[id];\r\n\r\n\t    if (result === false) {\r\n\t      return false;\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.walk = function walk(callback) {\r\n\t    return this.each(function (node, i) {\r\n\t      var result = callback(node, i);\r\n\r\n\t      if (result !== false && node.length) {\r\n\t        result = node.walk(callback);\r\n\t      }\r\n\r\n\t      if (result === false) {\r\n\t        return false;\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.walkAttributes = function walkAttributes(callback) {\r\n\t    var _this2 = this;\r\n\r\n\t    return this.walk(function (selector) {\r\n\t      if (selector.type === types$1.ATTRIBUTE) {\r\n\t        return callback.call(_this2, selector);\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.walkClasses = function walkClasses(callback) {\r\n\t    var _this3 = this;\r\n\r\n\t    return this.walk(function (selector) {\r\n\t      if (selector.type === types$1.CLASS) {\r\n\t        return callback.call(_this3, selector);\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.walkCombinators = function walkCombinators(callback) {\r\n\t    var _this4 = this;\r\n\r\n\t    return this.walk(function (selector) {\r\n\t      if (selector.type === types$1.COMBINATOR) {\r\n\t        return callback.call(_this4, selector);\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.walkComments = function walkComments(callback) {\r\n\t    var _this5 = this;\r\n\r\n\t    return this.walk(function (selector) {\r\n\t      if (selector.type === types$1.COMMENT) {\r\n\t        return callback.call(_this5, selector);\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.walkIds = function walkIds(callback) {\r\n\t    var _this6 = this;\r\n\r\n\t    return this.walk(function (selector) {\r\n\t      if (selector.type === types$1.ID) {\r\n\t        return callback.call(_this6, selector);\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.walkNesting = function walkNesting(callback) {\r\n\t    var _this7 = this;\r\n\r\n\t    return this.walk(function (selector) {\r\n\t      if (selector.type === types$1.NESTING) {\r\n\t        return callback.call(_this7, selector);\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.walkPseudos = function walkPseudos(callback) {\r\n\t    var _this8 = this;\r\n\r\n\t    return this.walk(function (selector) {\r\n\t      if (selector.type === types$1.PSEUDO) {\r\n\t        return callback.call(_this8, selector);\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.walkTags = function walkTags(callback) {\r\n\t    var _this9 = this;\r\n\r\n\t    return this.walk(function (selector) {\r\n\t      if (selector.type === types$1.TAG) {\r\n\t        return callback.call(_this9, selector);\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.walkUniversals = function walkUniversals(callback) {\r\n\t    var _this10 = this;\r\n\r\n\t    return this.walk(function (selector) {\r\n\t      if (selector.type === types$1.UNIVERSAL) {\r\n\t        return callback.call(_this10, selector);\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.split = function split(callback) {\r\n\t    var _this11 = this;\r\n\r\n\t    var current = [];\r\n\t    return this.reduce(function (memo, node, index) {\r\n\t      var split = callback.call(_this11, node);\r\n\t      current.push(node);\r\n\r\n\t      if (split) {\r\n\t        memo.push(current);\r\n\t        current = [];\r\n\t      } else if (index === _this11.length - 1) {\r\n\t        memo.push(current);\r\n\t      }\r\n\r\n\t      return memo;\r\n\t    }, []);\r\n\t  };\r\n\r\n\t  _proto.map = function map(callback) {\r\n\t    return this.nodes.map(callback);\r\n\t  };\r\n\r\n\t  _proto.reduce = function reduce(callback, memo) {\r\n\t    return this.nodes.reduce(callback, memo);\r\n\t  };\r\n\r\n\t  _proto.every = function every(callback) {\r\n\t    return this.nodes.every(callback);\r\n\t  };\r\n\r\n\t  _proto.some = function some(callback) {\r\n\t    return this.nodes.some(callback);\r\n\t  };\r\n\r\n\t  _proto.filter = function filter(callback) {\r\n\t    return this.nodes.filter(callback);\r\n\t  };\r\n\r\n\t  _proto.sort = function sort(callback) {\r\n\t    return this.nodes.sort(callback);\r\n\t  };\r\n\r\n\t  _proto.toString = function toString() {\r\n\t    return this.map(String).join('');\r\n\t  };\r\n\r\n\t  _createClass(Container, [{\r\n\t    key: \"first\",\r\n\t    get: function get() {\r\n\t      return this.at(0);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"last\",\r\n\t    get: function get() {\r\n\t      return this.at(this.length - 1);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"length\",\r\n\t    get: function get() {\r\n\t      return this.nodes.length;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return Container;\r\n\t}(_node[\"default\"]);\r\n\r\n\texports[\"default\"] = Container;\r\n\tmodule.exports = exports.default;\r\n} (container, containerExports));\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _container = _interopRequireDefault(containerExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Root = /*#__PURE__*/function (_Container) {\r\n\t  _inheritsLoose(Root, _Container);\r\n\r\n\t  function Root(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Container.call(this, opts) || this;\r\n\t    _this.type = _types.ROOT;\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  var _proto = Root.prototype;\r\n\r\n\t  _proto.toString = function toString() {\r\n\t    var str = this.reduce(function (memo, selector) {\r\n\t      memo.push(String(selector));\r\n\t      return memo;\r\n\t    }, []).join(',');\r\n\t    return this.trailingComma ? str + ',' : str;\r\n\t  };\r\n\r\n\t  _proto.error = function error(message, options) {\r\n\t    if (this._error) {\r\n\t      return this._error(message, options);\r\n\t    } else {\r\n\t      return new Error(message);\r\n\t    }\r\n\t  };\r\n\r\n\t  _createClass(Root, [{\r\n\t    key: \"errorGenerator\",\r\n\t    set: function set(handler) {\r\n\t      this._error = handler;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return Root;\r\n\t}(_container[\"default\"]);\r\n\r\n\texports[\"default\"] = Root;\r\n\tmodule.exports = exports.default;\r\n} (root$1, rootExports));\r\n\r\nvar selectorExports = {};\r\nvar selector$1 = {\r\n  get exports(){ return selectorExports; },\r\n  set exports(v){ selectorExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _container = _interopRequireDefault(containerExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Selector = /*#__PURE__*/function (_Container) {\r\n\t  _inheritsLoose(Selector, _Container);\r\n\r\n\t  function Selector(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Container.call(this, opts) || this;\r\n\t    _this.type = _types.SELECTOR;\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  return Selector;\r\n\t}(_container[\"default\"]);\r\n\r\n\texports[\"default\"] = Selector;\r\n\tmodule.exports = exports.default;\r\n} (selector$1, selectorExports));\r\n\r\nvar classNameExports = {};\r\nvar className$1 = {\r\n  get exports(){ return classNameExports; },\r\n  set exports(v){ classNameExports = v; },\r\n};\r\n\r\n/*! https://mths.be/cssesc v3.0.0 by @mathias */\r\n\r\nvar object = {};\r\nvar hasOwnProperty = object.hasOwnProperty;\r\nvar merge$2 = function merge(options, defaults) {\r\n\tif (!options) {\r\n\t\treturn defaults;\r\n\t}\r\n\tvar result = {};\r\n\tfor (var key in defaults) {\r\n\t\t// `if (defaults.hasOwnProperty(key) { … }` is not needed here, since\r\n\t\t// only recognized option names are used.\r\n\t\tresult[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];\r\n\t}\r\n\treturn result;\r\n};\r\n\r\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\r\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\r\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\r\n\r\n// https://mathiasbynens.be/notes/css-escapes#css\r\nvar cssesc = function cssesc(string, options) {\r\n\toptions = merge$2(options, cssesc.options);\r\n\tif (options.quotes != 'single' && options.quotes != 'double') {\r\n\t\toptions.quotes = 'single';\r\n\t}\r\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\r\n\tvar isIdentifier = options.isIdentifier;\r\n\r\n\tvar firstChar = string.charAt(0);\r\n\tvar output = '';\r\n\tvar counter = 0;\r\n\tvar length = string.length;\r\n\twhile (counter < length) {\r\n\t\tvar character = string.charAt(counter++);\r\n\t\tvar codePoint = character.charCodeAt();\r\n\t\tvar value = void 0;\r\n\t\t// If it’s not a printable ASCII character…\r\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\r\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\r\n\t\t\t\t// It’s a high surrogate, and there is a next character.\r\n\t\t\t\tvar extra = string.charCodeAt(counter++);\r\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\r\n\t\t\t\t\t// next character is low surrogate\r\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// It’s an unmatched surrogate; only append this code unit, in case\r\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\r\n\t\t\t\t\tcounter--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\r\n\t\t} else {\r\n\t\t\tif (options.escapeEverything) {\r\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\r\n\t\t\t\t\tvalue = '\\\\' + character;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\r\n\t\t\t\t}\r\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\r\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\r\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\r\n\t\t\t\tvalue = '\\\\' + character;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = character;\r\n\t\t\t}\r\n\t\t}\r\n\t\toutput += value;\r\n\t}\r\n\r\n\tif (isIdentifier) {\r\n\t\tif (/^-[-\\d]/.test(output)) {\r\n\t\t\toutput = '\\\\-' + output.slice(1);\r\n\t\t} else if (/\\d/.test(firstChar)) {\r\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\r\n\t// since they’re redundant. Note that this is only possible if the escape\r\n\t// sequence isn’t preceded by an odd number of backslashes.\r\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\r\n\t\tif ($1 && $1.length % 2) {\r\n\t\t\t// It’s not safe to remove the space, so don’t.\r\n\t\t\treturn $0;\r\n\t\t}\r\n\t\t// Strip the space.\r\n\t\treturn ($1 || '') + $2;\r\n\t});\r\n\r\n\tif (!isIdentifier && options.wrap) {\r\n\t\treturn quote + output + quote;\r\n\t}\r\n\treturn output;\r\n};\r\n\r\n// Expose default options (so they can be overridden globally).\r\ncssesc.options = {\r\n\t'escapeEverything': false,\r\n\t'isIdentifier': false,\r\n\t'quotes': 'single',\r\n\t'wrap': false\r\n};\r\n\r\ncssesc.version = '3.0.0';\r\n\r\nvar cssesc_1 = cssesc;\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _cssesc = _interopRequireDefault(cssesc_1);\r\n\r\n\tvar _util = util$6;\r\n\r\n\tvar _node = _interopRequireDefault(nodeExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar ClassName = /*#__PURE__*/function (_Node) {\r\n\t  _inheritsLoose(ClassName, _Node);\r\n\r\n\t  function ClassName(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Node.call(this, opts) || this;\r\n\t    _this.type = _types.CLASS;\r\n\t    _this._constructed = true;\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  var _proto = ClassName.prototype;\r\n\r\n\t  _proto.valueToString = function valueToString() {\r\n\t    return '.' + _Node.prototype.valueToString.call(this);\r\n\t  };\r\n\r\n\t  _createClass(ClassName, [{\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      return this._value;\r\n\t    },\r\n\t    set: function set(v) {\r\n\t      if (this._constructed) {\r\n\t        var escaped = (0, _cssesc[\"default\"])(v, {\r\n\t          isIdentifier: true\r\n\t        });\r\n\r\n\t        if (escaped !== v) {\r\n\t          (0, _util.ensureObject)(this, \"raws\");\r\n\t          this.raws.value = escaped;\r\n\t        } else if (this.raws) {\r\n\t          delete this.raws.value;\r\n\t        }\r\n\t      }\r\n\r\n\t      this._value = v;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return ClassName;\r\n\t}(_node[\"default\"]);\r\n\r\n\texports[\"default\"] = ClassName;\r\n\tmodule.exports = exports.default;\r\n} (className$1, classNameExports));\r\n\r\nvar commentExports = {};\r\nvar comment$2 = {\r\n  get exports(){ return commentExports; },\r\n  set exports(v){ commentExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _node = _interopRequireDefault(nodeExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Comment = /*#__PURE__*/function (_Node) {\r\n\t  _inheritsLoose(Comment, _Node);\r\n\r\n\t  function Comment(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Node.call(this, opts) || this;\r\n\t    _this.type = _types.COMMENT;\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  return Comment;\r\n\t}(_node[\"default\"]);\r\n\r\n\texports[\"default\"] = Comment;\r\n\tmodule.exports = exports.default;\r\n} (comment$2, commentExports));\r\n\r\nvar idExports = {};\r\nvar id$1 = {\r\n  get exports(){ return idExports; },\r\n  set exports(v){ idExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _node = _interopRequireDefault(nodeExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar ID = /*#__PURE__*/function (_Node) {\r\n\t  _inheritsLoose(ID, _Node);\r\n\r\n\t  function ID(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Node.call(this, opts) || this;\r\n\t    _this.type = _types.ID;\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  var _proto = ID.prototype;\r\n\r\n\t  _proto.valueToString = function valueToString() {\r\n\t    return '#' + _Node.prototype.valueToString.call(this);\r\n\t  };\r\n\r\n\t  return ID;\r\n\t}(_node[\"default\"]);\r\n\r\n\texports[\"default\"] = ID;\r\n\tmodule.exports = exports.default;\r\n} (id$1, idExports));\r\n\r\nvar tagExports = {};\r\nvar tag$1 = {\r\n  get exports(){ return tagExports; },\r\n  set exports(v){ tagExports = v; },\r\n};\r\n\r\nvar namespaceExports = {};\r\nvar namespace = {\r\n  get exports(){ return namespaceExports; },\r\n  set exports(v){ namespaceExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _cssesc = _interopRequireDefault(cssesc_1);\r\n\r\n\tvar _util = util$6;\r\n\r\n\tvar _node = _interopRequireDefault(nodeExports);\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Namespace = /*#__PURE__*/function (_Node) {\r\n\t  _inheritsLoose(Namespace, _Node);\r\n\r\n\t  function Namespace() {\r\n\t    return _Node.apply(this, arguments) || this;\r\n\t  }\r\n\r\n\t  var _proto = Namespace.prototype;\r\n\r\n\t  _proto.qualifiedName = function qualifiedName(value) {\r\n\t    if (this.namespace) {\r\n\t      return this.namespaceString + \"|\" + value;\r\n\t    } else {\r\n\t      return value;\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.valueToString = function valueToString() {\r\n\t    return this.qualifiedName(_Node.prototype.valueToString.call(this));\r\n\t  };\r\n\r\n\t  _createClass(Namespace, [{\r\n\t    key: \"namespace\",\r\n\t    get: function get() {\r\n\t      return this._namespace;\r\n\t    },\r\n\t    set: function set(namespace) {\r\n\t      if (namespace === true || namespace === \"*\" || namespace === \"&\") {\r\n\t        this._namespace = namespace;\r\n\r\n\t        if (this.raws) {\r\n\t          delete this.raws.namespace;\r\n\t        }\r\n\r\n\t        return;\r\n\t      }\r\n\r\n\t      var escaped = (0, _cssesc[\"default\"])(namespace, {\r\n\t        isIdentifier: true\r\n\t      });\r\n\t      this._namespace = namespace;\r\n\r\n\t      if (escaped !== namespace) {\r\n\t        (0, _util.ensureObject)(this, \"raws\");\r\n\t        this.raws.namespace = escaped;\r\n\t      } else if (this.raws) {\r\n\t        delete this.raws.namespace;\r\n\t      }\r\n\t    }\r\n\t  }, {\r\n\t    key: \"ns\",\r\n\t    get: function get() {\r\n\t      return this._namespace;\r\n\t    },\r\n\t    set: function set(namespace) {\r\n\t      this.namespace = namespace;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"namespaceString\",\r\n\t    get: function get() {\r\n\t      if (this.namespace) {\r\n\t        var ns = this.stringifyProperty(\"namespace\");\r\n\r\n\t        if (ns === true) {\r\n\t          return '';\r\n\t        } else {\r\n\t          return ns;\r\n\t        }\r\n\t      } else {\r\n\t        return '';\r\n\t      }\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return Namespace;\r\n\t}(_node[\"default\"]);\r\n\r\n\texports[\"default\"] = Namespace;\r\n\tmodule.exports = exports.default;\r\n} (namespace, namespaceExports));\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _namespace = _interopRequireDefault(namespaceExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Tag = /*#__PURE__*/function (_Namespace) {\r\n\t  _inheritsLoose(Tag, _Namespace);\r\n\r\n\t  function Tag(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Namespace.call(this, opts) || this;\r\n\t    _this.type = _types.TAG;\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  return Tag;\r\n\t}(_namespace[\"default\"]);\r\n\r\n\texports[\"default\"] = Tag;\r\n\tmodule.exports = exports.default;\r\n} (tag$1, tagExports));\r\n\r\nvar stringExports = {};\r\nvar string$1 = {\r\n  get exports(){ return stringExports; },\r\n  set exports(v){ stringExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _node = _interopRequireDefault(nodeExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar String = /*#__PURE__*/function (_Node) {\r\n\t  _inheritsLoose(String, _Node);\r\n\r\n\t  function String(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Node.call(this, opts) || this;\r\n\t    _this.type = _types.STRING;\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  return String;\r\n\t}(_node[\"default\"]);\r\n\r\n\texports[\"default\"] = String;\r\n\tmodule.exports = exports.default;\r\n} (string$1, stringExports));\r\n\r\nvar pseudoExports = {};\r\nvar pseudo$1 = {\r\n  get exports(){ return pseudoExports; },\r\n  set exports(v){ pseudoExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _container = _interopRequireDefault(containerExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Pseudo = /*#__PURE__*/function (_Container) {\r\n\t  _inheritsLoose(Pseudo, _Container);\r\n\r\n\t  function Pseudo(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Container.call(this, opts) || this;\r\n\t    _this.type = _types.PSEUDO;\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  var _proto = Pseudo.prototype;\r\n\r\n\t  _proto.toString = function toString() {\r\n\t    var params = this.length ? '(' + this.map(String).join(',') + ')' : '';\r\n\t    return [this.rawSpaceBefore, this.stringifyProperty(\"value\"), params, this.rawSpaceAfter].join('');\r\n\t  };\r\n\r\n\t  return Pseudo;\r\n\t}(_container[\"default\"]);\r\n\r\n\texports[\"default\"] = Pseudo;\r\n\tmodule.exports = exports.default;\r\n} (pseudo$1, pseudoExports));\r\n\r\nvar attribute$1 = {};\r\n\r\n/**\r\n * For Node.js, simply re-export the core `util.deprecate` function.\r\n */\r\n\r\nvar node = require$$0$1.deprecate;\r\n\r\n(function (exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports.unescapeValue = unescapeValue;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _cssesc = _interopRequireDefault(cssesc_1);\r\n\r\n\tvar _unesc = _interopRequireDefault(unescExports);\r\n\r\n\tvar _namespace = _interopRequireDefault(namespaceExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tvar _CSSESC_QUOTE_OPTIONS;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar deprecate = node;\r\n\r\n\tvar WRAPPED_IN_QUOTES = /^('|\")([^]*)\\1$/;\r\n\tvar warnOfDeprecatedValueAssignment = deprecate(function () {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. \" + \"Call attribute.setValue() instead.\");\r\n\tvar warnOfDeprecatedQuotedAssignment = deprecate(function () {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\");\r\n\tvar warnOfDeprecatedConstructor = deprecate(function () {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\r\n\r\n\tfunction unescapeValue(value) {\r\n\t  var deprecatedUsage = false;\r\n\t  var quoteMark = null;\r\n\t  var unescaped = value;\r\n\t  var m = unescaped.match(WRAPPED_IN_QUOTES);\r\n\r\n\t  if (m) {\r\n\t    quoteMark = m[1];\r\n\t    unescaped = m[2];\r\n\t  }\r\n\r\n\t  unescaped = (0, _unesc[\"default\"])(unescaped);\r\n\r\n\t  if (unescaped !== value) {\r\n\t    deprecatedUsage = true;\r\n\t  }\r\n\r\n\t  return {\r\n\t    deprecatedUsage: deprecatedUsage,\r\n\t    unescaped: unescaped,\r\n\t    quoteMark: quoteMark\r\n\t  };\r\n\t}\r\n\r\n\tfunction handleDeprecatedContructorOpts(opts) {\r\n\t  if (opts.quoteMark !== undefined) {\r\n\t    return opts;\r\n\t  }\r\n\r\n\t  if (opts.value === undefined) {\r\n\t    return opts;\r\n\t  }\r\n\r\n\t  warnOfDeprecatedConstructor();\r\n\r\n\t  var _unescapeValue = unescapeValue(opts.value),\r\n\t      quoteMark = _unescapeValue.quoteMark,\r\n\t      unescaped = _unescapeValue.unescaped;\r\n\r\n\t  if (!opts.raws) {\r\n\t    opts.raws = {};\r\n\t  }\r\n\r\n\t  if (opts.raws.value === undefined) {\r\n\t    opts.raws.value = opts.value;\r\n\t  }\r\n\r\n\t  opts.value = unescaped;\r\n\t  opts.quoteMark = quoteMark;\r\n\t  return opts;\r\n\t}\r\n\r\n\tvar Attribute = /*#__PURE__*/function (_Namespace) {\r\n\t  _inheritsLoose(Attribute, _Namespace);\r\n\r\n\t  function Attribute(opts) {\r\n\t    var _this;\r\n\r\n\t    if (opts === void 0) {\r\n\t      opts = {};\r\n\t    }\r\n\r\n\t    _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;\r\n\t    _this.type = _types.ATTRIBUTE;\r\n\t    _this.raws = _this.raws || {};\r\n\t    Object.defineProperty(_this.raws, 'unquoted', {\r\n\t      get: deprecate(function () {\r\n\t        return _this.value;\r\n\t      }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\r\n\t      set: deprecate(function () {\r\n\t        return _this.value;\r\n\t      }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\r\n\t    });\r\n\t    _this._constructed = true;\r\n\t    return _this;\r\n\t  }\r\n\t  /**\r\n\t   * Returns the Attribute's value quoted such that it would be legal to use\r\n\t   * in the value of a css file. The original value's quotation setting\r\n\t   * used for stringification is left unchanged. See `setValue(value, options)`\r\n\t   * if you want to control the quote settings of a new value for the attribute.\r\n\t   *\r\n\t   * You can also change the quotation used for the current value by setting quoteMark.\r\n\t   *\r\n\t   * Options:\r\n\t   *   * quoteMark {'\"' | \"'\" | null} - Use this value to quote the value. If this\r\n\t   *     option is not set, the original value for quoteMark will be used. If\r\n\t   *     indeterminate, a double quote is used. The legal values are:\r\n\t   *     * `null` - the value will be unquoted and characters will be escaped as necessary.\r\n\t   *     * `'` - the value will be quoted with a single quote and single quotes are escaped.\r\n\t   *     * `\"` - the value will be quoted with a double quote and double quotes are escaped.\r\n\t   *   * preferCurrentQuoteMark {boolean} - if true, prefer the source quote mark\r\n\t   *     over the quoteMark option value.\r\n\t   *   * smart {boolean} - if true, will select a quote mark based on the value\r\n\t   *     and the other options specified here. See the `smartQuoteMark()`\r\n\t   *     method.\r\n\t   **/\r\n\r\n\r\n\t  var _proto = Attribute.prototype;\r\n\r\n\t  _proto.getQuotedValue = function getQuotedValue(options) {\r\n\t    if (options === void 0) {\r\n\t      options = {};\r\n\t    }\r\n\r\n\t    var quoteMark = this._determineQuoteMark(options);\r\n\r\n\t    var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];\r\n\t    var escaped = (0, _cssesc[\"default\"])(this._value, cssescopts);\r\n\t    return escaped;\r\n\t  };\r\n\r\n\t  _proto._determineQuoteMark = function _determineQuoteMark(options) {\r\n\t    return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);\r\n\t  }\r\n\t  /**\r\n\t   * Set the unescaped value with the specified quotation options. The value\r\n\t   * provided must not include any wrapping quote marks -- those quotes will\r\n\t   * be interpreted as part of the value and escaped accordingly.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.setValue = function setValue(value, options) {\r\n\t    if (options === void 0) {\r\n\t      options = {};\r\n\t    }\r\n\r\n\t    this._value = value;\r\n\t    this._quoteMark = this._determineQuoteMark(options);\r\n\r\n\t    this._syncRawValue();\r\n\t  }\r\n\t  /**\r\n\t   * Intelligently select a quoteMark value based on the value's contents. If\r\n\t   * the value is a legal CSS ident, it will not be quoted. Otherwise a quote\r\n\t   * mark will be picked that minimizes the number of escapes.\r\n\t   *\r\n\t   * If there's no clear winner, the quote mark from these options is used,\r\n\t   * then the source quote mark (this is inverted if `preferCurrentQuoteMark` is\r\n\t   * true). If the quoteMark is unspecified, a double quote is used.\r\n\t   *\r\n\t   * @param options This takes the quoteMark and preferCurrentQuoteMark options\r\n\t   * from the quoteValue method.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.smartQuoteMark = function smartQuoteMark(options) {\r\n\t    var v = this.value;\r\n\t    var numSingleQuotes = v.replace(/[^']/g, '').length;\r\n\t    var numDoubleQuotes = v.replace(/[^\"]/g, '').length;\r\n\r\n\t    if (numSingleQuotes + numDoubleQuotes === 0) {\r\n\t      var escaped = (0, _cssesc[\"default\"])(v, {\r\n\t        isIdentifier: true\r\n\t      });\r\n\r\n\t      if (escaped === v) {\r\n\t        return Attribute.NO_QUOTE;\r\n\t      } else {\r\n\t        var pref = this.preferredQuoteMark(options);\r\n\r\n\t        if (pref === Attribute.NO_QUOTE) {\r\n\t          // pick a quote mark that isn't none and see if it's smaller\r\n\t          var quote = this.quoteMark || options.quoteMark || Attribute.DOUBLE_QUOTE;\r\n\t          var opts = CSSESC_QUOTE_OPTIONS[quote];\r\n\t          var quoteValue = (0, _cssesc[\"default\"])(v, opts);\r\n\r\n\t          if (quoteValue.length < escaped.length) {\r\n\t            return quote;\r\n\t          }\r\n\t        }\r\n\r\n\t        return pref;\r\n\t      }\r\n\t    } else if (numDoubleQuotes === numSingleQuotes) {\r\n\t      return this.preferredQuoteMark(options);\r\n\t    } else if (numDoubleQuotes < numSingleQuotes) {\r\n\t      return Attribute.DOUBLE_QUOTE;\r\n\t    } else {\r\n\t      return Attribute.SINGLE_QUOTE;\r\n\t    }\r\n\t  }\r\n\t  /**\r\n\t   * Selects the preferred quote mark based on the options and the current quote mark value.\r\n\t   * If you want the quote mark to depend on the attribute value, call `smartQuoteMark(opts)`\r\n\t   * instead.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.preferredQuoteMark = function preferredQuoteMark(options) {\r\n\t    var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;\r\n\r\n\t    if (quoteMark === undefined) {\r\n\t      quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;\r\n\t    }\r\n\r\n\t    if (quoteMark === undefined) {\r\n\t      quoteMark = Attribute.DOUBLE_QUOTE;\r\n\t    }\r\n\r\n\t    return quoteMark;\r\n\t  };\r\n\r\n\t  _proto._syncRawValue = function _syncRawValue() {\r\n\t    var rawValue = (0, _cssesc[\"default\"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);\r\n\r\n\t    if (rawValue === this._value) {\r\n\t      if (this.raws) {\r\n\t        delete this.raws.value;\r\n\t      }\r\n\t    } else {\r\n\t      this.raws.value = rawValue;\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto._handleEscapes = function _handleEscapes(prop, value) {\r\n\t    if (this._constructed) {\r\n\t      var escaped = (0, _cssesc[\"default\"])(value, {\r\n\t        isIdentifier: true\r\n\t      });\r\n\r\n\t      if (escaped !== value) {\r\n\t        this.raws[prop] = escaped;\r\n\t      } else {\r\n\t        delete this.raws[prop];\r\n\t      }\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto._spacesFor = function _spacesFor(name) {\r\n\t    var attrSpaces = {\r\n\t      before: '',\r\n\t      after: ''\r\n\t    };\r\n\t    var spaces = this.spaces[name] || {};\r\n\t    var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};\r\n\t    return Object.assign(attrSpaces, spaces, rawSpaces);\r\n\t  };\r\n\r\n\t  _proto._stringFor = function _stringFor(name, spaceName, concat) {\r\n\t    if (spaceName === void 0) {\r\n\t      spaceName = name;\r\n\t    }\r\n\r\n\t    if (concat === void 0) {\r\n\t      concat = defaultAttrConcat;\r\n\t    }\r\n\r\n\t    var attrSpaces = this._spacesFor(spaceName);\r\n\r\n\t    return concat(this.stringifyProperty(name), attrSpaces);\r\n\t  }\r\n\t  /**\r\n\t   * returns the offset of the attribute part specified relative to the\r\n\t   * start of the node of the output string.\r\n\t   *\r\n\t   * * \"ns\" - alias for \"namespace\"\r\n\t   * * \"namespace\" - the namespace if it exists.\r\n\t   * * \"attribute\" - the attribute name\r\n\t   * * \"attributeNS\" - the start of the attribute or its namespace\r\n\t   * * \"operator\" - the match operator of the attribute\r\n\t   * * \"value\" - The value (string or identifier)\r\n\t   * * \"insensitive\" - the case insensitivity flag;\r\n\t   * @param part One of the possible values inside an attribute.\r\n\t   * @returns -1 if the name is invalid or the value doesn't exist in this attribute.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.offsetOf = function offsetOf(name) {\r\n\t    var count = 1;\r\n\r\n\t    var attributeSpaces = this._spacesFor(\"attribute\");\r\n\r\n\t    count += attributeSpaces.before.length;\r\n\r\n\t    if (name === \"namespace\" || name === \"ns\") {\r\n\t      return this.namespace ? count : -1;\r\n\t    }\r\n\r\n\t    if (name === \"attributeNS\") {\r\n\t      return count;\r\n\t    }\r\n\r\n\t    count += this.namespaceString.length;\r\n\r\n\t    if (this.namespace) {\r\n\t      count += 1;\r\n\t    }\r\n\r\n\t    if (name === \"attribute\") {\r\n\t      return count;\r\n\t    }\r\n\r\n\t    count += this.stringifyProperty(\"attribute\").length;\r\n\t    count += attributeSpaces.after.length;\r\n\r\n\t    var operatorSpaces = this._spacesFor(\"operator\");\r\n\r\n\t    count += operatorSpaces.before.length;\r\n\t    var operator = this.stringifyProperty(\"operator\");\r\n\r\n\t    if (name === \"operator\") {\r\n\t      return operator ? count : -1;\r\n\t    }\r\n\r\n\t    count += operator.length;\r\n\t    count += operatorSpaces.after.length;\r\n\r\n\t    var valueSpaces = this._spacesFor(\"value\");\r\n\r\n\t    count += valueSpaces.before.length;\r\n\t    var value = this.stringifyProperty(\"value\");\r\n\r\n\t    if (name === \"value\") {\r\n\t      return value ? count : -1;\r\n\t    }\r\n\r\n\t    count += value.length;\r\n\t    count += valueSpaces.after.length;\r\n\r\n\t    var insensitiveSpaces = this._spacesFor(\"insensitive\");\r\n\r\n\t    count += insensitiveSpaces.before.length;\r\n\r\n\t    if (name === \"insensitive\") {\r\n\t      return this.insensitive ? count : -1;\r\n\t    }\r\n\r\n\t    return -1;\r\n\t  };\r\n\r\n\t  _proto.toString = function toString() {\r\n\t    var _this2 = this;\r\n\r\n\t    var selector = [this.rawSpaceBefore, '['];\r\n\t    selector.push(this._stringFor('qualifiedAttribute', 'attribute'));\r\n\r\n\t    if (this.operator && (this.value || this.value === '')) {\r\n\t      selector.push(this._stringFor('operator'));\r\n\t      selector.push(this._stringFor('value'));\r\n\t      selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {\r\n\t        if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {\r\n\t          attrSpaces.before = \" \";\r\n\t        }\r\n\r\n\t        return defaultAttrConcat(attrValue, attrSpaces);\r\n\t      }));\r\n\t    }\r\n\r\n\t    selector.push(']');\r\n\t    selector.push(this.rawSpaceAfter);\r\n\t    return selector.join('');\r\n\t  };\r\n\r\n\t  _createClass(Attribute, [{\r\n\t    key: \"quoted\",\r\n\t    get: function get() {\r\n\t      var qm = this.quoteMark;\r\n\t      return qm === \"'\" || qm === '\"';\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      warnOfDeprecatedQuotedAssignment();\r\n\t    }\r\n\t    /**\r\n\t     * returns a single (`'`) or double (`\"`) quote character if the value is quoted.\r\n\t     * returns `null` if the value is not quoted.\r\n\t     * returns `undefined` if the quotation state is unknown (this can happen when\r\n\t     * the attribute is constructed without specifying a quote mark.)\r\n\t     */\r\n\r\n\t  }, {\r\n\t    key: \"quoteMark\",\r\n\t    get: function get() {\r\n\t      return this._quoteMark;\r\n\t    }\r\n\t    /**\r\n\t     * Set the quote mark to be used by this attribute's value.\r\n\t     * If the quote mark changes, the raw (escaped) value at `attr.raws.value` of the attribute\r\n\t     * value is updated accordingly.\r\n\t     *\r\n\t     * @param {\"'\" | '\"' | null} quoteMark The quote mark or `null` if the value should be unquoted.\r\n\t     */\r\n\t    ,\r\n\t    set: function set(quoteMark) {\r\n\t      if (!this._constructed) {\r\n\t        this._quoteMark = quoteMark;\r\n\t        return;\r\n\t      }\r\n\r\n\t      if (this._quoteMark !== quoteMark) {\r\n\t        this._quoteMark = quoteMark;\r\n\r\n\t        this._syncRawValue();\r\n\t      }\r\n\t    }\r\n\t  }, {\r\n\t    key: \"qualifiedAttribute\",\r\n\t    get: function get() {\r\n\t      return this.qualifiedName(this.raws.attribute || this.attribute);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"insensitiveFlag\",\r\n\t    get: function get() {\r\n\t      return this.insensitive ? 'i' : '';\r\n\t    }\r\n\t  }, {\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      return this._value;\r\n\t    },\r\n\t    set:\r\n\t    /**\r\n\t     * Before 3.0, the value had to be set to an escaped value including any wrapped\r\n\t     * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value\r\n\t     * is unescaped during parsing and any quote marks are removed.\r\n\t     *\r\n\t     * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,\r\n\t     * a deprecation warning is raised when the new value contains any characters that would\r\n\t     * require escaping (including if it contains wrapped quotes).\r\n\t     *\r\n\t     * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe\r\n\t     * how the new value is quoted.\r\n\t     */\r\n\t    function set(v) {\r\n\t      if (this._constructed) {\r\n\t        var _unescapeValue2 = unescapeValue(v),\r\n\t            deprecatedUsage = _unescapeValue2.deprecatedUsage,\r\n\t            unescaped = _unescapeValue2.unescaped,\r\n\t            quoteMark = _unescapeValue2.quoteMark;\r\n\r\n\t        if (deprecatedUsage) {\r\n\t          warnOfDeprecatedValueAssignment();\r\n\t        }\r\n\r\n\t        if (unescaped === this._value && quoteMark === this._quoteMark) {\r\n\t          return;\r\n\t        }\r\n\r\n\t        this._value = unescaped;\r\n\t        this._quoteMark = quoteMark;\r\n\r\n\t        this._syncRawValue();\r\n\t      } else {\r\n\t        this._value = v;\r\n\t      }\r\n\t    }\r\n\t  }, {\r\n\t    key: \"insensitive\",\r\n\t    get: function get() {\r\n\t      return this._insensitive;\r\n\t    }\r\n\t    /**\r\n\t     * Set the case insensitive flag.\r\n\t     * If the case insensitive flag changes, the raw (escaped) value at `attr.raws.insensitiveFlag`\r\n\t     * of the attribute is updated accordingly.\r\n\t     *\r\n\t     * @param {true | false} insensitive true if the attribute should match case-insensitively.\r\n\t     */\r\n\t    ,\r\n\t    set: function set(insensitive) {\r\n\t      if (!insensitive) {\r\n\t        this._insensitive = false; // \"i\" and \"I\" can be used in \"this.raws.insensitiveFlag\" to store the original notation.\r\n\t        // When setting `attr.insensitive = false` both should be erased to ensure correct serialization.\r\n\r\n\t        if (this.raws && (this.raws.insensitiveFlag === 'I' || this.raws.insensitiveFlag === 'i')) {\r\n\t          this.raws.insensitiveFlag = undefined;\r\n\t        }\r\n\t      }\r\n\r\n\t      this._insensitive = insensitive;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"attribute\",\r\n\t    get: function get() {\r\n\t      return this._attribute;\r\n\t    },\r\n\t    set: function set(name) {\r\n\t      this._handleEscapes(\"attribute\", name);\r\n\r\n\t      this._attribute = name;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return Attribute;\r\n\t}(_namespace[\"default\"]);\r\n\r\n\texports[\"default\"] = Attribute;\r\n\tAttribute.NO_QUOTE = null;\r\n\tAttribute.SINGLE_QUOTE = \"'\";\r\n\tAttribute.DOUBLE_QUOTE = '\"';\r\n\tvar CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {\r\n\t  \"'\": {\r\n\t    quotes: 'single',\r\n\t    wrap: true\r\n\t  },\r\n\t  '\"': {\r\n\t    quotes: 'double',\r\n\t    wrap: true\r\n\t  }\r\n\t}, _CSSESC_QUOTE_OPTIONS[null] = {\r\n\t  isIdentifier: true\r\n\t}, _CSSESC_QUOTE_OPTIONS);\r\n\r\n\tfunction defaultAttrConcat(attrValue, attrSpaces) {\r\n\t  return \"\" + attrSpaces.before + attrValue + attrSpaces.after;\r\n\t}\r\n} (attribute$1));\r\n\r\nvar universalExports = {};\r\nvar universal$1 = {\r\n  get exports(){ return universalExports; },\r\n  set exports(v){ universalExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _namespace = _interopRequireDefault(namespaceExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Universal = /*#__PURE__*/function (_Namespace) {\r\n\t  _inheritsLoose(Universal, _Namespace);\r\n\r\n\t  function Universal(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Namespace.call(this, opts) || this;\r\n\t    _this.type = _types.UNIVERSAL;\r\n\t    _this.value = '*';\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  return Universal;\r\n\t}(_namespace[\"default\"]);\r\n\r\n\texports[\"default\"] = Universal;\r\n\tmodule.exports = exports.default;\r\n} (universal$1, universalExports));\r\n\r\nvar combinatorExports = {};\r\nvar combinator$2 = {\r\n  get exports(){ return combinatorExports; },\r\n  set exports(v){ combinatorExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _node = _interopRequireDefault(nodeExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Combinator = /*#__PURE__*/function (_Node) {\r\n\t  _inheritsLoose(Combinator, _Node);\r\n\r\n\t  function Combinator(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Node.call(this, opts) || this;\r\n\t    _this.type = _types.COMBINATOR;\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  return Combinator;\r\n\t}(_node[\"default\"]);\r\n\r\n\texports[\"default\"] = Combinator;\r\n\tmodule.exports = exports.default;\r\n} (combinator$2, combinatorExports));\r\n\r\nvar nestingExports = {};\r\nvar nesting$1 = {\r\n  get exports(){ return nestingExports; },\r\n  set exports(v){ nestingExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _node = _interopRequireDefault(nodeExports);\r\n\r\n\tvar _types = types;\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\tvar Nesting = /*#__PURE__*/function (_Node) {\r\n\t  _inheritsLoose(Nesting, _Node);\r\n\r\n\t  function Nesting(opts) {\r\n\t    var _this;\r\n\r\n\t    _this = _Node.call(this, opts) || this;\r\n\t    _this.type = _types.NESTING;\r\n\t    _this.value = '&';\r\n\t    return _this;\r\n\t  }\r\n\r\n\t  return Nesting;\r\n\t}(_node[\"default\"]);\r\n\r\n\texports[\"default\"] = Nesting;\r\n\tmodule.exports = exports.default;\r\n} (nesting$1, nestingExports));\r\n\r\nvar sortAscendingExports = {};\r\nvar sortAscending = {\r\n  get exports(){ return sortAscendingExports; },\r\n  set exports(v){ sortAscendingExports = v; },\r\n};\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = sortAscending;\r\n\r\n\tfunction sortAscending(list) {\r\n\t  return list.sort(function (a, b) {\r\n\t    return a - b;\r\n\t  });\r\n\t}\r\n\tmodule.exports = exports.default;\r\n} (sortAscending, sortAscendingExports));\r\n\r\nvar tokenize = {};\r\n\r\nvar tokenTypes = {};\r\n\r\ntokenTypes.__esModule = true;\r\ntokenTypes.combinator = tokenTypes.word = tokenTypes.comment = tokenTypes.str = tokenTypes.tab = tokenTypes.newline = tokenTypes.feed = tokenTypes.cr = tokenTypes.backslash = tokenTypes.bang = tokenTypes.slash = tokenTypes.doubleQuote = tokenTypes.singleQuote = tokenTypes.space = tokenTypes.greaterThan = tokenTypes.pipe = tokenTypes.equals = tokenTypes.plus = tokenTypes.caret = tokenTypes.tilde = tokenTypes.dollar = tokenTypes.closeSquare = tokenTypes.openSquare = tokenTypes.closeParenthesis = tokenTypes.openParenthesis = tokenTypes.semicolon = tokenTypes.colon = tokenTypes.comma = tokenTypes.at = tokenTypes.asterisk = tokenTypes.ampersand = void 0;\r\nvar ampersand = 38; // `&`.charCodeAt(0);\r\n\r\ntokenTypes.ampersand = ampersand;\r\nvar asterisk = 42; // `*`.charCodeAt(0);\r\n\r\ntokenTypes.asterisk = asterisk;\r\nvar at = 64; // `@`.charCodeAt(0);\r\n\r\ntokenTypes.at = at;\r\nvar comma$1 = 44; // `,`.charCodeAt(0);\r\n\r\ntokenTypes.comma = comma$1;\r\nvar colon = 58; // `:`.charCodeAt(0);\r\n\r\ntokenTypes.colon = colon;\r\nvar semicolon$1 = 59; // `;`.charCodeAt(0);\r\n\r\ntokenTypes.semicolon = semicolon$1;\r\nvar openParenthesis = 40; // `(`.charCodeAt(0);\r\n\r\ntokenTypes.openParenthesis = openParenthesis;\r\nvar closeParenthesis = 41; // `)`.charCodeAt(0);\r\n\r\ntokenTypes.closeParenthesis = closeParenthesis;\r\nvar openSquare = 91; // `[`.charCodeAt(0);\r\n\r\ntokenTypes.openSquare = openSquare;\r\nvar closeSquare = 93; // `]`.charCodeAt(0);\r\n\r\ntokenTypes.closeSquare = closeSquare;\r\nvar dollar = 36; // `$`.charCodeAt(0);\r\n\r\ntokenTypes.dollar = dollar;\r\nvar tilde = 126; // `~`.charCodeAt(0);\r\n\r\ntokenTypes.tilde = tilde;\r\nvar caret = 94; // `^`.charCodeAt(0);\r\n\r\ntokenTypes.caret = caret;\r\nvar plus = 43; // `+`.charCodeAt(0);\r\n\r\ntokenTypes.plus = plus;\r\nvar equals = 61; // `=`.charCodeAt(0);\r\n\r\ntokenTypes.equals = equals;\r\nvar pipe = 124; // `|`.charCodeAt(0);\r\n\r\ntokenTypes.pipe = pipe;\r\nvar greaterThan = 62; // `>`.charCodeAt(0);\r\n\r\ntokenTypes.greaterThan = greaterThan;\r\nvar space = 32; // ` `.charCodeAt(0);\r\n\r\ntokenTypes.space = space;\r\nvar singleQuote = 39; // `'`.charCodeAt(0);\r\n\r\ntokenTypes.singleQuote = singleQuote;\r\nvar doubleQuote = 34; // `\"`.charCodeAt(0);\r\n\r\ntokenTypes.doubleQuote = doubleQuote;\r\nvar slash = 47; // `/`.charCodeAt(0);\r\n\r\ntokenTypes.slash = slash;\r\nvar bang = 33; // `!`.charCodeAt(0);\r\n\r\ntokenTypes.bang = bang;\r\nvar backslash = 92; // '\\\\'.charCodeAt(0);\r\n\r\ntokenTypes.backslash = backslash;\r\nvar cr = 13; // '\\r'.charCodeAt(0);\r\n\r\ntokenTypes.cr = cr;\r\nvar feed = 12; // '\\f'.charCodeAt(0);\r\n\r\ntokenTypes.feed = feed;\r\nvar newline = 10; // '\\n'.charCodeAt(0);\r\n\r\ntokenTypes.newline = newline;\r\nvar tab = 9; // '\\t'.charCodeAt(0);\r\n// Expose aliases primarily for readability.\r\n\r\ntokenTypes.tab = tab;\r\nvar str = singleQuote; // No good single character representation!\r\n\r\ntokenTypes.str = str;\r\nvar comment$1 = -1;\r\ntokenTypes.comment = comment$1;\r\nvar word = -2;\r\ntokenTypes.word = word;\r\nvar combinator$1 = -3;\r\ntokenTypes.combinator = combinator$1;\r\n\r\n(function (exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = tokenize;\r\n\texports.FIELDS = void 0;\r\n\r\n\tvar t = _interopRequireWildcard(tokenTypes);\r\n\r\n\tvar _unescapable, _wordDelimiters;\r\n\r\n\tfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\r\n\r\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\n\tvar unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);\r\n\tvar wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);\r\n\tvar hex = {};\r\n\tvar hexChars = \"0123456789abcdefABCDEF\";\r\n\r\n\tfor (var i = 0; i < hexChars.length; i++) {\r\n\t  hex[hexChars.charCodeAt(i)] = true;\r\n\t}\r\n\t/**\r\n\t *  Returns the last index of the bar css word\r\n\t * @param {string} css The string in which the word begins\r\n\t * @param {number} start The index into the string where word's first letter occurs\r\n\t */\r\n\r\n\r\n\tfunction consumeWord(css, start) {\r\n\t  var next = start;\r\n\t  var code;\r\n\r\n\t  do {\r\n\t    code = css.charCodeAt(next);\r\n\r\n\t    if (wordDelimiters[code]) {\r\n\t      return next - 1;\r\n\t    } else if (code === t.backslash) {\r\n\t      next = consumeEscape(css, next) + 1;\r\n\t    } else {\r\n\t      // All other characters are part of the word\r\n\t      next++;\r\n\t    }\r\n\t  } while (next < css.length);\r\n\r\n\t  return next - 1;\r\n\t}\r\n\t/**\r\n\t *  Returns the last index of the escape sequence\r\n\t * @param {string} css The string in which the sequence begins\r\n\t * @param {number} start The index into the string where escape character (`\\`) occurs.\r\n\t */\r\n\r\n\r\n\tfunction consumeEscape(css, start) {\r\n\t  var next = start;\r\n\t  var code = css.charCodeAt(next + 1);\r\n\r\n\t  if (unescapable[code]) ; else if (hex[code]) {\r\n\t    var hexDigits = 0; // consume up to 6 hex chars\r\n\r\n\t    do {\r\n\t      next++;\r\n\t      hexDigits++;\r\n\t      code = css.charCodeAt(next + 1);\r\n\t    } while (hex[code] && hexDigits < 6); // if fewer than 6 hex chars, a trailing space ends the escape\r\n\r\n\r\n\t    if (hexDigits < 6 && code === t.space) {\r\n\t      next++;\r\n\t    }\r\n\t  } else {\r\n\t    // the next char is part of the current word\r\n\t    next++;\r\n\t  }\r\n\r\n\t  return next;\r\n\t}\r\n\r\n\tvar FIELDS = {\r\n\t  TYPE: 0,\r\n\t  START_LINE: 1,\r\n\t  START_COL: 2,\r\n\t  END_LINE: 3,\r\n\t  END_COL: 4,\r\n\t  START_POS: 5,\r\n\t  END_POS: 6\r\n\t};\r\n\texports.FIELDS = FIELDS;\r\n\r\n\tfunction tokenize(input) {\r\n\t  var tokens = [];\r\n\t  var css = input.css.valueOf();\r\n\t  var _css = css,\r\n\t      length = _css.length;\r\n\t  var offset = -1;\r\n\t  var line = 1;\r\n\t  var start = 0;\r\n\t  var end = 0;\r\n\t  var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;\r\n\r\n\t  function unclosed(what, fix) {\r\n\t    if (input.safe) {\r\n\t      // fyi: this is never set to true.\r\n\t      css += fix;\r\n\t      next = css.length - 1;\r\n\t    } else {\r\n\t      throw input.error('Unclosed ' + what, line, start - offset, start);\r\n\t    }\r\n\t  }\r\n\r\n\t  while (start < length) {\r\n\t    code = css.charCodeAt(start);\r\n\r\n\t    if (code === t.newline) {\r\n\t      offset = start;\r\n\t      line += 1;\r\n\t    }\r\n\r\n\t    switch (code) {\r\n\t      case t.space:\r\n\t      case t.tab:\r\n\t      case t.newline:\r\n\t      case t.cr:\r\n\t      case t.feed:\r\n\t        next = start;\r\n\r\n\t        do {\r\n\t          next += 1;\r\n\t          code = css.charCodeAt(next);\r\n\r\n\t          if (code === t.newline) {\r\n\t            offset = next;\r\n\t            line += 1;\r\n\t          }\r\n\t        } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);\r\n\r\n\t        tokenType = t.space;\r\n\t        endLine = line;\r\n\t        endColumn = next - offset - 1;\r\n\t        end = next;\r\n\t        break;\r\n\r\n\t      case t.plus:\r\n\t      case t.greaterThan:\r\n\t      case t.tilde:\r\n\t      case t.pipe:\r\n\t        next = start;\r\n\r\n\t        do {\r\n\t          next += 1;\r\n\t          code = css.charCodeAt(next);\r\n\t        } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);\r\n\r\n\t        tokenType = t.combinator;\r\n\t        endLine = line;\r\n\t        endColumn = start - offset;\r\n\t        end = next;\r\n\t        break;\r\n\t      // Consume these characters as single tokens.\r\n\r\n\t      case t.asterisk:\r\n\t      case t.ampersand:\r\n\t      case t.bang:\r\n\t      case t.comma:\r\n\t      case t.equals:\r\n\t      case t.dollar:\r\n\t      case t.caret:\r\n\t      case t.openSquare:\r\n\t      case t.closeSquare:\r\n\t      case t.colon:\r\n\t      case t.semicolon:\r\n\t      case t.openParenthesis:\r\n\t      case t.closeParenthesis:\r\n\t        next = start;\r\n\t        tokenType = code;\r\n\t        endLine = line;\r\n\t        endColumn = start - offset;\r\n\t        end = next + 1;\r\n\t        break;\r\n\r\n\t      case t.singleQuote:\r\n\t      case t.doubleQuote:\r\n\t        quote = code === t.singleQuote ? \"'\" : '\"';\r\n\t        next = start;\r\n\r\n\t        do {\r\n\t          escaped = false;\r\n\t          next = css.indexOf(quote, next + 1);\r\n\r\n\t          if (next === -1) {\r\n\t            unclosed('quote', quote);\r\n\t          }\r\n\r\n\t          escapePos = next;\r\n\r\n\t          while (css.charCodeAt(escapePos - 1) === t.backslash) {\r\n\t            escapePos -= 1;\r\n\t            escaped = !escaped;\r\n\t          }\r\n\t        } while (escaped);\r\n\r\n\t        tokenType = t.str;\r\n\t        endLine = line;\r\n\t        endColumn = start - offset;\r\n\t        end = next + 1;\r\n\t        break;\r\n\r\n\t      default:\r\n\t        if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {\r\n\t          next = css.indexOf('*/', start + 2) + 1;\r\n\r\n\t          if (next === 0) {\r\n\t            unclosed('comment', '*/');\r\n\t          }\r\n\r\n\t          content = css.slice(start, next + 1);\r\n\t          lines = content.split('\\n');\r\n\t          last = lines.length - 1;\r\n\r\n\t          if (last > 0) {\r\n\t            nextLine = line + last;\r\n\t            nextOffset = next - lines[last].length;\r\n\t          } else {\r\n\t            nextLine = line;\r\n\t            nextOffset = offset;\r\n\t          }\r\n\r\n\t          tokenType = t.comment;\r\n\t          line = nextLine;\r\n\t          endLine = nextLine;\r\n\t          endColumn = next - nextOffset;\r\n\t        } else if (code === t.slash) {\r\n\t          next = start;\r\n\t          tokenType = code;\r\n\t          endLine = line;\r\n\t          endColumn = start - offset;\r\n\t          end = next + 1;\r\n\t        } else {\r\n\t          next = consumeWord(css, start);\r\n\t          tokenType = t.word;\r\n\t          endLine = line;\r\n\t          endColumn = next - offset;\r\n\t        }\r\n\r\n\t        end = next + 1;\r\n\t        break;\r\n\t    } // Ensure that the token structure remains consistent\r\n\r\n\r\n\t    tokens.push([tokenType, // [0] Token type\r\n\t    line, // [1] Starting line\r\n\t    start - offset, // [2] Starting column\r\n\t    endLine, // [3] Ending line\r\n\t    endColumn, // [4] Ending column\r\n\t    start, // [5] Start position / Source index\r\n\t    end // [6] End position\r\n\t    ]); // Reset offset for the next token\r\n\r\n\t    if (nextOffset) {\r\n\t      offset = nextOffset;\r\n\t      nextOffset = null;\r\n\t    }\r\n\r\n\t    start = end;\r\n\t  }\r\n\r\n\t  return tokens;\r\n\t}\r\n} (tokenize));\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _root = _interopRequireDefault(rootExports);\r\n\r\n\tvar _selector = _interopRequireDefault(selectorExports);\r\n\r\n\tvar _className = _interopRequireDefault(classNameExports);\r\n\r\n\tvar _comment = _interopRequireDefault(commentExports);\r\n\r\n\tvar _id = _interopRequireDefault(idExports);\r\n\r\n\tvar _tag = _interopRequireDefault(tagExports);\r\n\r\n\tvar _string = _interopRequireDefault(stringExports);\r\n\r\n\tvar _pseudo = _interopRequireDefault(pseudoExports);\r\n\r\n\tvar _attribute = _interopRequireWildcard(attribute$1);\r\n\r\n\tvar _universal = _interopRequireDefault(universalExports);\r\n\r\n\tvar _combinator = _interopRequireDefault(combinatorExports);\r\n\r\n\tvar _nesting = _interopRequireDefault(nestingExports);\r\n\r\n\tvar _sortAscending = _interopRequireDefault(sortAscendingExports);\r\n\r\n\tvar _tokenize = _interopRequireWildcard(tokenize);\r\n\r\n\tvar tokens = _interopRequireWildcard(tokenTypes);\r\n\r\n\tvar types$1 = _interopRequireWildcard(types);\r\n\r\n\tvar _util = util$6;\r\n\r\n\tvar _WHITESPACE_TOKENS, _Object$assign;\r\n\r\n\tfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\r\n\r\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n\tvar WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);\r\n\tvar WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));\r\n\r\n\tfunction tokenStart(token) {\r\n\t  return {\r\n\t    line: token[_tokenize.FIELDS.START_LINE],\r\n\t    column: token[_tokenize.FIELDS.START_COL]\r\n\t  };\r\n\t}\r\n\r\n\tfunction tokenEnd(token) {\r\n\t  return {\r\n\t    line: token[_tokenize.FIELDS.END_LINE],\r\n\t    column: token[_tokenize.FIELDS.END_COL]\r\n\t  };\r\n\t}\r\n\r\n\tfunction getSource(startLine, startColumn, endLine, endColumn) {\r\n\t  return {\r\n\t    start: {\r\n\t      line: startLine,\r\n\t      column: startColumn\r\n\t    },\r\n\t    end: {\r\n\t      line: endLine,\r\n\t      column: endColumn\r\n\t    }\r\n\t  };\r\n\t}\r\n\r\n\tfunction getTokenSource(token) {\r\n\t  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);\r\n\t}\r\n\r\n\tfunction getTokenSourceSpan(startToken, endToken) {\r\n\t  if (!startToken) {\r\n\t    return undefined;\r\n\t  }\r\n\r\n\t  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);\r\n\t}\r\n\r\n\tfunction unescapeProp(node, prop) {\r\n\t  var value = node[prop];\r\n\r\n\t  if (typeof value !== \"string\") {\r\n\t    return;\r\n\t  }\r\n\r\n\t  if (value.indexOf(\"\\\\\") !== -1) {\r\n\t    (0, _util.ensureObject)(node, 'raws');\r\n\t    node[prop] = (0, _util.unesc)(value);\r\n\r\n\t    if (node.raws[prop] === undefined) {\r\n\t      node.raws[prop] = value;\r\n\t    }\r\n\t  }\r\n\r\n\t  return node;\r\n\t}\r\n\r\n\tfunction indexesOf(array, item) {\r\n\t  var i = -1;\r\n\t  var indexes = [];\r\n\r\n\t  while ((i = array.indexOf(item, i + 1)) !== -1) {\r\n\t    indexes.push(i);\r\n\t  }\r\n\r\n\t  return indexes;\r\n\t}\r\n\r\n\tfunction uniqs() {\r\n\t  var list = Array.prototype.concat.apply([], arguments);\r\n\t  return list.filter(function (item, i) {\r\n\t    return i === list.indexOf(item);\r\n\t  });\r\n\t}\r\n\r\n\tvar Parser = /*#__PURE__*/function () {\r\n\t  function Parser(rule, options) {\r\n\t    if (options === void 0) {\r\n\t      options = {};\r\n\t    }\r\n\r\n\t    this.rule = rule;\r\n\t    this.options = Object.assign({\r\n\t      lossy: false,\r\n\t      safe: false\r\n\t    }, options);\r\n\t    this.position = 0;\r\n\t    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;\r\n\t    this.tokens = (0, _tokenize[\"default\"])({\r\n\t      css: this.css,\r\n\t      error: this._errorGenerator(),\r\n\t      safe: this.options.safe\r\n\t    });\r\n\t    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);\r\n\t    this.root = new _root[\"default\"]({\r\n\t      source: rootSource\r\n\t    });\r\n\t    this.root.errorGenerator = this._errorGenerator();\r\n\t    var selector = new _selector[\"default\"]({\r\n\t      source: {\r\n\t        start: {\r\n\t          line: 1,\r\n\t          column: 1\r\n\t        }\r\n\t      }\r\n\t    });\r\n\t    this.root.append(selector);\r\n\t    this.current = selector;\r\n\t    this.loop();\r\n\t  }\r\n\r\n\t  var _proto = Parser.prototype;\r\n\r\n\t  _proto._errorGenerator = function _errorGenerator() {\r\n\t    var _this = this;\r\n\r\n\t    return function (message, errorOptions) {\r\n\t      if (typeof _this.rule === 'string') {\r\n\t        return new Error(message);\r\n\t      }\r\n\r\n\t      return _this.rule.error(message, errorOptions);\r\n\t    };\r\n\t  };\r\n\r\n\t  _proto.attribute = function attribute() {\r\n\t    var attr = [];\r\n\t    var startingToken = this.currToken;\r\n\t    this.position++;\r\n\r\n\t    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\r\n\t      attr.push(this.currToken);\r\n\t      this.position++;\r\n\t    }\r\n\r\n\t    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\r\n\t      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\r\n\t    }\r\n\r\n\t    var len = attr.length;\r\n\t    var node = {\r\n\t      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),\r\n\t      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\r\n\t    };\r\n\r\n\t    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {\r\n\t      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);\r\n\t    }\r\n\r\n\t    var pos = 0;\r\n\t    var spaceBefore = '';\r\n\t    var commentBefore = '';\r\n\t    var lastAdded = null;\r\n\t    var spaceAfterMeaningfulToken = false;\r\n\r\n\t    while (pos < len) {\r\n\t      var token = attr[pos];\r\n\t      var content = this.content(token);\r\n\t      var next = attr[pos + 1];\r\n\r\n\t      switch (token[_tokenize.FIELDS.TYPE]) {\r\n\t        case tokens.space:\r\n\t          // if (\r\n\t          //     len === 1 ||\r\n\t          //     pos === 0 && this.content(next) === '|'\r\n\t          // ) {\r\n\t          //     return this.expected('attribute', token[TOKEN.START_POS], content);\r\n\t          // }\r\n\t          spaceAfterMeaningfulToken = true;\r\n\r\n\t          if (this.options.lossy) {\r\n\t            break;\r\n\t          }\r\n\r\n\t          if (lastAdded) {\r\n\t            (0, _util.ensureObject)(node, 'spaces', lastAdded);\r\n\t            var prevContent = node.spaces[lastAdded].after || '';\r\n\t            node.spaces[lastAdded].after = prevContent + content;\r\n\t            var existingComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;\r\n\r\n\t            if (existingComment) {\r\n\t              node.raws.spaces[lastAdded].after = existingComment + content;\r\n\t            }\r\n\t          } else {\r\n\t            spaceBefore = spaceBefore + content;\r\n\t            commentBefore = commentBefore + content;\r\n\t          }\r\n\r\n\t          break;\r\n\r\n\t        case tokens.asterisk:\r\n\t          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\r\n\t            node.operator = content;\r\n\t            lastAdded = 'operator';\r\n\t          } else if ((!node.namespace || lastAdded === \"namespace\" && !spaceAfterMeaningfulToken) && next) {\r\n\t            if (spaceBefore) {\r\n\t              (0, _util.ensureObject)(node, 'spaces', 'attribute');\r\n\t              node.spaces.attribute.before = spaceBefore;\r\n\t              spaceBefore = '';\r\n\t            }\r\n\r\n\t            if (commentBefore) {\r\n\t              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\r\n\t              node.raws.spaces.attribute.before = spaceBefore;\r\n\t              commentBefore = '';\r\n\t            }\r\n\r\n\t            node.namespace = (node.namespace || \"\") + content;\r\n\t            var rawValue = (0, _util.getProp)(node, 'raws', 'namespace') || null;\r\n\r\n\t            if (rawValue) {\r\n\t              node.raws.namespace += content;\r\n\t            }\r\n\r\n\t            lastAdded = 'namespace';\r\n\t          }\r\n\r\n\t          spaceAfterMeaningfulToken = false;\r\n\t          break;\r\n\r\n\t        case tokens.dollar:\r\n\t          if (lastAdded === \"value\") {\r\n\t            var oldRawValue = (0, _util.getProp)(node, 'raws', 'value');\r\n\t            node.value += \"$\";\r\n\r\n\t            if (oldRawValue) {\r\n\t              node.raws.value = oldRawValue + \"$\";\r\n\t            }\r\n\r\n\t            break;\r\n\t          }\r\n\r\n\t        // Falls through\r\n\r\n\t        case tokens.caret:\r\n\t          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\r\n\t            node.operator = content;\r\n\t            lastAdded = 'operator';\r\n\t          }\r\n\r\n\t          spaceAfterMeaningfulToken = false;\r\n\t          break;\r\n\r\n\t        case tokens.combinator:\r\n\t          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {\r\n\t            node.operator = content;\r\n\t            lastAdded = 'operator';\r\n\t          }\r\n\r\n\t          if (content !== '|') {\r\n\t            spaceAfterMeaningfulToken = false;\r\n\t            break;\r\n\t          }\r\n\r\n\t          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\r\n\t            node.operator = content;\r\n\t            lastAdded = 'operator';\r\n\t          } else if (!node.namespace && !node.attribute) {\r\n\t            node.namespace = true;\r\n\t          }\r\n\r\n\t          spaceAfterMeaningfulToken = false;\r\n\t          break;\r\n\r\n\t        case tokens.word:\r\n\t          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals && // this look-ahead probably fails with comment nodes involved.\r\n\t          !node.operator && !node.namespace) {\r\n\t            node.namespace = content;\r\n\t            lastAdded = 'namespace';\r\n\t          } else if (!node.attribute || lastAdded === \"attribute\" && !spaceAfterMeaningfulToken) {\r\n\t            if (spaceBefore) {\r\n\t              (0, _util.ensureObject)(node, 'spaces', 'attribute');\r\n\t              node.spaces.attribute.before = spaceBefore;\r\n\t              spaceBefore = '';\r\n\t            }\r\n\r\n\t            if (commentBefore) {\r\n\t              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\r\n\t              node.raws.spaces.attribute.before = commentBefore;\r\n\t              commentBefore = '';\r\n\t            }\r\n\r\n\t            node.attribute = (node.attribute || \"\") + content;\r\n\r\n\t            var _rawValue = (0, _util.getProp)(node, 'raws', 'attribute') || null;\r\n\r\n\t            if (_rawValue) {\r\n\t              node.raws.attribute += content;\r\n\t            }\r\n\r\n\t            lastAdded = 'attribute';\r\n\t          } else if (!node.value && node.value !== \"\" || lastAdded === \"value\" && !(spaceAfterMeaningfulToken || node.quoteMark)) {\r\n\t            var _unescaped = (0, _util.unesc)(content);\r\n\r\n\t            var _oldRawValue = (0, _util.getProp)(node, 'raws', 'value') || '';\r\n\r\n\t            var oldValue = node.value || '';\r\n\t            node.value = oldValue + _unescaped;\r\n\t            node.quoteMark = null;\r\n\r\n\t            if (_unescaped !== content || _oldRawValue) {\r\n\t              (0, _util.ensureObject)(node, 'raws');\r\n\t              node.raws.value = (_oldRawValue || oldValue) + content;\r\n\t            }\r\n\r\n\t            lastAdded = 'value';\r\n\t          } else {\r\n\t            var insensitive = content === 'i' || content === \"I\";\r\n\r\n\t            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {\r\n\t              node.insensitive = insensitive;\r\n\r\n\t              if (!insensitive || content === \"I\") {\r\n\t                (0, _util.ensureObject)(node, 'raws');\r\n\t                node.raws.insensitiveFlag = content;\r\n\t              }\r\n\r\n\t              lastAdded = 'insensitive';\r\n\r\n\t              if (spaceBefore) {\r\n\t                (0, _util.ensureObject)(node, 'spaces', 'insensitive');\r\n\t                node.spaces.insensitive.before = spaceBefore;\r\n\t                spaceBefore = '';\r\n\t              }\r\n\r\n\t              if (commentBefore) {\r\n\t                (0, _util.ensureObject)(node, 'raws', 'spaces', 'insensitive');\r\n\t                node.raws.spaces.insensitive.before = commentBefore;\r\n\t                commentBefore = '';\r\n\t              }\r\n\t            } else if (node.value || node.value === '') {\r\n\t              lastAdded = 'value';\r\n\t              node.value += content;\r\n\r\n\t              if (node.raws.value) {\r\n\t                node.raws.value += content;\r\n\t              }\r\n\t            }\r\n\t          }\r\n\r\n\t          spaceAfterMeaningfulToken = false;\r\n\t          break;\r\n\r\n\t        case tokens.str:\r\n\t          if (!node.attribute || !node.operator) {\r\n\t            return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\r\n\t              index: token[_tokenize.FIELDS.START_POS]\r\n\t            });\r\n\t          }\r\n\r\n\t          var _unescapeValue = (0, _attribute.unescapeValue)(content),\r\n\t              unescaped = _unescapeValue.unescaped,\r\n\t              quoteMark = _unescapeValue.quoteMark;\r\n\r\n\t          node.value = unescaped;\r\n\t          node.quoteMark = quoteMark;\r\n\t          lastAdded = 'value';\r\n\t          (0, _util.ensureObject)(node, 'raws');\r\n\t          node.raws.value = content;\r\n\t          spaceAfterMeaningfulToken = false;\r\n\t          break;\r\n\r\n\t        case tokens.equals:\r\n\t          if (!node.attribute) {\r\n\t            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);\r\n\t          }\r\n\r\n\t          if (node.value) {\r\n\t            return this.error('Unexpected \"=\" found; an operator was already defined.', {\r\n\t              index: token[_tokenize.FIELDS.START_POS]\r\n\t            });\r\n\t          }\r\n\r\n\t          node.operator = node.operator ? node.operator + content : content;\r\n\t          lastAdded = 'operator';\r\n\t          spaceAfterMeaningfulToken = false;\r\n\t          break;\r\n\r\n\t        case tokens.comment:\r\n\t          if (lastAdded) {\r\n\t            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {\r\n\t              var lastComment = (0, _util.getProp)(node, 'spaces', lastAdded, 'after') || '';\r\n\t              var rawLastComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;\r\n\t              (0, _util.ensureObject)(node, 'raws', 'spaces', lastAdded);\r\n\t              node.raws.spaces[lastAdded].after = rawLastComment + content;\r\n\t            } else {\r\n\t              var lastValue = node[lastAdded] || '';\r\n\t              var rawLastValue = (0, _util.getProp)(node, 'raws', lastAdded) || lastValue;\r\n\t              (0, _util.ensureObject)(node, 'raws');\r\n\t              node.raws[lastAdded] = rawLastValue + content;\r\n\t            }\r\n\t          } else {\r\n\t            commentBefore = commentBefore + content;\r\n\t          }\r\n\r\n\t          break;\r\n\r\n\t        default:\r\n\t          return this.error(\"Unexpected \\\"\" + content + \"\\\" found.\", {\r\n\t            index: token[_tokenize.FIELDS.START_POS]\r\n\t          });\r\n\t      }\r\n\r\n\t      pos++;\r\n\t    }\r\n\r\n\t    unescapeProp(node, \"attribute\");\r\n\t    unescapeProp(node, \"namespace\");\r\n\t    this.newNode(new _attribute[\"default\"](node));\r\n\t    this.position++;\r\n\t  }\r\n\t  /**\r\n\t   * return a node containing meaningless garbage up to (but not including) the specified token position.\r\n\t   * if the token position is negative, all remaining tokens are consumed.\r\n\t   *\r\n\t   * This returns an array containing a single string node if all whitespace,\r\n\t   * otherwise an array of comment nodes with space before and after.\r\n\t   *\r\n\t   * These tokens are not added to the current selector, the caller can add them or use them to amend\r\n\t   * a previous node's space metadata.\r\n\t   *\r\n\t   * In lossy mode, this returns only comments.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {\r\n\t    if (stopPosition < 0) {\r\n\t      stopPosition = this.tokens.length;\r\n\t    }\r\n\r\n\t    var startPosition = this.position;\r\n\t    var nodes = [];\r\n\t    var space = \"\";\r\n\t    var lastComment = undefined;\r\n\r\n\t    do {\r\n\t      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\r\n\t        if (!this.options.lossy) {\r\n\t          space += this.content();\r\n\t        }\r\n\t      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {\r\n\t        var spaces = {};\r\n\r\n\t        if (space) {\r\n\t          spaces.before = space;\r\n\t          space = \"\";\r\n\t        }\r\n\r\n\t        lastComment = new _comment[\"default\"]({\r\n\t          value: this.content(),\r\n\t          source: getTokenSource(this.currToken),\r\n\t          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\r\n\t          spaces: spaces\r\n\t        });\r\n\t        nodes.push(lastComment);\r\n\t      }\r\n\t    } while (++this.position < stopPosition);\r\n\r\n\t    if (space) {\r\n\t      if (lastComment) {\r\n\t        lastComment.spaces.after = space;\r\n\t      } else if (!this.options.lossy) {\r\n\t        var firstToken = this.tokens[startPosition];\r\n\t        var lastToken = this.tokens[this.position - 1];\r\n\t        nodes.push(new _string[\"default\"]({\r\n\t          value: '',\r\n\t          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),\r\n\t          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\r\n\t          spaces: {\r\n\t            before: space,\r\n\t            after: ''\r\n\t          }\r\n\t        }));\r\n\t      }\r\n\t    }\r\n\r\n\t    return nodes;\r\n\t  }\r\n\t  /**\r\n\t   *\r\n\t   * @param {*} nodes\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {\r\n\t    var _this2 = this;\r\n\r\n\t    if (requiredSpace === void 0) {\r\n\t      requiredSpace = false;\r\n\t    }\r\n\r\n\t    var space = \"\";\r\n\t    var rawSpace = \"\";\r\n\t    nodes.forEach(function (n) {\r\n\t      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);\r\n\r\n\t      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);\r\n\r\n\t      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);\r\n\t      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);\r\n\t    });\r\n\r\n\t    if (rawSpace === space) {\r\n\t      rawSpace = undefined;\r\n\t    }\r\n\r\n\t    var result = {\r\n\t      space: space,\r\n\t      rawSpace: rawSpace\r\n\t    };\r\n\t    return result;\r\n\t  };\r\n\r\n\t  _proto.isNamedCombinator = function isNamedCombinator(position) {\r\n\t    if (position === void 0) {\r\n\t      position = this.position;\r\n\t    }\r\n\r\n\t    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;\r\n\t  };\r\n\r\n\t  _proto.namedCombinator = function namedCombinator() {\r\n\t    if (this.isNamedCombinator()) {\r\n\t      var nameRaw = this.content(this.tokens[this.position + 1]);\r\n\t      var name = (0, _util.unesc)(nameRaw).toLowerCase();\r\n\t      var raws = {};\r\n\r\n\t      if (name !== nameRaw) {\r\n\t        raws.value = \"/\" + nameRaw + \"/\";\r\n\t      }\r\n\r\n\t      var node = new _combinator[\"default\"]({\r\n\t        value: \"/\" + name + \"/\",\r\n\t        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),\r\n\t        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\r\n\t        raws: raws\r\n\t      });\r\n\t      this.position = this.position + 3;\r\n\t      return node;\r\n\t    } else {\r\n\t      this.unexpected();\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.combinator = function combinator() {\r\n\t    var _this3 = this;\r\n\r\n\t    if (this.content() === '|') {\r\n\t      return this.namespace();\r\n\t    } // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.\r\n\r\n\r\n\t    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);\r\n\r\n\t    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {\r\n\t      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\r\n\r\n\t      if (nodes.length > 0) {\r\n\t        var last = this.current.last;\r\n\r\n\t        if (last) {\r\n\t          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),\r\n\t              space = _this$convertWhitespa.space,\r\n\t              rawSpace = _this$convertWhitespa.rawSpace;\r\n\r\n\t          if (rawSpace !== undefined) {\r\n\t            last.rawSpaceAfter += rawSpace;\r\n\t          }\r\n\r\n\t          last.spaces.after += space;\r\n\t        } else {\r\n\t          nodes.forEach(function (n) {\r\n\t            return _this3.newNode(n);\r\n\t          });\r\n\t        }\r\n\t      }\r\n\r\n\t      return;\r\n\t    }\r\n\r\n\t    var firstToken = this.currToken;\r\n\t    var spaceOrDescendantSelectorNodes = undefined;\r\n\r\n\t    if (nextSigTokenPos > this.position) {\r\n\t      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\r\n\t    }\r\n\r\n\t    var node;\r\n\r\n\t    if (this.isNamedCombinator()) {\r\n\t      node = this.namedCombinator();\r\n\t    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {\r\n\t      node = new _combinator[\"default\"]({\r\n\t        value: this.content(),\r\n\t        source: getTokenSource(this.currToken),\r\n\t        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]\r\n\t      });\r\n\t      this.position++;\r\n\t    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) ; else if (!spaceOrDescendantSelectorNodes) {\r\n\t      this.unexpected();\r\n\t    }\r\n\r\n\t    if (node) {\r\n\t      if (spaceOrDescendantSelectorNodes) {\r\n\t        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),\r\n\t            _space = _this$convertWhitespa2.space,\r\n\t            _rawSpace = _this$convertWhitespa2.rawSpace;\r\n\r\n\t        node.spaces.before = _space;\r\n\t        node.rawSpaceBefore = _rawSpace;\r\n\t      }\r\n\t    } else {\r\n\t      // descendant combinator\r\n\t      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),\r\n\t          _space2 = _this$convertWhitespa3.space,\r\n\t          _rawSpace2 = _this$convertWhitespa3.rawSpace;\r\n\r\n\t      if (!_rawSpace2) {\r\n\t        _rawSpace2 = _space2;\r\n\t      }\r\n\r\n\t      var spaces = {};\r\n\t      var raws = {\r\n\t        spaces: {}\r\n\t      };\r\n\r\n\t      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {\r\n\t        spaces.before = _space2.slice(0, _space2.length - 1);\r\n\t        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);\r\n\t      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {\r\n\t        spaces.after = _space2.slice(1);\r\n\t        raws.spaces.after = _rawSpace2.slice(1);\r\n\t      } else {\r\n\t        raws.value = _rawSpace2;\r\n\t      }\r\n\r\n\t      node = new _combinator[\"default\"]({\r\n\t        value: ' ',\r\n\t        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),\r\n\t        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\r\n\t        spaces: spaces,\r\n\t        raws: raws\r\n\t      });\r\n\t    }\r\n\r\n\t    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {\r\n\t      node.spaces.after = this.optionalSpace(this.content());\r\n\t      this.position++;\r\n\t    }\r\n\r\n\t    return this.newNode(node);\r\n\t  };\r\n\r\n\t  _proto.comma = function comma() {\r\n\t    if (this.position === this.tokens.length - 1) {\r\n\t      this.root.trailingComma = true;\r\n\t      this.position++;\r\n\t      return;\r\n\t    }\r\n\r\n\t    this.current._inferEndPosition();\r\n\r\n\t    var selector = new _selector[\"default\"]({\r\n\t      source: {\r\n\t        start: tokenStart(this.tokens[this.position + 1])\r\n\t      }\r\n\t    });\r\n\t    this.current.parent.append(selector);\r\n\t    this.current = selector;\r\n\t    this.position++;\r\n\t  };\r\n\r\n\t  _proto.comment = function comment() {\r\n\t    var current = this.currToken;\r\n\t    this.newNode(new _comment[\"default\"]({\r\n\t      value: this.content(),\r\n\t      source: getTokenSource(current),\r\n\t      sourceIndex: current[_tokenize.FIELDS.START_POS]\r\n\t    }));\r\n\t    this.position++;\r\n\t  };\r\n\r\n\t  _proto.error = function error(message, opts) {\r\n\t    throw this.root.error(message, opts);\r\n\t  };\r\n\r\n\t  _proto.missingBackslash = function missingBackslash() {\r\n\t    return this.error('Expected a backslash preceding the semicolon.', {\r\n\t      index: this.currToken[_tokenize.FIELDS.START_POS]\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.missingParenthesis = function missingParenthesis() {\r\n\t    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\r\n\t  };\r\n\r\n\t  _proto.missingSquareBracket = function missingSquareBracket() {\r\n\t    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\r\n\t  };\r\n\r\n\t  _proto.unexpected = function unexpected() {\r\n\t    return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[_tokenize.FIELDS.START_POS]);\r\n\t  };\r\n\r\n\t  _proto.namespace = function namespace() {\r\n\t    var before = this.prevToken && this.content(this.prevToken) || true;\r\n\r\n\t    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {\r\n\t      this.position++;\r\n\t      return this.word(before);\r\n\t    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {\r\n\t      this.position++;\r\n\t      return this.universal(before);\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.nesting = function nesting() {\r\n\t    if (this.nextToken) {\r\n\t      var nextContent = this.content(this.nextToken);\r\n\r\n\t      if (nextContent === \"|\") {\r\n\t        this.position++;\r\n\t        return;\r\n\t      }\r\n\t    }\r\n\r\n\t    var current = this.currToken;\r\n\t    this.newNode(new _nesting[\"default\"]({\r\n\t      value: this.content(),\r\n\t      source: getTokenSource(current),\r\n\t      sourceIndex: current[_tokenize.FIELDS.START_POS]\r\n\t    }));\r\n\t    this.position++;\r\n\t  };\r\n\r\n\t  _proto.parentheses = function parentheses() {\r\n\t    var last = this.current.last;\r\n\t    var unbalanced = 1;\r\n\t    this.position++;\r\n\r\n\t    if (last && last.type === types$1.PSEUDO) {\r\n\t      var selector = new _selector[\"default\"]({\r\n\t        source: {\r\n\t          start: tokenStart(this.tokens[this.position - 1])\r\n\t        }\r\n\t      });\r\n\t      var cache = this.current;\r\n\t      last.append(selector);\r\n\t      this.current = selector;\r\n\r\n\t      while (this.position < this.tokens.length && unbalanced) {\r\n\t        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\r\n\t          unbalanced++;\r\n\t        }\r\n\r\n\t        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\r\n\t          unbalanced--;\r\n\t        }\r\n\r\n\t        if (unbalanced) {\r\n\t          this.parse();\r\n\t        } else {\r\n\t          this.current.source.end = tokenEnd(this.currToken);\r\n\t          this.current.parent.source.end = tokenEnd(this.currToken);\r\n\t          this.position++;\r\n\t        }\r\n\t      }\r\n\r\n\t      this.current = cache;\r\n\t    } else {\r\n\t      // I think this case should be an error. It's used to implement a basic parse of media queries\r\n\t      // but I don't think it's a good idea.\r\n\t      var parenStart = this.currToken;\r\n\t      var parenValue = \"(\";\r\n\t      var parenEnd;\r\n\r\n\t      while (this.position < this.tokens.length && unbalanced) {\r\n\t        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\r\n\t          unbalanced++;\r\n\t        }\r\n\r\n\t        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\r\n\t          unbalanced--;\r\n\t        }\r\n\r\n\t        parenEnd = this.currToken;\r\n\t        parenValue += this.parseParenthesisToken(this.currToken);\r\n\t        this.position++;\r\n\t      }\r\n\r\n\t      if (last) {\r\n\t        last.appendToPropertyAndEscape(\"value\", parenValue, parenValue);\r\n\t      } else {\r\n\t        this.newNode(new _string[\"default\"]({\r\n\t          value: parenValue,\r\n\t          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),\r\n\t          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]\r\n\t        }));\r\n\t      }\r\n\t    }\r\n\r\n\t    if (unbalanced) {\r\n\t      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.pseudo = function pseudo() {\r\n\t    var _this4 = this;\r\n\r\n\t    var pseudoStr = '';\r\n\t    var startingToken = this.currToken;\r\n\r\n\t    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {\r\n\t      pseudoStr += this.content();\r\n\t      this.position++;\r\n\t    }\r\n\r\n\t    if (!this.currToken) {\r\n\t      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);\r\n\t    }\r\n\r\n\t    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {\r\n\t      this.splitWord(false, function (first, length) {\r\n\t        pseudoStr += first;\r\n\r\n\t        _this4.newNode(new _pseudo[\"default\"]({\r\n\t          value: pseudoStr,\r\n\t          source: getTokenSourceSpan(startingToken, _this4.currToken),\r\n\t          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\r\n\t        }));\r\n\r\n\t        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\r\n\t          _this4.error('Misplaced parenthesis.', {\r\n\t            index: _this4.nextToken[_tokenize.FIELDS.START_POS]\r\n\t          });\r\n\t        }\r\n\t      });\r\n\t    } else {\r\n\t      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.space = function space() {\r\n\t    var content = this.content(); // Handle space before and after the selector\r\n\r\n\t    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {\r\n\t      return node.type === 'comment';\r\n\t    })) {\r\n\t      this.spaces = this.optionalSpace(content);\r\n\t      this.position++;\r\n\t    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\r\n\t      this.current.last.spaces.after = this.optionalSpace(content);\r\n\t      this.position++;\r\n\t    } else {\r\n\t      this.combinator();\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.string = function string() {\r\n\t    var current = this.currToken;\r\n\t    this.newNode(new _string[\"default\"]({\r\n\t      value: this.content(),\r\n\t      source: getTokenSource(current),\r\n\t      sourceIndex: current[_tokenize.FIELDS.START_POS]\r\n\t    }));\r\n\t    this.position++;\r\n\t  };\r\n\r\n\t  _proto.universal = function universal(namespace) {\r\n\t    var nextToken = this.nextToken;\r\n\r\n\t    if (nextToken && this.content(nextToken) === '|') {\r\n\t      this.position++;\r\n\t      return this.namespace();\r\n\t    }\r\n\r\n\t    var current = this.currToken;\r\n\t    this.newNode(new _universal[\"default\"]({\r\n\t      value: this.content(),\r\n\t      source: getTokenSource(current),\r\n\t      sourceIndex: current[_tokenize.FIELDS.START_POS]\r\n\t    }), namespace);\r\n\t    this.position++;\r\n\t  };\r\n\r\n\t  _proto.splitWord = function splitWord(namespace, firstCallback) {\r\n\t    var _this5 = this;\r\n\r\n\t    var nextToken = this.nextToken;\r\n\t    var word = this.content();\r\n\r\n\t    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {\r\n\t      this.position++;\r\n\t      var current = this.content();\r\n\t      word += current;\r\n\r\n\t      if (current.lastIndexOf('\\\\') === current.length - 1) {\r\n\t        var next = this.nextToken;\r\n\r\n\t        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {\r\n\t          word += this.requiredSpace(this.content(next));\r\n\t          this.position++;\r\n\t        }\r\n\t      }\r\n\r\n\t      nextToken = this.nextToken;\r\n\t    }\r\n\r\n\t    var hasClass = indexesOf(word, '.').filter(function (i) {\r\n\t      // Allow escaped dot within class name\r\n\t      var escapedDot = word[i - 1] === '\\\\'; // Allow decimal numbers percent in @keyframes\r\n\r\n\t      var isKeyframesPercent = /^\\d+\\.\\d+%$/.test(word);\r\n\t      return !escapedDot && !isKeyframesPercent;\r\n\t    });\r\n\t    var hasId = indexesOf(word, '#').filter(function (i) {\r\n\t      return word[i - 1] !== '\\\\';\r\n\t    }); // Eliminate Sass interpolations from the list of id indexes\r\n\r\n\t    var interpolations = indexesOf(word, '#{');\r\n\r\n\t    if (interpolations.length) {\r\n\t      hasId = hasId.filter(function (hashIndex) {\r\n\t        return !~interpolations.indexOf(hashIndex);\r\n\t      });\r\n\t    }\r\n\r\n\t    var indices = (0, _sortAscending[\"default\"])(uniqs([0].concat(hasClass, hasId)));\r\n\t    indices.forEach(function (ind, i) {\r\n\t      var index = indices[i + 1] || word.length;\r\n\t      var value = word.slice(ind, index);\r\n\r\n\t      if (i === 0 && firstCallback) {\r\n\t        return firstCallback.call(_this5, value, indices.length);\r\n\t      }\r\n\r\n\t      var node;\r\n\t      var current = _this5.currToken;\r\n\t      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];\r\n\t      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));\r\n\r\n\t      if (~hasClass.indexOf(ind)) {\r\n\t        var classNameOpts = {\r\n\t          value: value.slice(1),\r\n\t          source: source,\r\n\t          sourceIndex: sourceIndex\r\n\t        };\r\n\t        node = new _className[\"default\"](unescapeProp(classNameOpts, \"value\"));\r\n\t      } else if (~hasId.indexOf(ind)) {\r\n\t        var idOpts = {\r\n\t          value: value.slice(1),\r\n\t          source: source,\r\n\t          sourceIndex: sourceIndex\r\n\t        };\r\n\t        node = new _id[\"default\"](unescapeProp(idOpts, \"value\"));\r\n\t      } else {\r\n\t        var tagOpts = {\r\n\t          value: value,\r\n\t          source: source,\r\n\t          sourceIndex: sourceIndex\r\n\t        };\r\n\t        unescapeProp(tagOpts, \"value\");\r\n\t        node = new _tag[\"default\"](tagOpts);\r\n\t      }\r\n\r\n\t      _this5.newNode(node, namespace); // Ensure that the namespace is used only once\r\n\r\n\r\n\t      namespace = null;\r\n\t    });\r\n\t    this.position++;\r\n\t  };\r\n\r\n\t  _proto.word = function word(namespace) {\r\n\t    var nextToken = this.nextToken;\r\n\r\n\t    if (nextToken && this.content(nextToken) === '|') {\r\n\t      this.position++;\r\n\t      return this.namespace();\r\n\t    }\r\n\r\n\t    return this.splitWord(namespace);\r\n\t  };\r\n\r\n\t  _proto.loop = function loop() {\r\n\t    while (this.position < this.tokens.length) {\r\n\t      this.parse(true);\r\n\t    }\r\n\r\n\t    this.current._inferEndPosition();\r\n\r\n\t    return this.root;\r\n\t  };\r\n\r\n\t  _proto.parse = function parse(throwOnParenthesis) {\r\n\t    switch (this.currToken[_tokenize.FIELDS.TYPE]) {\r\n\t      case tokens.space:\r\n\t        this.space();\r\n\t        break;\r\n\r\n\t      case tokens.comment:\r\n\t        this.comment();\r\n\t        break;\r\n\r\n\t      case tokens.openParenthesis:\r\n\t        this.parentheses();\r\n\t        break;\r\n\r\n\t      case tokens.closeParenthesis:\r\n\t        if (throwOnParenthesis) {\r\n\t          this.missingParenthesis();\r\n\t        }\r\n\r\n\t        break;\r\n\r\n\t      case tokens.openSquare:\r\n\t        this.attribute();\r\n\t        break;\r\n\r\n\t      case tokens.dollar:\r\n\t      case tokens.caret:\r\n\t      case tokens.equals:\r\n\t      case tokens.word:\r\n\t        this.word();\r\n\t        break;\r\n\r\n\t      case tokens.colon:\r\n\t        this.pseudo();\r\n\t        break;\r\n\r\n\t      case tokens.comma:\r\n\t        this.comma();\r\n\t        break;\r\n\r\n\t      case tokens.asterisk:\r\n\t        this.universal();\r\n\t        break;\r\n\r\n\t      case tokens.ampersand:\r\n\t        this.nesting();\r\n\t        break;\r\n\r\n\t      case tokens.slash:\r\n\t      case tokens.combinator:\r\n\t        this.combinator();\r\n\t        break;\r\n\r\n\t      case tokens.str:\r\n\t        this.string();\r\n\t        break;\r\n\t      // These cases throw; no break needed.\r\n\r\n\t      case tokens.closeSquare:\r\n\t        this.missingSquareBracket();\r\n\r\n\t      case tokens.semicolon:\r\n\t        this.missingBackslash();\r\n\r\n\t      default:\r\n\t        this.unexpected();\r\n\t    }\r\n\t  }\r\n\t  /**\r\n\t   * Helpers\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.expected = function expected(description, index, found) {\r\n\t    if (Array.isArray(description)) {\r\n\t      var last = description.pop();\r\n\t      description = description.join(', ') + \" or \" + last;\r\n\t    }\r\n\r\n\t    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';\r\n\r\n\t    if (!found) {\r\n\t      return this.error(\"Expected \" + an + \" \" + description + \".\", {\r\n\t        index: index\r\n\t      });\r\n\t    }\r\n\r\n\t    return this.error(\"Expected \" + an + \" \" + description + \", found \\\"\" + found + \"\\\" instead.\", {\r\n\t      index: index\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto.requiredSpace = function requiredSpace(space) {\r\n\t    return this.options.lossy ? ' ' : space;\r\n\t  };\r\n\r\n\t  _proto.optionalSpace = function optionalSpace(space) {\r\n\t    return this.options.lossy ? '' : space;\r\n\t  };\r\n\r\n\t  _proto.lossySpace = function lossySpace(space, required) {\r\n\t    if (this.options.lossy) {\r\n\t      return required ? ' ' : '';\r\n\t    } else {\r\n\t      return space;\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.parseParenthesisToken = function parseParenthesisToken(token) {\r\n\t    var content = this.content(token);\r\n\r\n\t    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {\r\n\t      return this.requiredSpace(content);\r\n\t    } else {\r\n\t      return content;\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto.newNode = function newNode(node, namespace) {\r\n\t    if (namespace) {\r\n\t      if (/^ +$/.test(namespace)) {\r\n\t        if (!this.options.lossy) {\r\n\t          this.spaces = (this.spaces || '') + namespace;\r\n\t        }\r\n\r\n\t        namespace = true;\r\n\t      }\r\n\r\n\t      node.namespace = namespace;\r\n\t      unescapeProp(node, \"namespace\");\r\n\t    }\r\n\r\n\t    if (this.spaces) {\r\n\t      node.spaces.before = this.spaces;\r\n\t      this.spaces = '';\r\n\t    }\r\n\r\n\t    return this.current.append(node);\r\n\t  };\r\n\r\n\t  _proto.content = function content(token) {\r\n\t    if (token === void 0) {\r\n\t      token = this.currToken;\r\n\t    }\r\n\r\n\t    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);\r\n\t  };\r\n\r\n\t  /**\r\n\t   * returns the index of the next non-whitespace, non-comment token.\r\n\t   * returns -1 if no meaningful token is found.\r\n\t   */\r\n\t  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {\r\n\t    if (startPosition === void 0) {\r\n\t      startPosition = this.position + 1;\r\n\t    }\r\n\r\n\t    var searchPosition = startPosition;\r\n\r\n\t    while (searchPosition < this.tokens.length) {\r\n\t      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {\r\n\t        searchPosition++;\r\n\t        continue;\r\n\t      } else {\r\n\t        return searchPosition;\r\n\t      }\r\n\t    }\r\n\r\n\t    return -1;\r\n\t  };\r\n\r\n\t  _createClass(Parser, [{\r\n\t    key: \"currToken\",\r\n\t    get: function get() {\r\n\t      return this.tokens[this.position];\r\n\t    }\r\n\t  }, {\r\n\t    key: \"nextToken\",\r\n\t    get: function get() {\r\n\t      return this.tokens[this.position + 1];\r\n\t    }\r\n\t  }, {\r\n\t    key: \"prevToken\",\r\n\t    get: function get() {\r\n\t      return this.tokens[this.position - 1];\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return Parser;\r\n\t}();\r\n\r\n\texports[\"default\"] = Parser;\r\n\tmodule.exports = exports.default;\r\n} (parser, parserExports));\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _parser = _interopRequireDefault(parserExports);\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tvar Processor = /*#__PURE__*/function () {\r\n\t  function Processor(func, options) {\r\n\t    this.func = func || function noop() {};\r\n\r\n\t    this.funcRes = null;\r\n\t    this.options = options;\r\n\t  }\r\n\r\n\t  var _proto = Processor.prototype;\r\n\r\n\t  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\r\n\t    if (options === void 0) {\r\n\t      options = {};\r\n\t    }\r\n\r\n\t    var merged = Object.assign({}, this.options, options);\r\n\r\n\t    if (merged.updateSelector === false) {\r\n\t      return false;\r\n\t    } else {\r\n\t      return typeof rule !== \"string\";\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto._isLossy = function _isLossy(options) {\r\n\t    if (options === void 0) {\r\n\t      options = {};\r\n\t    }\r\n\r\n\t    var merged = Object.assign({}, this.options, options);\r\n\r\n\t    if (merged.lossless === false) {\r\n\t      return true;\r\n\t    } else {\r\n\t      return false;\r\n\t    }\r\n\t  };\r\n\r\n\t  _proto._root = function _root(rule, options) {\r\n\t    if (options === void 0) {\r\n\t      options = {};\r\n\t    }\r\n\r\n\t    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\r\n\t    return parser.root;\r\n\t  };\r\n\r\n\t  _proto._parseOptions = function _parseOptions(options) {\r\n\t    return {\r\n\t      lossy: this._isLossy(options)\r\n\t    };\r\n\t  };\r\n\r\n\t  _proto._run = function _run(rule, options) {\r\n\t    var _this = this;\r\n\r\n\t    if (options === void 0) {\r\n\t      options = {};\r\n\t    }\r\n\r\n\t    return new Promise(function (resolve, reject) {\r\n\t      try {\r\n\t        var root = _this._root(rule, options);\r\n\r\n\t        Promise.resolve(_this.func(root)).then(function (transform) {\r\n\t          var string = undefined;\r\n\r\n\t          if (_this._shouldUpdateSelector(rule, options)) {\r\n\t            string = root.toString();\r\n\t            rule.selector = string;\r\n\t          }\r\n\r\n\t          return {\r\n\t            transform: transform,\r\n\t            root: root,\r\n\t            string: string\r\n\t          };\r\n\t        }).then(resolve, reject);\r\n\t      } catch (e) {\r\n\t        reject(e);\r\n\t        return;\r\n\t      }\r\n\t    });\r\n\t  };\r\n\r\n\t  _proto._runSync = function _runSync(rule, options) {\r\n\t    if (options === void 0) {\r\n\t      options = {};\r\n\t    }\r\n\r\n\t    var root = this._root(rule, options);\r\n\r\n\t    var transform = this.func(root);\r\n\r\n\t    if (transform && typeof transform.then === \"function\") {\r\n\t      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\r\n\t    }\r\n\r\n\t    var string = undefined;\r\n\r\n\t    if (options.updateSelector && typeof rule !== \"string\") {\r\n\t      string = root.toString();\r\n\t      rule.selector = string;\r\n\t    }\r\n\r\n\t    return {\r\n\t      transform: transform,\r\n\t      root: root,\r\n\t      string: string\r\n\t    };\r\n\t  }\r\n\t  /**\r\n\t   * Process rule into a selector AST.\r\n\t   *\r\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\r\n\t   * @param options The options for processing\r\n\t   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.ast = function ast(rule, options) {\r\n\t    return this._run(rule, options).then(function (result) {\r\n\t      return result.root;\r\n\t    });\r\n\t  }\r\n\t  /**\r\n\t   * Process rule into a selector AST synchronously.\r\n\t   *\r\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\r\n\t   * @param options The options for processing\r\n\t   * @returns {parser.Root} The AST of the selector after processing it.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.astSync = function astSync(rule, options) {\r\n\t    return this._runSync(rule, options).root;\r\n\t  }\r\n\t  /**\r\n\t   * Process a selector into a transformed value asynchronously\r\n\t   *\r\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\r\n\t   * @param options The options for processing\r\n\t   * @returns {Promise<any>} The value returned by the processor.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.transform = function transform(rule, options) {\r\n\t    return this._run(rule, options).then(function (result) {\r\n\t      return result.transform;\r\n\t    });\r\n\t  }\r\n\t  /**\r\n\t   * Process a selector into a transformed value synchronously.\r\n\t   *\r\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\r\n\t   * @param options The options for processing\r\n\t   * @returns {any} The value returned by the processor.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.transformSync = function transformSync(rule, options) {\r\n\t    return this._runSync(rule, options).transform;\r\n\t  }\r\n\t  /**\r\n\t   * Process a selector into a new selector string asynchronously.\r\n\t   *\r\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\r\n\t   * @param options The options for processing\r\n\t   * @returns {string} the selector after processing.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.process = function process(rule, options) {\r\n\t    return this._run(rule, options).then(function (result) {\r\n\t      return result.string || result.root.toString();\r\n\t    });\r\n\t  }\r\n\t  /**\r\n\t   * Process a selector into a new selector string synchronously.\r\n\t   *\r\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\r\n\t   * @param options The options for processing\r\n\t   * @returns {string} the selector after processing.\r\n\t   */\r\n\t  ;\r\n\r\n\t  _proto.processSync = function processSync(rule, options) {\r\n\t    var result = this._runSync(rule, options);\r\n\r\n\t    return result.string || result.root.toString();\r\n\t  };\r\n\r\n\t  return Processor;\r\n\t}();\r\n\r\n\texports[\"default\"] = Processor;\r\n\tmodule.exports = exports.default;\r\n} (processor, processorExports));\r\n\r\nvar selectors = {};\r\n\r\nvar constructors = {};\r\n\r\nconstructors.__esModule = true;\r\nconstructors.universal = constructors.tag = constructors.string = constructors.selector = constructors.root = constructors.pseudo = constructors.nesting = constructors.id = constructors.comment = constructors.combinator = constructors.className = constructors.attribute = void 0;\r\n\r\nvar _attribute = _interopRequireDefault(attribute$1);\r\n\r\nvar _className = _interopRequireDefault(classNameExports);\r\n\r\nvar _combinator = _interopRequireDefault(combinatorExports);\r\n\r\nvar _comment = _interopRequireDefault(commentExports);\r\n\r\nvar _id = _interopRequireDefault(idExports);\r\n\r\nvar _nesting = _interopRequireDefault(nestingExports);\r\n\r\nvar _pseudo = _interopRequireDefault(pseudoExports);\r\n\r\nvar _root = _interopRequireDefault(rootExports);\r\n\r\nvar _selector = _interopRequireDefault(selectorExports);\r\n\r\nvar _string = _interopRequireDefault(stringExports);\r\n\r\nvar _tag = _interopRequireDefault(tagExports);\r\n\r\nvar _universal = _interopRequireDefault(universalExports);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nvar attribute = function attribute(opts) {\r\n  return new _attribute[\"default\"](opts);\r\n};\r\n\r\nconstructors.attribute = attribute;\r\n\r\nvar className = function className(opts) {\r\n  return new _className[\"default\"](opts);\r\n};\r\n\r\nconstructors.className = className;\r\n\r\nvar combinator = function combinator(opts) {\r\n  return new _combinator[\"default\"](opts);\r\n};\r\n\r\nconstructors.combinator = combinator;\r\n\r\nvar comment = function comment(opts) {\r\n  return new _comment[\"default\"](opts);\r\n};\r\n\r\nconstructors.comment = comment;\r\n\r\nvar id = function id(opts) {\r\n  return new _id[\"default\"](opts);\r\n};\r\n\r\nconstructors.id = id;\r\n\r\nvar nesting = function nesting(opts) {\r\n  return new _nesting[\"default\"](opts);\r\n};\r\n\r\nconstructors.nesting = nesting;\r\n\r\nvar pseudo = function pseudo(opts) {\r\n  return new _pseudo[\"default\"](opts);\r\n};\r\n\r\nconstructors.pseudo = pseudo;\r\n\r\nvar root = function root(opts) {\r\n  return new _root[\"default\"](opts);\r\n};\r\n\r\nconstructors.root = root;\r\n\r\nvar selector = function selector(opts) {\r\n  return new _selector[\"default\"](opts);\r\n};\r\n\r\nconstructors.selector = selector;\r\n\r\nvar string = function string(opts) {\r\n  return new _string[\"default\"](opts);\r\n};\r\n\r\nconstructors.string = string;\r\n\r\nvar tag = function tag(opts) {\r\n  return new _tag[\"default\"](opts);\r\n};\r\n\r\nconstructors.tag = tag;\r\n\r\nvar universal = function universal(opts) {\r\n  return new _universal[\"default\"](opts);\r\n};\r\n\r\nconstructors.universal = universal;\r\n\r\nvar guards = {};\r\n\r\nguards.__esModule = true;\r\nguards.isNode = isNode;\r\nguards.isPseudoElement = isPseudoElement;\r\nguards.isPseudoClass = isPseudoClass;\r\nguards.isContainer = isContainer;\r\nguards.isNamespace = isNamespace;\r\nguards.isUniversal = guards.isTag = guards.isString = guards.isSelector = guards.isRoot = guards.isPseudo = guards.isNesting = guards.isIdentifier = guards.isComment = guards.isCombinator = guards.isClassName = guards.isAttribute = void 0;\r\n\r\nvar _types = types;\r\n\r\nvar _IS_TYPE;\r\n\r\nvar IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);\r\n\r\nfunction isNode(node) {\r\n  return typeof node === \"object\" && IS_TYPE[node.type];\r\n}\r\n\r\nfunction isNodeType(type, node) {\r\n  return isNode(node) && node.type === type;\r\n}\r\n\r\nvar isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);\r\nguards.isAttribute = isAttribute;\r\nvar isClassName = isNodeType.bind(null, _types.CLASS);\r\nguards.isClassName = isClassName;\r\nvar isCombinator = isNodeType.bind(null, _types.COMBINATOR);\r\nguards.isCombinator = isCombinator;\r\nvar isComment = isNodeType.bind(null, _types.COMMENT);\r\nguards.isComment = isComment;\r\nvar isIdentifier = isNodeType.bind(null, _types.ID);\r\nguards.isIdentifier = isIdentifier;\r\nvar isNesting = isNodeType.bind(null, _types.NESTING);\r\nguards.isNesting = isNesting;\r\nvar isPseudo = isNodeType.bind(null, _types.PSEUDO);\r\nguards.isPseudo = isPseudo;\r\nvar isRoot = isNodeType.bind(null, _types.ROOT);\r\nguards.isRoot = isRoot;\r\nvar isSelector = isNodeType.bind(null, _types.SELECTOR);\r\nguards.isSelector = isSelector;\r\nvar isString = isNodeType.bind(null, _types.STRING);\r\nguards.isString = isString;\r\nvar isTag = isNodeType.bind(null, _types.TAG);\r\nguards.isTag = isTag;\r\nvar isUniversal = isNodeType.bind(null, _types.UNIVERSAL);\r\nguards.isUniversal = isUniversal;\r\n\r\nfunction isPseudoElement(node) {\r\n  return isPseudo(node) && node.value && (node.value.startsWith(\"::\") || node.value.toLowerCase() === \":before\" || node.value.toLowerCase() === \":after\" || node.value.toLowerCase() === \":first-letter\" || node.value.toLowerCase() === \":first-line\");\r\n}\r\n\r\nfunction isPseudoClass(node) {\r\n  return isPseudo(node) && !isPseudoElement(node);\r\n}\r\n\r\nfunction isContainer(node) {\r\n  return !!(isNode(node) && node.walk);\r\n}\r\n\r\nfunction isNamespace(node) {\r\n  return isAttribute(node) || isTag(node);\r\n}\r\n\r\n(function (exports) {\r\n\r\n\texports.__esModule = true;\r\n\r\n\tvar _types = types;\r\n\r\n\tObject.keys(_types).forEach(function (key) {\r\n\t  if (key === \"default\" || key === \"__esModule\") return;\r\n\t  if (key in exports && exports[key] === _types[key]) return;\r\n\t  exports[key] = _types[key];\r\n\t});\r\n\r\n\tvar _constructors = constructors;\r\n\r\n\tObject.keys(_constructors).forEach(function (key) {\r\n\t  if (key === \"default\" || key === \"__esModule\") return;\r\n\t  if (key in exports && exports[key] === _constructors[key]) return;\r\n\t  exports[key] = _constructors[key];\r\n\t});\r\n\r\n\tvar _guards = guards;\r\n\r\n\tObject.keys(_guards).forEach(function (key) {\r\n\t  if (key === \"default\" || key === \"__esModule\") return;\r\n\t  if (key in exports && exports[key] === _guards[key]) return;\r\n\t  exports[key] = _guards[key];\r\n\t});\r\n} (selectors));\r\n\r\n(function (module, exports) {\r\n\r\n\texports.__esModule = true;\r\n\texports[\"default\"] = void 0;\r\n\r\n\tvar _processor = _interopRequireDefault(processorExports);\r\n\r\n\tvar selectors$1 = _interopRequireWildcard(selectors);\r\n\r\n\tfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\r\n\r\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\n\tvar parser = function parser(processor) {\r\n\t  return new _processor[\"default\"](processor);\r\n\t};\r\n\r\n\tObject.assign(parser, selectors$1);\r\n\tdelete parser.__esModule;\r\n\tvar _default = parser;\r\n\texports[\"default\"] = _default;\r\n\tmodule.exports = exports.default;\r\n} (dist, distExports));\r\n\r\nvar selectorParser = /*@__PURE__*/getDefaultExportFromCjs(distExports);\r\n\r\nconst animationNameRE = /^(-\\w+-)?animation-name$/;\r\nconst animationRE = /^(-\\w+-)?animation$/;\r\nconst scopedPlugin = (id = \"\") => {\r\n  const keyframes = /* @__PURE__ */ Object.create(null);\r\n  const shortId = id.replace(/^data-v-/, \"\");\r\n  return {\r\n    postcssPlugin: \"vue-sfc-scoped\",\r\n    Rule(rule) {\r\n      processRule(id, rule);\r\n    },\r\n    AtRule(node) {\r\n      if (/-?keyframes$/.test(node.name) && !node.params.endsWith(`-${shortId}`)) {\r\n        keyframes[node.params] = node.params = node.params + \"-\" + shortId;\r\n      }\r\n    },\r\n    OnceExit(root) {\r\n      if (Object.keys(keyframes).length) {\r\n        root.walkDecls((decl) => {\r\n          if (animationNameRE.test(decl.prop)) {\r\n            decl.value = decl.value.split(\",\").map((v) => keyframes[v.trim()] || v.trim()).join(\",\");\r\n          }\r\n          if (animationRE.test(decl.prop)) {\r\n            decl.value = decl.value.split(\",\").map((v) => {\r\n              const vals = v.trim().split(/\\s+/);\r\n              const i = vals.findIndex((val) => keyframes[val]);\r\n              if (i !== -1) {\r\n                vals.splice(i, 1, keyframes[vals[i]]);\r\n                return vals.join(\" \");\r\n              } else {\r\n                return v;\r\n              }\r\n            }).join(\",\");\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\nconst processedRules = /* @__PURE__ */ new WeakSet();\r\nfunction processRule(id, rule) {\r\n  if (processedRules.has(rule) || rule.parent && rule.parent.type === \"atrule\" && /-?keyframes$/.test(rule.parent.name)) {\r\n    return;\r\n  }\r\n  processedRules.add(rule);\r\n  rule.selector = selectorParser((selectorRoot) => {\r\n    selectorRoot.each((selector) => {\r\n      rewriteSelector(id, selector, selectorRoot);\r\n    });\r\n  }).processSync(rule.selector);\r\n}\r\nfunction rewriteSelector(id, selector, selectorRoot, slotted = false) {\r\n  let node = null;\r\n  let shouldInject = true;\r\n  selector.each((n) => {\r\n    if (n.type === \"combinator\" && (n.value === \">>>\" || n.value === \"/deep/\")) {\r\n      n.value = \" \";\r\n      n.spaces.before = n.spaces.after = \"\";\r\n      warn$1(\r\n        `the >>> and /deep/ combinators have been deprecated. Use :deep() instead.`\r\n      );\r\n      return false;\r\n    }\r\n    if (n.type === \"pseudo\") {\r\n      const { value } = n;\r\n      if (value === \":deep\" || value === \"::v-deep\") {\r\n        if (n.nodes.length) {\r\n          let last = n;\r\n          n.nodes[0].each((ss) => {\r\n            selector.insertAfter(last, ss);\r\n            last = ss;\r\n          });\r\n          const prev = selector.at(selector.index(n) - 1);\r\n          if (!prev || !isSpaceCombinator(prev)) {\r\n            selector.insertAfter(\r\n              n,\r\n              selectorParser.combinator({\r\n                value: \" \"\r\n              })\r\n            );\r\n          }\r\n          selector.removeChild(n);\r\n        } else {\r\n          warn$1(\r\n            `::v-deep usage as a combinator has been deprecated. Use :deep(<inner-selector>) instead.`\r\n          );\r\n          const prev = selector.at(selector.index(n) - 1);\r\n          if (prev && isSpaceCombinator(prev)) {\r\n            selector.removeChild(prev);\r\n          }\r\n          selector.removeChild(n);\r\n        }\r\n        return false;\r\n      }\r\n      if (value === \":slotted\" || value === \"::v-slotted\") {\r\n        rewriteSelector(\r\n          id,\r\n          n.nodes[0],\r\n          selectorRoot,\r\n          true\r\n          /* slotted */\r\n        );\r\n        let last = n;\r\n        n.nodes[0].each((ss) => {\r\n          selector.insertAfter(last, ss);\r\n          last = ss;\r\n        });\r\n        selector.removeChild(n);\r\n        shouldInject = false;\r\n        return false;\r\n      }\r\n      if (value === \":global\" || value === \"::v-global\") {\r\n        selectorRoot.insertAfter(selector, n.nodes[0]);\r\n        selectorRoot.removeChild(selector);\r\n        return false;\r\n      }\r\n    }\r\n    if (n.type !== \"pseudo\" && n.type !== \"combinator\") {\r\n      node = n;\r\n    }\r\n  });\r\n  if (node) {\r\n    node.spaces.after = \"\";\r\n  } else {\r\n    selector.first.spaces.before = \"\";\r\n  }\r\n  if (shouldInject) {\r\n    const idToAdd = slotted ? id + \"-s\" : id;\r\n    selector.insertAfter(\r\n      // If node is null it means we need to inject [id] at the start\r\n      // insertAfter can handle `null` here\r\n      node,\r\n      selectorParser.attribute({\r\n        attribute: idToAdd,\r\n        value: idToAdd,\r\n        raws: {},\r\n        quoteMark: `\"`\r\n      })\r\n    );\r\n  }\r\n}\r\nfunction isSpaceCombinator(node) {\r\n  return node.type === \"combinator\" && /^\\s+$/.test(node.value);\r\n}\r\nscopedPlugin.postcss = true;\r\nvar scopedPlugin$1 = scopedPlugin;\r\n\r\nvar sourceMap$1 = {};\r\n\r\nvar sourceMapGenerator = {};\r\n\r\nvar base64Vlq = {};\r\n\r\nvar base64$1 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\r\n\r\n/**\r\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\r\n */\r\nbase64$1.encode = function (number) {\r\n  if (0 <= number && number < intToCharMap.length) {\r\n    return intToCharMap[number];\r\n  }\r\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\r\n};\r\n\r\n/**\r\n * Decode a single base 64 character code digit to an integer. Returns -1 on\r\n * failure.\r\n */\r\nbase64$1.decode = function (charCode) {\r\n  var bigA = 65;     // 'A'\r\n  var bigZ = 90;     // 'Z'\r\n\r\n  var littleA = 97;  // 'a'\r\n  var littleZ = 122; // 'z'\r\n\r\n  var zero = 48;     // '0'\r\n  var nine = 57;     // '9'\r\n\r\n  var plus = 43;     // '+'\r\n  var slash = 47;    // '/'\r\n\r\n  var littleOffset = 26;\r\n  var numberOffset = 52;\r\n\r\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n  if (bigA <= charCode && charCode <= bigZ) {\r\n    return (charCode - bigA);\r\n  }\r\n\r\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\r\n  if (littleA <= charCode && charCode <= littleZ) {\r\n    return (charCode - littleA + littleOffset);\r\n  }\r\n\r\n  // 52 - 61: 0123456789\r\n  if (zero <= charCode && charCode <= nine) {\r\n    return (charCode - zero + numberOffset);\r\n  }\r\n\r\n  // 62: +\r\n  if (charCode == plus) {\r\n    return 62;\r\n  }\r\n\r\n  // 63: /\r\n  if (charCode == slash) {\r\n    return 63;\r\n  }\r\n\r\n  // Invalid base64 digit.\r\n  return -1;\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n *\r\n * Based on the Base 64 VLQ implementation in Closure Compiler:\r\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\r\n *\r\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above\r\n *    copyright notice, this list of conditions and the following\r\n *    disclaimer in the documentation and/or other materials provided\r\n *    with the distribution.\r\n *  * Neither the name of Google Inc. nor the names of its\r\n *    contributors may be used to endorse or promote products derived\r\n *    from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nvar base64 = base64$1;\r\n\r\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\r\n// length quantities we use in the source map spec, the first bit is the sign,\r\n// the next four bits are the actual value, and the 6th bit is the\r\n// continuation bit. The continuation bit tells us whether there are more\r\n// digits in this value following this digit.\r\n//\r\n//   Continuation\r\n//   |    Sign\r\n//   |    |\r\n//   V    V\r\n//   101011\r\n\r\nvar VLQ_BASE_SHIFT = 5;\r\n\r\n// binary: 100000\r\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\r\n\r\n// binary: 011111\r\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\r\n\r\n// binary: 100000\r\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\r\n\r\n/**\r\n * Converts from a two-complement value to a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\r\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\r\n */\r\nfunction toVLQSigned(aValue) {\r\n  return aValue < 0\r\n    ? ((-aValue) << 1) + 1\r\n    : (aValue << 1) + 0;\r\n}\r\n\r\n/**\r\n * Converts to a two-complement value from a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\r\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\r\n */\r\nfunction fromVLQSigned(aValue) {\r\n  var isNegative = (aValue & 1) === 1;\r\n  var shifted = aValue >> 1;\r\n  return isNegative\r\n    ? -shifted\r\n    : shifted;\r\n}\r\n\r\n/**\r\n * Returns the base 64 VLQ encoded value.\r\n */\r\nbase64Vlq.encode = function base64VLQ_encode(aValue) {\r\n  var encoded = \"\";\r\n  var digit;\r\n\r\n  var vlq = toVLQSigned(aValue);\r\n\r\n  do {\r\n    digit = vlq & VLQ_BASE_MASK;\r\n    vlq >>>= VLQ_BASE_SHIFT;\r\n    if (vlq > 0) {\r\n      // There are still more digits in this value, so we must make sure the\r\n      // continuation bit is marked.\r\n      digit |= VLQ_CONTINUATION_BIT;\r\n    }\r\n    encoded += base64.encode(digit);\r\n  } while (vlq > 0);\r\n\r\n  return encoded;\r\n};\r\n\r\n/**\r\n * Decodes the next base 64 VLQ value from the given string and returns the\r\n * value and the rest of the string via the out parameter.\r\n */\r\nbase64Vlq.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\r\n  var strLen = aStr.length;\r\n  var result = 0;\r\n  var shift = 0;\r\n  var continuation, digit;\r\n\r\n  do {\r\n    if (aIndex >= strLen) {\r\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\r\n    }\r\n\r\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\r\n    if (digit === -1) {\r\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\r\n    }\r\n\r\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\r\n    digit &= VLQ_BASE_MASK;\r\n    result = result + (digit << shift);\r\n    shift += VLQ_BASE_SHIFT;\r\n  } while (continuation);\r\n\r\n  aOutParam.value = fromVLQSigned(result);\r\n  aOutParam.rest = aIndex;\r\n};\r\n\r\nvar util$5 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n(function (exports) {\r\n\t/*\r\n\t * Copyright 2011 Mozilla Foundation and contributors\r\n\t * Licensed under the New BSD license. See LICENSE or:\r\n\t * http://opensource.org/licenses/BSD-3-Clause\r\n\t */\r\n\r\n\t/**\r\n\t * This is a helper function for getting values from parameter/options\r\n\t * objects.\r\n\t *\r\n\t * @param args The object we are extracting values from\r\n\t * @param name The name of the property we are getting.\r\n\t * @param defaultValue An optional value to return if the property is missing\r\n\t * from the object. If this is not specified and the property is missing, an\r\n\t * error will be thrown.\r\n\t */\r\n\tfunction getArg(aArgs, aName, aDefaultValue) {\r\n\t  if (aName in aArgs) {\r\n\t    return aArgs[aName];\r\n\t  } else if (arguments.length === 3) {\r\n\t    return aDefaultValue;\r\n\t  } else {\r\n\t    throw new Error('\"' + aName + '\" is a required argument.');\r\n\t  }\r\n\t}\r\n\texports.getArg = getArg;\r\n\r\n\tvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\r\n\tvar dataUrlRegexp = /^data:.+\\,.+$/;\r\n\r\n\tfunction urlParse(aUrl) {\r\n\t  var match = aUrl.match(urlRegexp);\r\n\t  if (!match) {\r\n\t    return null;\r\n\t  }\r\n\t  return {\r\n\t    scheme: match[1],\r\n\t    auth: match[2],\r\n\t    host: match[3],\r\n\t    port: match[4],\r\n\t    path: match[5]\r\n\t  };\r\n\t}\r\n\texports.urlParse = urlParse;\r\n\r\n\tfunction urlGenerate(aParsedUrl) {\r\n\t  var url = '';\r\n\t  if (aParsedUrl.scheme) {\r\n\t    url += aParsedUrl.scheme + ':';\r\n\t  }\r\n\t  url += '//';\r\n\t  if (aParsedUrl.auth) {\r\n\t    url += aParsedUrl.auth + '@';\r\n\t  }\r\n\t  if (aParsedUrl.host) {\r\n\t    url += aParsedUrl.host;\r\n\t  }\r\n\t  if (aParsedUrl.port) {\r\n\t    url += \":\" + aParsedUrl.port;\r\n\t  }\r\n\t  if (aParsedUrl.path) {\r\n\t    url += aParsedUrl.path;\r\n\t  }\r\n\t  return url;\r\n\t}\r\n\texports.urlGenerate = urlGenerate;\r\n\r\n\t/**\r\n\t * Normalizes a path, or the path portion of a URL:\r\n\t *\r\n\t * - Replaces consecutive slashes with one slash.\r\n\t * - Removes unnecessary '.' parts.\r\n\t * - Removes unnecessary '<dir>/..' parts.\r\n\t *\r\n\t * Based on code in the Node.js 'path' core module.\r\n\t *\r\n\t * @param aPath The path or url to normalize.\r\n\t */\r\n\tfunction normalize(aPath) {\r\n\t  var path = aPath;\r\n\t  var url = urlParse(aPath);\r\n\t  if (url) {\r\n\t    if (!url.path) {\r\n\t      return aPath;\r\n\t    }\r\n\t    path = url.path;\r\n\t  }\r\n\t  var isAbsolute = exports.isAbsolute(path);\r\n\r\n\t  var parts = path.split(/\\/+/);\r\n\t  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\r\n\t    part = parts[i];\r\n\t    if (part === '.') {\r\n\t      parts.splice(i, 1);\r\n\t    } else if (part === '..') {\r\n\t      up++;\r\n\t    } else if (up > 0) {\r\n\t      if (part === '') {\r\n\t        // The first part is blank if the path is absolute. Trying to go\r\n\t        // above the root is a no-op. Therefore we can remove all '..' parts\r\n\t        // directly after the root.\r\n\t        parts.splice(i + 1, up);\r\n\t        up = 0;\r\n\t      } else {\r\n\t        parts.splice(i, 2);\r\n\t        up--;\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  path = parts.join('/');\r\n\r\n\t  if (path === '') {\r\n\t    path = isAbsolute ? '/' : '.';\r\n\t  }\r\n\r\n\t  if (url) {\r\n\t    url.path = path;\r\n\t    return urlGenerate(url);\r\n\t  }\r\n\t  return path;\r\n\t}\r\n\texports.normalize = normalize;\r\n\r\n\t/**\r\n\t * Joins two paths/URLs.\r\n\t *\r\n\t * @param aRoot The root path or URL.\r\n\t * @param aPath The path or URL to be joined with the root.\r\n\t *\r\n\t * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\r\n\t *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\r\n\t *   first.\r\n\t * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\r\n\t *   is updated with the result and aRoot is returned. Otherwise the result\r\n\t *   is returned.\r\n\t *   - If aPath is absolute, the result is aPath.\r\n\t *   - Otherwise the two paths are joined with a slash.\r\n\t * - Joining for example 'http://' and 'www.example.com' is also supported.\r\n\t */\r\n\tfunction join(aRoot, aPath) {\r\n\t  if (aRoot === \"\") {\r\n\t    aRoot = \".\";\r\n\t  }\r\n\t  if (aPath === \"\") {\r\n\t    aPath = \".\";\r\n\t  }\r\n\t  var aPathUrl = urlParse(aPath);\r\n\t  var aRootUrl = urlParse(aRoot);\r\n\t  if (aRootUrl) {\r\n\t    aRoot = aRootUrl.path || '/';\r\n\t  }\r\n\r\n\t  // `join(foo, '//www.example.org')`\r\n\t  if (aPathUrl && !aPathUrl.scheme) {\r\n\t    if (aRootUrl) {\r\n\t      aPathUrl.scheme = aRootUrl.scheme;\r\n\t    }\r\n\t    return urlGenerate(aPathUrl);\r\n\t  }\r\n\r\n\t  if (aPathUrl || aPath.match(dataUrlRegexp)) {\r\n\t    return aPath;\r\n\t  }\r\n\r\n\t  // `join('http://', 'www.example.com')`\r\n\t  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\r\n\t    aRootUrl.host = aPath;\r\n\t    return urlGenerate(aRootUrl);\r\n\t  }\r\n\r\n\t  var joined = aPath.charAt(0) === '/'\r\n\t    ? aPath\r\n\t    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\r\n\r\n\t  if (aRootUrl) {\r\n\t    aRootUrl.path = joined;\r\n\t    return urlGenerate(aRootUrl);\r\n\t  }\r\n\t  return joined;\r\n\t}\r\n\texports.join = join;\r\n\r\n\texports.isAbsolute = function (aPath) {\r\n\t  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\r\n\t};\r\n\r\n\t/**\r\n\t * Make a path relative to a URL or another path.\r\n\t *\r\n\t * @param aRoot The root path or URL.\r\n\t * @param aPath The path or URL to be made relative to aRoot.\r\n\t */\r\n\tfunction relative(aRoot, aPath) {\r\n\t  if (aRoot === \"\") {\r\n\t    aRoot = \".\";\r\n\t  }\r\n\r\n\t  aRoot = aRoot.replace(/\\/$/, '');\r\n\r\n\t  // It is possible for the path to be above the root. In this case, simply\r\n\t  // checking whether the root is a prefix of the path won't work. Instead, we\r\n\t  // need to remove components from the root one by one, until either we find\r\n\t  // a prefix that fits, or we run out of components to remove.\r\n\t  var level = 0;\r\n\t  while (aPath.indexOf(aRoot + '/') !== 0) {\r\n\t    var index = aRoot.lastIndexOf(\"/\");\r\n\t    if (index < 0) {\r\n\t      return aPath;\r\n\t    }\r\n\r\n\t    // If the only part of the root that is left is the scheme (i.e. http://,\r\n\t    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\r\n\t    // have exhausted all components, so the path is not relative to the root.\r\n\t    aRoot = aRoot.slice(0, index);\r\n\t    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\r\n\t      return aPath;\r\n\t    }\r\n\r\n\t    ++level;\r\n\t  }\r\n\r\n\t  // Make sure we add a \"../\" for each component we removed from the root.\r\n\t  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\r\n\t}\r\n\texports.relative = relative;\r\n\r\n\tvar supportsNullProto = (function () {\r\n\t  var obj = Object.create(null);\r\n\t  return !('__proto__' in obj);\r\n\t}());\r\n\r\n\tfunction identity (s) {\r\n\t  return s;\r\n\t}\r\n\r\n\t/**\r\n\t * Because behavior goes wacky when you set `__proto__` on objects, we\r\n\t * have to prefix all the strings in our set with an arbitrary character.\r\n\t *\r\n\t * See https://github.com/mozilla/source-map/pull/31 and\r\n\t * https://github.com/mozilla/source-map/issues/30\r\n\t *\r\n\t * @param String aStr\r\n\t */\r\n\tfunction toSetString(aStr) {\r\n\t  if (isProtoString(aStr)) {\r\n\t    return '$' + aStr;\r\n\t  }\r\n\r\n\t  return aStr;\r\n\t}\r\n\texports.toSetString = supportsNullProto ? identity : toSetString;\r\n\r\n\tfunction fromSetString(aStr) {\r\n\t  if (isProtoString(aStr)) {\r\n\t    return aStr.slice(1);\r\n\t  }\r\n\r\n\t  return aStr;\r\n\t}\r\n\texports.fromSetString = supportsNullProto ? identity : fromSetString;\r\n\r\n\tfunction isProtoString(s) {\r\n\t  if (!s) {\r\n\t    return false;\r\n\t  }\r\n\r\n\t  var length = s.length;\r\n\r\n\t  if (length < 9 /* \"__proto__\".length */) {\r\n\t    return false;\r\n\t  }\r\n\r\n\t  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\r\n\t      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\r\n\t      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\r\n\t      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\r\n\t      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\r\n\t      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\r\n\t      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\r\n\t      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\r\n\t      s.charCodeAt(length - 9) !== 95  /* '_' */) {\r\n\t    return false;\r\n\t  }\r\n\r\n\t  for (var i = length - 10; i >= 0; i--) {\r\n\t    if (s.charCodeAt(i) !== 36 /* '$' */) {\r\n\t      return false;\r\n\t    }\r\n\t  }\r\n\r\n\t  return true;\r\n\t}\r\n\r\n\t/**\r\n\t * Comparator between two mappings where the original positions are compared.\r\n\t *\r\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n\t * mappings with the same original source/line/column, but different generated\r\n\t * line and column the same. Useful when searching for a mapping with a\r\n\t * stubbed out mapping.\r\n\t */\r\n\tfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\r\n\t  var cmp = strcmp(mappingA.source, mappingB.source);\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n\t  if (cmp !== 0 || onlyCompareOriginal) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  return strcmp(mappingA.name, mappingB.name);\r\n\t}\r\n\texports.compareByOriginalPositions = compareByOriginalPositions;\r\n\r\n\t/**\r\n\t * Comparator between two mappings with deflated source and name indices where\r\n\t * the generated positions are compared.\r\n\t *\r\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n\t * mappings with the same generated line and column, but different\r\n\t * source/name/original line and column the same. Useful when searching for a\r\n\t * mapping with a stubbed out mapping.\r\n\t */\r\n\tfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\r\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n\t  if (cmp !== 0 || onlyCompareGenerated) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = strcmp(mappingA.source, mappingB.source);\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  return strcmp(mappingA.name, mappingB.name);\r\n\t}\r\n\texports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\r\n\r\n\tfunction strcmp(aStr1, aStr2) {\r\n\t  if (aStr1 === aStr2) {\r\n\t    return 0;\r\n\t  }\r\n\r\n\t  if (aStr1 === null) {\r\n\t    return 1; // aStr2 !== null\r\n\t  }\r\n\r\n\t  if (aStr2 === null) {\r\n\t    return -1; // aStr1 !== null\r\n\t  }\r\n\r\n\t  if (aStr1 > aStr2) {\r\n\t    return 1;\r\n\t  }\r\n\r\n\t  return -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Comparator between two mappings with inflated source and name strings where\r\n\t * the generated positions are compared.\r\n\t */\r\n\tfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\r\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = strcmp(mappingA.source, mappingB.source);\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n\t  if (cmp !== 0) {\r\n\t    return cmp;\r\n\t  }\r\n\r\n\t  return strcmp(mappingA.name, mappingB.name);\r\n\t}\r\n\texports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\r\n\r\n\t/**\r\n\t * Strip any JSON XSSI avoidance prefix from the string (as documented\r\n\t * in the source maps specification), and then parse the string as\r\n\t * JSON.\r\n\t */\r\n\tfunction parseSourceMapInput(str) {\r\n\t  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\r\n\t}\r\n\texports.parseSourceMapInput = parseSourceMapInput;\r\n\r\n\t/**\r\n\t * Compute the URL of a source given the the source root, the source's\r\n\t * URL, and the source map's URL.\r\n\t */\r\n\tfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\r\n\t  sourceURL = sourceURL || '';\r\n\r\n\t  if (sourceRoot) {\r\n\t    // This follows what Chrome does.\r\n\t    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\r\n\t      sourceRoot += '/';\r\n\t    }\r\n\t    // The spec says:\r\n\t    //   Line 4: An optional source root, useful for relocating source\r\n\t    //   files on a server or removing repeated values in the\r\n\t    //   “sources” entry.  This value is prepended to the individual\r\n\t    //   entries in the “source” field.\r\n\t    sourceURL = sourceRoot + sourceURL;\r\n\t  }\r\n\r\n\t  // Historically, SourceMapConsumer did not take the sourceMapURL as\r\n\t  // a parameter.  This mode is still somewhat supported, which is why\r\n\t  // this code block is conditional.  However, it's preferable to pass\r\n\t  // the source map URL to SourceMapConsumer, so that this function\r\n\t  // can implement the source URL resolution algorithm as outlined in\r\n\t  // the spec.  This block is basically the equivalent of:\r\n\t  //    new URL(sourceURL, sourceMapURL).toString()\r\n\t  // ... except it avoids using URL, which wasn't available in the\r\n\t  // older releases of node still supported by this library.\r\n\t  //\r\n\t  // The spec says:\r\n\t  //   If the sources are not absolute URLs after prepending of the\r\n\t  //   “sourceRoot”, the sources are resolved relative to the\r\n\t  //   SourceMap (like resolving script src in a html document).\r\n\t  if (sourceMapURL) {\r\n\t    var parsed = urlParse(sourceMapURL);\r\n\t    if (!parsed) {\r\n\t      throw new Error(\"sourceMapURL could not be parsed\");\r\n\t    }\r\n\t    if (parsed.path) {\r\n\t      // Strip the last path component, but keep the \"/\".\r\n\t      var index = parsed.path.lastIndexOf('/');\r\n\t      if (index >= 0) {\r\n\t        parsed.path = parsed.path.substring(0, index + 1);\r\n\t      }\r\n\t    }\r\n\t    sourceURL = join(urlGenerate(parsed), sourceURL);\r\n\t  }\r\n\r\n\t  return normalize(sourceURL);\r\n\t}\r\n\texports.computeSourceURL = computeSourceURL;\r\n} (util$5));\r\n\r\nvar arraySet = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util$4 = util$5;\r\nvar has = Object.prototype.hasOwnProperty;\r\nvar hasNativeMap = typeof Map !== \"undefined\";\r\n\r\n/**\r\n * A data structure which is a combination of an array and a set. Adding a new\r\n * member is O(1), testing for membership is O(1), and finding the index of an\r\n * element is O(1). Removing elements from the set is not supported. Only\r\n * strings are supported for membership.\r\n */\r\nfunction ArraySet$2() {\r\n  this._array = [];\r\n  this._set = hasNativeMap ? new Map() : Object.create(null);\r\n}\r\n\r\n/**\r\n * Static method for creating ArraySet instances from an existing array.\r\n */\r\nArraySet$2.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\r\n  var set = new ArraySet$2();\r\n  for (var i = 0, len = aArray.length; i < len; i++) {\r\n    set.add(aArray[i], aAllowDuplicates);\r\n  }\r\n  return set;\r\n};\r\n\r\n/**\r\n * Return how many unique items are in this ArraySet. If duplicates have been\r\n * added, than those do not count towards the size.\r\n *\r\n * @returns Number\r\n */\r\nArraySet$2.prototype.size = function ArraySet_size() {\r\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\r\n};\r\n\r\n/**\r\n * Add the given string to this set.\r\n *\r\n * @param String aStr\r\n */\r\nArraySet$2.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\r\n  var sStr = hasNativeMap ? aStr : util$4.toSetString(aStr);\r\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\r\n  var idx = this._array.length;\r\n  if (!isDuplicate || aAllowDuplicates) {\r\n    this._array.push(aStr);\r\n  }\r\n  if (!isDuplicate) {\r\n    if (hasNativeMap) {\r\n      this._set.set(aStr, idx);\r\n    } else {\r\n      this._set[sStr] = idx;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Is the given string a member of this set?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet$2.prototype.has = function ArraySet_has(aStr) {\r\n  if (hasNativeMap) {\r\n    return this._set.has(aStr);\r\n  } else {\r\n    var sStr = util$4.toSetString(aStr);\r\n    return has.call(this._set, sStr);\r\n  }\r\n};\r\n\r\n/**\r\n * What is the index of the given string in the array?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet$2.prototype.indexOf = function ArraySet_indexOf(aStr) {\r\n  if (hasNativeMap) {\r\n    var idx = this._set.get(aStr);\r\n    if (idx >= 0) {\r\n        return idx;\r\n    }\r\n  } else {\r\n    var sStr = util$4.toSetString(aStr);\r\n    if (has.call(this._set, sStr)) {\r\n      return this._set[sStr];\r\n    }\r\n  }\r\n\r\n  throw new Error('\"' + aStr + '\" is not in the set.');\r\n};\r\n\r\n/**\r\n * What is the element at the given index?\r\n *\r\n * @param Number aIdx\r\n */\r\nArraySet$2.prototype.at = function ArraySet_at(aIdx) {\r\n  if (aIdx >= 0 && aIdx < this._array.length) {\r\n    return this._array[aIdx];\r\n  }\r\n  throw new Error('No element indexed by ' + aIdx);\r\n};\r\n\r\n/**\r\n * Returns the array representation of this set (which has the proper indices\r\n * indicated by indexOf). Note that this is a copy of the internal array used\r\n * for storing the members so that no one can mess with internal state.\r\n */\r\nArraySet$2.prototype.toArray = function ArraySet_toArray() {\r\n  return this._array.slice();\r\n};\r\n\r\narraySet.ArraySet = ArraySet$2;\r\n\r\nvar mappingList = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2014 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util$3 = util$5;\r\n\r\n/**\r\n * Determine whether mappingB is after mappingA with respect to generated\r\n * position.\r\n */\r\nfunction generatedPositionAfter(mappingA, mappingB) {\r\n  // Optimized for most common case\r\n  var lineA = mappingA.generatedLine;\r\n  var lineB = mappingB.generatedLine;\r\n  var columnA = mappingA.generatedColumn;\r\n  var columnB = mappingB.generatedColumn;\r\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\r\n         util$3.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\r\n}\r\n\r\n/**\r\n * A data structure to provide a sorted view of accumulated mappings in a\r\n * performance conscious manner. It trades a neglibable overhead in general\r\n * case for a large speedup in case of mappings being added in order.\r\n */\r\nfunction MappingList$1() {\r\n  this._array = [];\r\n  this._sorted = true;\r\n  // Serves as infimum\r\n  this._last = {generatedLine: -1, generatedColumn: 0};\r\n}\r\n\r\n/**\r\n * Iterate through internal items. This method takes the same arguments that\r\n * `Array.prototype.forEach` takes.\r\n *\r\n * NOTE: The order of the mappings is NOT guaranteed.\r\n */\r\nMappingList$1.prototype.unsortedForEach =\r\n  function MappingList_forEach(aCallback, aThisArg) {\r\n    this._array.forEach(aCallback, aThisArg);\r\n  };\r\n\r\n/**\r\n * Add the given source mapping.\r\n *\r\n * @param Object aMapping\r\n */\r\nMappingList$1.prototype.add = function MappingList_add(aMapping) {\r\n  if (generatedPositionAfter(this._last, aMapping)) {\r\n    this._last = aMapping;\r\n    this._array.push(aMapping);\r\n  } else {\r\n    this._sorted = false;\r\n    this._array.push(aMapping);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the flat, sorted array of mappings. The mappings are sorted by\r\n * generated position.\r\n *\r\n * WARNING: This method returns internal data without copying, for\r\n * performance. The return value must NOT be mutated, and should be treated as\r\n * an immutable borrow. If you want to take ownership, you must make your own\r\n * copy.\r\n */\r\nMappingList$1.prototype.toArray = function MappingList_toArray() {\r\n  if (!this._sorted) {\r\n    this._array.sort(util$3.compareByGeneratedPositionsInflated);\r\n    this._sorted = true;\r\n  }\r\n  return this._array;\r\n};\r\n\r\nmappingList.MappingList = MappingList$1;\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar base64VLQ$1 = base64Vlq;\r\nvar util$2 = util$5;\r\nvar ArraySet$1 = arraySet.ArraySet;\r\nvar MappingList = mappingList.MappingList;\r\n\r\n/**\r\n * An instance of the SourceMapGenerator represents a source map which is\r\n * being built incrementally. You may pass an object with the following\r\n * properties:\r\n *\r\n *   - file: The filename of the generated source.\r\n *   - sourceRoot: A root for all relative URLs in this source map.\r\n */\r\nfunction SourceMapGenerator$2(aArgs) {\r\n  if (!aArgs) {\r\n    aArgs = {};\r\n  }\r\n  this._file = util$2.getArg(aArgs, 'file', null);\r\n  this._sourceRoot = util$2.getArg(aArgs, 'sourceRoot', null);\r\n  this._skipValidation = util$2.getArg(aArgs, 'skipValidation', false);\r\n  this._sources = new ArraySet$1();\r\n  this._names = new ArraySet$1();\r\n  this._mappings = new MappingList();\r\n  this._sourcesContents = null;\r\n}\r\n\r\nSourceMapGenerator$2.prototype._version = 3;\r\n\r\n/**\r\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\r\n *\r\n * @param aSourceMapConsumer The SourceMap.\r\n */\r\nSourceMapGenerator$2.fromSourceMap =\r\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\r\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\r\n    var generator = new SourceMapGenerator$2({\r\n      file: aSourceMapConsumer.file,\r\n      sourceRoot: sourceRoot\r\n    });\r\n    aSourceMapConsumer.eachMapping(function (mapping) {\r\n      var newMapping = {\r\n        generated: {\r\n          line: mapping.generatedLine,\r\n          column: mapping.generatedColumn\r\n        }\r\n      };\r\n\r\n      if (mapping.source != null) {\r\n        newMapping.source = mapping.source;\r\n        if (sourceRoot != null) {\r\n          newMapping.source = util$2.relative(sourceRoot, newMapping.source);\r\n        }\r\n\r\n        newMapping.original = {\r\n          line: mapping.originalLine,\r\n          column: mapping.originalColumn\r\n        };\r\n\r\n        if (mapping.name != null) {\r\n          newMapping.name = mapping.name;\r\n        }\r\n      }\r\n\r\n      generator.addMapping(newMapping);\r\n    });\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var sourceRelative = sourceFile;\r\n      if (sourceRoot !== null) {\r\n        sourceRelative = util$2.relative(sourceRoot, sourceFile);\r\n      }\r\n\r\n      if (!generator._sources.has(sourceRelative)) {\r\n        generator._sources.add(sourceRelative);\r\n      }\r\n\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        generator.setSourceContent(sourceFile, content);\r\n      }\r\n    });\r\n    return generator;\r\n  };\r\n\r\n/**\r\n * Add a single mapping from original source line and column to the generated\r\n * source's line and column for this source map being created. The mapping\r\n * object should have the following properties:\r\n *\r\n *   - generated: An object with the generated line and column positions.\r\n *   - original: An object with the original line and column positions.\r\n *   - source: The original source file (relative to the sourceRoot).\r\n *   - name: An optional original token name for this mapping.\r\n */\r\nSourceMapGenerator$2.prototype.addMapping =\r\n  function SourceMapGenerator_addMapping(aArgs) {\r\n    var generated = util$2.getArg(aArgs, 'generated');\r\n    var original = util$2.getArg(aArgs, 'original', null);\r\n    var source = util$2.getArg(aArgs, 'source', null);\r\n    var name = util$2.getArg(aArgs, 'name', null);\r\n\r\n    if (!this._skipValidation) {\r\n      this._validateMapping(generated, original, source, name);\r\n    }\r\n\r\n    if (source != null) {\r\n      source = String(source);\r\n      if (!this._sources.has(source)) {\r\n        this._sources.add(source);\r\n      }\r\n    }\r\n\r\n    if (name != null) {\r\n      name = String(name);\r\n      if (!this._names.has(name)) {\r\n        this._names.add(name);\r\n      }\r\n    }\r\n\r\n    this._mappings.add({\r\n      generatedLine: generated.line,\r\n      generatedColumn: generated.column,\r\n      originalLine: original != null && original.line,\r\n      originalColumn: original != null && original.column,\r\n      source: source,\r\n      name: name\r\n    });\r\n  };\r\n\r\n/**\r\n * Set the source content for a source file.\r\n */\r\nSourceMapGenerator$2.prototype.setSourceContent =\r\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\r\n    var source = aSourceFile;\r\n    if (this._sourceRoot != null) {\r\n      source = util$2.relative(this._sourceRoot, source);\r\n    }\r\n\r\n    if (aSourceContent != null) {\r\n      // Add the source content to the _sourcesContents map.\r\n      // Create a new _sourcesContents map if the property is null.\r\n      if (!this._sourcesContents) {\r\n        this._sourcesContents = Object.create(null);\r\n      }\r\n      this._sourcesContents[util$2.toSetString(source)] = aSourceContent;\r\n    } else if (this._sourcesContents) {\r\n      // Remove the source file from the _sourcesContents map.\r\n      // If the _sourcesContents map is empty, set the property to null.\r\n      delete this._sourcesContents[util$2.toSetString(source)];\r\n      if (Object.keys(this._sourcesContents).length === 0) {\r\n        this._sourcesContents = null;\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Applies the mappings of a sub-source-map for a specific source file to the\r\n * source map being generated. Each mapping to the supplied source file is\r\n * rewritten using the supplied source map. Note: The resolution for the\r\n * resulting mappings is the minimium of this map and the supplied map.\r\n *\r\n * @param aSourceMapConsumer The source map to be applied.\r\n * @param aSourceFile Optional. The filename of the source file.\r\n *        If omitted, SourceMapConsumer's file property will be used.\r\n * @param aSourceMapPath Optional. The dirname of the path to the source map\r\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\r\n *        This parameter is needed when the two source maps aren't in the same\r\n *        directory, and the source map to be applied contains relative source\r\n *        paths. If so, those relative source paths need to be rewritten\r\n *        relative to the SourceMapGenerator.\r\n */\r\nSourceMapGenerator$2.prototype.applySourceMap =\r\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\r\n    var sourceFile = aSourceFile;\r\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\r\n    if (aSourceFile == null) {\r\n      if (aSourceMapConsumer.file == null) {\r\n        throw new Error(\r\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\r\n          'or the source map\\'s \"file\" property. Both were omitted.'\r\n        );\r\n      }\r\n      sourceFile = aSourceMapConsumer.file;\r\n    }\r\n    var sourceRoot = this._sourceRoot;\r\n    // Make \"sourceFile\" relative if an absolute Url is passed.\r\n    if (sourceRoot != null) {\r\n      sourceFile = util$2.relative(sourceRoot, sourceFile);\r\n    }\r\n    // Applying the SourceMap can add and remove items from the sources and\r\n    // the names array.\r\n    var newSources = new ArraySet$1();\r\n    var newNames = new ArraySet$1();\r\n\r\n    // Find mappings for the \"sourceFile\"\r\n    this._mappings.unsortedForEach(function (mapping) {\r\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\r\n        // Check if it can be mapped by the source map, then update the mapping.\r\n        var original = aSourceMapConsumer.originalPositionFor({\r\n          line: mapping.originalLine,\r\n          column: mapping.originalColumn\r\n        });\r\n        if (original.source != null) {\r\n          // Copy mapping\r\n          mapping.source = original.source;\r\n          if (aSourceMapPath != null) {\r\n            mapping.source = util$2.join(aSourceMapPath, mapping.source);\r\n          }\r\n          if (sourceRoot != null) {\r\n            mapping.source = util$2.relative(sourceRoot, mapping.source);\r\n          }\r\n          mapping.originalLine = original.line;\r\n          mapping.originalColumn = original.column;\r\n          if (original.name != null) {\r\n            mapping.name = original.name;\r\n          }\r\n        }\r\n      }\r\n\r\n      var source = mapping.source;\r\n      if (source != null && !newSources.has(source)) {\r\n        newSources.add(source);\r\n      }\r\n\r\n      var name = mapping.name;\r\n      if (name != null && !newNames.has(name)) {\r\n        newNames.add(name);\r\n      }\r\n\r\n    }, this);\r\n    this._sources = newSources;\r\n    this._names = newNames;\r\n\r\n    // Copy sourcesContents of applied map.\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        if (aSourceMapPath != null) {\r\n          sourceFile = util$2.join(aSourceMapPath, sourceFile);\r\n        }\r\n        if (sourceRoot != null) {\r\n          sourceFile = util$2.relative(sourceRoot, sourceFile);\r\n        }\r\n        this.setSourceContent(sourceFile, content);\r\n      }\r\n    }, this);\r\n  };\r\n\r\n/**\r\n * A mapping can have one of the three levels of data:\r\n *\r\n *   1. Just the generated position.\r\n *   2. The Generated position, original position, and original source.\r\n *   3. Generated and original position, original source, as well as a name\r\n *      token.\r\n *\r\n * To maintain consistency, we validate that any new mapping being added falls\r\n * in to one of these categories.\r\n */\r\nSourceMapGenerator$2.prototype._validateMapping =\r\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\r\n                                              aName) {\r\n    // When aOriginal is truthy but has empty values for .line and .column,\r\n    // it is most likely a programmer error. In this case we throw a very\r\n    // specific error message to try to guide them the right way.\r\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\r\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\r\n        throw new Error(\r\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\r\n            'the original mapping entirely and only map the generated position. If so, pass ' +\r\n            'null for the original mapping instead of an object with empty or null values.'\r\n        );\r\n    }\r\n\r\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\r\n        && aGenerated.line > 0 && aGenerated.column >= 0\r\n        && !aOriginal && !aSource && !aName) {\r\n      // Case 1.\r\n      return;\r\n    }\r\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\r\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\r\n             && aGenerated.line > 0 && aGenerated.column >= 0\r\n             && aOriginal.line > 0 && aOriginal.column >= 0\r\n             && aSource) {\r\n      // Cases 2 and 3.\r\n      return;\r\n    }\r\n    else {\r\n      throw new Error('Invalid mapping: ' + JSON.stringify({\r\n        generated: aGenerated,\r\n        source: aSource,\r\n        original: aOriginal,\r\n        name: aName\r\n      }));\r\n    }\r\n  };\r\n\r\n/**\r\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\r\n * specified by the source map format.\r\n */\r\nSourceMapGenerator$2.prototype._serializeMappings =\r\n  function SourceMapGenerator_serializeMappings() {\r\n    var previousGeneratedColumn = 0;\r\n    var previousGeneratedLine = 1;\r\n    var previousOriginalColumn = 0;\r\n    var previousOriginalLine = 0;\r\n    var previousName = 0;\r\n    var previousSource = 0;\r\n    var result = '';\r\n    var next;\r\n    var mapping;\r\n    var nameIdx;\r\n    var sourceIdx;\r\n\r\n    var mappings = this._mappings.toArray();\r\n    for (var i = 0, len = mappings.length; i < len; i++) {\r\n      mapping = mappings[i];\r\n      next = '';\r\n\r\n      if (mapping.generatedLine !== previousGeneratedLine) {\r\n        previousGeneratedColumn = 0;\r\n        while (mapping.generatedLine !== previousGeneratedLine) {\r\n          next += ';';\r\n          previousGeneratedLine++;\r\n        }\r\n      }\r\n      else {\r\n        if (i > 0) {\r\n          if (!util$2.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\r\n            continue;\r\n          }\r\n          next += ',';\r\n        }\r\n      }\r\n\r\n      next += base64VLQ$1.encode(mapping.generatedColumn\r\n                                 - previousGeneratedColumn);\r\n      previousGeneratedColumn = mapping.generatedColumn;\r\n\r\n      if (mapping.source != null) {\r\n        sourceIdx = this._sources.indexOf(mapping.source);\r\n        next += base64VLQ$1.encode(sourceIdx - previousSource);\r\n        previousSource = sourceIdx;\r\n\r\n        // lines are stored 0-based in SourceMap spec version 3\r\n        next += base64VLQ$1.encode(mapping.originalLine - 1\r\n                                   - previousOriginalLine);\r\n        previousOriginalLine = mapping.originalLine - 1;\r\n\r\n        next += base64VLQ$1.encode(mapping.originalColumn\r\n                                   - previousOriginalColumn);\r\n        previousOriginalColumn = mapping.originalColumn;\r\n\r\n        if (mapping.name != null) {\r\n          nameIdx = this._names.indexOf(mapping.name);\r\n          next += base64VLQ$1.encode(nameIdx - previousName);\r\n          previousName = nameIdx;\r\n        }\r\n      }\r\n\r\n      result += next;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\nSourceMapGenerator$2.prototype._generateSourcesContent =\r\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\r\n    return aSources.map(function (source) {\r\n      if (!this._sourcesContents) {\r\n        return null;\r\n      }\r\n      if (aSourceRoot != null) {\r\n        source = util$2.relative(aSourceRoot, source);\r\n      }\r\n      var key = util$2.toSetString(source);\r\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\r\n        ? this._sourcesContents[key]\r\n        : null;\r\n    }, this);\r\n  };\r\n\r\n/**\r\n * Externalize the source map.\r\n */\r\nSourceMapGenerator$2.prototype.toJSON =\r\n  function SourceMapGenerator_toJSON() {\r\n    var map = {\r\n      version: this._version,\r\n      sources: this._sources.toArray(),\r\n      names: this._names.toArray(),\r\n      mappings: this._serializeMappings()\r\n    };\r\n    if (this._file != null) {\r\n      map.file = this._file;\r\n    }\r\n    if (this._sourceRoot != null) {\r\n      map.sourceRoot = this._sourceRoot;\r\n    }\r\n    if (this._sourcesContents) {\r\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\r\n    }\r\n\r\n    return map;\r\n  };\r\n\r\n/**\r\n * Render the source map being generated to a string.\r\n */\r\nSourceMapGenerator$2.prototype.toString =\r\n  function SourceMapGenerator_toString() {\r\n    return JSON.stringify(this.toJSON());\r\n  };\r\n\r\nsourceMapGenerator.SourceMapGenerator = SourceMapGenerator$2;\r\n\r\nvar sourceMapConsumer = {};\r\n\r\nvar binarySearch$1 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n(function (exports) {\r\n\t/*\r\n\t * Copyright 2011 Mozilla Foundation and contributors\r\n\t * Licensed under the New BSD license. See LICENSE or:\r\n\t * http://opensource.org/licenses/BSD-3-Clause\r\n\t */\r\n\r\n\texports.GREATEST_LOWER_BOUND = 1;\r\n\texports.LEAST_UPPER_BOUND = 2;\r\n\r\n\t/**\r\n\t * Recursive implementation of binary search.\r\n\t *\r\n\t * @param aLow Indices here and lower do not contain the needle.\r\n\t * @param aHigh Indices here and higher do not contain the needle.\r\n\t * @param aNeedle The element being searched for.\r\n\t * @param aHaystack The non-empty array being searched.\r\n\t * @param aCompare Function which takes two elements and returns -1, 0, or 1.\r\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n\t *     closest element that is smaller than or greater than the one we are\r\n\t *     searching for, respectively, if the exact element cannot be found.\r\n\t */\r\n\tfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\r\n\t  // This function terminates when one of the following is true:\r\n\t  //\r\n\t  //   1. We find the exact element we are looking for.\r\n\t  //\r\n\t  //   2. We did not find the exact element, but we can return the index of\r\n\t  //      the next-closest element.\r\n\t  //\r\n\t  //   3. We did not find the exact element, and there is no next-closest\r\n\t  //      element than the one we are searching for, so we return -1.\r\n\t  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\r\n\t  var cmp = aCompare(aNeedle, aHaystack[mid], true);\r\n\t  if (cmp === 0) {\r\n\t    // Found the element we are looking for.\r\n\t    return mid;\r\n\t  }\r\n\t  else if (cmp > 0) {\r\n\t    // Our needle is greater than aHaystack[mid].\r\n\t    if (aHigh - mid > 1) {\r\n\t      // The element is in the upper half.\r\n\t      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\r\n\t    }\r\n\r\n\t    // The exact needle element was not found in this haystack. Determine if\r\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\r\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n\t      return aHigh < aHaystack.length ? aHigh : -1;\r\n\t    } else {\r\n\t      return mid;\r\n\t    }\r\n\t  }\r\n\t  else {\r\n\t    // Our needle is less than aHaystack[mid].\r\n\t    if (mid - aLow > 1) {\r\n\t      // The element is in the lower half.\r\n\t      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\r\n\t    }\r\n\r\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\r\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n\t      return mid;\r\n\t    } else {\r\n\t      return aLow < 0 ? -1 : aLow;\r\n\t    }\r\n\t  }\r\n\t}\r\n\r\n\t/**\r\n\t * This is an implementation of binary search which will always try and return\r\n\t * the index of the closest element if there is no exact hit. This is because\r\n\t * mappings between original and generated line/col pairs are single points,\r\n\t * and there is an implicit region between each of them, so a miss just means\r\n\t * that you aren't on the very start of a region.\r\n\t *\r\n\t * @param aNeedle The element you are looking for.\r\n\t * @param aHaystack The array that is being searched.\r\n\t * @param aCompare A function which takes the needle and an element in the\r\n\t *     array and returns -1, 0, or 1 depending on whether the needle is less\r\n\t *     than, equal to, or greater than the element, respectively.\r\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n\t *     closest element that is smaller than or greater than the one we are\r\n\t *     searching for, respectively, if the exact element cannot be found.\r\n\t *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\r\n\t */\r\n\texports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\r\n\t  if (aHaystack.length === 0) {\r\n\t    return -1;\r\n\t  }\r\n\r\n\t  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\r\n\t                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\r\n\t  if (index < 0) {\r\n\t    return -1;\r\n\t  }\r\n\r\n\t  // We have found either the exact element, or the next-closest element than\r\n\t  // the one we are searching for. However, there may be more than one such\r\n\t  // element. Make sure we always return the smallest of these.\r\n\t  while (index - 1 >= 0) {\r\n\t    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\r\n\t      break;\r\n\t    }\r\n\t    --index;\r\n\t  }\r\n\r\n\t  return index;\r\n\t};\r\n} (binarySearch$1));\r\n\r\nvar quickSort$1 = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n// It turns out that some (most?) JavaScript engines don't self-host\r\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\r\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\r\n// custom comparator function, calling back and forth between the VM's C++ and\r\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\r\n// worse generated code for the comparator function than would be optimal. In\r\n// fact, when sorting with a comparator, these costs outweigh the benefits of\r\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\r\n// a ~3500ms mean speed-up in `bench/bench.html`.\r\n\r\n/**\r\n * Swap the elements indexed by `x` and `y` in the array `ary`.\r\n *\r\n * @param {Array} ary\r\n *        The array.\r\n * @param {Number} x\r\n *        The index of the first item.\r\n * @param {Number} y\r\n *        The index of the second item.\r\n */\r\nfunction swap(ary, x, y) {\r\n  var temp = ary[x];\r\n  ary[x] = ary[y];\r\n  ary[y] = temp;\r\n}\r\n\r\n/**\r\n * Returns a random integer within the range `low .. high` inclusive.\r\n *\r\n * @param {Number} low\r\n *        The lower bound on the range.\r\n * @param {Number} high\r\n *        The upper bound on the range.\r\n */\r\nfunction randomIntInRange(low, high) {\r\n  return Math.round(low + (Math.random() * (high - low)));\r\n}\r\n\r\n/**\r\n * The Quick Sort algorithm.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n * @param {Number} p\r\n *        Start index of the array\r\n * @param {Number} r\r\n *        End index of the array\r\n */\r\nfunction doQuickSort(ary, comparator, p, r) {\r\n  // If our lower bound is less than our upper bound, we (1) partition the\r\n  // array into two pieces and (2) recurse on each half. If it is not, this is\r\n  // the empty array and our base case.\r\n\r\n  if (p < r) {\r\n    // (1) Partitioning.\r\n    //\r\n    // The partitioning chooses a pivot between `p` and `r` and moves all\r\n    // elements that are less than or equal to the pivot to the before it, and\r\n    // all the elements that are greater than it after it. The effect is that\r\n    // once partition is done, the pivot is in the exact place it will be when\r\n    // the array is put in sorted order, and it will not need to be moved\r\n    // again. This runs in O(n) time.\r\n\r\n    // Always choose a random pivot so that an input array which is reverse\r\n    // sorted does not cause O(n^2) running time.\r\n    var pivotIndex = randomIntInRange(p, r);\r\n    var i = p - 1;\r\n\r\n    swap(ary, pivotIndex, r);\r\n    var pivot = ary[r];\r\n\r\n    // Immediately after `j` is incremented in this loop, the following hold\r\n    // true:\r\n    //\r\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\r\n    //\r\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\r\n    for (var j = p; j < r; j++) {\r\n      if (comparator(ary[j], pivot) <= 0) {\r\n        i += 1;\r\n        swap(ary, i, j);\r\n      }\r\n    }\r\n\r\n    swap(ary, i + 1, j);\r\n    var q = i + 1;\r\n\r\n    // (2) Recurse on each half.\r\n\r\n    doQuickSort(ary, comparator, p, q - 1);\r\n    doQuickSort(ary, comparator, q + 1, r);\r\n  }\r\n}\r\n\r\n/**\r\n * Sort the given array in-place with the given comparator function.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n */\r\nquickSort$1.quickSort = function (ary, comparator) {\r\n  doQuickSort(ary, comparator, 0, ary.length - 1);\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util$1 = util$5;\r\nvar binarySearch = binarySearch$1;\r\nvar ArraySet = arraySet.ArraySet;\r\nvar base64VLQ = base64Vlq;\r\nvar quickSort = quickSort$1.quickSort;\r\n\r\nfunction SourceMapConsumer$1(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  return sourceMap.sections != null\r\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\r\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\r\n}\r\n\r\nSourceMapConsumer$1.fromSourceMap = function(aSourceMap, aSourceMapURL) {\r\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\r\n};\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nSourceMapConsumer$1.prototype._version = 3;\r\n\r\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\r\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\r\n// are lazily instantiated, accessed via the `_generatedMappings` and\r\n// `_originalMappings` getters respectively, and we only parse the mappings\r\n// and create these arrays once queried for a source location. We jump through\r\n// these hoops because there can be many thousands of mappings, and parsing\r\n// them is expensive, so we only want to do it if we must.\r\n//\r\n// Each object in the arrays is of the form:\r\n//\r\n//     {\r\n//       generatedLine: The line number in the generated code,\r\n//       generatedColumn: The column number in the generated code,\r\n//       source: The path to the original source file that generated this\r\n//               chunk of code,\r\n//       originalLine: The line number in the original source that\r\n//                     corresponds to this chunk of generated code,\r\n//       originalColumn: The column number in the original source that\r\n//                       corresponds to this chunk of generated code,\r\n//       name: The name of the original symbol which generated this chunk of\r\n//             code.\r\n//     }\r\n//\r\n// All properties except for `generatedLine` and `generatedColumn` can be\r\n// `null`.\r\n//\r\n// `_generatedMappings` is ordered by the generated positions.\r\n//\r\n// `_originalMappings` is ordered by the original positions.\r\n\r\nSourceMapConsumer$1.prototype.__generatedMappings = null;\r\nObject.defineProperty(SourceMapConsumer$1.prototype, '_generatedMappings', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!this.__generatedMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__generatedMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer$1.prototype.__originalMappings = null;\r\nObject.defineProperty(SourceMapConsumer$1.prototype, '_originalMappings', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!this.__originalMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__originalMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer$1.prototype._charIsMappingSeparator =\r\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\r\n    var c = aStr.charAt(index);\r\n    return c === \";\" || c === \",\";\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nSourceMapConsumer$1.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    throw new Error(\"Subclasses must implement _parseMappings\");\r\n  };\r\n\r\nSourceMapConsumer$1.GENERATED_ORDER = 1;\r\nSourceMapConsumer$1.ORIGINAL_ORDER = 2;\r\n\r\nSourceMapConsumer$1.GREATEST_LOWER_BOUND = 1;\r\nSourceMapConsumer$1.LEAST_UPPER_BOUND = 2;\r\n\r\n/**\r\n * Iterate over each mapping between an original source/line/column and a\r\n * generated line/column in this source map.\r\n *\r\n * @param Function aCallback\r\n *        The function that is called with each mapping.\r\n * @param Object aContext\r\n *        Optional. If specified, this object will be the value of `this` every\r\n *        time that `aCallback` is called.\r\n * @param aOrder\r\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\r\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\r\n *        iterate over the mappings sorted by the generated file's line/column\r\n *        order or the original's source/line/column order, respectively. Defaults to\r\n *        `SourceMapConsumer.GENERATED_ORDER`.\r\n */\r\nSourceMapConsumer$1.prototype.eachMapping =\r\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\r\n    var context = aContext || null;\r\n    var order = aOrder || SourceMapConsumer$1.GENERATED_ORDER;\r\n\r\n    var mappings;\r\n    switch (order) {\r\n    case SourceMapConsumer$1.GENERATED_ORDER:\r\n      mappings = this._generatedMappings;\r\n      break;\r\n    case SourceMapConsumer$1.ORIGINAL_ORDER:\r\n      mappings = this._originalMappings;\r\n      break;\r\n    default:\r\n      throw new Error(\"Unknown order of iteration.\");\r\n    }\r\n\r\n    var sourceRoot = this.sourceRoot;\r\n    mappings.map(function (mapping) {\r\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\r\n      source = util$1.computeSourceURL(sourceRoot, source, this._sourceMapURL);\r\n      return {\r\n        source: source,\r\n        generatedLine: mapping.generatedLine,\r\n        generatedColumn: mapping.generatedColumn,\r\n        originalLine: mapping.originalLine,\r\n        originalColumn: mapping.originalColumn,\r\n        name: mapping.name === null ? null : this._names.at(mapping.name)\r\n      };\r\n    }, this).forEach(aCallback, context);\r\n  };\r\n\r\n/**\r\n * Returns all generated line and column information for the original source,\r\n * line, and column provided. If no column is provided, returns all mappings\r\n * corresponding to a either the line we are searching for or the next\r\n * closest line that has any mappings. Otherwise, returns all mappings\r\n * corresponding to the given line and either the column we are searching for\r\n * or the next closest column that has any offsets.\r\n *\r\n * The only argument is an object with the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number is 1-based.\r\n *   - column: Optional. the column number in the original source.\r\n *    The column number is 0-based.\r\n *\r\n * and an array of objects is returned, each with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *    line number is 1-based.\r\n *   - column: The column number in the generated source, or null.\r\n *    The column number is 0-based.\r\n */\r\nSourceMapConsumer$1.prototype.allGeneratedPositionsFor =\r\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\r\n    var line = util$1.getArg(aArgs, 'line');\r\n\r\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\r\n    // returns the index of the closest mapping less than the needle. By\r\n    // setting needle.originalColumn to 0, we thus find the last mapping for\r\n    // the given line, provided such a mapping exists.\r\n    var needle = {\r\n      source: util$1.getArg(aArgs, 'source'),\r\n      originalLine: line,\r\n      originalColumn: util$1.getArg(aArgs, 'column', 0)\r\n    };\r\n\r\n    needle.source = this._findSourceIndex(needle.source);\r\n    if (needle.source < 0) {\r\n      return [];\r\n    }\r\n\r\n    var mappings = [];\r\n\r\n    var index = this._findMapping(needle,\r\n                                  this._originalMappings,\r\n                                  \"originalLine\",\r\n                                  \"originalColumn\",\r\n                                  util$1.compareByOriginalPositions,\r\n                                  binarySearch.LEAST_UPPER_BOUND);\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (aArgs.column === undefined) {\r\n        var originalLine = mapping.originalLine;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we found. Since\r\n        // mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we found.\r\n        while (mapping && mapping.originalLine === originalLine) {\r\n          mappings.push({\r\n            line: util$1.getArg(mapping, 'generatedLine', null),\r\n            column: util$1.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      } else {\r\n        var originalColumn = mapping.originalColumn;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we were searching for.\r\n        // Since mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we are searching for.\r\n        while (mapping &&\r\n               mapping.originalLine === line &&\r\n               mapping.originalColumn == originalColumn) {\r\n          mappings.push({\r\n            line: util$1.getArg(mapping, 'generatedLine', null),\r\n            column: util$1.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      }\r\n    }\r\n\r\n    return mappings;\r\n  };\r\n\r\nsourceMapConsumer.SourceMapConsumer = SourceMapConsumer$1;\r\n\r\n/**\r\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\r\n * query for information about the original file positions by giving it a file\r\n * position in the generated source.\r\n *\r\n * The first parameter is the raw source map (either as a JSON string, or\r\n * already parsed to an object). According to the spec, source maps have the\r\n * following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - sources: An array of URLs to the original source files.\r\n *   - names: An array of identifiers which can be referrenced by individual mappings.\r\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\r\n *   - sourcesContent: Optional. An array of contents of the original source files.\r\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *\r\n * Here is an example source map, taken from the source map spec[0]:\r\n *\r\n *     {\r\n *       version : 3,\r\n *       file: \"out.js\",\r\n *       sourceRoot : \"\",\r\n *       sources: [\"foo.js\", \"bar.js\"],\r\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *       mappings: \"AA,AB;;ABCDE;\"\r\n *     }\r\n *\r\n * The second parameter, if given, is a string whose value is the URL\r\n * at which the source map was found.  This URL is used to compute the\r\n * sources array.\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\r\n */\r\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  var version = util$1.getArg(sourceMap, 'version');\r\n  var sources = util$1.getArg(sourceMap, 'sources');\r\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\r\n  // requires the array) to play nice here.\r\n  var names = util$1.getArg(sourceMap, 'names', []);\r\n  var sourceRoot = util$1.getArg(sourceMap, 'sourceRoot', null);\r\n  var sourcesContent = util$1.getArg(sourceMap, 'sourcesContent', null);\r\n  var mappings = util$1.getArg(sourceMap, 'mappings');\r\n  var file = util$1.getArg(sourceMap, 'file', null);\r\n\r\n  // Once again, Sass deviates from the spec and supplies the version as a\r\n  // string rather than a number, so we use loose equality checking here.\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  if (sourceRoot) {\r\n    sourceRoot = util$1.normalize(sourceRoot);\r\n  }\r\n\r\n  sources = sources\r\n    .map(String)\r\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\r\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\r\n    // See bugzil.la/1090768.\r\n    .map(util$1.normalize)\r\n    // Always ensure that absolute sources are internally stored relative to\r\n    // the source root, if the source root is absolute. Not doing this would\r\n    // be particularly problematic when the source root is a prefix of the\r\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\r\n    .map(function (source) {\r\n      return sourceRoot && util$1.isAbsolute(sourceRoot) && util$1.isAbsolute(source)\r\n        ? util$1.relative(sourceRoot, source)\r\n        : source;\r\n    });\r\n\r\n  // Pass `true` below to allow duplicate names and sources. While source maps\r\n  // are intended to be compressed and deduplicated, the TypeScript compiler\r\n  // sometimes generates source maps with duplicates in them. See Github issue\r\n  // #72 and bugzil.la/889492.\r\n  this._names = ArraySet.fromArray(names.map(String), true);\r\n  this._sources = ArraySet.fromArray(sources, true);\r\n\r\n  this._absoluteSources = this._sources.toArray().map(function (s) {\r\n    return util$1.computeSourceURL(sourceRoot, s, aSourceMapURL);\r\n  });\r\n\r\n  this.sourceRoot = sourceRoot;\r\n  this.sourcesContent = sourcesContent;\r\n  this._mappings = mappings;\r\n  this._sourceMapURL = aSourceMapURL;\r\n  this.file = file;\r\n}\r\n\r\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer$1.prototype);\r\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer$1;\r\n\r\n/**\r\n * Utility function to find the index of a source.  Returns -1 if not\r\n * found.\r\n */\r\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\r\n  var relativeSource = aSource;\r\n  if (this.sourceRoot != null) {\r\n    relativeSource = util$1.relative(this.sourceRoot, relativeSource);\r\n  }\r\n\r\n  if (this._sources.has(relativeSource)) {\r\n    return this._sources.indexOf(relativeSource);\r\n  }\r\n\r\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\r\n  // this case we can't simply undo the transform.\r\n  var i;\r\n  for (i = 0; i < this._absoluteSources.length; ++i) {\r\n    if (this._absoluteSources[i] == aSource) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n\r\n/**\r\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\r\n *\r\n * @param SourceMapGenerator aSourceMap\r\n *        The source map that will be consumed.\r\n * @param String aSourceMapURL\r\n *        The URL at which the source map can be found (optional)\r\n * @returns BasicSourceMapConsumer\r\n */\r\nBasicSourceMapConsumer.fromSourceMap =\r\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\r\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\r\n\r\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\r\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\r\n    smc.sourceRoot = aSourceMap._sourceRoot;\r\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\r\n                                                            smc.sourceRoot);\r\n    smc.file = aSourceMap._file;\r\n    smc._sourceMapURL = aSourceMapURL;\r\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\r\n      return util$1.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\r\n    });\r\n\r\n    // Because we are modifying the entries (by converting string sources and\r\n    // names to indices into the sources and names ArraySets), we have to make\r\n    // a copy of the entry or else bad things happen. Shared mutable state\r\n    // strikes again! See github issue #191.\r\n\r\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\r\n    var destGeneratedMappings = smc.__generatedMappings = [];\r\n    var destOriginalMappings = smc.__originalMappings = [];\r\n\r\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\r\n      var srcMapping = generatedMappings[i];\r\n      var destMapping = new Mapping;\r\n      destMapping.generatedLine = srcMapping.generatedLine;\r\n      destMapping.generatedColumn = srcMapping.generatedColumn;\r\n\r\n      if (srcMapping.source) {\r\n        destMapping.source = sources.indexOf(srcMapping.source);\r\n        destMapping.originalLine = srcMapping.originalLine;\r\n        destMapping.originalColumn = srcMapping.originalColumn;\r\n\r\n        if (srcMapping.name) {\r\n          destMapping.name = names.indexOf(srcMapping.name);\r\n        }\r\n\r\n        destOriginalMappings.push(destMapping);\r\n      }\r\n\r\n      destGeneratedMappings.push(destMapping);\r\n    }\r\n\r\n    quickSort(smc.__originalMappings, util$1.compareByOriginalPositions);\r\n\r\n    return smc;\r\n  };\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nBasicSourceMapConsumer.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\r\n  get: function () {\r\n    return this._absoluteSources.slice();\r\n  }\r\n});\r\n\r\n/**\r\n * Provide the JIT with a nice shape / hidden class.\r\n */\r\nfunction Mapping() {\r\n  this.generatedLine = 0;\r\n  this.generatedColumn = 0;\r\n  this.source = null;\r\n  this.originalLine = null;\r\n  this.originalColumn = null;\r\n  this.name = null;\r\n}\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nBasicSourceMapConsumer.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    var generatedLine = 1;\r\n    var previousGeneratedColumn = 0;\r\n    var previousOriginalLine = 0;\r\n    var previousOriginalColumn = 0;\r\n    var previousSource = 0;\r\n    var previousName = 0;\r\n    var length = aStr.length;\r\n    var index = 0;\r\n    var cachedSegments = {};\r\n    var temp = {};\r\n    var originalMappings = [];\r\n    var generatedMappings = [];\r\n    var mapping, str, segment, end, value;\r\n\r\n    while (index < length) {\r\n      if (aStr.charAt(index) === ';') {\r\n        generatedLine++;\r\n        index++;\r\n        previousGeneratedColumn = 0;\r\n      }\r\n      else if (aStr.charAt(index) === ',') {\r\n        index++;\r\n      }\r\n      else {\r\n        mapping = new Mapping();\r\n        mapping.generatedLine = generatedLine;\r\n\r\n        // Because each offset is encoded relative to the previous one,\r\n        // many segments often have the same encoding. We can exploit this\r\n        // fact by caching the parsed variable length fields of each segment,\r\n        // allowing us to avoid a second parse if we encounter the same\r\n        // segment again.\r\n        for (end = index; end < length; end++) {\r\n          if (this._charIsMappingSeparator(aStr, end)) {\r\n            break;\r\n          }\r\n        }\r\n        str = aStr.slice(index, end);\r\n\r\n        segment = cachedSegments[str];\r\n        if (segment) {\r\n          index += str.length;\r\n        } else {\r\n          segment = [];\r\n          while (index < end) {\r\n            base64VLQ.decode(aStr, index, temp);\r\n            value = temp.value;\r\n            index = temp.rest;\r\n            segment.push(value);\r\n          }\r\n\r\n          if (segment.length === 2) {\r\n            throw new Error('Found a source, but no line and column');\r\n          }\r\n\r\n          if (segment.length === 3) {\r\n            throw new Error('Found a source and line, but no column');\r\n          }\r\n\r\n          cachedSegments[str] = segment;\r\n        }\r\n\r\n        // Generated column.\r\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\r\n        previousGeneratedColumn = mapping.generatedColumn;\r\n\r\n        if (segment.length > 1) {\r\n          // Original source.\r\n          mapping.source = previousSource + segment[1];\r\n          previousSource += segment[1];\r\n\r\n          // Original line.\r\n          mapping.originalLine = previousOriginalLine + segment[2];\r\n          previousOriginalLine = mapping.originalLine;\r\n          // Lines are stored 0-based\r\n          mapping.originalLine += 1;\r\n\r\n          // Original column.\r\n          mapping.originalColumn = previousOriginalColumn + segment[3];\r\n          previousOriginalColumn = mapping.originalColumn;\r\n\r\n          if (segment.length > 4) {\r\n            // Original name.\r\n            mapping.name = previousName + segment[4];\r\n            previousName += segment[4];\r\n          }\r\n        }\r\n\r\n        generatedMappings.push(mapping);\r\n        if (typeof mapping.originalLine === 'number') {\r\n          originalMappings.push(mapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    quickSort(generatedMappings, util$1.compareByGeneratedPositionsDeflated);\r\n    this.__generatedMappings = generatedMappings;\r\n\r\n    quickSort(originalMappings, util$1.compareByOriginalPositions);\r\n    this.__originalMappings = originalMappings;\r\n  };\r\n\r\n/**\r\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\r\n * we are searching for in the given \"haystack\" of mappings.\r\n */\r\nBasicSourceMapConsumer.prototype._findMapping =\r\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\r\n                                         aColumnName, aComparator, aBias) {\r\n    // To return the position we are searching for, we must first find the\r\n    // mapping for the given position and then return the opposite position it\r\n    // points to. Because the mappings are sorted, we can use binary search to\r\n    // find the best mapping.\r\n\r\n    if (aNeedle[aLineName] <= 0) {\r\n      throw new TypeError('Line must be greater than or equal to 1, got '\r\n                          + aNeedle[aLineName]);\r\n    }\r\n    if (aNeedle[aColumnName] < 0) {\r\n      throw new TypeError('Column must be greater than or equal to 0, got '\r\n                          + aNeedle[aColumnName]);\r\n    }\r\n\r\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\r\n  };\r\n\r\n/**\r\n * Compute the last column for each generated mapping. The last column is\r\n * inclusive.\r\n */\r\nBasicSourceMapConsumer.prototype.computeColumnSpans =\r\n  function SourceMapConsumer_computeColumnSpans() {\r\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      // Mappings do not contain a field for the last generated columnt. We\r\n      // can come up with an optimistic estimate, however, by assuming that\r\n      // mappings are contiguous (i.e. given two consecutive mappings, the\r\n      // first mapping ends where the second one starts).\r\n      if (index + 1 < this._generatedMappings.length) {\r\n        var nextMapping = this._generatedMappings[index + 1];\r\n\r\n        if (mapping.generatedLine === nextMapping.generatedLine) {\r\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // The last mapping for each line spans the entire line.\r\n      mapping.lastGeneratedColumn = Infinity;\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the generated source.  The column\r\n *     number is 0-based.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the original source, or null.  The\r\n *     column number is 0-based.\r\n *   - name: The original identifier, or null.\r\n */\r\nBasicSourceMapConsumer.prototype.originalPositionFor =\r\n  function SourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util$1.getArg(aArgs, 'line'),\r\n      generatedColumn: util$1.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._generatedMappings,\r\n      \"generatedLine\",\r\n      \"generatedColumn\",\r\n      util$1.compareByGeneratedPositionsDeflated,\r\n      util$1.getArg(aArgs, 'bias', SourceMapConsumer$1.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      if (mapping.generatedLine === needle.generatedLine) {\r\n        var source = util$1.getArg(mapping, 'source', null);\r\n        if (source !== null) {\r\n          source = this._sources.at(source);\r\n          source = util$1.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\r\n        }\r\n        var name = util$1.getArg(mapping, 'name', null);\r\n        if (name !== null) {\r\n          name = this._names.at(name);\r\n        }\r\n        return {\r\n          source: source,\r\n          line: util$1.getArg(mapping, 'originalLine', null),\r\n          column: util$1.getArg(mapping, 'originalColumn', null),\r\n          name: name\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      source: null,\r\n      line: null,\r\n      column: null,\r\n      name: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\r\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\r\n    if (!this.sourcesContent) {\r\n      return false;\r\n    }\r\n    return this.sourcesContent.length >= this._sources.size() &&\r\n      !this.sourcesContent.some(function (sc) { return sc == null; });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nBasicSourceMapConsumer.prototype.sourceContentFor =\r\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    if (!this.sourcesContent) {\r\n      return null;\r\n    }\r\n\r\n    var index = this._findSourceIndex(aSource);\r\n    if (index >= 0) {\r\n      return this.sourcesContent[index];\r\n    }\r\n\r\n    var relativeSource = aSource;\r\n    if (this.sourceRoot != null) {\r\n      relativeSource = util$1.relative(this.sourceRoot, relativeSource);\r\n    }\r\n\r\n    var url;\r\n    if (this.sourceRoot != null\r\n        && (url = util$1.urlParse(this.sourceRoot))) {\r\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\r\n      // many users. We can help them out when they expect file:// URIs to\r\n      // behave like it would if they were running a local HTTP server. See\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\r\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\r\n      if (url.scheme == \"file\"\r\n          && this._sources.has(fileUriAbsPath)) {\r\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\r\n      }\r\n\r\n      if ((!url.path || url.path == \"/\")\r\n          && this._sources.has(\"/\" + relativeSource)) {\r\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\r\n      }\r\n    }\r\n\r\n    // This function is used recursively from\r\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\r\n    // don't want to throw if we can't find the source - we just want to\r\n    // return null, so we provide a flag to exit gracefully.\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the original source.  The column\r\n *     number is 0-based.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the generated source, or null.\r\n *     The column number is 0-based.\r\n */\r\nBasicSourceMapConsumer.prototype.generatedPositionFor =\r\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\r\n    var source = util$1.getArg(aArgs, 'source');\r\n    source = this._findSourceIndex(source);\r\n    if (source < 0) {\r\n      return {\r\n        line: null,\r\n        column: null,\r\n        lastColumn: null\r\n      };\r\n    }\r\n\r\n    var needle = {\r\n      source: source,\r\n      originalLine: util$1.getArg(aArgs, 'line'),\r\n      originalColumn: util$1.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._originalMappings,\r\n      \"originalLine\",\r\n      \"originalColumn\",\r\n      util$1.compareByOriginalPositions,\r\n      util$1.getArg(aArgs, 'bias', SourceMapConsumer$1.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (mapping.source === needle.source) {\r\n        return {\r\n          line: util$1.getArg(mapping, 'generatedLine', null),\r\n          column: util$1.getArg(mapping, 'generatedColumn', null),\r\n          lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null,\r\n      lastColumn: null\r\n    };\r\n  };\r\n\r\nsourceMapConsumer.BasicSourceMapConsumer = BasicSourceMapConsumer;\r\n\r\n/**\r\n * An IndexedSourceMapConsumer instance represents a parsed source map which\r\n * we can query for information. It differs from BasicSourceMapConsumer in\r\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\r\n * input.\r\n *\r\n * The first parameter is a raw source map (either as a JSON string, or already\r\n * parsed to an object). According to the spec for indexed source maps, they\r\n * have the following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *   - sections: A list of section definitions.\r\n *\r\n * Each value under the \"sections\" field has two fields:\r\n *   - offset: The offset into the original specified at which this section\r\n *       begins to apply, defined as an object with a \"line\" and \"column\"\r\n *       field.\r\n *   - map: A source map definition. This source map could also be indexed,\r\n *       but doesn't have to be.\r\n *\r\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\r\n * specifying a URL to retrieve a source map from, but that's currently\r\n * unsupported.\r\n *\r\n * Here's an example source map, taken from the source map spec[0], but\r\n * modified to omit a section which uses the \"url\" field.\r\n *\r\n *  {\r\n *    version : 3,\r\n *    file: \"app.js\",\r\n *    sections: [{\r\n *      offset: {line:100, column:10},\r\n *      map: {\r\n *        version : 3,\r\n *        file: \"section.js\",\r\n *        sources: [\"foo.js\", \"bar.js\"],\r\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *        mappings: \"AAAA,E;;ABCDE;\"\r\n *      }\r\n *    }],\r\n *  }\r\n *\r\n * The second parameter, if given, is a string whose value is the URL\r\n * at which the source map was found.  This URL is used to compute the\r\n * sources array.\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\r\n */\r\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  var version = util$1.getArg(sourceMap, 'version');\r\n  var sections = util$1.getArg(sourceMap, 'sections');\r\n\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  this._sources = new ArraySet();\r\n  this._names = new ArraySet();\r\n\r\n  var lastOffset = {\r\n    line: -1,\r\n    column: 0\r\n  };\r\n  this._sections = sections.map(function (s) {\r\n    if (s.url) {\r\n      // The url field will require support for asynchronicity.\r\n      // See https://github.com/mozilla/source-map/issues/16\r\n      throw new Error('Support for url field in sections not implemented.');\r\n    }\r\n    var offset = util$1.getArg(s, 'offset');\r\n    var offsetLine = util$1.getArg(offset, 'line');\r\n    var offsetColumn = util$1.getArg(offset, 'column');\r\n\r\n    if (offsetLine < lastOffset.line ||\r\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\r\n      throw new Error('Section offsets must be ordered and non-overlapping.');\r\n    }\r\n    lastOffset = offset;\r\n\r\n    return {\r\n      generatedOffset: {\r\n        // The offset fields are 0-based, but we use 1-based indices when\r\n        // encoding/decoding from VLQ.\r\n        generatedLine: offsetLine + 1,\r\n        generatedColumn: offsetColumn + 1\r\n      },\r\n      consumer: new SourceMapConsumer$1(util$1.getArg(s, 'map'), aSourceMapURL)\r\n    }\r\n  });\r\n}\r\n\r\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer$1.prototype);\r\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer$1;\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nIndexedSourceMapConsumer.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\r\n  get: function () {\r\n    var sources = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\r\n        sources.push(this._sections[i].consumer.sources[j]);\r\n      }\r\n    }\r\n    return sources;\r\n  }\r\n});\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the generated source.  The column\r\n *     number is 0-based.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the original source, or null.  The\r\n *     column number is 0-based.\r\n *   - name: The original identifier, or null.\r\n */\r\nIndexedSourceMapConsumer.prototype.originalPositionFor =\r\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util$1.getArg(aArgs, 'line'),\r\n      generatedColumn: util$1.getArg(aArgs, 'column')\r\n    };\r\n\r\n    // Find the section containing the generated position we're trying to map\r\n    // to an original position.\r\n    var sectionIndex = binarySearch.search(needle, this._sections,\r\n      function(needle, section) {\r\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\r\n        if (cmp) {\r\n          return cmp;\r\n        }\r\n\r\n        return (needle.generatedColumn -\r\n                section.generatedOffset.generatedColumn);\r\n      });\r\n    var section = this._sections[sectionIndex];\r\n\r\n    if (!section) {\r\n      return {\r\n        source: null,\r\n        line: null,\r\n        column: null,\r\n        name: null\r\n      };\r\n    }\r\n\r\n    return section.consumer.originalPositionFor({\r\n      line: needle.generatedLine -\r\n        (section.generatedOffset.generatedLine - 1),\r\n      column: needle.generatedColumn -\r\n        (section.generatedOffset.generatedLine === needle.generatedLine\r\n         ? section.generatedOffset.generatedColumn - 1\r\n         : 0),\r\n      bias: aArgs.bias\r\n    });\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\r\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\r\n    return this._sections.every(function (s) {\r\n      return s.consumer.hasContentsOfAllSources();\r\n    });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nIndexedSourceMapConsumer.prototype.sourceContentFor =\r\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      var content = section.consumer.sourceContentFor(aSource, true);\r\n      if (content) {\r\n        return content;\r\n      }\r\n    }\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the original source.  The column\r\n *     number is 0-based.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *     line number is 1-based. \r\n *   - column: The column number in the generated source, or null.\r\n *     The column number is 0-based.\r\n */\r\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\r\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      // Only consider this section if the requested source is in the list of\r\n      // sources of the consumer.\r\n      if (section.consumer._findSourceIndex(util$1.getArg(aArgs, 'source')) === -1) {\r\n        continue;\r\n      }\r\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\r\n      if (generatedPosition) {\r\n        var ret = {\r\n          line: generatedPosition.line +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          column: generatedPosition.column +\r\n            (section.generatedOffset.generatedLine === generatedPosition.line\r\n             ? section.generatedOffset.generatedColumn - 1\r\n             : 0)\r\n        };\r\n        return ret;\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nIndexedSourceMapConsumer.prototype._parseMappings =\r\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    this.__generatedMappings = [];\r\n    this.__originalMappings = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n      var sectionMappings = section.consumer._generatedMappings;\r\n      for (var j = 0; j < sectionMappings.length; j++) {\r\n        var mapping = sectionMappings[j];\r\n\r\n        var source = section.consumer._sources.at(mapping.source);\r\n        source = util$1.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\r\n        this._sources.add(source);\r\n        source = this._sources.indexOf(source);\r\n\r\n        var name = null;\r\n        if (mapping.name) {\r\n          name = section.consumer._names.at(mapping.name);\r\n          this._names.add(name);\r\n          name = this._names.indexOf(name);\r\n        }\r\n\r\n        // The mappings coming from the consumer for the section have\r\n        // generated positions relative to the start of the section, so we\r\n        // need to offset them to be relative to the start of the concatenated\r\n        // generated file.\r\n        var adjustedMapping = {\r\n          source: source,\r\n          generatedLine: mapping.generatedLine +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          generatedColumn: mapping.generatedColumn +\r\n            (section.generatedOffset.generatedLine === mapping.generatedLine\r\n            ? section.generatedOffset.generatedColumn - 1\r\n            : 0),\r\n          originalLine: mapping.originalLine,\r\n          originalColumn: mapping.originalColumn,\r\n          name: name\r\n        };\r\n\r\n        this.__generatedMappings.push(adjustedMapping);\r\n        if (typeof adjustedMapping.originalLine === 'number') {\r\n          this.__originalMappings.push(adjustedMapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    quickSort(this.__generatedMappings, util$1.compareByGeneratedPositionsDeflated);\r\n    quickSort(this.__originalMappings, util$1.compareByOriginalPositions);\r\n  };\r\n\r\nsourceMapConsumer.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\r\n\r\nvar sourceNode = {};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar SourceMapGenerator$1 = sourceMapGenerator.SourceMapGenerator;\r\nvar util = util$5;\r\n\r\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\r\n// operating systems these days (capturing the result).\r\nvar REGEX_NEWLINE = /(\\r?\\n)/;\r\n\r\n// Newline character code for charCodeAt() comparisons\r\nvar NEWLINE_CODE = 10;\r\n\r\n// Private symbol for identifying `SourceNode`s when multiple versions of\r\n// the source-map library are loaded. This MUST NOT CHANGE across\r\n// versions!\r\nvar isSourceNode = \"$$$isSourceNode$$$\";\r\n\r\n/**\r\n * SourceNodes provide a way to abstract over interpolating/concatenating\r\n * snippets of generated JavaScript source code while maintaining the line and\r\n * column information associated with the original source code.\r\n *\r\n * @param aLine The original line number.\r\n * @param aColumn The original column number.\r\n * @param aSource The original source's filename.\r\n * @param aChunks Optional. An array of strings which are snippets of\r\n *        generated JS, or other SourceNodes.\r\n * @param aName The original identifier.\r\n */\r\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\r\n  this.children = [];\r\n  this.sourceContents = {};\r\n  this.line = aLine == null ? null : aLine;\r\n  this.column = aColumn == null ? null : aColumn;\r\n  this.source = aSource == null ? null : aSource;\r\n  this.name = aName == null ? null : aName;\r\n  this[isSourceNode] = true;\r\n  if (aChunks != null) this.add(aChunks);\r\n}\r\n\r\n/**\r\n * Creates a SourceNode from generated code and a SourceMapConsumer.\r\n *\r\n * @param aGeneratedCode The generated code\r\n * @param aSourceMapConsumer The SourceMap for the generated code\r\n * @param aRelativePath Optional. The path that relative sources in the\r\n *        SourceMapConsumer should be relative to.\r\n */\r\nSourceNode.fromStringWithSourceMap =\r\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\r\n    // The SourceNode we want to fill with the generated code\r\n    // and the SourceMap\r\n    var node = new SourceNode();\r\n\r\n    // All even indices of this array are one line of the generated code,\r\n    // while all odd indices are the newlines between two adjacent lines\r\n    // (since `REGEX_NEWLINE` captures its match).\r\n    // Processed fragments are accessed by calling `shiftNextLine`.\r\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\r\n    var remainingLinesIndex = 0;\r\n    var shiftNextLine = function() {\r\n      var lineContents = getNextLine();\r\n      // The last line of a file might not have a newline.\r\n      var newLine = getNextLine() || \"\";\r\n      return lineContents + newLine;\r\n\r\n      function getNextLine() {\r\n        return remainingLinesIndex < remainingLines.length ?\r\n            remainingLines[remainingLinesIndex++] : undefined;\r\n      }\r\n    };\r\n\r\n    // We need to remember the position of \"remainingLines\"\r\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\r\n\r\n    // The generate SourceNodes we need a code range.\r\n    // To extract it current and last mapping is used.\r\n    // Here we store the last mapping.\r\n    var lastMapping = null;\r\n\r\n    aSourceMapConsumer.eachMapping(function (mapping) {\r\n      if (lastMapping !== null) {\r\n        // We add the code from \"lastMapping\" to \"mapping\":\r\n        // First check if there is a new line in between.\r\n        if (lastGeneratedLine < mapping.generatedLine) {\r\n          // Associate first line with \"lastMapping\"\r\n          addMappingWithCode(lastMapping, shiftNextLine());\r\n          lastGeneratedLine++;\r\n          lastGeneratedColumn = 0;\r\n          // The remaining code is added without mapping\r\n        } else {\r\n          // There is no new line in between.\r\n          // Associate the code between \"lastGeneratedColumn\" and\r\n          // \"mapping.generatedColumn\" with \"lastMapping\"\r\n          var nextLine = remainingLines[remainingLinesIndex] || '';\r\n          var code = nextLine.substr(0, mapping.generatedColumn -\r\n                                        lastGeneratedColumn);\r\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\r\n                                              lastGeneratedColumn);\r\n          lastGeneratedColumn = mapping.generatedColumn;\r\n          addMappingWithCode(lastMapping, code);\r\n          // No more remaining code, continue\r\n          lastMapping = mapping;\r\n          return;\r\n        }\r\n      }\r\n      // We add the generated code until the first mapping\r\n      // to the SourceNode without any mapping.\r\n      // Each line is added as separate string.\r\n      while (lastGeneratedLine < mapping.generatedLine) {\r\n        node.add(shiftNextLine());\r\n        lastGeneratedLine++;\r\n      }\r\n      if (lastGeneratedColumn < mapping.generatedColumn) {\r\n        var nextLine = remainingLines[remainingLinesIndex] || '';\r\n        node.add(nextLine.substr(0, mapping.generatedColumn));\r\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\r\n        lastGeneratedColumn = mapping.generatedColumn;\r\n      }\r\n      lastMapping = mapping;\r\n    }, this);\r\n    // We have processed all mappings.\r\n    if (remainingLinesIndex < remainingLines.length) {\r\n      if (lastMapping) {\r\n        // Associate the remaining code in the current line with \"lastMapping\"\r\n        addMappingWithCode(lastMapping, shiftNextLine());\r\n      }\r\n      // and add the remaining lines without any mapping\r\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\r\n    }\r\n\r\n    // Copy sourcesContent into SourceNode\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        if (aRelativePath != null) {\r\n          sourceFile = util.join(aRelativePath, sourceFile);\r\n        }\r\n        node.setSourceContent(sourceFile, content);\r\n      }\r\n    });\r\n\r\n    return node;\r\n\r\n    function addMappingWithCode(mapping, code) {\r\n      if (mapping === null || mapping.source === undefined) {\r\n        node.add(code);\r\n      } else {\r\n        var source = aRelativePath\r\n          ? util.join(aRelativePath, mapping.source)\r\n          : mapping.source;\r\n        node.add(new SourceNode(mapping.originalLine,\r\n                                mapping.originalColumn,\r\n                                source,\r\n                                code,\r\n                                mapping.name));\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Add a chunk of generated JS to this source node.\r\n *\r\n * @param aChunk A string snippet of generated JS code, another instance of\r\n *        SourceNode, or an array where each member is one of those things.\r\n */\r\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\r\n  if (Array.isArray(aChunk)) {\r\n    aChunk.forEach(function (chunk) {\r\n      this.add(chunk);\r\n    }, this);\r\n  }\r\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\r\n    if (aChunk) {\r\n      this.children.push(aChunk);\r\n    }\r\n  }\r\n  else {\r\n    throw new TypeError(\r\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\r\n    );\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Add a chunk of generated JS to the beginning of this source node.\r\n *\r\n * @param aChunk A string snippet of generated JS code, another instance of\r\n *        SourceNode, or an array where each member is one of those things.\r\n */\r\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\r\n  if (Array.isArray(aChunk)) {\r\n    for (var i = aChunk.length-1; i >= 0; i--) {\r\n      this.prepend(aChunk[i]);\r\n    }\r\n  }\r\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\r\n    this.children.unshift(aChunk);\r\n  }\r\n  else {\r\n    throw new TypeError(\r\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\r\n    );\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Walk over the tree of JS snippets in this node and its children. The\r\n * walking function is called once for each snippet of JS and is passed that\r\n * snippet and the its original associated source's line/column location.\r\n *\r\n * @param aFn The traversal function.\r\n */\r\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\r\n  var chunk;\r\n  for (var i = 0, len = this.children.length; i < len; i++) {\r\n    chunk = this.children[i];\r\n    if (chunk[isSourceNode]) {\r\n      chunk.walk(aFn);\r\n    }\r\n    else {\r\n      if (chunk !== '') {\r\n        aFn(chunk, { source: this.source,\r\n                     line: this.line,\r\n                     column: this.column,\r\n                     name: this.name });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\r\n * each of `this.children`.\r\n *\r\n * @param aSep The separator.\r\n */\r\nSourceNode.prototype.join = function SourceNode_join(aSep) {\r\n  var newChildren;\r\n  var i;\r\n  var len = this.children.length;\r\n  if (len > 0) {\r\n    newChildren = [];\r\n    for (i = 0; i < len-1; i++) {\r\n      newChildren.push(this.children[i]);\r\n      newChildren.push(aSep);\r\n    }\r\n    newChildren.push(this.children[i]);\r\n    this.children = newChildren;\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Call String.prototype.replace on the very right-most source snippet. Useful\r\n * for trimming whitespace from the end of a source node, etc.\r\n *\r\n * @param aPattern The pattern to replace.\r\n * @param aReplacement The thing to replace the pattern with.\r\n */\r\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\r\n  var lastChild = this.children[this.children.length - 1];\r\n  if (lastChild[isSourceNode]) {\r\n    lastChild.replaceRight(aPattern, aReplacement);\r\n  }\r\n  else if (typeof lastChild === 'string') {\r\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\r\n  }\r\n  else {\r\n    this.children.push(''.replace(aPattern, aReplacement));\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the source content for a source file. This will be added to the SourceMapGenerator\r\n * in the sourcesContent field.\r\n *\r\n * @param aSourceFile The filename of the source file\r\n * @param aSourceContent The content of the source file\r\n */\r\nSourceNode.prototype.setSourceContent =\r\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\r\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\r\n  };\r\n\r\n/**\r\n * Walk over the tree of SourceNodes. The walking function is called for each\r\n * source file content and is passed the filename and source content.\r\n *\r\n * @param aFn The traversal function.\r\n */\r\nSourceNode.prototype.walkSourceContents =\r\n  function SourceNode_walkSourceContents(aFn) {\r\n    for (var i = 0, len = this.children.length; i < len; i++) {\r\n      if (this.children[i][isSourceNode]) {\r\n        this.children[i].walkSourceContents(aFn);\r\n      }\r\n    }\r\n\r\n    var sources = Object.keys(this.sourceContents);\r\n    for (var i = 0, len = sources.length; i < len; i++) {\r\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\r\n    }\r\n  };\r\n\r\n/**\r\n * Return the string representation of this source node. Walks over the tree\r\n * and concatenates all the various snippets together to one string.\r\n */\r\nSourceNode.prototype.toString = function SourceNode_toString() {\r\n  var str = \"\";\r\n  this.walk(function (chunk) {\r\n    str += chunk;\r\n  });\r\n  return str;\r\n};\r\n\r\n/**\r\n * Returns the string representation of this source node along with a source\r\n * map.\r\n */\r\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\r\n  var generated = {\r\n    code: \"\",\r\n    line: 1,\r\n    column: 0\r\n  };\r\n  var map = new SourceMapGenerator$1(aArgs);\r\n  var sourceMappingActive = false;\r\n  var lastOriginalSource = null;\r\n  var lastOriginalLine = null;\r\n  var lastOriginalColumn = null;\r\n  var lastOriginalName = null;\r\n  this.walk(function (chunk, original) {\r\n    generated.code += chunk;\r\n    if (original.source !== null\r\n        && original.line !== null\r\n        && original.column !== null) {\r\n      if(lastOriginalSource !== original.source\r\n         || lastOriginalLine !== original.line\r\n         || lastOriginalColumn !== original.column\r\n         || lastOriginalName !== original.name) {\r\n        map.addMapping({\r\n          source: original.source,\r\n          original: {\r\n            line: original.line,\r\n            column: original.column\r\n          },\r\n          generated: {\r\n            line: generated.line,\r\n            column: generated.column\r\n          },\r\n          name: original.name\r\n        });\r\n      }\r\n      lastOriginalSource = original.source;\r\n      lastOriginalLine = original.line;\r\n      lastOriginalColumn = original.column;\r\n      lastOriginalName = original.name;\r\n      sourceMappingActive = true;\r\n    } else if (sourceMappingActive) {\r\n      map.addMapping({\r\n        generated: {\r\n          line: generated.line,\r\n          column: generated.column\r\n        }\r\n      });\r\n      lastOriginalSource = null;\r\n      sourceMappingActive = false;\r\n    }\r\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\r\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\r\n        generated.line++;\r\n        generated.column = 0;\r\n        // Mappings end at eol\r\n        if (idx + 1 === length) {\r\n          lastOriginalSource = null;\r\n          sourceMappingActive = false;\r\n        } else if (sourceMappingActive) {\r\n          map.addMapping({\r\n            source: original.source,\r\n            original: {\r\n              line: original.line,\r\n              column: original.column\r\n            },\r\n            generated: {\r\n              line: generated.line,\r\n              column: generated.column\r\n            },\r\n            name: original.name\r\n          });\r\n        }\r\n      } else {\r\n        generated.column++;\r\n      }\r\n    }\r\n  });\r\n  this.walkSourceContents(function (sourceFile, sourceContent) {\r\n    map.setSourceContent(sourceFile, sourceContent);\r\n  });\r\n\r\n  return { code: generated.code, map: map };\r\n};\r\n\r\nsourceNode.SourceNode = SourceNode;\r\n\r\n/*\r\n * Copyright 2009-2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE.txt or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nsourceMap$1.SourceMapGenerator = sourceMapGenerator.SourceMapGenerator;\r\nsourceMap$1.SourceMapConsumer = sourceMapConsumer.SourceMapConsumer;\r\nsourceMap$1.SourceNode = sourceNode.SourceNode;\r\n\r\nvar sourceMap = sourceMap$1;\r\nvar SourceMapConsumer = sourceMap.SourceMapConsumer;\r\nvar SourceMapGenerator = sourceMap.SourceMapGenerator;\r\n\r\nvar mergeSourceMap = merge;\r\n\r\n/**\r\n * Merge old source map and new source map and return merged.\r\n * If old or new source map value is falsy, return another one as it is.\r\n *\r\n * @param {object|string} [oldMap] old source map object\r\n * @param {object|string} [newmap] new source map object\r\n * @return {object|undefined} merged source map object, or undefined when both old and new source map are undefined\r\n */\r\nfunction merge(oldMap, newMap) {\r\n  if (!oldMap) return newMap\r\n  if (!newMap) return oldMap\r\n\r\n  var oldMapConsumer = new SourceMapConsumer(oldMap);\r\n  var newMapConsumer = new SourceMapConsumer(newMap);\r\n  var mergedMapGenerator = new SourceMapGenerator();\r\n\r\n  // iterate on new map and overwrite original position of new map with one of old map\r\n  newMapConsumer.eachMapping(function(m) {\r\n    // pass when `originalLine` is null.\r\n    // It occurs in case that the node does not have origin in original code.\r\n    if (m.originalLine == null) return\r\n\r\n    var origPosInOldMap = oldMapConsumer.originalPositionFor({\r\n      line: m.originalLine,\r\n      column: m.originalColumn\r\n    });\r\n\r\n    if (origPosInOldMap.source == null) return\r\n\r\n    mergedMapGenerator.addMapping({\r\n      original: {\r\n        line: origPosInOldMap.line,\r\n        column: origPosInOldMap.column\r\n      },\r\n      generated: {\r\n        line: m.generatedLine,\r\n        column: m.generatedColumn\r\n      },\r\n      source: origPosInOldMap.source,\r\n      name: origPosInOldMap.name\r\n    });\r\n  });\r\n\r\n  var consumers = [oldMapConsumer, newMapConsumer];\r\n  consumers.forEach(function(consumer) {\r\n    consumer.sources.forEach(function(sourceFile) {\r\n      mergedMapGenerator._sources.add(sourceFile);\r\n      var sourceContent = consumer.sourceContentFor(sourceFile);\r\n      if (sourceContent != null) {\r\n        mergedMapGenerator.setSourceContent(sourceFile, sourceContent);\r\n      }\r\n    });\r\n  });\r\n\r\n  mergedMapGenerator._sourceRoot = oldMap.sourceRoot;\r\n  mergedMapGenerator._file = oldMap.file;\r\n\r\n  return JSON.parse(mergedMapGenerator.toString())\r\n}\r\n\r\nvar merge$1 = mergeSourceMap;\r\n\r\nvar __defProp$5 = Object.defineProperty;\r\nvar __defProps$5 = Object.defineProperties;\r\nvar __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$5 = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$5 = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$5 = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$5.call(b, prop))\r\n      __defNormalProp$5(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$5)\r\n    for (var prop of __getOwnPropSymbols$5(b)) {\r\n      if (__propIsEnum$5.call(b, prop))\r\n        __defNormalProp$5(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));\r\nconst scss = (source, map, options, load = require) => {\r\n  const nodeSass = load(\"sass\");\r\n  const finalOptions = __spreadProps$5(__spreadValues$5({}, options), {\r\n    data: getSource(source, options.filename, options.additionalData),\r\n    file: options.filename,\r\n    outFile: options.filename,\r\n    sourceMap: !!map\r\n  });\r\n  try {\r\n    const result = nodeSass.renderSync(finalOptions);\r\n    const dependencies = result.stats.includedFiles;\r\n    if (map) {\r\n      return {\r\n        code: result.css.toString(),\r\n        map: merge$1(map, JSON.parse(result.map.toString())),\r\n        errors: [],\r\n        dependencies\r\n      };\r\n    }\r\n    return { code: result.css.toString(), errors: [], dependencies };\r\n  } catch (e) {\r\n    return { code: \"\", errors: [e], dependencies: [] };\r\n  }\r\n};\r\nconst sass = (source, map, options, load) => scss(\r\n  source,\r\n  map,\r\n  __spreadProps$5(__spreadValues$5({}, options), {\r\n    indentedSyntax: true\r\n  }),\r\n  load\r\n);\r\nconst less = (source, map, options, load = require) => {\r\n  const nodeLess = load(\"less\");\r\n  let result;\r\n  let error = null;\r\n  nodeLess.render(\r\n    getSource(source, options.filename, options.additionalData),\r\n    __spreadProps$5(__spreadValues$5({}, options), { syncImport: true }),\r\n    (err, output) => {\r\n      error = err;\r\n      result = output;\r\n    }\r\n  );\r\n  if (error)\r\n    return { code: \"\", errors: [error], dependencies: [] };\r\n  const dependencies = result.imports;\r\n  if (map) {\r\n    return {\r\n      code: result.css.toString(),\r\n      map: merge$1(map, result.map),\r\n      errors: [],\r\n      dependencies\r\n    };\r\n  }\r\n  return {\r\n    code: result.css.toString(),\r\n    errors: [],\r\n    dependencies\r\n  };\r\n};\r\nconst styl = (source, map, options, load = require) => {\r\n  const nodeStylus = load(\"stylus\");\r\n  try {\r\n    const ref = nodeStylus(source);\r\n    Object.keys(options).forEach((key) => ref.set(key, options[key]));\r\n    if (map)\r\n      ref.set(\"sourcemap\", { inline: false, comment: false });\r\n    const result = ref.render();\r\n    const dependencies = ref.deps();\r\n    if (map) {\r\n      return {\r\n        code: result,\r\n        map: merge$1(map, ref.sourcemap),\r\n        errors: [],\r\n        dependencies\r\n      };\r\n    }\r\n    return { code: result, errors: [], dependencies };\r\n  } catch (e) {\r\n    return { code: \"\", errors: [e], dependencies: [] };\r\n  }\r\n};\r\nfunction getSource(source, filename, additionalData) {\r\n  if (!additionalData)\r\n    return source;\r\n  if (isFunction$1(additionalData)) {\r\n    return additionalData(source, filename);\r\n  }\r\n  return additionalData + source;\r\n}\r\nconst processors = {\r\n  less,\r\n  sass,\r\n  scss,\r\n  styl,\r\n  stylus: styl\r\n};\r\n\r\nvar __defProp$4 = Object.defineProperty;\r\nvar __defProps$4 = Object.defineProperties;\r\nvar __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$4 = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$4 = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$4 = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$4.call(b, prop))\r\n      __defNormalProp$4(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$4)\r\n    for (var prop of __getOwnPropSymbols$4(b)) {\r\n      if (__propIsEnum$4.call(b, prop))\r\n        __defNormalProp$4(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));\r\nfunction compileStyle(options) {\r\n  return doCompileStyle(__spreadProps$4(__spreadValues$4({}, options), {\r\n    isAsync: false\r\n  }));\r\n}\r\nfunction compileStyleAsync(options) {\r\n  return doCompileStyle(__spreadProps$4(__spreadValues$4({}, options), {\r\n    isAsync: true\r\n  }));\r\n}\r\nfunction doCompileStyle(options) {\r\n  const {\r\n    filename,\r\n    id,\r\n    scoped = false,\r\n    trim = true,\r\n    isProd = false,\r\n    modules = false,\r\n    modulesOptions = {},\r\n    preprocessLang,\r\n    postcssOptions,\r\n    postcssPlugins\r\n  } = options;\r\n  const preprocessor = preprocessLang && processors[preprocessLang];\r\n  const preProcessedSource = preprocessor && preprocess(options, preprocessor);\r\n  const map = preProcessedSource ? preProcessedSource.map : options.inMap || options.map;\r\n  const source = preProcessedSource ? preProcessedSource.code : options.source;\r\n  const shortId = id.replace(/^data-v-/, \"\");\r\n  const longId = `data-v-${shortId}`;\r\n  const plugins = (postcssPlugins || []).slice();\r\n  plugins.unshift(cssVarsPlugin({ id: shortId, isProd }));\r\n  if (trim) {\r\n    plugins.push(trimPlugin$1());\r\n  }\r\n  if (scoped) {\r\n    plugins.push(scopedPlugin$1(longId));\r\n  }\r\n  let cssModules;\r\n  if (modules) {\r\n    {\r\n      throw new Error(\r\n        \"[@vue/compiler-sfc] `modules` option is not supported in the browser build.\"\r\n      );\r\n    }\r\n  }\r\n  const postCSSOptions = __spreadProps$4(__spreadValues$4({}, postcssOptions), {\r\n    to: filename,\r\n    from: filename\r\n  });\r\n  if (map) {\r\n    postCSSOptions.map = {\r\n      inline: false,\r\n      annotation: false,\r\n      prev: map\r\n    };\r\n  }\r\n  let result;\r\n  let code;\r\n  let outMap;\r\n  const dependencies = new Set(\r\n    preProcessedSource ? preProcessedSource.dependencies : []\r\n  );\r\n  dependencies.delete(filename);\r\n  const errors = [];\r\n  if (preProcessedSource && preProcessedSource.errors.length) {\r\n    errors.push(...preProcessedSource.errors);\r\n  }\r\n  const recordPlainCssDependencies = (messages) => {\r\n    messages.forEach((msg) => {\r\n      if (msg.type === \"dependency\") {\r\n        dependencies.add(msg.file);\r\n      }\r\n    });\r\n    return dependencies;\r\n  };\r\n  try {\r\n    result = postcss$1(plugins).process(source, postCSSOptions);\r\n    if (options.isAsync) {\r\n      return result.then((result2) => ({\r\n        code: result2.css || \"\",\r\n        map: result2.map && result2.map.toJSON(),\r\n        errors,\r\n        modules: cssModules,\r\n        rawResult: result2,\r\n        dependencies: recordPlainCssDependencies(result2.messages)\r\n      })).catch((error) => ({\r\n        code: \"\",\r\n        map: void 0,\r\n        errors: [...errors, error],\r\n        rawResult: void 0,\r\n        dependencies\r\n      }));\r\n    }\r\n    recordPlainCssDependencies(result.messages);\r\n    code = result.css;\r\n    outMap = result.map;\r\n  } catch (e) {\r\n    errors.push(e);\r\n  }\r\n  return {\r\n    code: code || ``,\r\n    map: outMap && outMap.toJSON(),\r\n    errors,\r\n    rawResult: result,\r\n    dependencies\r\n  };\r\n}\r\nfunction preprocess(options, preprocessor) {\r\n  if (!options.preprocessCustomRequire) {\r\n    throw new Error(\r\n      `[@vue/compiler-sfc] Style preprocessing in the browser build must provide the \\`preprocessCustomRequire\\` option to return the in-browser version of the preprocessor.`\r\n    );\r\n  }\r\n  return preprocessor(\r\n    options.source,\r\n    options.inMap || options.map,\r\n    __spreadValues$4({\r\n      filename: options.filename\r\n    }, options.preprocessOptions),\r\n    options.preprocessCustomRequire\r\n  );\r\n}\r\n\r\nconst comma = ','.charCodeAt(0);\r\nconst semicolon = ';'.charCodeAt(0);\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\nconst intToChar = new Uint8Array(64); // 64 possible chars.\r\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\r\nfor (let i = 0; i < chars.length; i++) {\r\n    const c = chars.charCodeAt(i);\r\n    intToChar[i] = c;\r\n    charToInt[c] = i;\r\n}\r\n// Provide a fallback for older environments.\r\nconst td = typeof TextDecoder !== 'undefined'\r\n    ? /* #__PURE__ */ new TextDecoder()\r\n    : typeof Buffer !== 'undefined'\r\n        ? {\r\n            decode(buf) {\r\n                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\r\n                return out.toString();\r\n            },\r\n        }\r\n        : {\r\n            decode(buf) {\r\n                let out = '';\r\n                for (let i = 0; i < buf.length; i++) {\r\n                    out += String.fromCharCode(buf[i]);\r\n                }\r\n                return out;\r\n            },\r\n        };\r\nfunction encode(decoded) {\r\n    const state = new Int32Array(5);\r\n    const bufLength = 1024 * 16;\r\n    const subLength = bufLength - 36;\r\n    const buf = new Uint8Array(bufLength);\r\n    const sub = buf.subarray(0, subLength);\r\n    let pos = 0;\r\n    let out = '';\r\n    for (let i = 0; i < decoded.length; i++) {\r\n        const line = decoded[i];\r\n        if (i > 0) {\r\n            if (pos === bufLength) {\r\n                out += td.decode(buf);\r\n                pos = 0;\r\n            }\r\n            buf[pos++] = semicolon;\r\n        }\r\n        if (line.length === 0)\r\n            continue;\r\n        state[0] = 0;\r\n        for (let j = 0; j < line.length; j++) {\r\n            const segment = line[j];\r\n            // We can push up to 5 ints, each int can take at most 7 chars, and we\r\n            // may push a comma.\r\n            if (pos > subLength) {\r\n                out += td.decode(sub);\r\n                buf.copyWithin(0, subLength, pos);\r\n                pos -= subLength;\r\n            }\r\n            if (j > 0)\r\n                buf[pos++] = comma;\r\n            pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\r\n            if (segment.length === 1)\r\n                continue;\r\n            pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\r\n            pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\r\n            pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\r\n            if (segment.length === 4)\r\n                continue;\r\n            pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\r\n        }\r\n    }\r\n    return out + td.decode(buf.subarray(0, pos));\r\n}\r\nfunction encodeInteger(buf, pos, state, segment, j) {\r\n    const next = segment[j];\r\n    let num = next - state[j];\r\n    state[j] = next;\r\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\r\n    do {\r\n        let clamped = num & 0b011111;\r\n        num >>>= 5;\r\n        if (num > 0)\r\n            clamped |= 0b100000;\r\n        buf[pos++] = intToChar[clamped];\r\n    } while (num > 0);\r\n    return pos;\r\n}\r\n\r\nclass BitSet {\r\n\tconstructor(arg) {\r\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\r\n\t}\r\n\r\n\tadd(n) {\r\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\r\n\t}\r\n\r\n\thas(n) {\r\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\r\n\t}\r\n}\r\n\r\nclass Chunk {\r\n\tconstructor(start, end, content) {\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t\tthis.original = content;\r\n\r\n\t\tthis.intro = '';\r\n\t\tthis.outro = '';\r\n\r\n\t\tthis.content = content;\r\n\t\tthis.storeName = false;\r\n\t\tthis.edited = false;\r\n\r\n\t\t{\r\n\t\t\tthis.previous = null;\r\n\t\t\tthis.next = null;\r\n\t\t}\r\n\t}\r\n\r\n\tappendLeft(content) {\r\n\t\tthis.outro += content;\r\n\t}\r\n\r\n\tappendRight(content) {\r\n\t\tthis.intro = this.intro + content;\r\n\t}\r\n\r\n\tclone() {\r\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\r\n\r\n\t\tchunk.intro = this.intro;\r\n\t\tchunk.outro = this.outro;\r\n\t\tchunk.content = this.content;\r\n\t\tchunk.storeName = this.storeName;\r\n\t\tchunk.edited = this.edited;\r\n\r\n\t\treturn chunk;\r\n\t}\r\n\r\n\tcontains(index) {\r\n\t\treturn this.start < index && index < this.end;\r\n\t}\r\n\r\n\teachNext(fn) {\r\n\t\tlet chunk = this;\r\n\t\twhile (chunk) {\r\n\t\t\tfn(chunk);\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\t}\r\n\r\n\teachPrevious(fn) {\r\n\t\tlet chunk = this;\r\n\t\twhile (chunk) {\r\n\t\t\tfn(chunk);\r\n\t\t\tchunk = chunk.previous;\r\n\t\t}\r\n\t}\r\n\r\n\tedit(content, storeName, contentOnly) {\r\n\t\tthis.content = content;\r\n\t\tif (!contentOnly) {\r\n\t\t\tthis.intro = '';\r\n\t\t\tthis.outro = '';\r\n\t\t}\r\n\t\tthis.storeName = storeName;\r\n\r\n\t\tthis.edited = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprependLeft(content) {\r\n\t\tthis.outro = content + this.outro;\r\n\t}\r\n\r\n\tprependRight(content) {\r\n\t\tthis.intro = content + this.intro;\r\n\t}\r\n\r\n\tsplit(index) {\r\n\t\tconst sliceIndex = index - this.start;\r\n\r\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\r\n\t\tconst originalAfter = this.original.slice(sliceIndex);\r\n\r\n\t\tthis.original = originalBefore;\r\n\r\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\r\n\t\tnewChunk.outro = this.outro;\r\n\t\tthis.outro = '';\r\n\r\n\t\tthis.end = index;\r\n\r\n\t\tif (this.edited) {\r\n\t\t\t// TODO is this block necessary?...\r\n\t\t\tnewChunk.edit('', false);\r\n\t\t\tthis.content = '';\r\n\t\t} else {\r\n\t\t\tthis.content = originalBefore;\r\n\t\t}\r\n\r\n\t\tnewChunk.next = this.next;\r\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\r\n\t\tnewChunk.previous = this;\r\n\t\tthis.next = newChunk;\r\n\r\n\t\treturn newChunk;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn this.intro + this.content + this.outro;\r\n\t}\r\n\r\n\ttrimEnd(rx) {\r\n\t\tthis.outro = this.outro.replace(rx, '');\r\n\t\tif (this.outro.length) return true;\r\n\r\n\t\tconst trimmed = this.content.replace(rx, '');\r\n\r\n\t\tif (trimmed.length) {\r\n\t\t\tif (trimmed !== this.content) {\r\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis.edit('', undefined, true);\r\n\r\n\t\t\tthis.intro = this.intro.replace(rx, '');\r\n\t\t\tif (this.intro.length) return true;\r\n\t\t}\r\n\t}\r\n\r\n\ttrimStart(rx) {\r\n\t\tthis.intro = this.intro.replace(rx, '');\r\n\t\tif (this.intro.length) return true;\r\n\r\n\t\tconst trimmed = this.content.replace(rx, '');\r\n\r\n\t\tif (trimmed.length) {\r\n\t\t\tif (trimmed !== this.content) {\r\n\t\t\t\tthis.split(this.end - trimmed.length);\r\n\t\t\t\tthis.edit('', undefined, true);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis.edit('', undefined, true);\r\n\r\n\t\t\tthis.outro = this.outro.replace(rx, '');\r\n\t\t\tif (this.outro.length) return true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getBtoa () {\r\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\r\n\t\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\r\n\t} else if (typeof Buffer === 'function') {\r\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\r\n\t} else {\r\n\t\treturn () => {\r\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\r\n\t\t};\r\n\t}\r\n}\r\n\r\nconst btoa = /*#__PURE__*/ getBtoa();\r\n\r\nclass SourceMap {\r\n\tconstructor(properties) {\r\n\t\tthis.version = 3;\r\n\t\tthis.file = properties.file;\r\n\t\tthis.sources = properties.sources;\r\n\t\tthis.sourcesContent = properties.sourcesContent;\r\n\t\tthis.names = properties.names;\r\n\t\tthis.mappings = encode(properties.mappings);\r\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\r\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\r\n\t\t}\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn JSON.stringify(this);\r\n\t}\r\n\r\n\ttoUrl() {\r\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\r\n\t}\r\n}\r\n\r\nfunction guessIndent(code) {\r\n\tconst lines = code.split('\\n');\r\n\r\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\r\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\r\n\r\n\tif (tabbed.length === 0 && spaced.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// More lines tabbed than spaced? Assume tabs, and\r\n\t// default to tabs in the case of a tie (or nothing\r\n\t// to go on)\r\n\tif (tabbed.length >= spaced.length) {\r\n\t\treturn '\\t';\r\n\t}\r\n\r\n\t// Otherwise, we need to guess the multiple\r\n\tconst min = spaced.reduce((previous, current) => {\r\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\r\n\t\treturn Math.min(numSpaces, previous);\r\n\t}, Infinity);\r\n\r\n\treturn new Array(min + 1).join(' ');\r\n}\r\n\r\nfunction getRelativePath(from, to) {\r\n\tconst fromParts = from.split(/[/\\\\]/);\r\n\tconst toParts = to.split(/[/\\\\]/);\r\n\r\n\tfromParts.pop(); // get dirname\r\n\r\n\twhile (fromParts[0] === toParts[0]) {\r\n\t\tfromParts.shift();\r\n\t\ttoParts.shift();\r\n\t}\r\n\r\n\tif (fromParts.length) {\r\n\t\tlet i = fromParts.length;\r\n\t\twhile (i--) fromParts[i] = '..';\r\n\t}\r\n\r\n\treturn fromParts.concat(toParts).join('/');\r\n}\r\n\r\nconst toString = Object.prototype.toString;\r\n\r\nfunction isObject(thing) {\r\n\treturn toString.call(thing) === '[object Object]';\r\n}\r\n\r\nfunction getLocator(source) {\r\n\tconst originalLines = source.split('\\n');\r\n\tconst lineOffsets = [];\r\n\r\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\r\n\t\tlineOffsets.push(pos);\r\n\t\tpos += originalLines[i].length + 1;\r\n\t}\r\n\r\n\treturn function locate(index) {\r\n\t\tlet i = 0;\r\n\t\tlet j = lineOffsets.length;\r\n\t\twhile (i < j) {\r\n\t\t\tconst m = (i + j) >> 1;\r\n\t\t\tif (index < lineOffsets[m]) {\r\n\t\t\t\tj = m;\r\n\t\t\t} else {\r\n\t\t\t\ti = m + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst line = i - 1;\r\n\t\tconst column = index - lineOffsets[line];\r\n\t\treturn { line, column };\r\n\t};\r\n}\r\n\r\nclass Mappings {\r\n\tconstructor(hires) {\r\n\t\tthis.hires = hires;\r\n\t\tthis.generatedCodeLine = 0;\r\n\t\tthis.generatedCodeColumn = 0;\r\n\t\tthis.raw = [];\r\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\r\n\t\tthis.pending = null;\r\n\t}\r\n\r\n\taddEdit(sourceIndex, content, loc, nameIndex) {\r\n\t\tif (content.length) {\r\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\r\n\t\t\tif (nameIndex >= 0) {\r\n\t\t\t\tsegment.push(nameIndex);\r\n\t\t\t}\r\n\t\t\tthis.rawSegments.push(segment);\r\n\t\t} else if (this.pending) {\r\n\t\t\tthis.rawSegments.push(this.pending);\r\n\t\t}\r\n\r\n\t\tthis.advance(content);\r\n\t\tthis.pending = null;\r\n\t}\r\n\r\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\r\n\t\tlet originalCharIndex = chunk.start;\r\n\t\tlet first = true;\r\n\r\n\t\twhile (originalCharIndex < chunk.end) {\r\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\r\n\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\r\n\t\t\t}\r\n\r\n\t\t\tif (original[originalCharIndex] === '\\n') {\r\n\t\t\t\tloc.line += 1;\r\n\t\t\t\tloc.column = 0;\r\n\t\t\t\tthis.generatedCodeLine += 1;\r\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\r\n\t\t\t\tthis.generatedCodeColumn = 0;\r\n\t\t\t\tfirst = true;\r\n\t\t\t} else {\r\n\t\t\t\tloc.column += 1;\r\n\t\t\t\tthis.generatedCodeColumn += 1;\r\n\t\t\t\tfirst = false;\r\n\t\t\t}\r\n\r\n\t\t\toriginalCharIndex += 1;\r\n\t\t}\r\n\r\n\t\tthis.pending = null;\r\n\t}\r\n\r\n\tadvance(str) {\r\n\t\tif (!str) return;\r\n\r\n\t\tconst lines = str.split('\\n');\r\n\r\n\t\tif (lines.length > 1) {\r\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\r\n\t\t\t\tthis.generatedCodeLine++;\r\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\r\n\t\t\t}\r\n\t\t\tthis.generatedCodeColumn = 0;\r\n\t\t}\r\n\r\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\r\n\t}\r\n}\r\n\r\nconst n = '\\n';\r\n\r\nconst warned = {\r\n\tinsertLeft: false,\r\n\tinsertRight: false,\r\n\tstoreName: false,\r\n};\r\n\r\nclass MagicString {\r\n\tconstructor(string, options = {}) {\r\n\t\tconst chunk = new Chunk(0, string.length, string);\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\toriginal: { writable: true, value: string },\r\n\t\t\toutro: { writable: true, value: '' },\r\n\t\t\tintro: { writable: true, value: '' },\r\n\t\t\tfirstChunk: { writable: true, value: chunk },\r\n\t\t\tlastChunk: { writable: true, value: chunk },\r\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\r\n\t\t\tbyStart: { writable: true, value: {} },\r\n\t\t\tbyEnd: { writable: true, value: {} },\r\n\t\t\tfilename: { writable: true, value: options.filename },\r\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\r\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\r\n\t\t\tstoredNames: { writable: true, value: {} },\r\n\t\t\tindentStr: { writable: true, value: undefined },\r\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\r\n\t\t});\r\n\r\n\t\tthis.byStart[0] = chunk;\r\n\t\tthis.byEnd[string.length] = chunk;\r\n\t}\r\n\r\n\taddSourcemapLocation(char) {\r\n\t\tthis.sourcemapLocations.add(char);\r\n\t}\r\n\r\n\tappend(content) {\r\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\r\n\r\n\t\tthis.outro += content;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tappendLeft(index, content) {\r\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\r\n\r\n\t\tthis._split(index);\r\n\r\n\t\tconst chunk = this.byEnd[index];\r\n\r\n\t\tif (chunk) {\r\n\t\t\tchunk.appendLeft(content);\r\n\t\t} else {\r\n\t\t\tthis.intro += content;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tappendRight(index, content) {\r\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\r\n\r\n\t\tthis._split(index);\r\n\r\n\t\tconst chunk = this.byStart[index];\r\n\r\n\t\tif (chunk) {\r\n\t\t\tchunk.appendRight(content);\r\n\t\t} else {\r\n\t\t\tthis.outro += content;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone() {\r\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\r\n\r\n\t\tlet originalChunk = this.firstChunk;\r\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\r\n\r\n\t\twhile (originalChunk) {\r\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\r\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\r\n\r\n\t\t\tconst nextOriginalChunk = originalChunk.next;\r\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\r\n\r\n\t\t\tif (nextClonedChunk) {\r\n\t\t\t\tclonedChunk.next = nextClonedChunk;\r\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\r\n\r\n\t\t\t\tclonedChunk = nextClonedChunk;\r\n\t\t\t}\r\n\r\n\t\t\toriginalChunk = nextOriginalChunk;\r\n\t\t}\r\n\r\n\t\tcloned.lastChunk = clonedChunk;\r\n\r\n\t\tif (this.indentExclusionRanges) {\r\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\r\n\t\t}\r\n\r\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\r\n\r\n\t\tcloned.intro = this.intro;\r\n\t\tcloned.outro = this.outro;\r\n\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tgenerateDecodedMap(options) {\r\n\t\toptions = options || {};\r\n\r\n\t\tconst sourceIndex = 0;\r\n\t\tconst names = Object.keys(this.storedNames);\r\n\t\tconst mappings = new Mappings(options.hires);\r\n\r\n\t\tconst locate = getLocator(this.original);\r\n\r\n\t\tif (this.intro) {\r\n\t\t\tmappings.advance(this.intro);\r\n\t\t}\r\n\r\n\t\tthis.firstChunk.eachNext((chunk) => {\r\n\t\t\tconst loc = locate(chunk.start);\r\n\r\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\r\n\r\n\t\t\tif (chunk.edited) {\r\n\t\t\t\tmappings.addEdit(\r\n\t\t\t\t\tsourceIndex,\r\n\t\t\t\t\tchunk.content,\r\n\t\t\t\t\tloc,\r\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\r\n\t\t\t}\r\n\r\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\r\n\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\r\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\r\n\t\t\tnames,\r\n\t\t\tmappings: mappings.raw,\r\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\r\n\t\t};\r\n\t}\r\n\r\n\tgenerateMap(options) {\r\n\t\treturn new SourceMap(this.generateDecodedMap(options));\r\n\t}\r\n\r\n\t_ensureindentStr() {\r\n\t\tif (this.indentStr === undefined) {\r\n\t\t\tthis.indentStr = guessIndent(this.original);\r\n\t\t}\r\n\t}\r\n\r\n\t_getRawIndentString() {\r\n\t\tthis._ensureindentStr();\r\n\t\treturn this.indentStr;\r\n\t}\r\n\r\n\tgetIndentString() {\r\n\t\tthis._ensureindentStr();\r\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\r\n\t}\r\n\r\n\tindent(indentStr, options) {\r\n\t\tconst pattern = /^[^\\r\\n]/gm;\r\n\r\n\t\tif (isObject(indentStr)) {\r\n\t\t\toptions = indentStr;\r\n\t\t\tindentStr = undefined;\r\n\t\t}\r\n\r\n\t\tif (indentStr === undefined) {\r\n\t\t\tthis._ensureindentStr();\r\n\t\t\tindentStr = this.indentStr || '\\t';\r\n\t\t}\r\n\r\n\t\tif (indentStr === '') return this; // noop\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\t// Process exclusion ranges\r\n\t\tconst isExcluded = {};\r\n\r\n\t\tif (options.exclude) {\r\n\t\t\tconst exclusions =\r\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\r\n\t\t\texclusions.forEach((exclusion) => {\r\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\r\n\t\t\t\t\tisExcluded[i] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\r\n\t\tconst replacer = (match) => {\r\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\r\n\t\t\tshouldIndentNextCharacter = true;\r\n\t\t\treturn match;\r\n\t\t};\r\n\r\n\t\tthis.intro = this.intro.replace(pattern, replacer);\r\n\r\n\t\tlet charIndex = 0;\r\n\t\tlet chunk = this.firstChunk;\r\n\r\n\t\twhile (chunk) {\r\n\t\t\tconst end = chunk.end;\r\n\r\n\t\t\tif (chunk.edited) {\r\n\t\t\t\tif (!isExcluded[charIndex]) {\r\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\r\n\r\n\t\t\t\t\tif (chunk.content.length) {\r\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcharIndex = chunk.start;\r\n\r\n\t\t\t\twhile (charIndex < end) {\r\n\t\t\t\t\tif (!isExcluded[charIndex]) {\r\n\t\t\t\t\t\tconst char = this.original[charIndex];\r\n\r\n\t\t\t\t\t\tif (char === '\\n') {\r\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\r\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\r\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\r\n\r\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\r\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\r\n\t\t\t\t\t\t\t\tchunk = chunk.next;\r\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcharIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcharIndex = chunk.end;\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\r\n\t\tthis.outro = this.outro.replace(pattern, replacer);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tinsert() {\r\n\t\tthrow new Error(\r\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\r\n\t\t);\r\n\t}\r\n\r\n\tinsertLeft(index, content) {\r\n\t\tif (!warned.insertLeft) {\r\n\t\t\tconsole.warn(\r\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\r\n\t\t\t); // eslint-disable-line no-console\r\n\t\t\twarned.insertLeft = true;\r\n\t\t}\r\n\r\n\t\treturn this.appendLeft(index, content);\r\n\t}\r\n\r\n\tinsertRight(index, content) {\r\n\t\tif (!warned.insertRight) {\r\n\t\t\tconsole.warn(\r\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\r\n\t\t\t); // eslint-disable-line no-console\r\n\t\t\twarned.insertRight = true;\r\n\t\t}\r\n\r\n\t\treturn this.prependRight(index, content);\r\n\t}\r\n\r\n\tmove(start, end, index) {\r\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\r\n\r\n\t\tthis._split(start);\r\n\t\tthis._split(end);\r\n\t\tthis._split(index);\r\n\r\n\t\tconst first = this.byStart[start];\r\n\t\tconst last = this.byEnd[end];\r\n\r\n\t\tconst oldLeft = first.previous;\r\n\t\tconst oldRight = last.next;\r\n\r\n\t\tconst newRight = this.byStart[index];\r\n\t\tif (!newRight && last === this.lastChunk) return this;\r\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\r\n\r\n\t\tif (oldLeft) oldLeft.next = oldRight;\r\n\t\tif (oldRight) oldRight.previous = oldLeft;\r\n\r\n\t\tif (newLeft) newLeft.next = first;\r\n\t\tif (newRight) newRight.previous = last;\r\n\r\n\t\tif (!first.previous) this.firstChunk = last.next;\r\n\t\tif (!last.next) {\r\n\t\t\tthis.lastChunk = first.previous;\r\n\t\t\tthis.lastChunk.next = null;\r\n\t\t}\r\n\r\n\t\tfirst.previous = newLeft;\r\n\t\tlast.next = newRight || null;\r\n\r\n\t\tif (!newLeft) this.firstChunk = first;\r\n\t\tif (!newRight) this.lastChunk = last;\r\n\t\treturn this;\r\n\t}\r\n\r\n\toverwrite(start, end, content, options) {\r\n\t\toptions = options || {};\r\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\r\n\t}\r\n\r\n\tupdate(start, end, content, options) {\r\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\r\n\r\n\t\twhile (start < 0) start += this.original.length;\r\n\t\twhile (end < 0) end += this.original.length;\r\n\r\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\r\n\t\tif (start === end)\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\r\n\t\t\t);\r\n\r\n\t\tthis._split(start);\r\n\t\tthis._split(end);\r\n\r\n\t\tif (options === true) {\r\n\t\t\tif (!warned.storeName) {\r\n\t\t\t\tconsole.warn(\r\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\r\n\t\t\t\t); // eslint-disable-line no-console\r\n\t\t\t\twarned.storeName = true;\r\n\t\t\t}\r\n\r\n\t\t\toptions = { storeName: true };\r\n\t\t}\r\n\t\tconst storeName = options !== undefined ? options.storeName : false;\r\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\r\n\r\n\t\tif (storeName) {\r\n\t\t\tconst original = this.original.slice(start, end);\r\n\t\t\tObject.defineProperty(this.storedNames, original, {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst first = this.byStart[start];\r\n\t\tconst last = this.byEnd[end];\r\n\r\n\t\tif (first) {\r\n\t\t\tlet chunk = first;\r\n\t\t\twhile (chunk !== last) {\r\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\r\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\r\n\t\t\t\t}\r\n\t\t\t\tchunk = chunk.next;\r\n\t\t\t\tchunk.edit('', false);\r\n\t\t\t}\r\n\r\n\t\t\tfirst.edit(content, storeName, !overwrite);\r\n\t\t} else {\r\n\t\t\t// must be inserting at the end\r\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\r\n\r\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\r\n\t\t\tlast.next = newChunk;\r\n\t\t\tnewChunk.previous = last;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprepend(content) {\r\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\r\n\r\n\t\tthis.intro = content + this.intro;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprependLeft(index, content) {\r\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\r\n\r\n\t\tthis._split(index);\r\n\r\n\t\tconst chunk = this.byEnd[index];\r\n\r\n\t\tif (chunk) {\r\n\t\t\tchunk.prependLeft(content);\r\n\t\t} else {\r\n\t\t\tthis.intro = content + this.intro;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprependRight(index, content) {\r\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\r\n\r\n\t\tthis._split(index);\r\n\r\n\t\tconst chunk = this.byStart[index];\r\n\r\n\t\tif (chunk) {\r\n\t\t\tchunk.prependRight(content);\r\n\t\t} else {\r\n\t\t\tthis.outro = content + this.outro;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tremove(start, end) {\r\n\t\twhile (start < 0) start += this.original.length;\r\n\t\twhile (end < 0) end += this.original.length;\r\n\r\n\t\tif (start === end) return this;\r\n\r\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\r\n\t\tif (start > end) throw new Error('end must be greater than start');\r\n\r\n\t\tthis._split(start);\r\n\t\tthis._split(end);\r\n\r\n\t\tlet chunk = this.byStart[start];\r\n\r\n\t\twhile (chunk) {\r\n\t\t\tchunk.intro = '';\r\n\t\t\tchunk.outro = '';\r\n\t\t\tchunk.edit('');\r\n\r\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlastChar() {\r\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\r\n\t\tlet chunk = this.lastChunk;\r\n\t\tdo {\r\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\r\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\r\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\r\n\t\t} while ((chunk = chunk.previous));\r\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\r\n\t\treturn '';\r\n\t}\r\n\r\n\tlastLine() {\r\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\r\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\r\n\t\tlet lineStr = this.outro;\r\n\t\tlet chunk = this.lastChunk;\r\n\t\tdo {\r\n\t\t\tif (chunk.outro.length > 0) {\r\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\r\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\r\n\t\t\t\tlineStr = chunk.outro + lineStr;\r\n\t\t\t}\r\n\r\n\t\t\tif (chunk.content.length > 0) {\r\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\r\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\r\n\t\t\t\tlineStr = chunk.content + lineStr;\r\n\t\t\t}\r\n\r\n\t\t\tif (chunk.intro.length > 0) {\r\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\r\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\r\n\t\t\t\tlineStr = chunk.intro + lineStr;\r\n\t\t\t}\r\n\t\t} while ((chunk = chunk.previous));\r\n\t\tlineIndex = this.intro.lastIndexOf(n);\r\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\r\n\t\treturn this.intro + lineStr;\r\n\t}\r\n\r\n\tslice(start = 0, end = this.original.length) {\r\n\t\twhile (start < 0) start += this.original.length;\r\n\t\twhile (end < 0) end += this.original.length;\r\n\r\n\t\tlet result = '';\r\n\r\n\t\t// find start chunk\r\n\t\tlet chunk = this.firstChunk;\r\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\r\n\t\t\t// found end chunk before start\r\n\t\t\tif (chunk.start < end && chunk.end >= end) {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\r\n\t\tif (chunk && chunk.edited && chunk.start !== start)\r\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\r\n\r\n\t\tconst startChunk = chunk;\r\n\t\twhile (chunk) {\r\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\r\n\t\t\t\tresult += chunk.intro;\r\n\t\t\t}\r\n\r\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\r\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\r\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\r\n\r\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\r\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\r\n\r\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\r\n\r\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\r\n\t\t\t\tresult += chunk.outro;\r\n\t\t\t}\r\n\r\n\t\t\tif (containsEnd) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// TODO deprecate this? not really very useful\r\n\tsnip(start, end) {\r\n\t\tconst clone = this.clone();\r\n\t\tclone.remove(0, start);\r\n\t\tclone.remove(end, clone.original.length);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t_split(index) {\r\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\r\n\r\n\t\tlet chunk = this.lastSearchedChunk;\r\n\t\tconst searchForward = index > chunk.end;\r\n\r\n\t\twhile (chunk) {\r\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\r\n\r\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\r\n\t\t}\r\n\t}\r\n\r\n\t_splitChunk(chunk, index) {\r\n\t\tif (chunk.edited && chunk.content.length) {\r\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\r\n\t\t\tconst loc = getLocator(this.original)(index);\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst newChunk = chunk.split(index);\r\n\r\n\t\tthis.byEnd[index] = chunk;\r\n\t\tthis.byStart[index] = newChunk;\r\n\t\tthis.byEnd[newChunk.end] = newChunk;\r\n\r\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\r\n\r\n\t\tthis.lastSearchedChunk = chunk;\r\n\t\treturn true;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\tlet str = this.intro;\r\n\r\n\t\tlet chunk = this.firstChunk;\r\n\t\twhile (chunk) {\r\n\t\t\tstr += chunk.toString();\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\r\n\t\treturn str + this.outro;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\tlet chunk = this.firstChunk;\r\n\t\tdo {\r\n\t\t\tif (\r\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\r\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\r\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\r\n\t\t\t)\r\n\t\t\t\treturn false;\r\n\t\t} while ((chunk = chunk.next));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tlength() {\r\n\t\tlet chunk = this.firstChunk;\r\n\t\tlet length = 0;\r\n\t\tdo {\r\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\r\n\t\t} while ((chunk = chunk.next));\r\n\t\treturn length;\r\n\t}\r\n\r\n\ttrimLines() {\r\n\t\treturn this.trim('[\\\\r\\\\n]');\r\n\t}\r\n\r\n\ttrim(charType) {\r\n\t\treturn this.trimStart(charType).trimEnd(charType);\r\n\t}\r\n\r\n\ttrimEndAborted(charType) {\r\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\r\n\r\n\t\tthis.outro = this.outro.replace(rx, '');\r\n\t\tif (this.outro.length) return true;\r\n\r\n\t\tlet chunk = this.lastChunk;\r\n\r\n\t\tdo {\r\n\t\t\tconst end = chunk.end;\r\n\t\t\tconst aborted = chunk.trimEnd(rx);\r\n\r\n\t\t\t// if chunk was trimmed, we have a new lastChunk\r\n\t\t\tif (chunk.end !== end) {\r\n\t\t\t\tif (this.lastChunk === chunk) {\r\n\t\t\t\t\tthis.lastChunk = chunk.next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\r\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\r\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (aborted) return true;\r\n\t\t\tchunk = chunk.previous;\r\n\t\t} while (chunk);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\ttrimEnd(charType) {\r\n\t\tthis.trimEndAborted(charType);\r\n\t\treturn this;\r\n\t}\r\n\ttrimStartAborted(charType) {\r\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\r\n\r\n\t\tthis.intro = this.intro.replace(rx, '');\r\n\t\tif (this.intro.length) return true;\r\n\r\n\t\tlet chunk = this.firstChunk;\r\n\r\n\t\tdo {\r\n\t\t\tconst end = chunk.end;\r\n\t\t\tconst aborted = chunk.trimStart(rx);\r\n\r\n\t\t\tif (chunk.end !== end) {\r\n\t\t\t\t// special case...\r\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\r\n\r\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\r\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\r\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (aborted) return true;\r\n\t\t\tchunk = chunk.next;\r\n\t\t} while (chunk);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\ttrimStart(charType) {\r\n\t\tthis.trimStartAborted(charType);\r\n\t\treturn this;\r\n\t}\r\n\r\n\thasChanged() {\r\n\t\treturn this.original !== this.toString();\r\n\t}\r\n\r\n\t_replaceRegexp(searchValue, replacement) {\r\n\t\tfunction getReplacement(match, str) {\r\n\t\t\tif (typeof replacement === 'string') {\r\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\r\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\r\n\t\t\t\t\tif (i === '$') return '$';\r\n\t\t\t\t\tif (i === '&') return match[0];\r\n\t\t\t\t\tconst num = +i;\r\n\t\t\t\t\tif (num < match.length) return match[+i];\r\n\t\t\t\t\treturn `$${i}`;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction matchAll(re, str) {\r\n\t\t\tlet match;\r\n\t\t\tconst matches = [];\r\n\t\t\twhile ((match = re.exec(str))) {\r\n\t\t\t\tmatches.push(match);\r\n\t\t\t}\r\n\t\t\treturn matches;\r\n\t\t}\r\n\t\tif (searchValue.global) {\r\n\t\t\tconst matches = matchAll(searchValue, this.original);\r\n\t\t\tmatches.forEach((match) => {\r\n\t\t\t\tif (match.index != null)\r\n\t\t\t\t\tthis.overwrite(\r\n\t\t\t\t\t\tmatch.index,\r\n\t\t\t\t\t\tmatch.index + match[0].length,\r\n\t\t\t\t\t\tgetReplacement(match, this.original)\r\n\t\t\t\t\t);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst match = this.original.match(searchValue);\r\n\t\t\tif (match && match.index != null)\r\n\t\t\t\tthis.overwrite(\r\n\t\t\t\t\tmatch.index,\r\n\t\t\t\t\tmatch.index + match[0].length,\r\n\t\t\t\t\tgetReplacement(match, this.original)\r\n\t\t\t\t);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t_replaceString(string, replacement) {\r\n\t\tconst { original } = this;\r\n\t\tconst index = original.indexOf(string);\r\n\r\n\t\tif (index !== -1) {\r\n\t\t\tthis.overwrite(index, index + string.length, replacement);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\treplace(searchValue, replacement) {\r\n\t\tif (typeof searchValue === 'string') {\r\n\t\t\treturn this._replaceString(searchValue, replacement);\r\n\t\t}\r\n\r\n\t\treturn this._replaceRegexp(searchValue, replacement);\r\n\t}\r\n\r\n\t_replaceAllString(string, replacement) {\r\n\t\tconst { original } = this;\r\n\t\tconst stringLength = string.length;\r\n\t\tfor (\r\n\t\t\tlet index = original.indexOf(string);\r\n\t\t\tindex !== -1;\r\n\t\t\tindex = original.indexOf(string, index + stringLength)\r\n\t\t) {\r\n\t\t\tthis.overwrite(index, index + stringLength, replacement);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\treplaceAll(searchValue, replacement) {\r\n\t\tif (typeof searchValue === 'string') {\r\n\t\t\treturn this._replaceAllString(searchValue, replacement);\r\n\t\t}\r\n\r\n\t\tif (!searchValue.global) {\r\n\t\t\tthrow new TypeError(\r\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this._replaceRegexp(searchValue, replacement);\r\n\t}\r\n}\r\n\r\nvar __defProp$3 = Object.defineProperty;\r\nvar __defProps$3 = Object.defineProperties;\r\nvar __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$3 = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$3 = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$3 = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$3.call(b, prop))\r\n      __defNormalProp$3(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$3)\r\n    for (var prop of __getOwnPropSymbols$3(b)) {\r\n      if (__propIsEnum$3.call(b, prop))\r\n        __defNormalProp$3(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));\r\nconst CONVERT_SYMBOL = \"$\";\r\nconst ESCAPE_SYMBOL = \"$$\";\r\nconst IMPORT_SOURCE = \"vue/macros\";\r\nconst shorthands = [\"ref\", \"computed\", \"shallowRef\", \"toRef\", \"customRef\"];\r\nconst transformCheckRE = /[^\\w]\\$(?:\\$|ref|computed|shallowRef)?\\s*(\\(|\\<)/;\r\nfunction shouldTransform(src) {\r\n  return transformCheckRE.test(src);\r\n}\r\nfunction transform(src, {\r\n  filename,\r\n  sourceMap,\r\n  parserPlugins,\r\n  importHelpersFrom = \"vue\"\r\n} = {}) {\r\n  const plugins = parserPlugins || [];\r\n  if (filename) {\r\n    if (/\\.tsx?$/.test(filename)) {\r\n      plugins.push(\"typescript\");\r\n    }\r\n    if (filename.endsWith(\"x\")) {\r\n      plugins.push(\"jsx\");\r\n    }\r\n  }\r\n  const ast = parse_1$1(src, {\r\n    sourceType: \"module\",\r\n    plugins\r\n  });\r\n  const s = new MagicString(src);\r\n  const res = transformAST(ast.program, s, 0);\r\n  if (res.importedHelpers.length) {\r\n    s.prepend(\r\n      `import { ${res.importedHelpers.map((h) => `${h} as _${h}`).join(\", \")} } from '${importHelpersFrom}'\r\n`\r\n    );\r\n  }\r\n  return __spreadProps$3(__spreadValues$3({}, res), {\r\n    code: s.toString(),\r\n    map: sourceMap ? s.generateMap({\r\n      source: filename,\r\n      hires: true,\r\n      includeContent: true\r\n    }) : null\r\n  });\r\n}\r\nfunction transformAST(ast, s, offset = 0, knownRefs, knownProps) {\r\n  warnExperimental();\r\n  const userImports = /* @__PURE__ */ Object.create(null);\r\n  for (const node of ast.body) {\r\n    if (node.type !== \"ImportDeclaration\")\r\n      continue;\r\n    walkImportDeclaration(node);\r\n  }\r\n  let convertSymbol;\r\n  let escapeSymbol;\r\n  for (const { local, imported, source, specifier } of Object.values(\r\n    userImports\r\n  )) {\r\n    if (source === IMPORT_SOURCE) {\r\n      if (imported === ESCAPE_SYMBOL) {\r\n        escapeSymbol = local;\r\n      } else if (imported === CONVERT_SYMBOL) {\r\n        convertSymbol = local;\r\n      } else if (imported !== local) {\r\n        error(\r\n          `macro imports for ref-creating methods do not support aliasing.`,\r\n          specifier\r\n        );\r\n      }\r\n    }\r\n  }\r\n  if (!convertSymbol && !userImports[CONVERT_SYMBOL]) {\r\n    convertSymbol = CONVERT_SYMBOL;\r\n  }\r\n  if (!escapeSymbol && !userImports[ESCAPE_SYMBOL]) {\r\n    escapeSymbol = ESCAPE_SYMBOL;\r\n  }\r\n  const importedHelpers = /* @__PURE__ */ new Set();\r\n  const rootScope = {};\r\n  const scopeStack = [rootScope];\r\n  let currentScope = rootScope;\r\n  let escapeScope;\r\n  const excludedIds = /* @__PURE__ */ new WeakSet();\r\n  const parentStack = [];\r\n  const propsLocalToPublicMap = /* @__PURE__ */ Object.create(null);\r\n  if (knownRefs) {\r\n    for (const key of knownRefs) {\r\n      rootScope[key] = {};\r\n    }\r\n  }\r\n  if (knownProps) {\r\n    for (const key in knownProps) {\r\n      const { local, isConst } = knownProps[key];\r\n      rootScope[local] = {\r\n        isProp: true,\r\n        isConst: !!isConst\r\n      };\r\n      propsLocalToPublicMap[local] = key;\r\n    }\r\n  }\r\n  function walkImportDeclaration(node) {\r\n    const source = node.source.value;\r\n    if (source === IMPORT_SOURCE) {\r\n      s.remove(node.start + offset, node.end + offset);\r\n    }\r\n    for (const specifier of node.specifiers) {\r\n      const local = specifier.local.name;\r\n      const imported = specifier.type === \"ImportSpecifier\" && specifier.imported.type === \"Identifier\" && specifier.imported.name || \"default\";\r\n      userImports[local] = {\r\n        source,\r\n        local,\r\n        imported,\r\n        specifier\r\n      };\r\n    }\r\n  }\r\n  function isRefCreationCall(callee) {\r\n    if (!convertSymbol || currentScope[convertSymbol] !== void 0) {\r\n      return false;\r\n    }\r\n    if (callee === convertSymbol) {\r\n      return convertSymbol;\r\n    }\r\n    if (callee[0] === \"$\" && shorthands.includes(callee.slice(1))) {\r\n      return callee;\r\n    }\r\n    return false;\r\n  }\r\n  function error(msg, node) {\r\n    const e = new Error(msg);\r\n    e.node = node;\r\n    throw e;\r\n  }\r\n  function helper(msg) {\r\n    importedHelpers.add(msg);\r\n    return `_${msg}`;\r\n  }\r\n  function registerBinding(id, binding) {\r\n    excludedIds.add(id);\r\n    if (currentScope) {\r\n      currentScope[id.name] = binding ? binding : false;\r\n    } else {\r\n      error(\r\n        \"registerBinding called without active scope, something is wrong.\",\r\n        id\r\n      );\r\n    }\r\n  }\r\n  const registerRefBinding = (id, isConst = false) => registerBinding(id, { isConst });\r\n  let tempVarCount = 0;\r\n  function genTempVar() {\r\n    return `__$temp_${++tempVarCount}`;\r\n  }\r\n  function snip(node) {\r\n    return s.original.slice(node.start + offset, node.end + offset);\r\n  }\r\n  function walkScope(node, isRoot = false) {\r\n    for (const stmt of node.body) {\r\n      if (stmt.type === \"VariableDeclaration\") {\r\n        walkVariableDeclaration(stmt, isRoot);\r\n      } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\r\n        if (stmt.declare || !stmt.id)\r\n          continue;\r\n        registerBinding(stmt.id);\r\n      } else if ((stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\") && stmt.left.type === \"VariableDeclaration\") {\r\n        walkVariableDeclaration(stmt.left);\r\n      } else if (stmt.type === \"ExportNamedDeclaration\" && stmt.declaration && stmt.declaration.type === \"VariableDeclaration\") {\r\n        walkVariableDeclaration(stmt.declaration, isRoot);\r\n      } else if (stmt.type === \"LabeledStatement\" && stmt.body.type === \"VariableDeclaration\") {\r\n        walkVariableDeclaration(stmt.body, isRoot);\r\n      }\r\n    }\r\n  }\r\n  function walkVariableDeclaration(stmt, isRoot = false) {\r\n    if (stmt.declare) {\r\n      return;\r\n    }\r\n    for (const decl of stmt.declarations) {\r\n      let refCall;\r\n      const isCall = decl.init && decl.init.type === \"CallExpression\" && decl.init.callee.type === \"Identifier\";\r\n      if (isCall && (refCall = isRefCreationCall(decl.init.callee.name))) {\r\n        processRefDeclaration(\r\n          refCall,\r\n          decl.id,\r\n          decl.init,\r\n          stmt.kind === \"const\"\r\n        );\r\n      } else {\r\n        const isProps = isRoot && isCall && decl.init.callee.name === \"defineProps\";\r\n        for (const id of extractIdentifiers(decl.id)) {\r\n          if (isProps) {\r\n            excludedIds.add(id);\r\n          } else {\r\n            registerBinding(id);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function processRefDeclaration(method, id, call, isConst) {\r\n    excludedIds.add(call.callee);\r\n    if (method === convertSymbol) {\r\n      s.remove(call.callee.start + offset, call.callee.end + offset);\r\n      if (id.type === \"Identifier\") {\r\n        registerRefBinding(id, isConst);\r\n      } else if (id.type === \"ObjectPattern\") {\r\n        processRefObjectPattern(id, call, isConst);\r\n      } else if (id.type === \"ArrayPattern\") {\r\n        processRefArrayPattern(id, call, isConst);\r\n      }\r\n    } else {\r\n      if (id.type === \"Identifier\") {\r\n        registerRefBinding(id, isConst);\r\n        s.overwrite(\r\n          call.start + offset,\r\n          call.start + method.length + offset,\r\n          helper(method.slice(1))\r\n        );\r\n      } else {\r\n        error(`${method}() cannot be used with destructure patterns.`, call);\r\n      }\r\n    }\r\n  }\r\n  function processRefObjectPattern(pattern, call, isConst, tempVar, path = []) {\r\n    if (!tempVar) {\r\n      tempVar = genTempVar();\r\n      s.overwrite(pattern.start + offset, pattern.end + offset, tempVar);\r\n    }\r\n    let nameId;\r\n    for (const p of pattern.properties) {\r\n      let key;\r\n      let defaultValue;\r\n      if (p.type === \"ObjectProperty\") {\r\n        if (p.key.start === p.value.start) {\r\n          nameId = p.key;\r\n          if (p.value.type === \"Identifier\") {\r\n            excludedIds.add(p.value);\r\n          } else if (p.value.type === \"AssignmentPattern\" && p.value.left.type === \"Identifier\") {\r\n            excludedIds.add(p.value.left);\r\n            defaultValue = p.value.right;\r\n          }\r\n        } else {\r\n          key = p.computed ? p.key : p.key.name;\r\n          if (p.value.type === \"Identifier\") {\r\n            nameId = p.value;\r\n          } else if (p.value.type === \"ObjectPattern\") {\r\n            processRefObjectPattern(p.value, call, isConst, tempVar, [\r\n              ...path,\r\n              key\r\n            ]);\r\n          } else if (p.value.type === \"ArrayPattern\") {\r\n            processRefArrayPattern(p.value, call, isConst, tempVar, [\r\n              ...path,\r\n              key\r\n            ]);\r\n          } else if (p.value.type === \"AssignmentPattern\") {\r\n            if (p.value.left.type === \"Identifier\") {\r\n              nameId = p.value.left;\r\n              defaultValue = p.value.right;\r\n            } else if (p.value.left.type === \"ObjectPattern\") {\r\n              processRefObjectPattern(p.value.left, call, isConst, tempVar, [\r\n                ...path,\r\n                [key, p.value.right]\r\n              ]);\r\n            } else if (p.value.left.type === \"ArrayPattern\") {\r\n              processRefArrayPattern(p.value.left, call, isConst, tempVar, [\r\n                ...path,\r\n                [key, p.value.right]\r\n              ]);\r\n            } else ;\r\n          }\r\n        }\r\n      } else {\r\n        error(`reactivity destructure does not support rest elements.`, p);\r\n      }\r\n      if (nameId) {\r\n        registerRefBinding(nameId, isConst);\r\n        const source = pathToString(tempVar, path);\r\n        const keyStr = isString$2(key) ? `'${key}'` : key ? snip(key) : `'${nameId.name}'`;\r\n        const defaultStr = defaultValue ? `, ${snip(defaultValue)}` : ``;\r\n        s.appendLeft(\r\n          call.end + offset,\r\n          `,\r\n  ${nameId.name} = ${helper(\r\n            \"toRef\"\r\n          )}(${source}, ${keyStr}${defaultStr})`\r\n        );\r\n      }\r\n    }\r\n    if (nameId) {\r\n      s.appendLeft(call.end + offset, \";\");\r\n    }\r\n  }\r\n  function processRefArrayPattern(pattern, call, isConst, tempVar, path = []) {\r\n    if (!tempVar) {\r\n      tempVar = genTempVar();\r\n      s.overwrite(pattern.start + offset, pattern.end + offset, tempVar);\r\n    }\r\n    let nameId;\r\n    for (let i = 0; i < pattern.elements.length; i++) {\r\n      const e = pattern.elements[i];\r\n      if (!e)\r\n        continue;\r\n      let defaultValue;\r\n      if (e.type === \"Identifier\") {\r\n        nameId = e;\r\n      } else if (e.type === \"AssignmentPattern\") {\r\n        nameId = e.left;\r\n        defaultValue = e.right;\r\n      } else if (e.type === \"RestElement\") {\r\n        error(`reactivity destructure does not support rest elements.`, e);\r\n      } else if (e.type === \"ObjectPattern\") {\r\n        processRefObjectPattern(e, call, isConst, tempVar, [...path, i]);\r\n      } else if (e.type === \"ArrayPattern\") {\r\n        processRefArrayPattern(e, call, isConst, tempVar, [...path, i]);\r\n      }\r\n      if (nameId) {\r\n        registerRefBinding(nameId, isConst);\r\n        const source = pathToString(tempVar, path);\r\n        const defaultStr = defaultValue ? `, ${snip(defaultValue)}` : ``;\r\n        s.appendLeft(\r\n          call.end + offset,\r\n          `,\r\n  ${nameId.name} = ${helper(\r\n            \"toRef\"\r\n          )}(${source}, ${i}${defaultStr})`\r\n        );\r\n      }\r\n    }\r\n    if (nameId) {\r\n      s.appendLeft(call.end + offset, \";\");\r\n    }\r\n  }\r\n  function pathToString(source, path) {\r\n    if (path.length) {\r\n      for (const seg of path) {\r\n        if (isArray$3(seg)) {\r\n          source = `(${source}${segToString(seg[0])} || ${snip(seg[1])})`;\r\n        } else {\r\n          source += segToString(seg);\r\n        }\r\n      }\r\n    }\r\n    return source;\r\n  }\r\n  function segToString(seg) {\r\n    if (typeof seg === \"number\") {\r\n      return `[${seg}]`;\r\n    } else if (typeof seg === \"string\") {\r\n      return `.${seg}`;\r\n    } else {\r\n      return snip(seg);\r\n    }\r\n  }\r\n  function rewriteId(scope, id, parent, parentStack2) {\r\n    if (hasOwn(scope, id.name)) {\r\n      const binding = scope[id.name];\r\n      if (binding) {\r\n        if (binding.isConst && (parent.type === \"AssignmentExpression\" && id === parent.left || parent.type === \"UpdateExpression\")) {\r\n          error(`Assignment to constant variable.`, id);\r\n        }\r\n        const { isProp } = binding;\r\n        if (isStaticProperty(parent) && parent.shorthand) {\r\n          if (!parent.inPattern || isInDestructureAssignment(parent, parentStack2)) {\r\n            if (isProp) {\r\n              if (escapeScope) {\r\n                registerEscapedPropBinding(id);\r\n                s.appendLeft(\r\n                  id.end + offset,\r\n                  `: __props_${propsLocalToPublicMap[id.name]}`\r\n                );\r\n              } else {\r\n                s.appendLeft(\r\n                  id.end + offset,\r\n                  `: ${genPropsAccessExp(propsLocalToPublicMap[id.name])}`\r\n                );\r\n              }\r\n            } else {\r\n              s.appendLeft(id.end + offset, `: ${id.name}.value`);\r\n            }\r\n          }\r\n        } else {\r\n          if (isProp) {\r\n            if (escapeScope) {\r\n              registerEscapedPropBinding(id);\r\n              s.overwrite(\r\n                id.start + offset,\r\n                id.end + offset,\r\n                `__props_${propsLocalToPublicMap[id.name]}`\r\n              );\r\n            } else {\r\n              s.overwrite(\r\n                id.start + offset,\r\n                id.end + offset,\r\n                genPropsAccessExp(propsLocalToPublicMap[id.name])\r\n              );\r\n            }\r\n          } else {\r\n            s.appendLeft(id.end + offset, \".value\");\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  const propBindingRefs = {};\r\n  function registerEscapedPropBinding(id) {\r\n    if (!propBindingRefs.hasOwnProperty(id.name)) {\r\n      propBindingRefs[id.name] = true;\r\n      const publicKey = propsLocalToPublicMap[id.name];\r\n      s.prependRight(\r\n        offset,\r\n        `const __props_${publicKey} = ${helper(\r\n          `toRef`\r\n        )}(__props, '${publicKey}');\r\n`\r\n      );\r\n    }\r\n  }\r\n  walkScope(ast, true);\r\n  walk$1(ast, {\r\n    enter(node, parent) {\r\n      parent && parentStack.push(parent);\r\n      if (isFunctionType(node)) {\r\n        scopeStack.push(currentScope = {});\r\n        walkFunctionParams(node, registerBinding);\r\n        if (node.body.type === \"BlockStatement\") {\r\n          walkScope(node.body);\r\n        }\r\n        return;\r\n      }\r\n      if (node.type === \"CatchClause\") {\r\n        scopeStack.push(currentScope = {});\r\n        if (node.param && node.param.type === \"Identifier\") {\r\n          registerBinding(node.param);\r\n        }\r\n        walkScope(node.body);\r\n        return;\r\n      }\r\n      if (node.type === \"BlockStatement\" && !isFunctionType(parent)) {\r\n        scopeStack.push(currentScope = {});\r\n        walkScope(node);\r\n        return;\r\n      }\r\n      if (parent && parent.type.startsWith(\"TS\") && parent.type !== \"TSAsExpression\" && parent.type !== \"TSNonNullExpression\" && parent.type !== \"TSTypeAssertion\") {\r\n        return this.skip();\r\n      }\r\n      if (node.type === \"Identifier\") {\r\n        const binding = rootScope[node.name];\r\n        if (\r\n          // if inside $$(), skip unless this is a destructured prop binding\r\n          !(escapeScope && (!binding || !binding.isProp)) && isReferencedIdentifier(node, parent, parentStack) && !excludedIds.has(node)\r\n        ) {\r\n          let i = scopeStack.length;\r\n          while (i--) {\r\n            if (rewriteId(scopeStack[i], node, parent, parentStack)) {\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (node.type === \"CallExpression\" && node.callee.type === \"Identifier\") {\r\n        const callee = node.callee.name;\r\n        const refCall = isRefCreationCall(callee);\r\n        if (refCall && (!parent || parent.type !== \"VariableDeclarator\")) {\r\n          return error(\r\n            `${refCall} can only be used as the initializer of a variable declaration.`,\r\n            node\r\n          );\r\n        }\r\n        if (escapeSymbol && currentScope[escapeSymbol] === void 0 && callee === escapeSymbol) {\r\n          escapeScope = node;\r\n          s.remove(node.callee.start + offset, node.callee.end + offset);\r\n          if ((parent == null ? void 0 : parent.type) === \"ExpressionStatement\") {\r\n            let i = (node.leadingComments ? node.leadingComments[0].start : node.start) + offset;\r\n            while (i--) {\r\n              const char = s.original.charAt(i);\r\n              if (char === \"\\n\") {\r\n                s.prependRight(node.start + offset, \";\");\r\n                break;\r\n              } else if (!/\\s/.test(char)) {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    leave(node, parent) {\r\n      parent && parentStack.pop();\r\n      if (node.type === \"BlockStatement\" && !isFunctionType(parent) || isFunctionType(node)) {\r\n        scopeStack.pop();\r\n        currentScope = scopeStack[scopeStack.length - 1] || null;\r\n      }\r\n      if (node === escapeScope) {\r\n        escapeScope = void 0;\r\n      }\r\n    }\r\n  });\r\n  return {\r\n    rootRefs: Object.keys(rootScope).filter((key) => {\r\n      const binding = rootScope[key];\r\n      return binding && !binding.isProp;\r\n    }),\r\n    importedHelpers: [...importedHelpers]\r\n  };\r\n}\r\nconst hasWarned = {};\r\nfunction warnExperimental() {\r\n  if (typeof window !== \"undefined\") {\r\n    return;\r\n  }\r\n  warnOnce(\r\n    `Reactivity Transform was an experimental feature and has now been deprecated. It will be removed from Vue core in 3.4. If you intend to continue using it, switch to https://vue-macros.sxzz.moe/features/reactivity-transform.html.\r\nSee reason for deprecation here: https://github.com/vuejs/rfcs/discussions/369#discussioncomment-5059028`\r\n  );\r\n}\r\nfunction warnOnce(msg) {\r\n  const isNodeProd = typeof process !== \"undefined\" && process.env.NODE_ENV === \"production\";\r\n  if (!isNodeProd && true && !hasWarned[msg]) {\r\n    hasWarned[msg] = true;\r\n    warn(msg);\r\n  }\r\n}\r\nfunction warn(msg) {\r\n  console.warn(\r\n    `\\x1B[1m\\x1B[33m[@vue/reactivity-transform]\\x1B[0m\\x1B[33m ${msg}\\x1B[0m\r\n`\r\n  );\r\n}\r\n\r\nfunction analyzeScriptBindings(ast) {\r\n  for (const node of ast) {\r\n    if (node.type === \"ExportDefaultDeclaration\" && node.declaration.type === \"ObjectExpression\") {\r\n      return analyzeBindingsFromOptions(node.declaration);\r\n    }\r\n  }\r\n  return {};\r\n}\r\nfunction analyzeBindingsFromOptions(node) {\r\n  const bindings = {};\r\n  Object.defineProperty(bindings, \"__isScriptSetup\", {\r\n    enumerable: false,\r\n    value: false\r\n  });\r\n  for (const property of node.properties) {\r\n    if (property.type === \"ObjectProperty\" && !property.computed && property.key.type === \"Identifier\") {\r\n      if (property.key.name === \"props\") {\r\n        for (const key of getObjectOrArrayExpressionKeys(property.value)) {\r\n          bindings[key] = \"props\";\r\n        }\r\n      } else if (property.key.name === \"inject\") {\r\n        for (const key of getObjectOrArrayExpressionKeys(property.value)) {\r\n          bindings[key] = \"options\";\r\n        }\r\n      } else if (property.value.type === \"ObjectExpression\" && (property.key.name === \"computed\" || property.key.name === \"methods\")) {\r\n        for (const key of getObjectExpressionKeys(property.value)) {\r\n          bindings[key] = \"options\";\r\n        }\r\n      }\r\n    } else if (property.type === \"ObjectMethod\" && property.key.type === \"Identifier\" && (property.key.name === \"setup\" || property.key.name === \"data\")) {\r\n      for (const bodyItem of property.body.body) {\r\n        if (bodyItem.type === \"ReturnStatement\" && bodyItem.argument && bodyItem.argument.type === \"ObjectExpression\") {\r\n          for (const key of getObjectExpressionKeys(bodyItem.argument)) {\r\n            bindings[key] = property.key.name === \"setup\" ? \"setup-maybe-ref\" : \"data\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return bindings;\r\n}\r\nfunction getObjectExpressionKeys(node) {\r\n  const keys = [];\r\n  for (const prop of node.properties) {\r\n    if (prop.type === \"SpreadElement\")\r\n      continue;\r\n    const key = resolveObjectKey(prop.key, prop.computed);\r\n    if (key)\r\n      keys.push(String(key));\r\n  }\r\n  return keys;\r\n}\r\nfunction getArrayExpressionKeys(node) {\r\n  const keys = [];\r\n  for (const element of node.elements) {\r\n    if (element && element.type === \"StringLiteral\") {\r\n      keys.push(element.value);\r\n    }\r\n  }\r\n  return keys;\r\n}\r\nfunction getObjectOrArrayExpressionKeys(value) {\r\n  if (value.type === \"ArrayExpression\") {\r\n    return getArrayExpressionKeys(value);\r\n  }\r\n  if (value.type === \"ObjectExpression\") {\r\n    return getObjectExpressionKeys(value);\r\n  }\r\n  return [];\r\n}\r\n\r\nfunction rewriteDefault(input, as, parserPlugins) {\r\n  const ast = parse_1$1(input, {\r\n    sourceType: \"module\",\r\n    plugins: parserPlugins\r\n  }).program.body;\r\n  const s = new MagicString(input);\r\n  rewriteDefaultAST(ast, s, as);\r\n  return s.toString();\r\n}\r\nfunction rewriteDefaultAST(ast, s, as) {\r\n  if (!hasDefaultExport(ast)) {\r\n    s.append(`\r\nconst ${as} = {}`);\r\n    return;\r\n  }\r\n  ast.forEach((node) => {\r\n    if (node.type === \"ExportDefaultDeclaration\") {\r\n      if (node.declaration.type === \"ClassDeclaration\") {\r\n        let start = node.declaration.decorators && node.declaration.decorators.length > 0 ? node.declaration.decorators[node.declaration.decorators.length - 1].end : node.start;\r\n        s.overwrite(start, node.declaration.id.start, ` class `);\r\n        s.append(`\r\nconst ${as} = ${node.declaration.id.name}`);\r\n      } else {\r\n        s.overwrite(node.start, node.declaration.start, `const ${as} = `);\r\n      }\r\n    } else if (node.type === \"ExportNamedDeclaration\") {\r\n      for (const specifier of node.specifiers) {\r\n        if (specifier.type === \"ExportSpecifier\" && specifier.exported.type === \"Identifier\" && specifier.exported.name === \"default\") {\r\n          if (node.source) {\r\n            if (specifier.local.name === \"default\") {\r\n              s.prepend(\r\n                `import { default as __VUE_DEFAULT__ } from '${node.source.value}'\r\n`\r\n              );\r\n              const end2 = specifierEnd(s, specifier.local.end, node.end);\r\n              s.remove(specifier.start, end2);\r\n              s.append(`\r\nconst ${as} = __VUE_DEFAULT__`);\r\n              continue;\r\n            } else {\r\n              s.prepend(\r\n                `import { ${s.slice(\r\n                  specifier.local.start,\r\n                  specifier.local.end\r\n                )} as __VUE_DEFAULT__ } from '${node.source.value}'\r\n`\r\n              );\r\n              const end2 = specifierEnd(s, specifier.exported.end, node.end);\r\n              s.remove(specifier.start, end2);\r\n              s.append(`\r\nconst ${as} = __VUE_DEFAULT__`);\r\n              continue;\r\n            }\r\n          }\r\n          const end = specifierEnd(s, specifier.end, node.end);\r\n          s.remove(specifier.start, end);\r\n          s.append(`\r\nconst ${as} = ${specifier.local.name}`);\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\nfunction hasDefaultExport(ast) {\r\n  for (const stmt of ast) {\r\n    if (stmt.type === \"ExportDefaultDeclaration\") {\r\n      return true;\r\n    } else if (stmt.type === \"ExportNamedDeclaration\" && stmt.specifiers.some(\r\n      (spec) => spec.exported.name === \"default\"\r\n    )) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction specifierEnd(s, end, nodeEnd) {\r\n  let hasCommas = false;\r\n  let oldEnd = end;\r\n  while (end < nodeEnd) {\r\n    if (/\\s/.test(s.slice(end, end + 1))) {\r\n      end++;\r\n    } else if (s.slice(end, end + 1) === \",\") {\r\n      end++;\r\n      hasCommas = true;\r\n      break;\r\n    } else if (s.slice(end, end + 1) === \"}\") {\r\n      break;\r\n    }\r\n  }\r\n  return hasCommas ? end : oldEnd;\r\n}\r\n\r\nvar __defProp$2 = Object.defineProperty;\r\nvar __defProps$2 = Object.defineProperties;\r\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$2 = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$2.call(b, prop))\r\n      __defNormalProp$2(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$2)\r\n    for (var prop of __getOwnPropSymbols$2(b)) {\r\n      if (__propIsEnum$2.call(b, prop))\r\n        __defNormalProp$2(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\r\nconst normalScriptDefaultVar = `__default__`;\r\nfunction processNormalScript(ctx, scopeId) {\r\n  const script = ctx.descriptor.script;\r\n  if (script.lang && !ctx.isJS && !ctx.isTS) {\r\n    return script;\r\n  }\r\n  try {\r\n    let content = script.content;\r\n    let map = script.map;\r\n    const scriptAst = ctx.scriptAst;\r\n    const bindings = analyzeScriptBindings(scriptAst.body);\r\n    const { source, filename, cssVars } = ctx.descriptor;\r\n    const { sourceMap, genDefaultAs, isProd } = ctx.options;\r\n    if (ctx.options.reactivityTransform && shouldTransform(content)) {\r\n      const s = new MagicString(source);\r\n      const startOffset = script.loc.start.offset;\r\n      const endOffset = script.loc.end.offset;\r\n      const { importedHelpers } = transformAST(scriptAst, s, startOffset);\r\n      if (importedHelpers.length) {\r\n        s.prepend(\r\n          `import { ${importedHelpers.map((h) => `${h} as _${h}`).join(\", \")} } from 'vue'\r\n`\r\n        );\r\n      }\r\n      s.remove(0, startOffset);\r\n      s.remove(endOffset, source.length);\r\n      content = s.toString();\r\n      if (sourceMap !== false) {\r\n        map = s.generateMap({\r\n          source: filename,\r\n          hires: true,\r\n          includeContent: true\r\n        });\r\n      }\r\n    }\r\n    if (cssVars.length || genDefaultAs) {\r\n      const defaultVar = genDefaultAs || normalScriptDefaultVar;\r\n      const s = new MagicString(content);\r\n      rewriteDefaultAST(scriptAst.body, s, defaultVar);\r\n      content = s.toString();\r\n      if (cssVars.length) {\r\n        content += genNormalScriptCssVarsCode(\r\n          cssVars,\r\n          bindings,\r\n          scopeId,\r\n          !!isProd,\r\n          defaultVar\r\n        );\r\n      }\r\n      if (!genDefaultAs) {\r\n        content += `\r\nexport default ${defaultVar}`;\r\n      }\r\n    }\r\n    return __spreadProps$2(__spreadValues$2({}, script), {\r\n      content,\r\n      map,\r\n      bindings,\r\n      scriptAst: scriptAst.body\r\n    });\r\n  } catch (e) {\r\n    return script;\r\n  }\r\n}\r\n\r\nvar _a, _b;\r\nclass ScriptCompileContext {\r\n  constructor(descriptor, options) {\r\n    this.descriptor = descriptor;\r\n    this.options = options;\r\n    this.source = this.descriptor.source;\r\n    this.filename = this.descriptor.filename;\r\n    this.s = new MagicString(this.source);\r\n    this.startOffset = (_a = this.descriptor.scriptSetup) == null ? void 0 : _a.loc.start.offset;\r\n    this.endOffset = (_b = this.descriptor.scriptSetup) == null ? void 0 : _b.loc.end.offset;\r\n    this.userImports = /* @__PURE__ */ Object.create(null);\r\n    // macros presence check\r\n    this.hasDefinePropsCall = false;\r\n    this.hasDefineEmitCall = false;\r\n    this.hasDefineExposeCall = false;\r\n    this.hasDefaultExportName = false;\r\n    this.hasDefaultExportRender = false;\r\n    this.hasDefineOptionsCall = false;\r\n    this.hasDefineSlotsCall = false;\r\n    this.hasDefineModelCall = false;\r\n    this.propsDestructuredBindings = /* @__PURE__ */ Object.create(null);\r\n    // defineModel\r\n    this.modelDecls = {};\r\n    // codegen\r\n    this.bindingMetadata = {};\r\n    this.helperImports = /* @__PURE__ */ new Set();\r\n    const { script, scriptSetup } = descriptor;\r\n    const scriptLang = script && script.lang;\r\n    const scriptSetupLang = scriptSetup && scriptSetup.lang;\r\n    this.isJS = scriptLang === \"js\" || scriptLang === \"jsx\" || scriptSetupLang === \"js\" || scriptSetupLang === \"jsx\";\r\n    this.isTS = scriptLang === \"ts\" || scriptLang === \"tsx\" || scriptSetupLang === \"ts\" || scriptSetupLang === \"tsx\";\r\n    const plugins = resolveParserPlugins(\r\n      scriptLang || scriptSetupLang,\r\n      options.babelParserPlugins\r\n    );\r\n    function parse(input, offset) {\r\n      try {\r\n        return parse_1$1(input, {\r\n          plugins,\r\n          sourceType: \"module\"\r\n        }).program;\r\n      } catch (e) {\r\n        e.message = `[vue/compiler-sfc] ${e.message}\r\n\r\n${descriptor.filename}\r\n${generateCodeFrame(\r\n          descriptor.source,\r\n          e.pos + offset,\r\n          e.pos + offset + 1\r\n        )}`;\r\n        throw e;\r\n      }\r\n    }\r\n    this.scriptAst = descriptor.script && parse(descriptor.script.content, descriptor.script.loc.start.offset);\r\n    this.scriptSetupAst = descriptor.scriptSetup && parse(descriptor.scriptSetup.content, this.startOffset);\r\n  }\r\n  helper(key) {\r\n    this.helperImports.add(key);\r\n    return `_${key}`;\r\n  }\r\n  getString(node, scriptSetup = true) {\r\n    const block = scriptSetup ? this.descriptor.scriptSetup : this.descriptor.script;\r\n    return block.content.slice(node.start, node.end);\r\n  }\r\n  error(msg, node, scope) {\r\n    const offset = scope ? scope.offset : this.startOffset;\r\n    throw new Error(\r\n      `[@vue/compiler-sfc] ${msg}\r\n\r\n${(scope || this.descriptor).filename}\r\n${generateCodeFrame(\r\n        (scope || this.descriptor).source,\r\n        node.start + offset,\r\n        node.end + offset\r\n      )}`\r\n    );\r\n  }\r\n}\r\nfunction resolveParserPlugins(lang, userPlugins, dts = false) {\r\n  const plugins = [];\r\n  if (lang === \"jsx\" || lang === \"tsx\") {\r\n    plugins.push(\"jsx\");\r\n  } else if (userPlugins) {\r\n    userPlugins = userPlugins.filter((p) => p !== \"jsx\");\r\n  }\r\n  if (lang === \"ts\" || lang === \"tsx\") {\r\n    plugins.push([\"typescript\", { dts }]);\r\n    if (!plugins.includes(\"decorators\")) {\r\n      plugins.push(\"decorators-legacy\");\r\n    }\r\n  }\r\n  if (userPlugins) {\r\n    plugins.push(...userPlugins);\r\n  }\r\n  return plugins;\r\n}\r\n\r\nvar __defProp$1 = Object.defineProperty;\r\nvar __defProps$1 = Object.defineProperties;\r\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues$1 = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp$1.call(b, prop))\r\n      __defNormalProp$1(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols$1)\r\n    for (var prop of __getOwnPropSymbols$1(b)) {\r\n      if (__propIsEnum$1.call(b, prop))\r\n        __defNormalProp$1(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\r\nclass TypeScope {\r\n  constructor(filename, source, offset = 0, imports = /* @__PURE__ */ Object.create(null), types = /* @__PURE__ */ Object.create(null), declares = /* @__PURE__ */ Object.create(null)) {\r\n    this.filename = filename;\r\n    this.source = source;\r\n    this.offset = offset;\r\n    this.imports = imports;\r\n    this.types = types;\r\n    this.declares = declares;\r\n    this.resolvedImportSources = /* @__PURE__ */ Object.create(null);\r\n    this.exportedTypes = /* @__PURE__ */ Object.create(null);\r\n    this.exportedDeclares = /* @__PURE__ */ Object.create(null);\r\n  }\r\n}\r\nfunction resolveTypeElements(ctx, node, scope) {\r\n  if (node._resolvedElements) {\r\n    return node._resolvedElements;\r\n  }\r\n  return node._resolvedElements = innerResolveTypeElements(\r\n    ctx,\r\n    node,\r\n    node._ownerScope || scope || ctxToScope(ctx)\r\n  );\r\n}\r\nfunction innerResolveTypeElements(ctx, node, scope) {\r\n  var _a, _b;\r\n  switch (node.type) {\r\n    case \"TSTypeLiteral\":\r\n      return typeElementsToMap(ctx, node.members, scope);\r\n    case \"TSInterfaceDeclaration\":\r\n      return resolveInterfaceMembers(ctx, node, scope);\r\n    case \"TSTypeAliasDeclaration\":\r\n    case \"TSParenthesizedType\":\r\n      return resolveTypeElements(ctx, node.typeAnnotation, scope);\r\n    case \"TSFunctionType\": {\r\n      return { props: {}, calls: [node] };\r\n    }\r\n    case \"TSUnionType\":\r\n    case \"TSIntersectionType\":\r\n      return mergeElements(\r\n        node.types.map((t) => resolveTypeElements(ctx, t, scope)),\r\n        node.type\r\n      );\r\n    case \"TSMappedType\":\r\n      return resolveMappedType(ctx, node, scope);\r\n    case \"TSIndexedAccessType\": {\r\n      const types = resolveIndexType(ctx, node, scope);\r\n      return mergeElements(\r\n        types.map((t) => resolveTypeElements(ctx, t, t._ownerScope)),\r\n        \"TSUnionType\"\r\n      );\r\n    }\r\n    case \"TSExpressionWithTypeArguments\":\r\n    case \"TSTypeReference\": {\r\n      const typeName = getReferenceName(node);\r\n      if ((typeName === \"ExtractPropTypes\" || typeName === \"ExtractPublicPropTypes\") && node.typeParameters && ((_a = scope.imports[typeName]) == null ? void 0 : _a.source) === \"vue\") {\r\n        return resolveExtractPropTypes(\r\n          resolveTypeElements(ctx, node.typeParameters.params[0], scope),\r\n          scope\r\n        );\r\n      }\r\n      const resolved = resolveTypeReference(ctx, node, scope);\r\n      if (resolved) {\r\n        return resolveTypeElements(ctx, resolved, resolved._ownerScope);\r\n      } else {\r\n        if (typeof typeName === \"string\") {\r\n          if (\r\n            // @ts-ignore\r\n            SupportedBuiltinsSet.has(typeName)\r\n          ) {\r\n            return resolveBuiltin(ctx, node, typeName, scope);\r\n          } else if (typeName === \"ReturnType\" && node.typeParameters) {\r\n            const ret = resolveReturnType(\r\n              ctx,\r\n              node.typeParameters.params[0],\r\n              scope\r\n            );\r\n            if (ret) {\r\n              return resolveTypeElements(ctx, ret, scope);\r\n            }\r\n          }\r\n        }\r\n        return ctx.error(\r\n          `Unresolvable type reference or unsupported built-in utility type`,\r\n          node,\r\n          scope\r\n        );\r\n      }\r\n    }\r\n    case \"TSImportType\": {\r\n      if (getId(node.argument) === \"vue\" && ((_b = node.qualifier) == null ? void 0 : _b.type) === \"Identifier\" && node.qualifier.name === \"ExtractPropTypes\" && node.typeParameters) {\r\n        return resolveExtractPropTypes(\r\n          resolveTypeElements(ctx, node.typeParameters.params[0], scope),\r\n          scope\r\n        );\r\n      }\r\n      const sourceScope = importSourceToScope(\r\n        ctx,\r\n        node.argument,\r\n        scope,\r\n        node.argument.value\r\n      );\r\n      const resolved = resolveTypeReference(ctx, node, sourceScope);\r\n      if (resolved) {\r\n        return resolveTypeElements(ctx, resolved, resolved._ownerScope);\r\n      }\r\n    }\r\n    case \"TSTypeQuery\": {\r\n      const resolved = resolveTypeReference(ctx, node, scope);\r\n      if (resolved) {\r\n        return resolveTypeElements(ctx, resolved, resolved._ownerScope);\r\n      }\r\n    }\r\n  }\r\n  return ctx.error(`Unresolvable type: ${node.type}`, node, scope);\r\n}\r\nfunction typeElementsToMap(ctx, elements, scope = ctxToScope(ctx)) {\r\n  const res = { props: {} };\r\n  for (const e of elements) {\r\n    if (e.type === \"TSPropertySignature\" || e.type === \"TSMethodSignature\") {\r\n      e._ownerScope = scope;\r\n      const name = getId(e.key);\r\n      if (name && !e.computed) {\r\n        res.props[name] = e;\r\n      } else if (e.key.type === \"TemplateLiteral\") {\r\n        for (const key of resolveTemplateKeys(ctx, e.key, scope)) {\r\n          res.props[key] = e;\r\n        }\r\n      } else {\r\n        ctx.error(\r\n          `Unsupported computed key in type referenced by a macro`,\r\n          e.key,\r\n          scope\r\n        );\r\n      }\r\n    } else if (e.type === \"TSCallSignatureDeclaration\") {\r\n      (res.calls || (res.calls = [])).push(e);\r\n    }\r\n  }\r\n  return res;\r\n}\r\nfunction mergeElements(maps, type) {\r\n  if (maps.length === 1)\r\n    return maps[0];\r\n  const res = { props: {} };\r\n  const { props: baseProps } = res;\r\n  for (const { props, calls } of maps) {\r\n    for (const key in props) {\r\n      if (!hasOwn(baseProps, key)) {\r\n        baseProps[key] = props[key];\r\n      } else {\r\n        baseProps[key] = createProperty(\r\n          baseProps[key].key,\r\n          {\r\n            type,\r\n            // @ts-ignore\r\n            types: [baseProps[key], props[key]]\r\n          },\r\n          baseProps[key]._ownerScope,\r\n          baseProps[key].optional || props[key].optional\r\n        );\r\n      }\r\n    }\r\n    if (calls) {\r\n      (res.calls || (res.calls = [])).push(...calls);\r\n    }\r\n  }\r\n  return res;\r\n}\r\nfunction createProperty(key, typeAnnotation, scope, optional) {\r\n  return {\r\n    type: \"TSPropertySignature\",\r\n    key,\r\n    kind: \"get\",\r\n    optional,\r\n    typeAnnotation: {\r\n      type: \"TSTypeAnnotation\",\r\n      typeAnnotation\r\n    },\r\n    _ownerScope: scope\r\n  };\r\n}\r\nfunction resolveInterfaceMembers(ctx, node, scope) {\r\n  const base = typeElementsToMap(ctx, node.body.body, node._ownerScope);\r\n  if (node.extends) {\r\n    for (const ext of node.extends) {\r\n      if (ext.leadingComments && ext.leadingComments.some((c) => c.value.includes(\"@vue-ignore\"))) {\r\n        continue;\r\n      }\r\n      try {\r\n        const { props } = resolveTypeElements(ctx, ext, scope);\r\n        for (const key in props) {\r\n          if (!hasOwn(base.props, key)) {\r\n            base.props[key] = props[key];\r\n          }\r\n        }\r\n      } catch (e) {\r\n        ctx.error(\r\n          `Failed to resolve extends base type.\r\nIf this previously worked in 3.2, you can instruct the compiler to ignore this extend by adding /* @vue-ignore */ before it, for example:\r\n\r\ninterface Props extends /* @vue-ignore */ Base {}\r\n\r\nNote: both in 3.2 or with the ignore, the properties in the base type are treated as fallthrough attrs at runtime.`,\r\n          ext\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction resolveMappedType(ctx, node, scope) {\r\n  const res = { props: {} };\r\n  const keys = resolveStringType(ctx, node.typeParameter.constraint, scope);\r\n  for (const key of keys) {\r\n    res.props[key] = createProperty(\r\n      {\r\n        type: \"Identifier\",\r\n        name: key\r\n      },\r\n      node.typeAnnotation,\r\n      scope,\r\n      !!node.optional\r\n    );\r\n  }\r\n  return res;\r\n}\r\nfunction resolveIndexType(ctx, node, scope) {\r\n  var _a, _b;\r\n  if (node.indexType.type === \"TSNumberKeyword\") {\r\n    return resolveArrayElementType(ctx, node.objectType, scope);\r\n  }\r\n  const { indexType, objectType } = node;\r\n  const types = [];\r\n  let keys;\r\n  let resolved;\r\n  if (indexType.type === \"TSStringKeyword\") {\r\n    resolved = resolveTypeElements(ctx, objectType, scope);\r\n    keys = Object.keys(resolved.props);\r\n  } else {\r\n    keys = resolveStringType(ctx, indexType, scope);\r\n    resolved = resolveTypeElements(ctx, objectType, scope);\r\n  }\r\n  for (const key of keys) {\r\n    const targetType = (_b = (_a = resolved.props[key]) == null ? void 0 : _a.typeAnnotation) == null ? void 0 : _b.typeAnnotation;\r\n    if (targetType) {\r\n      targetType._ownerScope = resolved.props[key]._ownerScope;\r\n      types.push(targetType);\r\n    }\r\n  }\r\n  return types;\r\n}\r\nfunction resolveArrayElementType(ctx, node, scope) {\r\n  if (node.type === \"TSArrayType\") {\r\n    return [node.elementType];\r\n  }\r\n  if (node.type === \"TSTupleType\") {\r\n    return node.elementTypes.map(\r\n      (t) => t.type === \"TSNamedTupleMember\" ? t.elementType : t\r\n    );\r\n  }\r\n  if (node.type === \"TSTypeReference\") {\r\n    if (getReferenceName(node) === \"Array\" && node.typeParameters) {\r\n      return node.typeParameters.params;\r\n    } else {\r\n      const resolved = resolveTypeReference(ctx, node, scope);\r\n      if (resolved) {\r\n        return resolveArrayElementType(ctx, resolved, scope);\r\n      }\r\n    }\r\n  }\r\n  return ctx.error(\r\n    \"Failed to resolve element type from target type\",\r\n    node,\r\n    scope\r\n  );\r\n}\r\nfunction resolveStringType(ctx, node, scope) {\r\n  switch (node.type) {\r\n    case \"StringLiteral\":\r\n      return [node.value];\r\n    case \"TSLiteralType\":\r\n      return resolveStringType(ctx, node.literal, scope);\r\n    case \"TSUnionType\":\r\n      return node.types.map((t) => resolveStringType(ctx, t, scope)).flat();\r\n    case \"TemplateLiteral\": {\r\n      return resolveTemplateKeys(ctx, node, scope);\r\n    }\r\n    case \"TSTypeReference\": {\r\n      const resolved = resolveTypeReference(ctx, node, scope);\r\n      if (resolved) {\r\n        return resolveStringType(ctx, resolved, scope);\r\n      }\r\n      if (node.typeName.type === \"Identifier\") {\r\n        const getParam = (index = 0) => resolveStringType(ctx, node.typeParameters.params[index], scope);\r\n        switch (node.typeName.name) {\r\n          case \"Extract\":\r\n            return getParam(1);\r\n          case \"Exclude\": {\r\n            const excluded = getParam(1);\r\n            return getParam().filter((s) => !excluded.includes(s));\r\n          }\r\n          case \"Uppercase\":\r\n            return getParam().map((s) => s.toUpperCase());\r\n          case \"Lowercase\":\r\n            return getParam().map((s) => s.toLowerCase());\r\n          case \"Capitalize\":\r\n            return getParam().map(capitalize$1);\r\n          case \"Uncapitalize\":\r\n            return getParam().map((s) => s[0].toLowerCase() + s.slice(1));\r\n          default:\r\n            ctx.error(\r\n              \"Unsupported type when resolving index type\",\r\n              node.typeName,\r\n              scope\r\n            );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return ctx.error(\"Failed to resolve index type into finite keys\", node, scope);\r\n}\r\nfunction resolveTemplateKeys(ctx, node, scope) {\r\n  if (!node.expressions.length) {\r\n    return [node.quasis[0].value.raw];\r\n  }\r\n  const res = [];\r\n  const e = node.expressions[0];\r\n  const q = node.quasis[0];\r\n  const leading = q ? q.value.raw : ``;\r\n  const resolved = resolveStringType(ctx, e, scope);\r\n  const restResolved = resolveTemplateKeys(\r\n    ctx,\r\n    __spreadProps$1(__spreadValues$1({}, node), {\r\n      expressions: node.expressions.slice(1),\r\n      quasis: q ? node.quasis.slice(1) : node.quasis\r\n    }),\r\n    scope\r\n  );\r\n  for (const r of resolved) {\r\n    for (const rr of restResolved) {\r\n      res.push(leading + r + rr);\r\n    }\r\n  }\r\n  return res;\r\n}\r\nconst SupportedBuiltinsSet = /* @__PURE__ */ new Set([\r\n  \"Partial\",\r\n  \"Required\",\r\n  \"Readonly\",\r\n  \"Pick\",\r\n  \"Omit\"\r\n]);\r\nfunction resolveBuiltin(ctx, node, name, scope) {\r\n  const t = resolveTypeElements(ctx, node.typeParameters.params[0], scope);\r\n  switch (name) {\r\n    case \"Partial\": {\r\n      const res2 = { props: {}, calls: t.calls };\r\n      Object.keys(t.props).forEach((key) => {\r\n        res2.props[key] = __spreadProps$1(__spreadValues$1({}, t.props[key]), { optional: true });\r\n      });\r\n      return res2;\r\n    }\r\n    case \"Required\": {\r\n      const res2 = { props: {}, calls: t.calls };\r\n      Object.keys(t.props).forEach((key) => {\r\n        res2.props[key] = __spreadProps$1(__spreadValues$1({}, t.props[key]), { optional: false });\r\n      });\r\n      return res2;\r\n    }\r\n    case \"Readonly\":\r\n      return t;\r\n    case \"Pick\": {\r\n      const picked = resolveStringType(\r\n        ctx,\r\n        node.typeParameters.params[1],\r\n        scope\r\n      );\r\n      const res2 = { props: {}, calls: t.calls };\r\n      for (const key of picked) {\r\n        res2.props[key] = t.props[key];\r\n      }\r\n      return res2;\r\n    }\r\n    case \"Omit\":\r\n      const omitted = resolveStringType(\r\n        ctx,\r\n        node.typeParameters.params[1],\r\n        scope\r\n      );\r\n      const res = { props: {}, calls: t.calls };\r\n      for (const key in t.props) {\r\n        if (!omitted.includes(key)) {\r\n          res.props[key] = t.props[key];\r\n        }\r\n      }\r\n      return res;\r\n  }\r\n}\r\nfunction resolveTypeReference(ctx, node, scope, name, onlyExported = false) {\r\n  if (node._resolvedReference) {\r\n    return node._resolvedReference;\r\n  }\r\n  return node._resolvedReference = innerResolveTypeReference(\r\n    ctx,\r\n    scope || ctxToScope(ctx),\r\n    name || getReferenceName(node),\r\n    node,\r\n    onlyExported\r\n  );\r\n}\r\nfunction innerResolveTypeReference(ctx, scope, name, node, onlyExported) {\r\n  if (typeof name === \"string\") {\r\n    if (scope.imports[name]) {\r\n      return resolveTypeFromImport(ctx, node, name, scope);\r\n    } else {\r\n      const lookupSource = node.type === \"TSTypeQuery\" ? onlyExported ? scope.exportedDeclares : scope.declares : onlyExported ? scope.exportedTypes : scope.types;\r\n      if (lookupSource[name]) {\r\n        return lookupSource[name];\r\n      } else {\r\n        const globalScopes = resolveGlobalScope(ctx);\r\n        if (globalScopes) {\r\n          for (const s of globalScopes) {\r\n            const src = node.type === \"TSTypeQuery\" ? s.declares : s.types;\r\n            if (src[name]) {\r\n              (ctx.deps || (ctx.deps = /* @__PURE__ */ new Set())).add(s.filename);\r\n              return src[name];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    let ns = innerResolveTypeReference(ctx, scope, name[0], node, onlyExported);\r\n    if (ns) {\r\n      if (ns.type !== \"TSModuleDeclaration\") {\r\n        ns = ns._ns;\r\n      }\r\n      if (ns) {\r\n        const childScope = moduleDeclToScope(ctx, ns, ns._ownerScope || scope);\r\n        return innerResolveTypeReference(\r\n          ctx,\r\n          childScope,\r\n          name.length > 2 ? name.slice(1) : name[name.length - 1],\r\n          node,\r\n          !ns.declare\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getReferenceName(node) {\r\n  const ref = node.type === \"TSTypeReference\" ? node.typeName : node.type === \"TSExpressionWithTypeArguments\" ? node.expression : node.type === \"TSImportType\" ? node.qualifier : node.exprName;\r\n  if ((ref == null ? void 0 : ref.type) === \"Identifier\") {\r\n    return ref.name;\r\n  } else if ((ref == null ? void 0 : ref.type) === \"TSQualifiedName\") {\r\n    return qualifiedNameToPath(ref);\r\n  } else {\r\n    return \"default\";\r\n  }\r\n}\r\nfunction qualifiedNameToPath(node) {\r\n  if (node.type === \"Identifier\") {\r\n    return [node.name];\r\n  } else {\r\n    return [...qualifiedNameToPath(node.left), node.right.name];\r\n  }\r\n}\r\nfunction resolveGlobalScope(ctx) {\r\n  if (ctx.options.globalTypeFiles) {\r\n    const fs = resolveFS(ctx);\r\n    if (!fs) {\r\n      throw new Error(\"[vue/compiler-sfc] globalTypeFiles requires fs access.\");\r\n    }\r\n    return ctx.options.globalTypeFiles.map(\r\n      (file) => fileToScope(ctx, normalizePath(file), true)\r\n    );\r\n  }\r\n}\r\nlet ts;\r\nfunction registerTS(_ts) {\r\n  ts = _ts;\r\n}\r\nfunction resolveFS(ctx) {\r\n  if (ctx.fs) {\r\n    return ctx.fs;\r\n  }\r\n  const fs = ctx.options.fs || ts.sys;\r\n  if (!fs) {\r\n    return;\r\n  }\r\n  return ctx.fs = {\r\n    fileExists(file) {\r\n      if (file.endsWith(\".vue.ts\")) {\r\n        file = file.replace(/\\.ts$/, \"\");\r\n      }\r\n      return fs.fileExists(file);\r\n    },\r\n    readFile(file) {\r\n      if (file.endsWith(\".vue.ts\")) {\r\n        file = file.replace(/\\.ts$/, \"\");\r\n      }\r\n      return fs.readFile(file);\r\n    }\r\n  };\r\n}\r\nfunction resolveTypeFromImport(ctx, node, name, scope) {\r\n  const { source, imported } = scope.imports[name];\r\n  const sourceScope = importSourceToScope(ctx, node, scope, source);\r\n  return resolveTypeReference(ctx, node, sourceScope, imported, true);\r\n}\r\nfunction importSourceToScope(ctx, node, scope, source) {\r\n  const fs = resolveFS(ctx);\r\n  if (!fs) {\r\n    return ctx.error(\r\n      `No fs option provided to \\`compileScript\\` in non-Node environment. File system access is required for resolving imported types.`,\r\n      node,\r\n      scope\r\n    );\r\n  }\r\n  let resolved = scope.resolvedImportSources[source];\r\n  if (!resolved) {\r\n    if (source.startsWith(\".\")) {\r\n      const filename = joinPaths(scope.filename, \"..\", source);\r\n      resolved = resolveExt(filename, fs);\r\n    } else {\r\n      {\r\n        ctx.error(\r\n          `Type import from non-relative sources is not supported in the browser build.`,\r\n          node,\r\n          scope\r\n        );\r\n      }\r\n      if (!ts) {\r\n        ctx.error(\r\n          `Failed to resolve import source ${JSON.stringify(source)}. typescript is required as a peer dep for vue in order to support resolving types from module imports.`,\r\n          node,\r\n          scope\r\n        );\r\n      }\r\n      resolved = resolveWithTS(scope.filename);\r\n    }\r\n    if (resolved) {\r\n      resolved = scope.resolvedImportSources[source] = normalizePath(resolved);\r\n    }\r\n  }\r\n  if (resolved) {\r\n    (ctx.deps || (ctx.deps = /* @__PURE__ */ new Set())).add(resolved);\r\n    return fileToScope(ctx, resolved);\r\n  } else {\r\n    return ctx.error(\r\n      `Failed to resolve import source ${JSON.stringify(source)}.`,\r\n      node,\r\n      scope\r\n    );\r\n  }\r\n}\r\nfunction resolveExt(filename, fs) {\r\n  filename = filename.replace(/\\.js$/, \"\");\r\n  const tryResolve = (filename2) => {\r\n    if (fs.fileExists(filename2))\r\n      return filename2;\r\n  };\r\n  return tryResolve(filename) || tryResolve(filename + `.ts`) || tryResolve(filename + `.d.ts`) || tryResolve(joinPaths(filename, `index.ts`)) || tryResolve(joinPaths(filename, `index.d.ts`));\r\n}\r\nconst tsConfigCache = createCache();\r\nconst tsConfigRefMap = /* @__PURE__ */ new Map();\r\nfunction resolveWithTS(containingFile, source, fs) {\r\n  return;\r\n}\r\nconst fileToScopeCache = createCache();\r\nfunction invalidateTypeCache(filename) {\r\n  filename = normalizePath(filename);\r\n  fileToScopeCache.delete(filename);\r\n  tsConfigCache.delete(filename);\r\n  const affectedConfig = tsConfigRefMap.get(filename);\r\n  if (affectedConfig)\r\n    tsConfigCache.delete(affectedConfig);\r\n}\r\nfunction fileToScope(ctx, filename, asGlobal = false) {\r\n  const cached = fileToScopeCache.get(filename);\r\n  if (cached) {\r\n    return cached;\r\n  }\r\n  const fs = resolveFS(ctx);\r\n  const source = fs.readFile(filename) || \"\";\r\n  const body = parseFile(filename, source, ctx.options.babelParserPlugins);\r\n  const scope = new TypeScope(filename, source, 0, recordImports(body));\r\n  recordTypes(ctx, body, scope, asGlobal);\r\n  fileToScopeCache.set(filename, scope);\r\n  return scope;\r\n}\r\nfunction parseFile(filename, content, parserPlugins) {\r\n  const ext = extname(filename);\r\n  if (ext === \".ts\" || ext === \".tsx\") {\r\n    return parse_1$1(content, {\r\n      plugins: resolveParserPlugins(\r\n        ext.slice(1),\r\n        parserPlugins,\r\n        filename.endsWith(\".d.ts\")\r\n      ),\r\n      sourceType: \"module\"\r\n    }).program.body;\r\n  } else if (ext === \".vue\") {\r\n    const {\r\n      descriptor: { script, scriptSetup }\r\n    } = parse$7(content);\r\n    if (!script && !scriptSetup) {\r\n      return [];\r\n    }\r\n    const scriptOffset = script ? script.loc.start.offset : Infinity;\r\n    const scriptSetupOffset = scriptSetup ? scriptSetup.loc.start.offset : Infinity;\r\n    const firstBlock = scriptOffset < scriptSetupOffset ? script : scriptSetup;\r\n    const secondBlock = scriptOffset < scriptSetupOffset ? scriptSetup : script;\r\n    let scriptContent = \" \".repeat(Math.min(scriptOffset, scriptSetupOffset)) + firstBlock.content;\r\n    if (secondBlock) {\r\n      scriptContent += \" \".repeat(secondBlock.loc.start.offset - script.loc.end.offset) + secondBlock.content;\r\n    }\r\n    const lang = (script == null ? void 0 : script.lang) || (scriptSetup == null ? void 0 : scriptSetup.lang);\r\n    return parse_1$1(scriptContent, {\r\n      plugins: resolveParserPlugins(lang, parserPlugins),\r\n      sourceType: \"module\"\r\n    }).program.body;\r\n  }\r\n  return [];\r\n}\r\nfunction ctxToScope(ctx) {\r\n  if (ctx.scope) {\r\n    return ctx.scope;\r\n  }\r\n  const body = \"ast\" in ctx ? ctx.ast : ctx.scriptAst ? [...ctx.scriptAst.body, ...ctx.scriptSetupAst.body] : ctx.scriptSetupAst.body;\r\n  const scope = new TypeScope(\r\n    ctx.filename,\r\n    ctx.source,\r\n    \"startOffset\" in ctx ? ctx.startOffset : 0,\r\n    \"userImports\" in ctx ? Object.create(ctx.userImports) : recordImports(body)\r\n  );\r\n  recordTypes(ctx, body, scope);\r\n  return ctx.scope = scope;\r\n}\r\nfunction moduleDeclToScope(ctx, node, parentScope) {\r\n  if (node._resolvedChildScope) {\r\n    return node._resolvedChildScope;\r\n  }\r\n  const scope = new TypeScope(\r\n    parentScope.filename,\r\n    parentScope.source,\r\n    parentScope.offset,\r\n    Object.create(parentScope.imports),\r\n    Object.create(parentScope.types),\r\n    Object.create(parentScope.declares)\r\n  );\r\n  if (node.body.type === \"TSModuleDeclaration\") {\r\n    const decl = node.body;\r\n    decl._ownerScope = scope;\r\n    const id = getId(decl.id);\r\n    scope.types[id] = scope.exportedTypes[id] = decl;\r\n  } else {\r\n    recordTypes(ctx, node.body.body, scope);\r\n  }\r\n  return node._resolvedChildScope = scope;\r\n}\r\nconst importExportRE = /^Import|^Export/;\r\nfunction recordTypes(ctx, body, scope, asGlobal = false) {\r\n  const { types, declares, exportedTypes, exportedDeclares, imports } = scope;\r\n  const isAmbient = asGlobal ? !body.some((s) => importExportRE.test(s.type)) : false;\r\n  for (const stmt of body) {\r\n    if (asGlobal) {\r\n      if (isAmbient) {\r\n        if (stmt.declare) {\r\n          recordType(stmt, types, declares);\r\n        }\r\n      } else if (stmt.type === \"TSModuleDeclaration\" && stmt.global) {\r\n        for (const s of stmt.body.body) {\r\n          recordType(s, types, declares);\r\n        }\r\n      }\r\n    } else {\r\n      recordType(stmt, types, declares);\r\n    }\r\n  }\r\n  if (!asGlobal) {\r\n    for (const stmt of body) {\r\n      if (stmt.type === \"ExportNamedDeclaration\") {\r\n        if (stmt.declaration) {\r\n          recordType(stmt.declaration, types, declares);\r\n          recordType(stmt.declaration, exportedTypes, exportedDeclares);\r\n        } else {\r\n          for (const spec of stmt.specifiers) {\r\n            if (spec.type === \"ExportSpecifier\") {\r\n              const local = spec.local.name;\r\n              const exported = getId(spec.exported);\r\n              if (stmt.source) {\r\n                imports[local] = {\r\n                  source: stmt.source.value,\r\n                  imported: local\r\n                };\r\n                exportedTypes[exported] = {\r\n                  type: \"TSTypeReference\",\r\n                  typeName: {\r\n                    type: \"Identifier\",\r\n                    name: local\r\n                  },\r\n                  _ownerScope: scope\r\n                };\r\n              } else if (types[local]) {\r\n                exportedTypes[exported] = types[local];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else if (stmt.type === \"ExportAllDeclaration\") {\r\n        const sourceScope = importSourceToScope(\r\n          ctx,\r\n          stmt.source,\r\n          scope,\r\n          stmt.source.value\r\n        );\r\n        Object.assign(scope.exportedTypes, sourceScope.exportedTypes);\r\n      } else if (stmt.type === \"ExportDefaultDeclaration\" && stmt.declaration) {\r\n        if (stmt.declaration.type !== \"Identifier\") {\r\n          recordType(stmt.declaration, types, declares, \"default\");\r\n          recordType(\r\n            stmt.declaration,\r\n            exportedTypes,\r\n            exportedDeclares,\r\n            \"default\"\r\n          );\r\n        } else if (types[stmt.declaration.name]) {\r\n          exportedTypes[\"default\"] = types[stmt.declaration.name];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  for (const key of Object.keys(types)) {\r\n    const node = types[key];\r\n    node._ownerScope = scope;\r\n    if (node._ns)\r\n      node._ns._ownerScope = scope;\r\n  }\r\n  for (const key of Object.keys(declares)) {\r\n    declares[key]._ownerScope = scope;\r\n  }\r\n}\r\nfunction recordType(node, types, declares, overwriteId) {\r\n  switch (node.type) {\r\n    case \"TSInterfaceDeclaration\":\r\n    case \"TSEnumDeclaration\":\r\n    case \"TSModuleDeclaration\": {\r\n      const id = overwriteId || getId(node.id);\r\n      let existing = types[id];\r\n      if (existing) {\r\n        if (node.type === \"TSModuleDeclaration\") {\r\n          if (existing.type === \"TSModuleDeclaration\") {\r\n            mergeNamespaces(existing, node);\r\n          } else {\r\n            attachNamespace(existing, node);\r\n          }\r\n          break;\r\n        }\r\n        if (existing.type === \"TSModuleDeclaration\") {\r\n          types[id] = node;\r\n          attachNamespace(node, existing);\r\n          break;\r\n        }\r\n        if (existing.type !== node.type) {\r\n          break;\r\n        }\r\n        if (node.type === \"TSInterfaceDeclaration\") {\r\n          existing.body.body.push(...node.body.body);\r\n        } else {\r\n          existing.members.push(...node.members);\r\n        }\r\n      } else {\r\n        types[id] = node;\r\n      }\r\n      break;\r\n    }\r\n    case \"ClassDeclaration\":\r\n      types[overwriteId || getId(node.id)] = node;\r\n      break;\r\n    case \"TSTypeAliasDeclaration\":\r\n      types[node.id.name] = node.typeAnnotation;\r\n      break;\r\n    case \"TSDeclareFunction\":\r\n      if (node.id)\r\n        declares[node.id.name] = node;\r\n      break;\r\n    case \"VariableDeclaration\": {\r\n      if (node.declare) {\r\n        for (const decl of node.declarations) {\r\n          if (decl.id.type === \"Identifier\" && decl.id.typeAnnotation) {\r\n            declares[decl.id.name] = decl.id.typeAnnotation.typeAnnotation;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    }\r\n  }\r\n}\r\nfunction mergeNamespaces(to, from) {\r\n  const toBody = to.body;\r\n  const fromBody = from.body;\r\n  if (toBody.type === \"TSModuleDeclaration\") {\r\n    if (fromBody.type === \"TSModuleDeclaration\") {\r\n      mergeNamespaces(toBody, fromBody);\r\n    } else {\r\n      fromBody.body.push({\r\n        type: \"ExportNamedDeclaration\",\r\n        declaration: toBody,\r\n        exportKind: \"type\",\r\n        specifiers: []\r\n      });\r\n    }\r\n  } else if (fromBody.type === \"TSModuleDeclaration\") {\r\n    toBody.body.push({\r\n      type: \"ExportNamedDeclaration\",\r\n      declaration: fromBody,\r\n      exportKind: \"type\",\r\n      specifiers: []\r\n    });\r\n  } else {\r\n    toBody.body.push(...fromBody.body);\r\n  }\r\n}\r\nfunction attachNamespace(to, ns) {\r\n  if (!to._ns) {\r\n    to._ns = ns;\r\n  } else {\r\n    mergeNamespaces(to._ns, ns);\r\n  }\r\n}\r\nfunction recordImports(body) {\r\n  const imports = /* @__PURE__ */ Object.create(null);\r\n  for (const s of body) {\r\n    recordImport(s, imports);\r\n  }\r\n  return imports;\r\n}\r\nfunction recordImport(node, imports) {\r\n  if (node.type !== \"ImportDeclaration\") {\r\n    return;\r\n  }\r\n  for (const s of node.specifiers) {\r\n    imports[s.local.name] = {\r\n      imported: getImportedName(s),\r\n      source: node.source.value\r\n    };\r\n  }\r\n}\r\nfunction inferRuntimeType(ctx, node, scope = node._ownerScope || ctxToScope(ctx)) {\r\n  try {\r\n    switch (node.type) {\r\n      case \"TSStringKeyword\":\r\n        return [\"String\"];\r\n      case \"TSNumberKeyword\":\r\n        return [\"Number\"];\r\n      case \"TSBooleanKeyword\":\r\n        return [\"Boolean\"];\r\n      case \"TSObjectKeyword\":\r\n        return [\"Object\"];\r\n      case \"TSNullKeyword\":\r\n        return [\"null\"];\r\n      case \"TSTypeLiteral\":\r\n      case \"TSInterfaceDeclaration\": {\r\n        const types = /* @__PURE__ */ new Set();\r\n        const members = node.type === \"TSTypeLiteral\" ? node.members : node.body.body;\r\n        for (const m of members) {\r\n          if (m.type === \"TSCallSignatureDeclaration\" || m.type === \"TSConstructSignatureDeclaration\") {\r\n            types.add(\"Function\");\r\n          } else {\r\n            types.add(\"Object\");\r\n          }\r\n        }\r\n        return types.size ? Array.from(types) : [\"Object\"];\r\n      }\r\n      case \"TSPropertySignature\":\r\n        if (node.typeAnnotation) {\r\n          return inferRuntimeType(\r\n            ctx,\r\n            node.typeAnnotation.typeAnnotation,\r\n            scope\r\n          );\r\n        }\r\n      case \"TSMethodSignature\":\r\n      case \"TSFunctionType\":\r\n        return [\"Function\"];\r\n      case \"TSArrayType\":\r\n      case \"TSTupleType\":\r\n        return [\"Array\"];\r\n      case \"TSLiteralType\":\r\n        switch (node.literal.type) {\r\n          case \"StringLiteral\":\r\n            return [\"String\"];\r\n          case \"BooleanLiteral\":\r\n            return [\"Boolean\"];\r\n          case \"NumericLiteral\":\r\n          case \"BigIntLiteral\":\r\n            return [\"Number\"];\r\n          default:\r\n            return [UNKNOWN_TYPE];\r\n        }\r\n      case \"TSTypeReference\": {\r\n        const resolved = resolveTypeReference(ctx, node, scope);\r\n        if (resolved) {\r\n          return inferRuntimeType(ctx, resolved, resolved._ownerScope);\r\n        }\r\n        if (node.typeName.type === \"Identifier\") {\r\n          switch (node.typeName.name) {\r\n            case \"Array\":\r\n            case \"Function\":\r\n            case \"Object\":\r\n            case \"Set\":\r\n            case \"Map\":\r\n            case \"WeakSet\":\r\n            case \"WeakMap\":\r\n            case \"Date\":\r\n            case \"Promise\":\r\n              return [node.typeName.name];\r\n            case \"Partial\":\r\n            case \"Required\":\r\n            case \"Readonly\":\r\n            case \"Record\":\r\n            case \"Pick\":\r\n            case \"Omit\":\r\n            case \"InstanceType\":\r\n              return [\"Object\"];\r\n            case \"Uppercase\":\r\n            case \"Lowercase\":\r\n            case \"Capitalize\":\r\n            case \"Uncapitalize\":\r\n              return [\"String\"];\r\n            case \"Parameters\":\r\n            case \"ConstructorParameters\":\r\n              return [\"Array\"];\r\n            case \"NonNullable\":\r\n              if (node.typeParameters && node.typeParameters.params[0]) {\r\n                return inferRuntimeType(\r\n                  ctx,\r\n                  node.typeParameters.params[0],\r\n                  scope\r\n                ).filter((t) => t !== \"null\");\r\n              }\r\n              break;\r\n            case \"Extract\":\r\n              if (node.typeParameters && node.typeParameters.params[1]) {\r\n                return inferRuntimeType(\r\n                  ctx,\r\n                  node.typeParameters.params[1],\r\n                  scope\r\n                );\r\n              }\r\n              break;\r\n            case \"Exclude\":\r\n            case \"OmitThisParameter\":\r\n              if (node.typeParameters && node.typeParameters.params[0]) {\r\n                return inferRuntimeType(\r\n                  ctx,\r\n                  node.typeParameters.params[0],\r\n                  scope\r\n                );\r\n              }\r\n              break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case \"TSParenthesizedType\":\r\n        return inferRuntimeType(ctx, node.typeAnnotation, scope);\r\n      case \"TSUnionType\":\r\n        return flattenTypes(ctx, node.types, scope);\r\n      case \"TSIntersectionType\": {\r\n        return flattenTypes(ctx, node.types, scope).filter(\r\n          (t) => t !== UNKNOWN_TYPE\r\n        );\r\n      }\r\n      case \"TSEnumDeclaration\":\r\n        return inferEnumType(node);\r\n      case \"TSSymbolKeyword\":\r\n        return [\"Symbol\"];\r\n      case \"TSIndexedAccessType\": {\r\n        const types = resolveIndexType(ctx, node, scope);\r\n        return flattenTypes(ctx, types, scope);\r\n      }\r\n      case \"ClassDeclaration\":\r\n        return [\"Object\"];\r\n      case \"TSImportType\": {\r\n        const sourceScope = importSourceToScope(\r\n          ctx,\r\n          node.argument,\r\n          scope,\r\n          node.argument.value\r\n        );\r\n        const resolved = resolveTypeReference(ctx, node, sourceScope);\r\n        if (resolved) {\r\n          return inferRuntimeType(ctx, resolved, resolved._ownerScope);\r\n        }\r\n        break;\r\n      }\r\n      case \"TSTypeQuery\": {\r\n        const id = node.exprName;\r\n        if (id.type === \"Identifier\") {\r\n          const matched = scope.declares[id.name];\r\n          if (matched) {\r\n            return inferRuntimeType(ctx, matched, matched._ownerScope);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  } catch (e) {\r\n  }\r\n  return [UNKNOWN_TYPE];\r\n}\r\nfunction flattenTypes(ctx, types, scope) {\r\n  if (types.length === 1) {\r\n    return inferRuntimeType(ctx, types[0], scope);\r\n  }\r\n  return [\r\n    ...new Set(\r\n      [].concat(\r\n        ...types.map((t) => inferRuntimeType(ctx, t, scope))\r\n      )\r\n    )\r\n  ];\r\n}\r\nfunction inferEnumType(node) {\r\n  const types = /* @__PURE__ */ new Set();\r\n  for (const m of node.members) {\r\n    if (m.initializer) {\r\n      switch (m.initializer.type) {\r\n        case \"StringLiteral\":\r\n          types.add(\"String\");\r\n          break;\r\n        case \"NumericLiteral\":\r\n          types.add(\"Number\");\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return types.size ? [...types] : [\"Number\"];\r\n}\r\nfunction resolveExtractPropTypes({ props }, scope) {\r\n  const res = { props: {} };\r\n  for (const key in props) {\r\n    const raw = props[key];\r\n    res.props[key] = reverseInferType(\r\n      raw.key,\r\n      raw.typeAnnotation.typeAnnotation,\r\n      scope\r\n    );\r\n  }\r\n  return res;\r\n}\r\nfunction reverseInferType(key, node, scope, optional = true, checkObjectSyntax = true) {\r\n  if (checkObjectSyntax && node.type === \"TSTypeLiteral\") {\r\n    const typeType = findStaticPropertyType(node, \"type\");\r\n    if (typeType) {\r\n      const requiredType = findStaticPropertyType(node, \"required\");\r\n      const optional2 = requiredType && requiredType.type === \"TSLiteralType\" && requiredType.literal.type === \"BooleanLiteral\" ? !requiredType.literal.value : true;\r\n      return reverseInferType(key, typeType, scope, optional2, false);\r\n    }\r\n  } else if (node.type === \"TSTypeReference\" && node.typeName.type === \"Identifier\") {\r\n    if (node.typeName.name.endsWith(\"Constructor\")) {\r\n      return createProperty(\r\n        key,\r\n        ctorToType(node.typeName.name),\r\n        scope,\r\n        optional\r\n      );\r\n    } else if (node.typeName.name === \"PropType\" && node.typeParameters) {\r\n      return createProperty(key, node.typeParameters.params[0], scope, optional);\r\n    }\r\n  }\r\n  if ((node.type === \"TSTypeReference\" || node.type === \"TSImportType\") && node.typeParameters) {\r\n    for (const t of node.typeParameters.params) {\r\n      const inferred = reverseInferType(key, t, scope, optional);\r\n      if (inferred)\r\n        return inferred;\r\n    }\r\n  }\r\n  return createProperty(key, { type: `TSNullKeyword` }, scope, optional);\r\n}\r\nfunction ctorToType(ctorType) {\r\n  const ctor = ctorType.slice(0, -11);\r\n  switch (ctor) {\r\n    case \"String\":\r\n    case \"Number\":\r\n    case \"Boolean\":\r\n      return { type: `TS${ctor}Keyword` };\r\n    case \"Array\":\r\n    case \"Function\":\r\n    case \"Object\":\r\n    case \"Set\":\r\n    case \"Map\":\r\n    case \"WeakSet\":\r\n    case \"WeakMap\":\r\n    case \"Date\":\r\n    case \"Promise\":\r\n      return {\r\n        type: \"TSTypeReference\",\r\n        typeName: { type: \"Identifier\", name: ctor }\r\n      };\r\n  }\r\n  return { type: `TSNullKeyword` };\r\n}\r\nfunction findStaticPropertyType(node, key) {\r\n  const prop = node.members.find(\r\n    (m) => m.type === \"TSPropertySignature\" && !m.computed && getId(m.key) === key && m.typeAnnotation\r\n  );\r\n  return prop && prop.typeAnnotation.typeAnnotation;\r\n}\r\nfunction resolveReturnType(ctx, arg, scope) {\r\n  var _a;\r\n  let resolved = arg;\r\n  if (arg.type === \"TSTypeReference\" || arg.type === \"TSTypeQuery\" || arg.type === \"TSImportType\") {\r\n    resolved = resolveTypeReference(ctx, arg, scope);\r\n  }\r\n  if (!resolved)\r\n    return;\r\n  if (resolved.type === \"TSFunctionType\") {\r\n    return (_a = resolved.typeAnnotation) == null ? void 0 : _a.typeAnnotation;\r\n  }\r\n  if (resolved.type === \"TSDeclareFunction\") {\r\n    return resolved.returnType;\r\n  }\r\n}\r\nfunction resolveUnionType(ctx, node, scope) {\r\n  if (node.type === \"TSTypeReference\") {\r\n    const resolved = resolveTypeReference(ctx, node, scope);\r\n    if (resolved)\r\n      node = resolved;\r\n  }\r\n  let types;\r\n  if (node.type === \"TSUnionType\") {\r\n    types = node.types.flatMap((node2) => resolveUnionType(ctx, node2, scope));\r\n  } else {\r\n    types = [node];\r\n  }\r\n  return types;\r\n}\r\n\r\nconst DEFINE_MODEL = \"defineModel\";\r\nfunction processDefineModel(ctx, node, declId) {\r\n  if (!ctx.options.defineModel || !isCallOf(node, DEFINE_MODEL)) {\r\n    return false;\r\n  }\r\n  warnOnce$4(\r\n    `This project is using defineModel(), which is an experimental  feature. It may receive breaking changes or be removed in the future, so use at your own risk.\r\nTo stay updated, follow the RFC at https://github.com/vuejs/rfcs/discussions/503.`\r\n  );\r\n  ctx.hasDefineModelCall = true;\r\n  const type = node.typeParameters && node.typeParameters.params[0] || void 0;\r\n  let modelName;\r\n  let options;\r\n  const arg0 = node.arguments[0] && unwrapTSNode(node.arguments[0]);\r\n  if (arg0 && arg0.type === \"StringLiteral\") {\r\n    modelName = arg0.value;\r\n    options = node.arguments[1];\r\n  } else {\r\n    modelName = \"modelValue\";\r\n    options = arg0;\r\n  }\r\n  if (ctx.modelDecls[modelName]) {\r\n    ctx.error(`duplicate model name ${JSON.stringify(modelName)}`, node);\r\n  }\r\n  const optionsString = options && ctx.getString(options);\r\n  ctx.modelDecls[modelName] = {\r\n    type,\r\n    options: optionsString,\r\n    identifier: declId && declId.type === \"Identifier\" ? declId.name : void 0\r\n  };\r\n  ctx.bindingMetadata[modelName] = \"props\";\r\n  let runtimeOptions = \"\";\r\n  if (options) {\r\n    if (options.type === \"ObjectExpression\") {\r\n      const local = options.properties.find(\r\n        (p) => p.type === \"ObjectProperty\" && (p.key.type === \"Identifier\" && p.key.name === \"local\" || p.key.type === \"StringLiteral\" && p.key.value === \"local\")\r\n      );\r\n      if (local) {\r\n        runtimeOptions = `{ ${ctx.getString(local)} }`;\r\n      } else {\r\n        for (const p of options.properties) {\r\n          if (p.type === \"SpreadElement\" || p.computed) {\r\n            runtimeOptions = optionsString;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      runtimeOptions = optionsString;\r\n    }\r\n  }\r\n  ctx.s.overwrite(\r\n    ctx.startOffset + node.start,\r\n    ctx.startOffset + node.end,\r\n    `${ctx.helper(\"useModel\")}(__props, ${JSON.stringify(modelName)}${runtimeOptions ? `, ${runtimeOptions}` : ``})`\r\n  );\r\n  return true;\r\n}\r\nfunction genModelProps(ctx) {\r\n  if (!ctx.hasDefineModelCall)\r\n    return;\r\n  const isProd = !!ctx.options.isProd;\r\n  let modelPropsDecl = \"\";\r\n  for (const [name, { type, options }] of Object.entries(ctx.modelDecls)) {\r\n    let skipCheck = false;\r\n    let runtimeTypes = type && inferRuntimeType(ctx, type);\r\n    if (runtimeTypes) {\r\n      const hasUnknownType = runtimeTypes.includes(UNKNOWN_TYPE);\r\n      runtimeTypes = runtimeTypes.filter((el) => {\r\n        if (el === UNKNOWN_TYPE)\r\n          return false;\r\n        return isProd ? el === \"Boolean\" || el === \"Function\" && options : true;\r\n      });\r\n      skipCheck = !isProd && hasUnknownType && runtimeTypes.length > 0;\r\n    }\r\n    let runtimeType = runtimeTypes && runtimeTypes.length > 0 && toRuntimeTypeString(runtimeTypes) || void 0;\r\n    const codegenOptions = concatStrings([\r\n      runtimeType && `type: ${runtimeType}`,\r\n      skipCheck && \"skipCheck: true\"\r\n    ]);\r\n    let decl;\r\n    if (runtimeType && options) {\r\n      decl = ctx.isTS ? `{ ${codegenOptions}, ...${options} }` : `Object.assign({ ${codegenOptions} }, ${options})`;\r\n    } else {\r\n      decl = options || (runtimeType ? `{ ${codegenOptions} }` : \"{}\");\r\n    }\r\n    modelPropsDecl += `\r\n    ${JSON.stringify(name)}: ${decl},`;\r\n  }\r\n  return `{${modelPropsDecl}\r\n  }`;\r\n}\r\n\r\nconst DEFINE_PROPS = \"defineProps\";\r\nconst WITH_DEFAULTS = \"withDefaults\";\r\nfunction processDefineProps(ctx, node, declId) {\r\n  if (!isCallOf(node, DEFINE_PROPS)) {\r\n    return processWithDefaults(ctx, node, declId);\r\n  }\r\n  if (ctx.hasDefinePropsCall) {\r\n    ctx.error(`duplicate ${DEFINE_PROPS}() call`, node);\r\n  }\r\n  ctx.hasDefinePropsCall = true;\r\n  ctx.propsRuntimeDecl = node.arguments[0];\r\n  if (ctx.propsRuntimeDecl) {\r\n    for (const key of getObjectOrArrayExpressionKeys(ctx.propsRuntimeDecl)) {\r\n      if (!(key in ctx.bindingMetadata)) {\r\n        ctx.bindingMetadata[key] = \"props\";\r\n      }\r\n    }\r\n  }\r\n  if (node.typeParameters) {\r\n    if (ctx.propsRuntimeDecl) {\r\n      ctx.error(\r\n        `${DEFINE_PROPS}() cannot accept both type and non-type arguments at the same time. Use one or the other.`,\r\n        node\r\n      );\r\n    }\r\n    ctx.propsTypeDecl = node.typeParameters.params[0];\r\n  }\r\n  if (declId) {\r\n    if (declId.type === \"ObjectPattern\") {\r\n      processPropsDestructure(ctx, declId);\r\n    } else {\r\n      ctx.propsIdentifier = ctx.getString(declId);\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction processWithDefaults(ctx, node, declId) {\r\n  if (!isCallOf(node, WITH_DEFAULTS)) {\r\n    return false;\r\n  }\r\n  if (processDefineProps(ctx, node.arguments[0], declId)) {\r\n    if (ctx.propsRuntimeDecl) {\r\n      ctx.error(\r\n        `${WITH_DEFAULTS} can only be used with type-based ${DEFINE_PROPS} declaration.`,\r\n        node\r\n      );\r\n    }\r\n    if (ctx.propsDestructureDecl) {\r\n      ctx.error(\r\n        `${WITH_DEFAULTS}() is unnecessary when using destructure with ${DEFINE_PROPS}().\r\nPrefer using destructure default values, e.g. const { foo = 1 } = defineProps(...).`,\r\n        node.callee\r\n      );\r\n    }\r\n    ctx.propsRuntimeDefaults = node.arguments[1];\r\n    if (!ctx.propsRuntimeDefaults) {\r\n      ctx.error(`The 2nd argument of ${WITH_DEFAULTS} is required.`, node);\r\n    }\r\n  } else {\r\n    ctx.error(\r\n      `${WITH_DEFAULTS}' first argument must be a ${DEFINE_PROPS} call.`,\r\n      node.arguments[0] || node\r\n    );\r\n  }\r\n  return true;\r\n}\r\nfunction genRuntimeProps(ctx) {\r\n  let propsDecls;\r\n  if (ctx.propsRuntimeDecl) {\r\n    propsDecls = ctx.getString(ctx.propsRuntimeDecl).trim();\r\n    if (ctx.propsDestructureDecl) {\r\n      const defaults = [];\r\n      for (const key in ctx.propsDestructuredBindings) {\r\n        const d = genDestructuredDefaultValue(ctx, key);\r\n        const finalKey = getEscapedKey(key);\r\n        if (d)\r\n          defaults.push(\r\n            `${finalKey}: ${d.valueString}${d.needSkipFactory ? `, __skip_${finalKey}: true` : ``}`\r\n          );\r\n      }\r\n      if (defaults.length) {\r\n        propsDecls = `${ctx.helper(\r\n          `mergeDefaults`\r\n        )}(${propsDecls}, {\r\n  ${defaults.join(\",\\n  \")}\r\n})`;\r\n      }\r\n    }\r\n  } else if (ctx.propsTypeDecl) {\r\n    propsDecls = genRuntimePropsFromTypes(ctx);\r\n  }\r\n  const modelsDecls = genModelProps(ctx);\r\n  if (propsDecls && modelsDecls) {\r\n    return `${ctx.helper(\"mergeModels\")}(${propsDecls}, ${modelsDecls})`;\r\n  } else {\r\n    return modelsDecls || propsDecls;\r\n  }\r\n}\r\nfunction genRuntimePropsFromTypes(ctx) {\r\n  const props = resolveRuntimePropsFromType(ctx, ctx.propsTypeDecl);\r\n  if (!props.length) {\r\n    return;\r\n  }\r\n  const propStrings = [];\r\n  const hasStaticDefaults = hasStaticWithDefaults(ctx);\r\n  for (const prop of props) {\r\n    propStrings.push(genRuntimePropFromType(ctx, prop, hasStaticDefaults));\r\n    if (!(prop.key in ctx.bindingMetadata)) {\r\n      ctx.bindingMetadata[prop.key] = \"props\";\r\n    }\r\n  }\r\n  let propsDecls = `{\r\n    ${propStrings.join(\",\\n    \")}\r\n  }`;\r\n  if (ctx.propsRuntimeDefaults && !hasStaticDefaults) {\r\n    propsDecls = `${ctx.helper(\"mergeDefaults\")}(${propsDecls}, ${ctx.getString(\r\n      ctx.propsRuntimeDefaults\r\n    )})`;\r\n  }\r\n  return propsDecls;\r\n}\r\nfunction resolveRuntimePropsFromType(ctx, node) {\r\n  const props = [];\r\n  const elements = resolveTypeElements(ctx, node);\r\n  for (const key in elements.props) {\r\n    const e = elements.props[key];\r\n    let type = inferRuntimeType(ctx, e);\r\n    let skipCheck = false;\r\n    if (type.includes(UNKNOWN_TYPE)) {\r\n      if (type.includes(\"Boolean\") || type.includes(\"Function\")) {\r\n        type = type.filter((t) => t !== UNKNOWN_TYPE);\r\n        skipCheck = true;\r\n      } else {\r\n        type = [\"null\"];\r\n      }\r\n    }\r\n    props.push({\r\n      key,\r\n      required: !e.optional,\r\n      type: type || [`null`],\r\n      skipCheck\r\n    });\r\n  }\r\n  return props;\r\n}\r\nfunction genRuntimePropFromType(ctx, { key, required, type, skipCheck }, hasStaticDefaults) {\r\n  let defaultString;\r\n  const destructured = genDestructuredDefaultValue(ctx, key, type);\r\n  if (destructured) {\r\n    defaultString = `default: ${destructured.valueString}${destructured.needSkipFactory ? `, skipFactory: true` : ``}`;\r\n  } else if (hasStaticDefaults) {\r\n    const prop = ctx.propsRuntimeDefaults.properties.find(\r\n      (node) => {\r\n        if (node.type === \"SpreadElement\")\r\n          return false;\r\n        return resolveObjectKey(node.key, node.computed) === key;\r\n      }\r\n    );\r\n    if (prop) {\r\n      if (prop.type === \"ObjectProperty\") {\r\n        defaultString = `default: ${ctx.getString(prop.value)}`;\r\n      } else {\r\n        defaultString = `${prop.async ? \"async \" : \"\"}${prop.kind !== \"method\" ? `${prop.kind} ` : \"\"}default() ${ctx.getString(prop.body)}`;\r\n      }\r\n    }\r\n  }\r\n  const finalKey = getEscapedKey(key);\r\n  if (!ctx.options.isProd) {\r\n    return `${finalKey}: { ${concatStrings([\r\n      `type: ${toRuntimeTypeString(type)}`,\r\n      `required: ${required}`,\r\n      skipCheck && \"skipCheck: true\",\r\n      defaultString\r\n    ])} }`;\r\n  } else if (type.some(\r\n    (el) => el === \"Boolean\" || (!hasStaticDefaults || defaultString) && el === \"Function\"\r\n  )) {\r\n    return `${finalKey}: { ${concatStrings([\r\n      `type: ${toRuntimeTypeString(type)}`,\r\n      defaultString\r\n    ])} }`;\r\n  } else {\r\n    return `${finalKey}: ${defaultString ? `{ ${defaultString} }` : `{}`}`;\r\n  }\r\n}\r\nfunction hasStaticWithDefaults(ctx) {\r\n  return !!(ctx.propsRuntimeDefaults && ctx.propsRuntimeDefaults.type === \"ObjectExpression\" && ctx.propsRuntimeDefaults.properties.every(\r\n    (node) => node.type !== \"SpreadElement\" && (!node.computed || node.key.type.endsWith(\"Literal\"))\r\n  ));\r\n}\r\nfunction genDestructuredDefaultValue(ctx, key, inferredType) {\r\n  const destructured = ctx.propsDestructuredBindings[key];\r\n  const defaultVal = destructured && destructured.default;\r\n  if (defaultVal) {\r\n    const value = ctx.getString(defaultVal);\r\n    const unwrapped = unwrapTSNode(defaultVal);\r\n    if (inferredType && inferredType.length && !inferredType.includes(\"null\")) {\r\n      const valueType = inferValueType(unwrapped);\r\n      if (valueType && !inferredType.includes(valueType)) {\r\n        ctx.error(\r\n          `Default value of prop \"${key}\" does not match declared type.`,\r\n          unwrapped\r\n        );\r\n      }\r\n    }\r\n    const needSkipFactory = !inferredType && (isFunctionType(unwrapped) || unwrapped.type === \"Identifier\");\r\n    const needFactoryWrap = !needSkipFactory && !isLiteralNode(unwrapped) && !(inferredType == null ? void 0 : inferredType.includes(\"Function\"));\r\n    return {\r\n      valueString: needFactoryWrap ? `() => (${value})` : value,\r\n      needSkipFactory\r\n    };\r\n  }\r\n}\r\nfunction inferValueType(node) {\r\n  switch (node.type) {\r\n    case \"StringLiteral\":\r\n      return \"String\";\r\n    case \"NumericLiteral\":\r\n      return \"Number\";\r\n    case \"BooleanLiteral\":\r\n      return \"Boolean\";\r\n    case \"ObjectExpression\":\r\n      return \"Object\";\r\n    case \"ArrayExpression\":\r\n      return \"Array\";\r\n    case \"FunctionExpression\":\r\n    case \"ArrowFunctionExpression\":\r\n      return \"Function\";\r\n  }\r\n}\r\n\r\nfunction processPropsDestructure(ctx, declId) {\r\n  if (!ctx.options.propsDestructure && !ctx.options.reactivityTransform) {\r\n    ctx.propsIdentifier = ctx.getString(declId);\r\n    return;\r\n  }\r\n  warnOnce$4(\r\n    `This project is using reactive props destructure, which is an experimental  feature. It may receive breaking changes or be removed in the future, so use at your own risk.\r\nTo stay updated, follow the RFC at https://github.com/vuejs/rfcs/discussions/502.`\r\n  );\r\n  ctx.propsDestructureDecl = declId;\r\n  const registerBinding = (key, local, defaultValue) => {\r\n    ctx.propsDestructuredBindings[key] = { local, default: defaultValue };\r\n    if (local !== key) {\r\n      ctx.bindingMetadata[local] = \"props-aliased\";\r\n      (ctx.bindingMetadata.__propsAliases || (ctx.bindingMetadata.__propsAliases = {}))[local] = key;\r\n    }\r\n  };\r\n  for (const prop of declId.properties) {\r\n    if (prop.type === \"ObjectProperty\") {\r\n      const propKey = resolveObjectKey(prop.key, prop.computed);\r\n      if (!propKey) {\r\n        ctx.error(\r\n          `${DEFINE_PROPS}() destructure cannot use computed key.`,\r\n          prop.key\r\n        );\r\n      }\r\n      if (prop.value.type === \"AssignmentPattern\") {\r\n        const { left, right } = prop.value;\r\n        if (left.type !== \"Identifier\") {\r\n          ctx.error(\r\n            `${DEFINE_PROPS}() destructure does not support nested patterns.`,\r\n            left\r\n          );\r\n        }\r\n        registerBinding(propKey, left.name, right);\r\n      } else if (prop.value.type === \"Identifier\") {\r\n        registerBinding(propKey, prop.value.name);\r\n      } else {\r\n        ctx.error(\r\n          `${DEFINE_PROPS}() destructure does not support nested patterns.`,\r\n          prop.value\r\n        );\r\n      }\r\n    } else {\r\n      ctx.propsDestructureRestId = prop.argument.name;\r\n      ctx.bindingMetadata[ctx.propsDestructureRestId] = \"setup-reactive-const\";\r\n    }\r\n  }\r\n}\r\nfunction transformDestructuredProps(ctx, vueImportAliases) {\r\n  if (!ctx.options.propsDestructure && !ctx.options.reactivityTransform) {\r\n    return;\r\n  }\r\n  const rootScope = {};\r\n  const scopeStack = [rootScope];\r\n  let currentScope = rootScope;\r\n  const excludedIds = /* @__PURE__ */ new WeakSet();\r\n  const parentStack = [];\r\n  const propsLocalToPublicMap = /* @__PURE__ */ Object.create(null);\r\n  for (const key in ctx.propsDestructuredBindings) {\r\n    const { local } = ctx.propsDestructuredBindings[key];\r\n    rootScope[local] = true;\r\n    propsLocalToPublicMap[local] = key;\r\n  }\r\n  function pushScope() {\r\n    scopeStack.push(currentScope = Object.create(currentScope));\r\n  }\r\n  function popScope() {\r\n    scopeStack.pop();\r\n    currentScope = scopeStack[scopeStack.length - 1] || null;\r\n  }\r\n  function registerLocalBinding(id) {\r\n    excludedIds.add(id);\r\n    if (currentScope) {\r\n      currentScope[id.name] = false;\r\n    } else {\r\n      ctx.error(\r\n        \"registerBinding called without active scope, something is wrong.\",\r\n        id\r\n      );\r\n    }\r\n  }\r\n  function walkScope(node, isRoot = false) {\r\n    for (const stmt of node.body) {\r\n      if (stmt.type === \"VariableDeclaration\") {\r\n        walkVariableDeclaration(stmt, isRoot);\r\n      } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\r\n        if (stmt.declare || !stmt.id)\r\n          continue;\r\n        registerLocalBinding(stmt.id);\r\n      } else if ((stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\") && stmt.left.type === \"VariableDeclaration\") {\r\n        walkVariableDeclaration(stmt.left);\r\n      } else if (stmt.type === \"ExportNamedDeclaration\" && stmt.declaration && stmt.declaration.type === \"VariableDeclaration\") {\r\n        walkVariableDeclaration(stmt.declaration, isRoot);\r\n      } else if (stmt.type === \"LabeledStatement\" && stmt.body.type === \"VariableDeclaration\") {\r\n        walkVariableDeclaration(stmt.body, isRoot);\r\n      }\r\n    }\r\n  }\r\n  function walkVariableDeclaration(stmt, isRoot = false) {\r\n    if (stmt.declare) {\r\n      return;\r\n    }\r\n    for (const decl of stmt.declarations) {\r\n      const isDefineProps = isRoot && decl.init && isCallOf(unwrapTSNode(decl.init), \"defineProps\");\r\n      for (const id of extractIdentifiers(decl.id)) {\r\n        if (isDefineProps) {\r\n          excludedIds.add(id);\r\n        } else {\r\n          registerLocalBinding(id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function rewriteId(id, parent, parentStack2) {\r\n    if (parent.type === \"AssignmentExpression\" && id === parent.left || parent.type === \"UpdateExpression\") {\r\n      ctx.error(`Cannot assign to destructured props as they are readonly.`, id);\r\n    }\r\n    if (isStaticProperty(parent) && parent.shorthand) {\r\n      if (!parent.inPattern || isInDestructureAssignment(parent, parentStack2)) {\r\n        ctx.s.appendLeft(\r\n          id.end + ctx.startOffset,\r\n          `: ${genPropsAccessExp(propsLocalToPublicMap[id.name])}`\r\n        );\r\n      }\r\n    } else {\r\n      ctx.s.overwrite(\r\n        id.start + ctx.startOffset,\r\n        id.end + ctx.startOffset,\r\n        genPropsAccessExp(propsLocalToPublicMap[id.name])\r\n      );\r\n    }\r\n  }\r\n  function checkUsage(node, method, alias = method) {\r\n    if (isCallOf(node, alias)) {\r\n      const arg = unwrapTSNode(node.arguments[0]);\r\n      if (arg.type === \"Identifier\" && currentScope[arg.name]) {\r\n        ctx.error(\r\n          `\"${arg.name}\" is a destructured prop and should not be passed directly to ${method}(). Pass a getter () => ${arg.name} instead.`,\r\n          arg\r\n        );\r\n      }\r\n    }\r\n  }\r\n  const ast = ctx.scriptSetupAst;\r\n  walkScope(ast, true);\r\n  walk$1(ast, {\r\n    enter(node, parent) {\r\n      parent && parentStack.push(parent);\r\n      if (parent && parent.type.startsWith(\"TS\") && parent.type !== \"TSAsExpression\" && parent.type !== \"TSNonNullExpression\" && parent.type !== \"TSTypeAssertion\") {\r\n        return this.skip();\r\n      }\r\n      checkUsage(node, \"watch\", vueImportAliases.watch);\r\n      checkUsage(node, \"toRef\", vueImportAliases.toRef);\r\n      if (isFunctionType(node)) {\r\n        pushScope();\r\n        walkFunctionParams(node, registerLocalBinding);\r\n        if (node.body.type === \"BlockStatement\") {\r\n          walkScope(node.body);\r\n        }\r\n        return;\r\n      }\r\n      if (node.type === \"CatchClause\") {\r\n        pushScope();\r\n        if (node.param && node.param.type === \"Identifier\") {\r\n          registerLocalBinding(node.param);\r\n        }\r\n        walkScope(node.body);\r\n        return;\r\n      }\r\n      if (node.type === \"BlockStatement\" && !isFunctionType(parent)) {\r\n        pushScope();\r\n        walkScope(node);\r\n        return;\r\n      }\r\n      if (node.type === \"Identifier\") {\r\n        if (isReferencedIdentifier(node, parent, parentStack) && !excludedIds.has(node)) {\r\n          if (currentScope[node.name]) {\r\n            rewriteId(node, parent, parentStack);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    leave(node, parent) {\r\n      parent && parentStack.pop();\r\n      if (node.type === \"BlockStatement\" && !isFunctionType(parent) || isFunctionType(node)) {\r\n        popScope();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nconst DEFINE_EMITS = \"defineEmits\";\r\nfunction processDefineEmits(ctx, node, declId) {\r\n  if (!isCallOf(node, DEFINE_EMITS)) {\r\n    return false;\r\n  }\r\n  if (ctx.hasDefineEmitCall) {\r\n    ctx.error(`duplicate ${DEFINE_EMITS}() call`, node);\r\n  }\r\n  ctx.hasDefineEmitCall = true;\r\n  ctx.emitsRuntimeDecl = node.arguments[0];\r\n  if (node.typeParameters) {\r\n    if (ctx.emitsRuntimeDecl) {\r\n      ctx.error(\r\n        `${DEFINE_EMITS}() cannot accept both type and non-type arguments at the same time. Use one or the other.`,\r\n        node\r\n      );\r\n    }\r\n    ctx.emitsTypeDecl = node.typeParameters.params[0];\r\n  }\r\n  if (declId) {\r\n    ctx.emitIdentifier = declId.type === \"Identifier\" ? declId.name : ctx.getString(declId);\r\n  }\r\n  return true;\r\n}\r\nfunction genRuntimeEmits(ctx) {\r\n  let emitsDecl = \"\";\r\n  if (ctx.emitsRuntimeDecl) {\r\n    emitsDecl = ctx.getString(ctx.emitsRuntimeDecl).trim();\r\n  } else if (ctx.emitsTypeDecl) {\r\n    const typeDeclaredEmits = extractRuntimeEmits(ctx);\r\n    emitsDecl = typeDeclaredEmits.size ? `[${Array.from(typeDeclaredEmits).map((k) => JSON.stringify(k)).join(\", \")}]` : ``;\r\n  }\r\n  if (ctx.hasDefineModelCall) {\r\n    let modelEmitsDecl = `[${Object.keys(ctx.modelDecls).map((n) => JSON.stringify(`update:${n}`)).join(\", \")}]`;\r\n    emitsDecl = emitsDecl ? `${ctx.helper(\"mergeModels\")}(${emitsDecl}, ${modelEmitsDecl})` : modelEmitsDecl;\r\n  }\r\n  return emitsDecl;\r\n}\r\nfunction extractRuntimeEmits(ctx) {\r\n  const emits = /* @__PURE__ */ new Set();\r\n  const node = ctx.emitsTypeDecl;\r\n  if (node.type === \"TSFunctionType\") {\r\n    extractEventNames(ctx, node.parameters[0], emits);\r\n    return emits;\r\n  }\r\n  const { props, calls } = resolveTypeElements(ctx, node);\r\n  let hasProperty = false;\r\n  for (const key in props) {\r\n    emits.add(key);\r\n    hasProperty = true;\r\n  }\r\n  if (calls) {\r\n    if (hasProperty) {\r\n      ctx.error(\r\n        `defineEmits() type cannot mixed call signature and property syntax.`,\r\n        node\r\n      );\r\n    }\r\n    for (const call of calls) {\r\n      extractEventNames(ctx, call.parameters[0], emits);\r\n    }\r\n  }\r\n  return emits;\r\n}\r\nfunction extractEventNames(ctx, eventName, emits) {\r\n  if (eventName.type === \"Identifier\" && eventName.typeAnnotation && eventName.typeAnnotation.type === \"TSTypeAnnotation\") {\r\n    const types = resolveUnionType(ctx, eventName.typeAnnotation.typeAnnotation);\r\n    for (const type of types) {\r\n      if (type.type === \"TSLiteralType\") {\r\n        if (type.literal.type !== \"UnaryExpression\" && type.literal.type !== \"TemplateLiteral\") {\r\n          emits.add(String(type.literal.value));\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst DEFINE_EXPOSE = \"defineExpose\";\r\nfunction processDefineExpose(ctx, node) {\r\n  if (isCallOf(node, DEFINE_EXPOSE)) {\r\n    if (ctx.hasDefineExposeCall) {\r\n      ctx.error(`duplicate ${DEFINE_EXPOSE}() call`, node);\r\n    }\r\n    ctx.hasDefineExposeCall = true;\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst DEFINE_SLOTS = \"defineSlots\";\r\nfunction processDefineSlots(ctx, node, declId) {\r\n  if (!isCallOf(node, DEFINE_SLOTS)) {\r\n    return false;\r\n  }\r\n  if (ctx.hasDefineSlotsCall) {\r\n    ctx.error(`duplicate ${DEFINE_SLOTS}() call`, node);\r\n  }\r\n  ctx.hasDefineSlotsCall = true;\r\n  if (node.arguments.length > 0) {\r\n    ctx.error(`${DEFINE_SLOTS}() cannot accept arguments`, node);\r\n  }\r\n  if (declId) {\r\n    ctx.s.overwrite(\r\n      ctx.startOffset + node.start,\r\n      ctx.startOffset + node.end,\r\n      `${ctx.helper(\"useSlots\")}()`\r\n    );\r\n  }\r\n  return true;\r\n}\r\n\r\nconst DEFINE_OPTIONS = \"defineOptions\";\r\nfunction processDefineOptions(ctx, node) {\r\n  if (!isCallOf(node, DEFINE_OPTIONS)) {\r\n    return false;\r\n  }\r\n  if (ctx.hasDefineOptionsCall) {\r\n    ctx.error(`duplicate ${DEFINE_OPTIONS}() call`, node);\r\n  }\r\n  if (node.typeParameters) {\r\n    ctx.error(`${DEFINE_OPTIONS}() cannot accept type arguments`, node);\r\n  }\r\n  if (!node.arguments[0])\r\n    return true;\r\n  ctx.hasDefineOptionsCall = true;\r\n  ctx.optionsRuntimeDecl = unwrapTSNode(node.arguments[0]);\r\n  let propsOption = void 0;\r\n  let emitsOption = void 0;\r\n  let exposeOption = void 0;\r\n  let slotsOption = void 0;\r\n  if (ctx.optionsRuntimeDecl.type === \"ObjectExpression\") {\r\n    for (const prop of ctx.optionsRuntimeDecl.properties) {\r\n      if ((prop.type === \"ObjectProperty\" || prop.type === \"ObjectMethod\") && prop.key.type === \"Identifier\") {\r\n        if (prop.key.name === \"props\")\r\n          propsOption = prop;\r\n        if (prop.key.name === \"emits\")\r\n          emitsOption = prop;\r\n        if (prop.key.name === \"expose\")\r\n          exposeOption = prop;\r\n        if (prop.key.name === \"slots\")\r\n          slotsOption = prop;\r\n      }\r\n    }\r\n  }\r\n  if (propsOption) {\r\n    ctx.error(\r\n      `${DEFINE_OPTIONS}() cannot be used to declare props. Use ${DEFINE_PROPS}() instead.`,\r\n      propsOption\r\n    );\r\n  }\r\n  if (emitsOption) {\r\n    ctx.error(\r\n      `${DEFINE_OPTIONS}() cannot be used to declare emits. Use ${DEFINE_EMITS}() instead.`,\r\n      emitsOption\r\n    );\r\n  }\r\n  if (exposeOption) {\r\n    ctx.error(\r\n      `${DEFINE_OPTIONS}() cannot be used to declare expose. Use ${DEFINE_EXPOSE}() instead.`,\r\n      exposeOption\r\n    );\r\n  }\r\n  if (slotsOption) {\r\n    ctx.error(\r\n      `${DEFINE_OPTIONS}() cannot be used to declare slots. Use ${DEFINE_SLOTS}() instead.`,\r\n      slotsOption\r\n    );\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction processAwait(ctx, node, needSemi, isStatement) {\r\n  const argumentStart = node.argument.extra && node.argument.extra.parenthesized ? node.argument.extra.parenStart : node.argument.start;\r\n  const startOffset = ctx.startOffset;\r\n  const argumentStr = ctx.descriptor.source.slice(\r\n    argumentStart + startOffset,\r\n    node.argument.end + startOffset\r\n  );\r\n  const containsNestedAwait = /\\bawait\\b/.test(argumentStr);\r\n  ctx.s.overwrite(\r\n    node.start + startOffset,\r\n    argumentStart + startOffset,\r\n    `${needSemi ? `;` : ``}(\r\n  ([__temp,__restore] = ${ctx.helper(\r\n      `withAsyncContext`\r\n    )}(${containsNestedAwait ? `async ` : ``}() => `\r\n  );\r\n  ctx.s.appendLeft(\r\n    node.end + startOffset,\r\n    `)),\r\n  ${isStatement ? `` : `__temp = `}await __temp,\r\n  __restore()${isStatement ? `` : `,\r\n  __temp`}\r\n)`\r\n  );\r\n}\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __defProps = Object.defineProperties;\r\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp.call(b, prop))\r\n      __defNormalProp(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols)\r\n    for (var prop of __getOwnPropSymbols(b)) {\r\n      if (__propIsEnum.call(b, prop))\r\n        __defNormalProp(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\r\nfunction compileScript(sfc, options) {\r\n  var _a;\r\n  if (!options.id) {\r\n    warnOnce$4(\r\n      `compileScript now requires passing the \\`id\\` option.\r\nUpgrade your vite or vue-loader version for compatibility with the latest experimental proposals.`\r\n    );\r\n  }\r\n  const ctx = new ScriptCompileContext(sfc, options);\r\n  const { script, scriptSetup, source, filename } = sfc;\r\n  const hoistStatic = options.hoistStatic !== false && !script;\r\n  const scopeId = options.id ? options.id.replace(/^data-v-/, \"\") : \"\";\r\n  const scriptLang = script && script.lang;\r\n  const scriptSetupLang = scriptSetup && scriptSetup.lang;\r\n  const enableReactivityTransform = !!options.reactivityTransform;\r\n  let refBindings;\r\n  if (!scriptSetup) {\r\n    if (!script) {\r\n      throw new Error(`[@vue/compiler-sfc] SFC contains no <script> tags.`);\r\n    }\r\n    return processNormalScript(ctx, scopeId);\r\n  }\r\n  if (script && scriptLang !== scriptSetupLang) {\r\n    throw new Error(\r\n      `[@vue/compiler-sfc] <script> and <script setup> must have the same language type.`\r\n    );\r\n  }\r\n  if (scriptSetupLang && !ctx.isJS && !ctx.isTS) {\r\n    return scriptSetup;\r\n  }\r\n  const scriptBindings = /* @__PURE__ */ Object.create(null);\r\n  const setupBindings = /* @__PURE__ */ Object.create(null);\r\n  let defaultExport;\r\n  let hasAwait = false;\r\n  let hasInlinedSsrRenderFn = false;\r\n  const startOffset = ctx.startOffset;\r\n  const endOffset = ctx.endOffset;\r\n  const scriptStartOffset = script && script.loc.start.offset;\r\n  const scriptEndOffset = script && script.loc.end.offset;\r\n  function hoistNode(node) {\r\n    const start = node.start + startOffset;\r\n    let end = node.end + startOffset;\r\n    if (node.trailingComments && node.trailingComments.length > 0) {\r\n      const lastCommentNode = node.trailingComments[node.trailingComments.length - 1];\r\n      end = lastCommentNode.end + startOffset;\r\n    }\r\n    while (end <= source.length) {\r\n      if (!/\\s/.test(source.charAt(end))) {\r\n        break;\r\n      }\r\n      end++;\r\n    }\r\n    ctx.s.move(start, end, 0);\r\n  }\r\n  function registerUserImport(source2, local, imported, isType, isFromSetup, needTemplateUsageCheck) {\r\n    let isUsedInTemplate = needTemplateUsageCheck;\r\n    if (needTemplateUsageCheck && ctx.isTS && sfc.template && !sfc.template.src && !sfc.template.lang) {\r\n      isUsedInTemplate = isImportUsed(local, sfc);\r\n    }\r\n    ctx.userImports[local] = {\r\n      isType,\r\n      imported,\r\n      local,\r\n      source: source2,\r\n      isFromSetup,\r\n      isUsedInTemplate\r\n    };\r\n  }\r\n  function checkInvalidScopeReference(node, method) {\r\n    if (!node)\r\n      return;\r\n    walkIdentifiers(node, (id) => {\r\n      const binding = setupBindings[id.name];\r\n      if (binding && binding !== \"literal-const\") {\r\n        ctx.error(\r\n          `\\`${method}()\\` in <script setup> cannot reference locally declared variables because it will be hoisted outside of the setup() function. If your component options require initialization in the module scope, use a separate normal <script> to export the options instead.`,\r\n          id\r\n        );\r\n      }\r\n    });\r\n  }\r\n  const scriptAst = ctx.scriptAst;\r\n  const scriptSetupAst = ctx.scriptSetupAst;\r\n  if (scriptAst) {\r\n    for (const node of scriptAst.body) {\r\n      if (node.type === \"ImportDeclaration\") {\r\n        for (const specifier of node.specifiers) {\r\n          const imported = getImportedName(specifier);\r\n          registerUserImport(\r\n            node.source.value,\r\n            specifier.local.name,\r\n            imported,\r\n            node.importKind === \"type\" || specifier.type === \"ImportSpecifier\" && specifier.importKind === \"type\",\r\n            false,\r\n            !options.inlineTemplate\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  for (const node of scriptSetupAst.body) {\r\n    if (node.type === \"ImportDeclaration\") {\r\n      hoistNode(node);\r\n      let removed = 0;\r\n      const removeSpecifier = (i) => {\r\n        const removeLeft = i > removed;\r\n        removed++;\r\n        const current = node.specifiers[i];\r\n        const next = node.specifiers[i + 1];\r\n        ctx.s.remove(\r\n          removeLeft ? node.specifiers[i - 1].end + startOffset : current.start + startOffset,\r\n          next && !removeLeft ? next.start + startOffset : current.end + startOffset\r\n        );\r\n      };\r\n      for (let i = 0; i < node.specifiers.length; i++) {\r\n        const specifier = node.specifiers[i];\r\n        const local = specifier.local.name;\r\n        const imported = getImportedName(specifier);\r\n        const source2 = node.source.value;\r\n        const existing = ctx.userImports[local];\r\n        if (source2 === \"vue\" && (imported === DEFINE_PROPS || imported === DEFINE_EMITS || imported === DEFINE_EXPOSE)) {\r\n          warnOnce$4(\r\n            `\\`${imported}\\` is a compiler macro and no longer needs to be imported.`\r\n          );\r\n          removeSpecifier(i);\r\n        } else if (existing) {\r\n          if (existing.source === source2 && existing.imported === imported) {\r\n            removeSpecifier(i);\r\n          } else {\r\n            ctx.error(\r\n              `different imports aliased to same local name.`,\r\n              specifier\r\n            );\r\n          }\r\n        } else {\r\n          registerUserImport(\r\n            source2,\r\n            local,\r\n            imported,\r\n            node.importKind === \"type\" || specifier.type === \"ImportSpecifier\" && specifier.importKind === \"type\",\r\n            true,\r\n            !options.inlineTemplate\r\n          );\r\n        }\r\n      }\r\n      if (node.specifiers.length && removed === node.specifiers.length) {\r\n        ctx.s.remove(node.start + startOffset, node.end + startOffset);\r\n      }\r\n    }\r\n  }\r\n  const vueImportAliases = {};\r\n  for (const key in ctx.userImports) {\r\n    const { source: source2, imported, local } = ctx.userImports[key];\r\n    if (source2 === \"vue\")\r\n      vueImportAliases[imported] = local;\r\n  }\r\n  if (script && scriptAst) {\r\n    for (const node of scriptAst.body) {\r\n      if (node.type === \"ExportDefaultDeclaration\") {\r\n        defaultExport = node;\r\n        let optionProperties;\r\n        if (defaultExport.declaration.type === \"ObjectExpression\") {\r\n          optionProperties = defaultExport.declaration.properties;\r\n        } else if (defaultExport.declaration.type === \"CallExpression\" && defaultExport.declaration.arguments[0] && defaultExport.declaration.arguments[0].type === \"ObjectExpression\") {\r\n          optionProperties = defaultExport.declaration.arguments[0].properties;\r\n        }\r\n        if (optionProperties) {\r\n          for (const p of optionProperties) {\r\n            if (p.type === \"ObjectProperty\" && p.key.type === \"Identifier\" && p.key.name === \"name\") {\r\n              ctx.hasDefaultExportName = true;\r\n            }\r\n            if ((p.type === \"ObjectMethod\" || p.type === \"ObjectProperty\") && p.key.type === \"Identifier\" && p.key.name === \"render\") {\r\n              ctx.hasDefaultExportRender = true;\r\n            }\r\n          }\r\n        }\r\n        const start = node.start + scriptStartOffset;\r\n        const end = node.declaration.start + scriptStartOffset;\r\n        ctx.s.overwrite(start, end, `const ${normalScriptDefaultVar} = `);\r\n      } else if (node.type === \"ExportNamedDeclaration\") {\r\n        const defaultSpecifier = node.specifiers.find(\r\n          (s) => s.exported.type === \"Identifier\" && s.exported.name === \"default\"\r\n        );\r\n        if (defaultSpecifier) {\r\n          defaultExport = node;\r\n          if (node.specifiers.length > 1) {\r\n            ctx.s.remove(\r\n              defaultSpecifier.start + scriptStartOffset,\r\n              defaultSpecifier.end + scriptStartOffset\r\n            );\r\n          } else {\r\n            ctx.s.remove(\r\n              node.start + scriptStartOffset,\r\n              node.end + scriptStartOffset\r\n            );\r\n          }\r\n          if (node.source) {\r\n            ctx.s.prepend(\r\n              `import { ${defaultSpecifier.local.name} as ${normalScriptDefaultVar} } from '${node.source.value}'\r\n`\r\n            );\r\n          } else {\r\n            ctx.s.appendLeft(\r\n              scriptEndOffset,\r\n              `\r\nconst ${normalScriptDefaultVar} = ${defaultSpecifier.local.name}\r\n`\r\n            );\r\n          }\r\n        }\r\n        if (node.declaration) {\r\n          walkDeclaration(\r\n            \"script\",\r\n            node.declaration,\r\n            scriptBindings,\r\n            vueImportAliases,\r\n            hoistStatic\r\n          );\r\n        }\r\n      } else if ((node.type === \"VariableDeclaration\" || node.type === \"FunctionDeclaration\" || node.type === \"ClassDeclaration\" || node.type === \"TSEnumDeclaration\") && !node.declare) {\r\n        walkDeclaration(\r\n          \"script\",\r\n          node,\r\n          scriptBindings,\r\n          vueImportAliases,\r\n          hoistStatic\r\n        );\r\n      }\r\n    }\r\n    if (enableReactivityTransform && shouldTransform(script.content)) {\r\n      const { rootRefs, importedHelpers } = transformAST(\r\n        scriptAst,\r\n        ctx.s,\r\n        scriptStartOffset\r\n      );\r\n      refBindings = rootRefs;\r\n      for (const h of importedHelpers) {\r\n        ctx.helperImports.add(h);\r\n      }\r\n    }\r\n    if (scriptStartOffset > startOffset) {\r\n      if (!/\\n$/.test(script.content.trim())) {\r\n        ctx.s.appendLeft(scriptEndOffset, `\r\n`);\r\n      }\r\n      ctx.s.move(scriptStartOffset, scriptEndOffset, 0);\r\n    }\r\n  }\r\n  for (const node of scriptSetupAst.body) {\r\n    if (node.type === \"ExpressionStatement\") {\r\n      const expr = unwrapTSNode(node.expression);\r\n      if (processDefineProps(ctx, expr) || processDefineEmits(ctx, expr) || processDefineOptions(ctx, expr) || processDefineSlots(ctx, expr)) {\r\n        ctx.s.remove(node.start + startOffset, node.end + startOffset);\r\n      } else if (processDefineExpose(ctx, expr)) {\r\n        const callee = expr.callee;\r\n        ctx.s.overwrite(\r\n          callee.start + startOffset,\r\n          callee.end + startOffset,\r\n          \"__expose\"\r\n        );\r\n      } else {\r\n        processDefineModel(ctx, expr);\r\n      }\r\n    }\r\n    if (node.type === \"VariableDeclaration\" && !node.declare) {\r\n      const total = node.declarations.length;\r\n      let left = total;\r\n      let lastNonRemoved;\r\n      for (let i = 0; i < total; i++) {\r\n        const decl = node.declarations[i];\r\n        const init = decl.init && unwrapTSNode(decl.init);\r\n        if (init) {\r\n          if (processDefineOptions(ctx, init)) {\r\n            ctx.error(\r\n              `${DEFINE_OPTIONS}() has no returning value, it cannot be assigned.`,\r\n              node\r\n            );\r\n          }\r\n          const isDefineProps = processDefineProps(ctx, init, decl.id);\r\n          const isDefineEmits = !isDefineProps && processDefineEmits(ctx, init, decl.id);\r\n          !isDefineEmits && (processDefineSlots(ctx, init, decl.id) || processDefineModel(ctx, init, decl.id));\r\n          if (isDefineProps || isDefineEmits) {\r\n            if (left === 1) {\r\n              ctx.s.remove(node.start + startOffset, node.end + startOffset);\r\n            } else {\r\n              let start = decl.start + startOffset;\r\n              let end = decl.end + startOffset;\r\n              if (i === total - 1) {\r\n                start = node.declarations[lastNonRemoved].end + startOffset;\r\n              } else {\r\n                end = node.declarations[i + 1].start + startOffset;\r\n              }\r\n              ctx.s.remove(start, end);\r\n              left--;\r\n            }\r\n          } else {\r\n            lastNonRemoved = i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let isAllLiteral = false;\r\n    if ((node.type === \"VariableDeclaration\" || node.type === \"FunctionDeclaration\" || node.type === \"ClassDeclaration\" || node.type === \"TSEnumDeclaration\") && !node.declare) {\r\n      isAllLiteral = walkDeclaration(\r\n        \"scriptSetup\",\r\n        node,\r\n        setupBindings,\r\n        vueImportAliases,\r\n        hoistStatic\r\n      );\r\n    }\r\n    if (hoistStatic && isAllLiteral) {\r\n      hoistNode(node);\r\n    }\r\n    if (node.type === \"VariableDeclaration\" && !node.declare || node.type.endsWith(\"Statement\")) {\r\n      const scope = [scriptSetupAst.body];\r\n      walk$1(node, {\r\n        enter(child, parent) {\r\n          if (isFunctionType(child)) {\r\n            this.skip();\r\n          }\r\n          if (child.type === \"BlockStatement\") {\r\n            scope.push(child.body);\r\n          }\r\n          if (child.type === \"AwaitExpression\") {\r\n            hasAwait = true;\r\n            const currentScope = scope[scope.length - 1];\r\n            const needsSemi = currentScope.some((n, i) => {\r\n              return (scope.length === 1 || i > 0) && n.type === \"ExpressionStatement\" && n.start === child.start;\r\n            });\r\n            processAwait(\r\n              ctx,\r\n              child,\r\n              needsSemi,\r\n              parent.type === \"ExpressionStatement\"\r\n            );\r\n          }\r\n        },\r\n        exit(node2) {\r\n          if (node2.type === \"BlockStatement\")\r\n            scope.pop();\r\n        }\r\n      });\r\n    }\r\n    if (node.type === \"ExportNamedDeclaration\" && node.exportKind !== \"type\" || node.type === \"ExportAllDeclaration\" || node.type === \"ExportDefaultDeclaration\") {\r\n      ctx.error(\r\n        `<script setup> cannot contain ES module exports. If you are using a previous version of <script setup>, please consult the updated RFC at https://github.com/vuejs/rfcs/pull/227.`,\r\n        node\r\n      );\r\n    }\r\n    if (ctx.isTS) {\r\n      if (node.type.startsWith(\"TS\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"VariableDeclaration\" && node.declare) {\r\n        if (node.type !== \"TSEnumDeclaration\") {\r\n          hoistNode(node);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (ctx.propsDestructureDecl) {\r\n    transformDestructuredProps(ctx, vueImportAliases);\r\n  }\r\n  if (enableReactivityTransform && // normal <script> had ref bindings that maybe used in <script setup>\r\n  (refBindings || shouldTransform(scriptSetup.content))) {\r\n    const { rootRefs, importedHelpers } = transformAST(\r\n      scriptSetupAst,\r\n      ctx.s,\r\n      startOffset,\r\n      refBindings\r\n    );\r\n    refBindings = refBindings ? [...refBindings, ...rootRefs] : rootRefs;\r\n    for (const h of importedHelpers) {\r\n      ctx.helperImports.add(h);\r\n    }\r\n  }\r\n  checkInvalidScopeReference(ctx.propsRuntimeDecl, DEFINE_PROPS);\r\n  checkInvalidScopeReference(ctx.propsRuntimeDefaults, DEFINE_PROPS);\r\n  checkInvalidScopeReference(ctx.propsDestructureDecl, DEFINE_PROPS);\r\n  checkInvalidScopeReference(ctx.emitsRuntimeDecl, DEFINE_EMITS);\r\n  checkInvalidScopeReference(ctx.optionsRuntimeDecl, DEFINE_OPTIONS);\r\n  if (script) {\r\n    if (startOffset < scriptStartOffset) {\r\n      ctx.s.remove(0, startOffset);\r\n      ctx.s.remove(endOffset, scriptStartOffset);\r\n      ctx.s.remove(scriptEndOffset, source.length);\r\n    } else {\r\n      ctx.s.remove(0, scriptStartOffset);\r\n      ctx.s.remove(scriptEndOffset, startOffset);\r\n      ctx.s.remove(endOffset, source.length);\r\n    }\r\n  } else {\r\n    ctx.s.remove(0, startOffset);\r\n    ctx.s.remove(endOffset, source.length);\r\n  }\r\n  if (scriptAst) {\r\n    Object.assign(ctx.bindingMetadata, analyzeScriptBindings(scriptAst.body));\r\n  }\r\n  for (const [key, { isType, imported, source: source2 }] of Object.entries(\r\n    ctx.userImports\r\n  )) {\r\n    if (isType)\r\n      continue;\r\n    ctx.bindingMetadata[key] = imported === \"*\" || imported === \"default\" && source2.endsWith(\".vue\") || source2 === \"vue\" ? \"setup-const\" : \"setup-maybe-ref\";\r\n  }\r\n  for (const key in scriptBindings) {\r\n    ctx.bindingMetadata[key] = scriptBindings[key];\r\n  }\r\n  for (const key in setupBindings) {\r\n    ctx.bindingMetadata[key] = setupBindings[key];\r\n  }\r\n  if (refBindings) {\r\n    for (const key of refBindings) {\r\n      ctx.bindingMetadata[key] = \"setup-ref\";\r\n    }\r\n  }\r\n  if (sfc.cssVars.length && // no need to do this when targeting SSR\r\n  !(options.inlineTemplate && ((_a = options.templateOptions) == null ? void 0 : _a.ssr))) {\r\n    ctx.helperImports.add(CSS_VARS_HELPER);\r\n    ctx.helperImports.add(\"unref\");\r\n    ctx.s.prependLeft(\r\n      startOffset,\r\n      `\r\n${genCssVarsCode(\r\n        sfc.cssVars,\r\n        ctx.bindingMetadata,\r\n        scopeId,\r\n        !!options.isProd\r\n      )}\r\n`\r\n    );\r\n  }\r\n  let args = `__props`;\r\n  if (ctx.propsTypeDecl) {\r\n    args += `: any`;\r\n  }\r\n  if (ctx.propsIdentifier) {\r\n    ctx.s.prependLeft(\r\n      startOffset,\r\n      `\r\nconst ${ctx.propsIdentifier} = __props;\r\n`\r\n    );\r\n  }\r\n  if (ctx.propsDestructureRestId) {\r\n    ctx.s.prependLeft(\r\n      startOffset,\r\n      `\r\nconst ${ctx.propsDestructureRestId} = ${ctx.helper(\r\n        `createPropsRestProxy`\r\n      )}(__props, ${JSON.stringify(\r\n        Object.keys(ctx.propsDestructuredBindings)\r\n      )});\r\n`\r\n    );\r\n  }\r\n  if (hasAwait) {\r\n    const any = ctx.isTS ? `: any` : ``;\r\n    ctx.s.prependLeft(startOffset, `\r\nlet __temp${any}, __restore${any}\r\n`);\r\n  }\r\n  const destructureElements = ctx.hasDefineExposeCall || !options.inlineTemplate ? [`expose: __expose`] : [];\r\n  if (ctx.emitIdentifier) {\r\n    destructureElements.push(\r\n      ctx.emitIdentifier === `emit` ? `emit` : `emit: ${ctx.emitIdentifier}`\r\n    );\r\n  }\r\n  if (destructureElements.length) {\r\n    args += `, { ${destructureElements.join(\", \")} }`;\r\n  }\r\n  let returned;\r\n  if (!options.inlineTemplate || !sfc.template && ctx.hasDefaultExportRender) {\r\n    const allBindings = __spreadValues(__spreadValues({}, scriptBindings), setupBindings);\r\n    for (const key in ctx.userImports) {\r\n      if (!ctx.userImports[key].isType && ctx.userImports[key].isUsedInTemplate) {\r\n        allBindings[key] = true;\r\n      }\r\n    }\r\n    returned = `{ `;\r\n    for (const key in allBindings) {\r\n      if (allBindings[key] === true && ctx.userImports[key].source !== \"vue\" && !ctx.userImports[key].source.endsWith(\".vue\")) {\r\n        returned += `get ${key}() { return ${key} }, `;\r\n      } else if (ctx.bindingMetadata[key] === \"setup-let\") {\r\n        const setArg = key === \"v\" ? `_v` : `v`;\r\n        returned += `get ${key}() { return ${key} }, set ${key}(${setArg}) { ${key} = ${setArg} }, `;\r\n      } else {\r\n        returned += `${key}, `;\r\n      }\r\n    }\r\n    returned = returned.replace(/, $/, \"\") + ` }`;\r\n  } else {\r\n    if (sfc.template && !sfc.template.src) {\r\n      if (options.templateOptions && options.templateOptions.ssr) {\r\n        hasInlinedSsrRenderFn = true;\r\n      }\r\n      const { code, ast, preamble, tips, errors } = compileTemplate(__spreadProps(__spreadValues({\r\n        filename,\r\n        source: sfc.template.content,\r\n        inMap: sfc.template.map\r\n      }, options.templateOptions), {\r\n        id: scopeId,\r\n        scoped: sfc.styles.some((s) => s.scoped),\r\n        isProd: options.isProd,\r\n        ssrCssVars: sfc.cssVars,\r\n        compilerOptions: __spreadProps(__spreadValues({}, options.templateOptions && options.templateOptions.compilerOptions), {\r\n          inline: true,\r\n          isTS: ctx.isTS,\r\n          bindingMetadata: ctx.bindingMetadata\r\n        })\r\n      }));\r\n      if (tips.length) {\r\n        tips.forEach(warnOnce$4);\r\n      }\r\n      const err = errors[0];\r\n      if (typeof err === \"string\") {\r\n        throw new Error(err);\r\n      } else if (err) {\r\n        if (err.loc) {\r\n          err.message += `\r\n\r\n` + sfc.filename + \"\\n\" + generateCodeFrame(\r\n            source,\r\n            err.loc.start.offset,\r\n            err.loc.end.offset\r\n          ) + `\r\n`;\r\n        }\r\n        throw err;\r\n      }\r\n      if (preamble) {\r\n        ctx.s.prepend(preamble);\r\n      }\r\n      if (ast && ast.helpers.has(UNREF)) {\r\n        ctx.helperImports.delete(\"unref\");\r\n      }\r\n      returned = code;\r\n    } else {\r\n      returned = `() => {}`;\r\n    }\r\n  }\r\n  if (!options.inlineTemplate && true) {\r\n    ctx.s.appendRight(\r\n      endOffset,\r\n      `\r\nconst __returned__ = ${returned}\r\nObject.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })\r\nreturn __returned__\r\n}\r\n\r\n`\r\n    );\r\n  } else {\r\n    ctx.s.appendRight(endOffset, `\r\nreturn ${returned}\r\n}\r\n\r\n`);\r\n  }\r\n  const genDefaultAs = options.genDefaultAs ? `const ${options.genDefaultAs} =` : `export default`;\r\n  let runtimeOptions = ``;\r\n  if (!ctx.hasDefaultExportName && filename && filename !== DEFAULT_FILENAME) {\r\n    const match = filename.match(/([^/\\\\]+)\\.\\w+$/);\r\n    if (match) {\r\n      runtimeOptions += `\r\n  __name: '${match[1]}',`;\r\n    }\r\n  }\r\n  if (hasInlinedSsrRenderFn) {\r\n    runtimeOptions += `\r\n  __ssrInlineRender: true,`;\r\n  }\r\n  const propsDecl = genRuntimeProps(ctx);\r\n  if (propsDecl)\r\n    runtimeOptions += `\r\n  props: ${propsDecl},`;\r\n  const emitsDecl = genRuntimeEmits(ctx);\r\n  if (emitsDecl)\r\n    runtimeOptions += `\r\n  emits: ${emitsDecl},`;\r\n  let definedOptions = \"\";\r\n  if (ctx.optionsRuntimeDecl) {\r\n    definedOptions = scriptSetup.content.slice(ctx.optionsRuntimeDecl.start, ctx.optionsRuntimeDecl.end).trim();\r\n  }\r\n  const exposeCall = ctx.hasDefineExposeCall || options.inlineTemplate ? `` : `  __expose();\r\n`;\r\n  if (ctx.isTS) {\r\n    const def = (defaultExport ? `\r\n  ...${normalScriptDefaultVar},` : ``) + (definedOptions ? `\r\n  ...${definedOptions},` : \"\");\r\n    ctx.s.prependLeft(\r\n      startOffset,\r\n      `\r\n${genDefaultAs} /*#__PURE__*/${ctx.helper(\r\n        `defineComponent`\r\n      )}({${def}${runtimeOptions}\r\n  ${hasAwait ? `async ` : ``}setup(${args}) {\r\n${exposeCall}`\r\n    );\r\n    ctx.s.appendRight(endOffset, `})`);\r\n  } else {\r\n    if (defaultExport || definedOptions) {\r\n      ctx.s.prependLeft(\r\n        startOffset,\r\n        `\r\n${genDefaultAs} /*#__PURE__*/Object.assign(${defaultExport ? `${normalScriptDefaultVar}, ` : \"\"}${definedOptions ? `${definedOptions}, ` : \"\"}{${runtimeOptions}\r\n  ${hasAwait ? `async ` : ``}setup(${args}) {\r\n${exposeCall}`\r\n      );\r\n      ctx.s.appendRight(endOffset, `})`);\r\n    } else {\r\n      ctx.s.prependLeft(\r\n        startOffset,\r\n        `\r\n${genDefaultAs} {${runtimeOptions}\r\n  ${hasAwait ? `async ` : ``}setup(${args}) {\r\n${exposeCall}`\r\n      );\r\n      ctx.s.appendRight(endOffset, `}`);\r\n    }\r\n  }\r\n  if (ctx.helperImports.size > 0) {\r\n    ctx.s.prepend(\r\n      `import { ${[...ctx.helperImports].map((h) => `${h} as _${h}`).join(\", \")} } from 'vue'\r\n`\r\n    );\r\n  }\r\n  ctx.s.trim();\r\n  return __spreadProps(__spreadValues({}, scriptSetup), {\r\n    bindings: ctx.bindingMetadata,\r\n    imports: ctx.userImports,\r\n    content: ctx.s.toString(),\r\n    map: options.sourceMap !== false ? ctx.s.generateMap({\r\n      source: filename,\r\n      hires: true,\r\n      includeContent: true\r\n    }) : void 0,\r\n    scriptAst: scriptAst == null ? void 0 : scriptAst.body,\r\n    scriptSetupAst: scriptSetupAst == null ? void 0 : scriptSetupAst.body,\r\n    deps: ctx.deps ? [...ctx.deps] : void 0\r\n  });\r\n}\r\nfunction registerBinding(bindings, node, type) {\r\n  bindings[node.name] = type;\r\n}\r\nfunction walkDeclaration(from, node, bindings, userImportAliases, hoistStatic) {\r\n  let isAllLiteral = false;\r\n  if (node.type === \"VariableDeclaration\") {\r\n    const isConst = node.kind === \"const\";\r\n    isAllLiteral = isConst && node.declarations.every(\r\n      (decl) => decl.id.type === \"Identifier\" && isStaticNode(decl.init)\r\n    );\r\n    for (const { id, init: _init } of node.declarations) {\r\n      const init = _init && unwrapTSNode(_init);\r\n      const isDefineCall = !!(isConst && isCallOf(\r\n        init,\r\n        (c) => c === DEFINE_PROPS || c === DEFINE_EMITS || c === WITH_DEFAULTS\r\n      ));\r\n      if (id.type === \"Identifier\") {\r\n        let bindingType;\r\n        const userReactiveBinding = userImportAliases[\"reactive\"];\r\n        if ((hoistStatic || from === \"script\") && (isAllLiteral || isConst && isStaticNode(init))) {\r\n          bindingType = \"literal-const\";\r\n        } else if (isCallOf(init, userReactiveBinding)) {\r\n          bindingType = isConst ? \"setup-reactive-const\" : \"setup-let\";\r\n        } else if (\r\n          // if a declaration is a const literal, we can mark it so that\r\n          // the generated render fn code doesn't need to unref() it\r\n          isDefineCall || isConst && canNeverBeRef(init, userReactiveBinding)\r\n        ) {\r\n          bindingType = isCallOf(init, DEFINE_PROPS) ? \"setup-reactive-const\" : \"setup-const\";\r\n        } else if (isConst) {\r\n          if (isCallOf(\r\n            init,\r\n            (m) => m === userImportAliases[\"ref\"] || m === userImportAliases[\"computed\"] || m === userImportAliases[\"shallowRef\"] || m === userImportAliases[\"customRef\"] || m === userImportAliases[\"toRef\"] || m === DEFINE_MODEL\r\n          )) {\r\n            bindingType = \"setup-ref\";\r\n          } else {\r\n            bindingType = \"setup-maybe-ref\";\r\n          }\r\n        } else {\r\n          bindingType = \"setup-let\";\r\n        }\r\n        registerBinding(bindings, id, bindingType);\r\n      } else {\r\n        if (isCallOf(init, DEFINE_PROPS)) {\r\n          continue;\r\n        }\r\n        if (id.type === \"ObjectPattern\") {\r\n          walkObjectPattern(id, bindings, isConst, isDefineCall);\r\n        } else if (id.type === \"ArrayPattern\") {\r\n          walkArrayPattern(id, bindings, isConst, isDefineCall);\r\n        }\r\n      }\r\n    }\r\n  } else if (node.type === \"TSEnumDeclaration\") {\r\n    isAllLiteral = node.members.every(\r\n      (member) => !member.initializer || isStaticNode(member.initializer)\r\n    );\r\n    bindings[node.id.name] = isAllLiteral ? \"literal-const\" : \"setup-const\";\r\n  } else if (node.type === \"FunctionDeclaration\" || node.type === \"ClassDeclaration\") {\r\n    bindings[node.id.name] = \"setup-const\";\r\n  }\r\n  return isAllLiteral;\r\n}\r\nfunction walkObjectPattern(node, bindings, isConst, isDefineCall = false) {\r\n  for (const p of node.properties) {\r\n    if (p.type === \"ObjectProperty\") {\r\n      if (p.key.type === \"Identifier\" && p.key === p.value) {\r\n        const type = isDefineCall ? \"setup-const\" : isConst ? \"setup-maybe-ref\" : \"setup-let\";\r\n        registerBinding(bindings, p.key, type);\r\n      } else {\r\n        walkPattern(p.value, bindings, isConst, isDefineCall);\r\n      }\r\n    } else {\r\n      const type = isConst ? \"setup-const\" : \"setup-let\";\r\n      registerBinding(bindings, p.argument, type);\r\n    }\r\n  }\r\n}\r\nfunction walkArrayPattern(node, bindings, isConst, isDefineCall = false) {\r\n  for (const e of node.elements) {\r\n    e && walkPattern(e, bindings, isConst, isDefineCall);\r\n  }\r\n}\r\nfunction walkPattern(node, bindings, isConst, isDefineCall = false) {\r\n  if (node.type === \"Identifier\") {\r\n    const type = isDefineCall ? \"setup-const\" : isConst ? \"setup-maybe-ref\" : \"setup-let\";\r\n    registerBinding(bindings, node, type);\r\n  } else if (node.type === \"RestElement\") {\r\n    const type = isConst ? \"setup-const\" : \"setup-let\";\r\n    registerBinding(bindings, node.argument, type);\r\n  } else if (node.type === \"ObjectPattern\") {\r\n    walkObjectPattern(node, bindings, isConst);\r\n  } else if (node.type === \"ArrayPattern\") {\r\n    walkArrayPattern(node, bindings, isConst);\r\n  } else if (node.type === \"AssignmentPattern\") {\r\n    if (node.left.type === \"Identifier\") {\r\n      const type = isDefineCall ? \"setup-const\" : isConst ? \"setup-maybe-ref\" : \"setup-let\";\r\n      registerBinding(bindings, node.left, type);\r\n    } else {\r\n      walkPattern(node.left, bindings, isConst);\r\n    }\r\n  }\r\n}\r\nfunction canNeverBeRef(node, userReactiveImport) {\r\n  if (isCallOf(node, userReactiveImport)) {\r\n    return true;\r\n  }\r\n  switch (node.type) {\r\n    case \"UnaryExpression\":\r\n    case \"BinaryExpression\":\r\n    case \"ArrayExpression\":\r\n    case \"ObjectExpression\":\r\n    case \"FunctionExpression\":\r\n    case \"ArrowFunctionExpression\":\r\n    case \"UpdateExpression\":\r\n    case \"ClassExpression\":\r\n    case \"TaggedTemplateExpression\":\r\n      return true;\r\n    case \"SequenceExpression\":\r\n      return canNeverBeRef(\r\n        node.expressions[node.expressions.length - 1],\r\n        userReactiveImport\r\n      );\r\n    default:\r\n      if (isLiteralNode(node)) {\r\n        return true;\r\n      }\r\n      return false;\r\n  }\r\n}\r\nfunction isStaticNode(node) {\r\n  node = unwrapTSNode(node);\r\n  switch (node.type) {\r\n    case \"UnaryExpression\":\r\n      return isStaticNode(node.argument);\r\n    case \"LogicalExpression\":\r\n    case \"BinaryExpression\":\r\n      return isStaticNode(node.left) && isStaticNode(node.right);\r\n    case \"ConditionalExpression\": {\r\n      return isStaticNode(node.test) && isStaticNode(node.consequent) && isStaticNode(node.alternate);\r\n    }\r\n    case \"SequenceExpression\":\r\n    case \"TemplateLiteral\":\r\n      return node.expressions.every((expr) => isStaticNode(expr));\r\n    case \"ParenthesizedExpression\":\r\n      return isStaticNode(node.expression);\r\n    case \"StringLiteral\":\r\n    case \"NumericLiteral\":\r\n    case \"BooleanLiteral\":\r\n    case \"NullLiteral\":\r\n    case \"BigIntLiteral\":\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst version = \"3.3.4\";\r\nconst walk = walk$1;\r\n\r\nexport { MagicString, parse_1$1 as babelParse, compileScript, compileStyle, compileStyleAsync, compileTemplate, extractIdentifiers, generateCodeFrame, inferRuntimeType, invalidateTypeCache, isInDestructureAssignment, isStaticProperty, parse$7 as parse, parseCache, registerTS, resolveTypeElements, rewriteDefault, rewriteDefaultAST, shouldTransform as shouldTransformRef, transform as transformRef, transformAST as transformRefAST, version, walk, walkIdentifiers };\r\n", "export * from '@vue/compiler-sfc'\r\n\r\nimport './register-ts.js'\r\n", "if (typeof require !== 'undefined') {\r\n  try {\r\n    require('@vue/compiler-sfc').registerTS(require('typescript'))\r\n  } catch (e) {}\r\n}\r\n", "var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\r\n\r\nfunction getDefaultExportFromCjs (x) {\r\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\r\n}\r\n\r\nfunction getAugmentedNamespace(n) {\r\n  if (n.__esModule) return n;\r\n  var f = n.default;\r\n\tif (typeof f == \"function\") {\r\n\t\tvar a = function a () {\r\n\t\t\tif (this instanceof a) {\r\n\t\t\t\tvar args = [null];\r\n\t\t\t\targs.push.apply(args, arguments);\r\n\t\t\t\tvar Ctor = Function.bind.apply(f, args);\r\n\t\t\t\treturn new Ctor();\r\n\t\t\t}\r\n\t\t\treturn f.apply(this, arguments);\r\n\t\t};\r\n\t\ta.prototype = f.prototype;\r\n  } else a = {};\r\n  Object.defineProperty(a, '__esModule', {value: true});\r\n\tObject.keys(n).forEach(function (k) {\r\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\r\n\t\tObject.defineProperty(a, k, d.get ? d : {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\treturn n[k];\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn a;\r\n}\r\n\r\nexport { getAugmentedNamespace as a, commonjsGlobal as c, getDefaultExportFromCjs as g };\r\n", "// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\r\n// https://tools.ietf.org/html/rfc1951\r\n// You may also wish to take a look at the guide I made about this program:\r\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\r\n// Some of the following code is similar to that of UZIP.js:\r\n// https://github.com/photopea/UZIP.js\r\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\r\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\r\n// is better for memory in most engines (I *think*).\r\n\r\n// aliases for shorter compressed code (most minifers don't do this)\r\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\r\n// fixed length extra bits\r\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\r\n// fixed distance extra bits\r\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\r\n// code length index map\r\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\r\n// get base, reverse index map from extra bits\r\nvar freb = function (eb, start) {\r\n    var b = new u16(31);\r\n    for (var i = 0; i < 31; ++i) {\r\n        b[i] = start += 1 << eb[i - 1];\r\n    }\r\n    // numbers here are at max 18 bits\r\n    var r = new i32(b[30]);\r\n    for (var i = 1; i < 30; ++i) {\r\n        for (var j = b[i]; j < b[i + 1]; ++j) {\r\n            r[j] = ((j - b[i]) << 5) | i;\r\n        }\r\n    }\r\n    return { b: b, r: r };\r\n};\r\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\r\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\r\nfl[28] = 258, revfl[258] = 28;\r\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\r\n// map of value to reverse (assuming 16 bits)\r\nvar rev = new u16(32768);\r\nfor (var i = 0; i < 32768; ++i) {\r\n    // reverse table algorithm from SO\r\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\r\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\r\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\r\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\r\n}\r\n// create huffman tree from u8 \"map\": index -> code length for code index\r\n// mb (max bits) must be at most 15\r\n// TODO: optimize/split up?\r\nvar hMap = (function (cd, mb, r) {\r\n    var s = cd.length;\r\n    // index\r\n    var i = 0;\r\n    // u16 \"map\": index -> # of codes with bit length = index\r\n    var l = new u16(mb);\r\n    // length of cd must be 288 (total # of codes)\r\n    for (; i < s; ++i) {\r\n        if (cd[i])\r\n            ++l[cd[i] - 1];\r\n    }\r\n    // u16 \"map\": index -> minimum code for bit length = index\r\n    var le = new u16(mb);\r\n    for (i = 1; i < mb; ++i) {\r\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\r\n    }\r\n    var co;\r\n    if (r) {\r\n        // u16 \"map\": index -> number of actual bits, symbol for code\r\n        co = new u16(1 << mb);\r\n        // bits to remove for reverser\r\n        var rvb = 15 - mb;\r\n        for (i = 0; i < s; ++i) {\r\n            // ignore 0 lengths\r\n            if (cd[i]) {\r\n                // num encoding both symbol and bits read\r\n                var sv = (i << 4) | cd[i];\r\n                // free bits\r\n                var r_1 = mb - cd[i];\r\n                // start value\r\n                var v = le[cd[i] - 1]++ << r_1;\r\n                // m is end value\r\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\r\n                    // every 16 bit value starting with the code yields the same result\r\n                    co[rev[v] >> rvb] = sv;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        co = new u16(s);\r\n        for (i = 0; i < s; ++i) {\r\n            if (cd[i]) {\r\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\r\n            }\r\n        }\r\n    }\r\n    return co;\r\n});\r\n// fixed length tree\r\nvar flt = new u8(288);\r\nfor (var i = 0; i < 144; ++i)\r\n    flt[i] = 8;\r\nfor (var i = 144; i < 256; ++i)\r\n    flt[i] = 9;\r\nfor (var i = 256; i < 280; ++i)\r\n    flt[i] = 7;\r\nfor (var i = 280; i < 288; ++i)\r\n    flt[i] = 8;\r\n// fixed distance tree\r\nvar fdt = new u8(32);\r\nfor (var i = 0; i < 32; ++i)\r\n    fdt[i] = 5;\r\n// fixed length map\r\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\r\n// fixed distance map\r\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\r\n// find max of array\r\nvar max = function (a) {\r\n    var m = a[0];\r\n    for (var i = 1; i < a.length; ++i) {\r\n        if (a[i] > m)\r\n            m = a[i];\r\n    }\r\n    return m;\r\n};\r\n// read d, starting at bit p and mask with m\r\nvar bits = function (d, p, m) {\r\n    var o = (p / 8) | 0;\r\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\r\n};\r\n// read d, starting at bit p continuing for at least 16 bits\r\nvar bits16 = function (d, p) {\r\n    var o = (p / 8) | 0;\r\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\r\n};\r\n// get end of byte\r\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\r\n// typed array slice - allows garbage collector to free original reference,\r\n// while being more compatible than .slice\r\nvar slc = function (v, s, e) {\r\n    if (s == null || s < 0)\r\n        s = 0;\r\n    if (e == null || e > v.length)\r\n        e = v.length;\r\n    // can't use .constructor in case user-supplied\r\n    var n = new u8(e - s);\r\n    n.set(v.subarray(s, e));\r\n    return n;\r\n};\r\n// error codes\r\nvar ec = [\r\n    'unexpected EOF',\r\n    'invalid block type',\r\n    'invalid length/literal',\r\n    'invalid distance',\r\n    'stream finished',\r\n    'no stream handler',\r\n    ,\r\n    'no callback',\r\n    'invalid UTF-8 data',\r\n    'extra field too long',\r\n    'date not in range 1980-2099',\r\n    'filename too long',\r\n    'stream finishing',\r\n    'invalid zip data'\r\n    // determined by unknown compression method\r\n];\r\nvar err = function (ind, msg, nt) {\r\n    var e = new Error(msg || ec[ind]);\r\n    e.code = ind;\r\n    if (Error.captureStackTrace)\r\n        Error.captureStackTrace(e, err);\r\n    if (!nt)\r\n        throw e;\r\n    return e;\r\n};\r\n// expands raw DEFLATE data\r\nvar inflt = function (dat, st, buf, dict) {\r\n    // source length       dict length\r\n    var sl = dat.length, dl = dict ? dict.length : 0;\r\n    if (!sl || st.f && !st.l)\r\n        return buf || new u8(0);\r\n    // have to estimate size\r\n    var noBuf = !buf || st.i != 2;\r\n    // no state\r\n    var noSt = st.i;\r\n    // Assumes roughly 33% compression ratio average\r\n    if (!buf)\r\n        buf = new u8(sl * 3);\r\n    // ensure buffer can fit at least l elements\r\n    var cbuf = function (l) {\r\n        var bl = buf.length;\r\n        // need to increase size to fit\r\n        if (l > bl) {\r\n            // Double or set to necessary, whichever is greater\r\n            var nbuf = new u8(Math.max(bl * 2, l));\r\n            nbuf.set(buf);\r\n            buf = nbuf;\r\n        }\r\n    };\r\n    //  last chunk         bitpos           bytes\r\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\r\n    // total bits\r\n    var tbts = sl * 8;\r\n    do {\r\n        if (!lm) {\r\n            // BFINAL - this is only 1 when last chunk is next\r\n            final = bits(dat, pos, 1);\r\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\r\n            var type = bits(dat, pos + 1, 3);\r\n            pos += 3;\r\n            if (!type) {\r\n                // go to end of byte boundary\r\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\r\n                if (t > sl) {\r\n                    if (noSt)\r\n                        err(0);\r\n                    break;\r\n                }\r\n                // ensure size\r\n                if (noBuf)\r\n                    cbuf(bt + l);\r\n                // Copy over uncompressed data\r\n                buf.set(dat.subarray(s, t), bt);\r\n                // Get new bitpos, update byte count\r\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\r\n                continue;\r\n            }\r\n            else if (type == 1)\r\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\r\n            else if (type == 2) {\r\n                //  literal                            lengths\r\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\r\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\r\n                pos += 14;\r\n                // length+distance tree\r\n                var ldt = new u8(tl);\r\n                // code length tree\r\n                var clt = new u8(19);\r\n                for (var i = 0; i < hcLen; ++i) {\r\n                    // use index map to get real code\r\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\r\n                }\r\n                pos += hcLen * 3;\r\n                // code lengths bits\r\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\r\n                // code lengths map\r\n                var clm = hMap(clt, clb, 1);\r\n                for (var i = 0; i < tl;) {\r\n                    var r = clm[bits(dat, pos, clbmsk)];\r\n                    // bits read\r\n                    pos += r & 15;\r\n                    // symbol\r\n                    var s = r >> 4;\r\n                    // code length to copy\r\n                    if (s < 16) {\r\n                        ldt[i++] = s;\r\n                    }\r\n                    else {\r\n                        //  copy   count\r\n                        var c = 0, n = 0;\r\n                        if (s == 16)\r\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\r\n                        else if (s == 17)\r\n                            n = 3 + bits(dat, pos, 7), pos += 3;\r\n                        else if (s == 18)\r\n                            n = 11 + bits(dat, pos, 127), pos += 7;\r\n                        while (n--)\r\n                            ldt[i++] = c;\r\n                    }\r\n                }\r\n                //    length tree                 distance tree\r\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\r\n                // max length bits\r\n                lbt = max(lt);\r\n                // max dist bits\r\n                dbt = max(dt);\r\n                lm = hMap(lt, lbt, 1);\r\n                dm = hMap(dt, dbt, 1);\r\n            }\r\n            else\r\n                err(1);\r\n            if (pos > tbts) {\r\n                if (noSt)\r\n                    err(0);\r\n                break;\r\n            }\r\n        }\r\n        // Make sure the buffer can hold this + the largest possible addition\r\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\r\n        if (noBuf)\r\n            cbuf(bt + 131072);\r\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\r\n        var lpos = pos;\r\n        for (;; lpos = pos) {\r\n            // bits read, code\r\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\r\n            pos += c & 15;\r\n            if (pos > tbts) {\r\n                if (noSt)\r\n                    err(0);\r\n                break;\r\n            }\r\n            if (!c)\r\n                err(2);\r\n            if (sym < 256)\r\n                buf[bt++] = sym;\r\n            else if (sym == 256) {\r\n                lpos = pos, lm = null;\r\n                break;\r\n            }\r\n            else {\r\n                var add = sym - 254;\r\n                // no extra bits needed if less\r\n                if (sym > 264) {\r\n                    // index\r\n                    var i = sym - 257, b = fleb[i];\r\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\r\n                    pos += b;\r\n                }\r\n                // dist\r\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\r\n                if (!d)\r\n                    err(3);\r\n                pos += d & 15;\r\n                var dt = fd[dsym];\r\n                if (dsym > 3) {\r\n                    var b = fdeb[dsym];\r\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\r\n                }\r\n                if (pos > tbts) {\r\n                    if (noSt)\r\n                        err(0);\r\n                    break;\r\n                }\r\n                if (noBuf)\r\n                    cbuf(bt + 131072);\r\n                var end = bt + add;\r\n                if (bt < dt) {\r\n                    var shift = dl - dt, dend = Math.min(dt, end);\r\n                    if (shift + bt < 0)\r\n                        err(3);\r\n                    for (; bt < dend; ++bt)\r\n                        buf[bt] = dict[shift + bt];\r\n                }\r\n                for (; bt < end; bt += 4) {\r\n                    buf[bt] = buf[bt - dt];\r\n                    buf[bt + 1] = buf[bt + 1 - dt];\r\n                    buf[bt + 2] = buf[bt + 2 - dt];\r\n                    buf[bt + 3] = buf[bt + 3 - dt];\r\n                }\r\n                bt = end;\r\n            }\r\n        }\r\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\r\n        if (lm)\r\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\r\n    } while (!final);\r\n    return bt == buf.length ? buf : slc(buf, 0, bt);\r\n};\r\n// starting at p, write the minimum number of bits that can hold v to d\r\nvar wbits = function (d, p, v) {\r\n    v <<= p & 7;\r\n    var o = (p / 8) | 0;\r\n    d[o] |= v;\r\n    d[o + 1] |= v >> 8;\r\n};\r\n// starting at p, write the minimum number of bits (>8) that can hold v to d\r\nvar wbits16 = function (d, p, v) {\r\n    v <<= p & 7;\r\n    var o = (p / 8) | 0;\r\n    d[o] |= v;\r\n    d[o + 1] |= v >> 8;\r\n    d[o + 2] |= v >> 16;\r\n};\r\n// creates code lengths from a frequency table\r\nvar hTree = function (d, mb) {\r\n    // Need extra info to make a tree\r\n    var t = [];\r\n    for (var i = 0; i < d.length; ++i) {\r\n        if (d[i])\r\n            t.push({ s: i, f: d[i] });\r\n    }\r\n    var s = t.length;\r\n    var t2 = t.slice();\r\n    if (!s)\r\n        return { t: et, l: 0 };\r\n    if (s == 1) {\r\n        var v = new u8(t[0].s + 1);\r\n        v[t[0].s] = 1;\r\n        return { t: v, l: 1 };\r\n    }\r\n    t.sort(function (a, b) { return a.f - b.f; });\r\n    // after i2 reaches last ind, will be stopped\r\n    // freq must be greater than largest possible number of symbols\r\n    t.push({ s: -1, f: 25001 });\r\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\r\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\r\n    // efficient algorithm from UZIP.js\r\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\r\n    // symbols that combined have high freq, will start processing i2 (high-freq,\r\n    // non-composite) symbols instead\r\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\r\n    while (i1 != s - 1) {\r\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\r\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\r\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\r\n    }\r\n    var maxSym = t2[0].s;\r\n    for (var i = 1; i < s; ++i) {\r\n        if (t2[i].s > maxSym)\r\n            maxSym = t2[i].s;\r\n    }\r\n    // code lengths\r\n    var tr = new u16(maxSym + 1);\r\n    // max bits in tree\r\n    var mbt = ln(t[i1 - 1], tr, 0);\r\n    if (mbt > mb) {\r\n        // more algorithms from UZIP.js\r\n        // TODO: find out how this code works (debt)\r\n        //  ind    debt\r\n        var i = 0, dt = 0;\r\n        //    left            cost\r\n        var lft = mbt - mb, cst = 1 << lft;\r\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\r\n        for (; i < s; ++i) {\r\n            var i2_1 = t2[i].s;\r\n            if (tr[i2_1] > mb) {\r\n                dt += cst - (1 << (mbt - tr[i2_1]));\r\n                tr[i2_1] = mb;\r\n            }\r\n            else\r\n                break;\r\n        }\r\n        dt >>= lft;\r\n        while (dt > 0) {\r\n            var i2_2 = t2[i].s;\r\n            if (tr[i2_2] < mb)\r\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\r\n            else\r\n                ++i;\r\n        }\r\n        for (; i >= 0 && dt; --i) {\r\n            var i2_3 = t2[i].s;\r\n            if (tr[i2_3] == mb) {\r\n                --tr[i2_3];\r\n                ++dt;\r\n            }\r\n        }\r\n        mbt = mb;\r\n    }\r\n    return { t: new u8(tr), l: mbt };\r\n};\r\n// get the max length and assign length codes\r\nvar ln = function (n, l, d) {\r\n    return n.s == -1\r\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\r\n        : (l[n.s] = d);\r\n};\r\n// length codes generation\r\nvar lc = function (c) {\r\n    var s = c.length;\r\n    // Note that the semicolon was intentional\r\n    while (s && !c[--s])\r\n        ;\r\n    var cl = new u16(++s);\r\n    //  ind      num         streak\r\n    var cli = 0, cln = c[0], cls = 1;\r\n    var w = function (v) { cl[cli++] = v; };\r\n    for (var i = 1; i <= s; ++i) {\r\n        if (c[i] == cln && i != s)\r\n            ++cls;\r\n        else {\r\n            if (!cln && cls > 2) {\r\n                for (; cls > 138; cls -= 138)\r\n                    w(32754);\r\n                if (cls > 2) {\r\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\r\n                    cls = 0;\r\n                }\r\n            }\r\n            else if (cls > 3) {\r\n                w(cln), --cls;\r\n                for (; cls > 6; cls -= 6)\r\n                    w(8304);\r\n                if (cls > 2)\r\n                    w(((cls - 3) << 5) | 8208), cls = 0;\r\n            }\r\n            while (cls--)\r\n                w(cln);\r\n            cls = 1;\r\n            cln = c[i];\r\n        }\r\n    }\r\n    return { c: cl.subarray(0, cli), n: s };\r\n};\r\n// calculate the length of output from tree, code lengths\r\nvar clen = function (cf, cl) {\r\n    var l = 0;\r\n    for (var i = 0; i < cl.length; ++i)\r\n        l += cf[i] * cl[i];\r\n    return l;\r\n};\r\n// writes a fixed block\r\n// returns the new bit pos\r\nvar wfblk = function (out, pos, dat) {\r\n    // no need to write 00 as type: TypedArray defaults to 0\r\n    var s = dat.length;\r\n    var o = shft(pos + 2);\r\n    out[o] = s & 255;\r\n    out[o + 1] = s >> 8;\r\n    out[o + 2] = out[o] ^ 255;\r\n    out[o + 3] = out[o + 1] ^ 255;\r\n    for (var i = 0; i < s; ++i)\r\n        out[o + i + 4] = dat[i];\r\n    return (o + 4 + s) * 8;\r\n};\r\n// writes a block\r\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\r\n    wbits(out, p++, final);\r\n    ++lf[256];\r\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\r\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\r\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\r\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\r\n    var lcfreq = new u16(19);\r\n    for (var i = 0; i < lclt.length; ++i)\r\n        ++lcfreq[lclt[i] & 31];\r\n    for (var i = 0; i < lcdt.length; ++i)\r\n        ++lcfreq[lcdt[i] & 31];\r\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\r\n    var nlcc = 19;\r\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\r\n        ;\r\n    var flen = (bl + 5) << 3;\r\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\r\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\r\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\r\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\r\n    var lm, ll, dm, dl;\r\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\r\n    if (dtlen < ftlen) {\r\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\r\n        var llm = hMap(lct, mlcb, 0);\r\n        wbits(out, p, nlc - 257);\r\n        wbits(out, p + 5, ndc - 1);\r\n        wbits(out, p + 10, nlcc - 4);\r\n        p += 14;\r\n        for (var i = 0; i < nlcc; ++i)\r\n            wbits(out, p + 3 * i, lct[clim[i]]);\r\n        p += 3 * nlcc;\r\n        var lcts = [lclt, lcdt];\r\n        for (var it = 0; it < 2; ++it) {\r\n            var clct = lcts[it];\r\n            for (var i = 0; i < clct.length; ++i) {\r\n                var len = clct[i] & 31;\r\n                wbits(out, p, llm[len]), p += lct[len];\r\n                if (len > 15)\r\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\r\n    }\r\n    for (var i = 0; i < li; ++i) {\r\n        var sym = syms[i];\r\n        if (sym > 255) {\r\n            var len = (sym >> 18) & 31;\r\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\r\n            if (len > 7)\r\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\r\n            var dst = sym & 31;\r\n            wbits16(out, p, dm[dst]), p += dl[dst];\r\n            if (dst > 3)\r\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\r\n        }\r\n        else {\r\n            wbits16(out, p, lm[sym]), p += ll[sym];\r\n        }\r\n    }\r\n    wbits16(out, p, lm[256]);\r\n    return p + ll[256];\r\n};\r\n// deflate options (nice << 13) | chain\r\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\r\n// empty\r\nvar et = /*#__PURE__*/ new u8(0);\r\n// compresses data into a raw DEFLATE buffer\r\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\r\n    var s = st.z || dat.length;\r\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\r\n    // writing to this writes to the output buffer\r\n    var w = o.subarray(pre, o.length - post);\r\n    var lst = st.l;\r\n    var pos = (st.r || 0) & 7;\r\n    if (lvl) {\r\n        if (pos)\r\n            w[0] = st.r >> 3;\r\n        var opt = deo[lvl - 1];\r\n        var n = opt >> 13, c = opt & 8191;\r\n        var msk_1 = (1 << plvl) - 1;\r\n        //    prev 2-byte val map    curr 2-byte val map\r\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\r\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\r\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\r\n        // 24576 is an arbitrary number of maximum symbols per block\r\n        // 424 buffer for last block\r\n        var syms = new i32(25000);\r\n        // length/literal freq   distance freq\r\n        var lf = new u16(288), df = new u16(32);\r\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\r\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\r\n        for (; i + 2 < s; ++i) {\r\n            // hash value\r\n            var hv = hsh(i);\r\n            // index mod 32768    previous index mod\r\n            var imod = i & 32767, pimod = head[hv];\r\n            prev[imod] = pimod;\r\n            head[hv] = imod;\r\n            // We always should modify head and prev, but only add symbols if\r\n            // this data is not yet processed (\"wait\" for wait index)\r\n            if (wi <= i) {\r\n                // bytes remaining\r\n                var rem = s - i;\r\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\r\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\r\n                    li = lc_1 = eb = 0, bs = i;\r\n                    for (var j = 0; j < 286; ++j)\r\n                        lf[j] = 0;\r\n                    for (var j = 0; j < 30; ++j)\r\n                        df[j] = 0;\r\n                }\r\n                //  len    dist   chain\r\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\r\n                if (rem > 2 && hv == hsh(i - dif)) {\r\n                    var maxn = Math.min(n, rem) - 1;\r\n                    var maxd = Math.min(32767, i);\r\n                    // max possible length\r\n                    // not capped at dif because decompressors implement \"rolling\" index population\r\n                    var ml = Math.min(258, rem);\r\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\r\n                        if (dat[i + l] == dat[i + l - dif]) {\r\n                            var nl = 0;\r\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\r\n                                ;\r\n                            if (nl > l) {\r\n                                l = nl, d = dif;\r\n                                // break out early when we reach \"nice\" (we are satisfied enough)\r\n                                if (nl > maxn)\r\n                                    break;\r\n                                // now, find the rarest 2-byte sequence within this\r\n                                // length of literals and search for that instead.\r\n                                // Much faster than just using the start\r\n                                var mmd = Math.min(dif, nl - 2);\r\n                                var md = 0;\r\n                                for (var j = 0; j < mmd; ++j) {\r\n                                    var ti = i - dif + j & 32767;\r\n                                    var pti = prev[ti];\r\n                                    var cd = ti - pti & 32767;\r\n                                    if (cd > md)\r\n                                        md = cd, pimod = ti;\r\n                                }\r\n                            }\r\n                        }\r\n                        // check the previous match\r\n                        imod = pimod, pimod = prev[imod];\r\n                        dif += imod - pimod & 32767;\r\n                    }\r\n                }\r\n                // d will be nonzero only when a match was found\r\n                if (d) {\r\n                    // store both dist and len data in one int32\r\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\r\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\r\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\r\n                    eb += fleb[lin] + fdeb[din];\r\n                    ++lf[257 + lin];\r\n                    ++df[din];\r\n                    wi = i + l;\r\n                    ++lc_1;\r\n                }\r\n                else {\r\n                    syms[li++] = dat[i];\r\n                    ++lf[dat[i]];\r\n                }\r\n            }\r\n        }\r\n        for (i = Math.max(i, wi); i < s; ++i) {\r\n            syms[li++] = dat[i];\r\n            ++lf[dat[i]];\r\n        }\r\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\r\n        if (!lst) {\r\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\r\n            // shft(pos) now 1 less if pos & 7 != 0\r\n            pos -= 7;\r\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\r\n        }\r\n    }\r\n    else {\r\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\r\n            // end\r\n            var e = i + 65535;\r\n            if (e >= s) {\r\n                // write final block\r\n                w[(pos / 8) | 0] = lst;\r\n                e = s;\r\n            }\r\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\r\n        }\r\n        st.i = s;\r\n    }\r\n    return slc(o, 0, pre + shft(pos) + post);\r\n};\r\n// Adler32\r\nvar adler = function () {\r\n    var a = 1, b = 0;\r\n    return {\r\n        p: function (d) {\r\n            // closures have awful performance\r\n            var n = a, m = b;\r\n            var l = d.length | 0;\r\n            for (var i = 0; i != l;) {\r\n                var e = Math.min(i + 2655, l);\r\n                for (; i < e; ++i)\r\n                    m += n += d[i];\r\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\r\n            }\r\n            a = n, b = m;\r\n        },\r\n        d: function () {\r\n            a %= 65521, b %= 65521;\r\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\r\n        }\r\n    };\r\n};\r\n// deflate with opts\r\nvar dopt = function (dat, opt, pre, post, st) {\r\n    if (!st) {\r\n        st = { l: 1 };\r\n        if (opt.dictionary) {\r\n            var dict = opt.dictionary.subarray(-32768);\r\n            var newDat = new u8(dict.length + dat.length);\r\n            newDat.set(dict);\r\n            newDat.set(dat, dict.length);\r\n            dat = newDat;\r\n            st.w = dict.length;\r\n        }\r\n    }\r\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, st);\r\n};\r\n// write bytes\r\nvar wbytes = function (d, b, v) {\r\n    for (; v; ++b)\r\n        d[b] = v, v >>>= 8;\r\n};\r\n// zlib header\r\nvar zlh = function (c, o) {\r\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\r\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\r\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\r\n    if (o.dictionary) {\r\n        var h = adler();\r\n        h.p(o.dictionary);\r\n        wbytes(c, 2, h.d());\r\n    }\r\n};\r\n// zlib start\r\nvar zls = function (d, dict) {\r\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\r\n        err(6, 'invalid zlib data');\r\n    if ((d[1] >> 5 & 1) == +!dict)\r\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\r\n    return (d[1] >> 3 & 4) + 2;\r\n};\r\n/**\r\n * Compress data with Zlib\r\n * @param data The data to compress\r\n * @param opts The compression options\r\n * @returns The zlib-compressed version of the data\r\n */\r\nfunction zlibSync(data, opts) {\r\n    if (!opts)\r\n        opts = {};\r\n    var a = adler();\r\n    a.p(data);\r\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\r\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\r\n}\r\n/**\r\n * Expands Zlib data\r\n * @param data The data to decompress\r\n * @param opts The decompression options\r\n * @returns The decompressed version of the data\r\n */\r\nfunction unzlibSync(data, opts) {\r\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\r\n}\r\n// text encoder\r\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\r\n// text decoder\r\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\r\n// text decoder stream\r\nvar tds = 0;\r\ntry {\r\n    td.decode(et, { stream: true });\r\n    tds = 1;\r\n}\r\ncatch (e) { }\r\n// decode UTF8\r\nvar dutf8 = function (d) {\r\n    for (var r = '', i = 0;;) {\r\n        var c = d[i++];\r\n        var eb = (c > 127) + (c > 223) + (c > 239);\r\n        if (i + eb > d.length)\r\n            return { s: r, r: slc(d, i - 1) };\r\n        if (!eb)\r\n            r += String.fromCharCode(c);\r\n        else if (eb == 3) {\r\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\r\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\r\n        }\r\n        else if (eb & 1)\r\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\r\n        else\r\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\r\n    }\r\n};\r\n/**\r\n * Converts a string into a Uint8Array for use with compression/decompression methods\r\n * @param str The string to encode\r\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\r\n *               not need to be true unless decoding a binary string.\r\n * @returns The string encoded in UTF-8/Latin-1 binary\r\n */\r\nfunction strToU8(str, latin1) {\r\n    if (latin1) {\r\n        var ar_1 = new u8(str.length);\r\n        for (var i = 0; i < str.length; ++i)\r\n            ar_1[i] = str.charCodeAt(i);\r\n        return ar_1;\r\n    }\r\n    if (te)\r\n        return te.encode(str);\r\n    var l = str.length;\r\n    var ar = new u8(str.length + (str.length >> 1));\r\n    var ai = 0;\r\n    var w = function (v) { ar[ai++] = v; };\r\n    for (var i = 0; i < l; ++i) {\r\n        if (ai + 5 > ar.length) {\r\n            var n = new u8(ai + 8 + ((l - i) << 1));\r\n            n.set(ar);\r\n            ar = n;\r\n        }\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128 || latin1)\r\n            w(c);\r\n        else if (c < 2048)\r\n            w(192 | (c >> 6)), w(128 | (c & 63));\r\n        else if (c > 55295 && c < 57344)\r\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\r\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\r\n        else\r\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\r\n    }\r\n    return slc(ar, 0, ai);\r\n}\r\n/**\r\n * Converts a Uint8Array to a string\r\n * @param dat The data to decode to string\r\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\r\n *               not need to be true unless encoding to binary string.\r\n * @returns The original UTF-8/Latin-1 string\r\n */\r\nfunction strFromU8(dat, latin1) {\r\n    if (latin1) {\r\n        var r = '';\r\n        for (var i = 0; i < dat.length; i += 16384)\r\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\r\n        return r;\r\n    }\r\n    else if (td) {\r\n        return td.decode(dat);\r\n    }\r\n    else {\r\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\r\n        if (r.length)\r\n            err(8);\r\n        return s;\r\n    }\r\n}\r\n\r\nfunction debounce(fn, n = 100) {\r\n  let handle;\r\n  return (...args) => {\r\n    if (handle)\r\n      clearTimeout(handle);\r\n    handle = setTimeout(() => {\r\n      fn(...args);\r\n    }, n);\r\n  };\r\n}\r\nfunction utoa(data) {\r\n  const buffer = strToU8(data);\r\n  const zipped = zlibSync(buffer, { level: 9 });\r\n  const binary = strFromU8(zipped, true);\r\n  return btoa(binary);\r\n}\r\nfunction atou(base64) {\r\n  const binary = atob(base64);\r\n  if (binary.startsWith(\"xÚ\")) {\r\n    const buffer = strToU8(binary, true);\r\n    const unzipped = unzlibSync(buffer);\r\n    return strFromU8(unzipped);\r\n  }\r\n  return decodeURIComponent(escape(binary));\r\n}\r\n\r\nexport { atou as a, debounce as d, utoa as u };\r\n", "import { defineComponent, computed, ref, inject, reactive, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, renderSlot, withModifiers, toDisplayString, watch, createBlock, Transition, withCtx, createCommentVNode, onMounted, onUnmounted, watchEffect, Fragment, withDirectives, vShow, createVNode, renderList, unref, version, withKeys, vModelText, pushScopeId, popScopeId, useModel, provide, toRef } from 'vue';\r\nimport * as defaultCompiler from 'vue/compiler-sfc';\r\nimport { MagicString, babelParse, extractIdentifiers, walkIdentifiers, isStaticProperty, isInDestructureAssignment, walk } from 'vue/compiler-sfc';\r\nimport { c as commonjsGlobal, g as getDefaultExportFromCjs } from './chunks/_commonjsHelpers-24198af3.js';\r\nimport { a as atou, u as utoa, d as debounce } from './chunks/utils-a5e1dbae.js';\r\n\r\nconst _hoisted_1$5 = [\"onMousedown\"];\r\nconst _sfc_main$7 = /* @__PURE__ */ defineComponent({\r\n  __name: \"SplitPane\",\r\n  props: {\r\n    layout: {}\r\n  },\r\n  setup(__props) {\r\n    const props = __props;\r\n    const isVertical = computed(() => props.layout === \"vertical\");\r\n    const container = ref();\r\n    const store = inject(\"store\");\r\n    const showOutput = ref(store.initialShowOutput);\r\n    const state = reactive({\r\n      dragging: false,\r\n      split: 50\r\n    });\r\n    const boundSplit = computed(() => {\r\n      const { split } = state;\r\n      return split < 20 ? 20 : split > 80 ? 80 : split;\r\n    });\r\n    let startPosition = 0;\r\n    let startSplit = 0;\r\n    function dragStart(e) {\r\n      state.dragging = true;\r\n      startPosition = isVertical.value ? e.pageY : e.pageX;\r\n      startSplit = boundSplit.value;\r\n    }\r\n    function dragMove(e) {\r\n      if (state.dragging) {\r\n        const position = isVertical.value ? e.pageY : e.pageX;\r\n        const totalSize = isVertical.value ? container.value.offsetHeight : container.value.offsetWidth;\r\n        const dp = position - startPosition;\r\n        state.split = startSplit + ~~(dp / totalSize * 100);\r\n      }\r\n    }\r\n    function dragEnd() {\r\n      state.dragging = false;\r\n    }\r\n    return (_ctx, _cache) => {\r\n      return openBlock(), createElementBlock(\"div\", {\r\n        ref_key: \"container\",\r\n        ref: container,\r\n        class: normalizeClass([\"split-pane\", {\r\n          dragging: state.dragging,\r\n          \"show-output\": showOutput.value,\r\n          vertical: isVertical.value\r\n        }]),\r\n        onMousemove: dragMove,\r\n        onMouseup: dragEnd,\r\n        onMouseleave: dragEnd\r\n      }, [\r\n        createElementVNode(\"div\", {\r\n          class: \"left\",\r\n          style: normalizeStyle({ [isVertical.value ? \"height\" : \"width\"]: boundSplit.value + \"%\" })\r\n        }, [\r\n          renderSlot(_ctx.$slots, \"left\", {}, void 0, true),\r\n          createElementVNode(\"div\", {\r\n            class: \"dragger\",\r\n            onMousedown: withModifiers(dragStart, [\"prevent\"])\r\n          }, null, 40, _hoisted_1$5)\r\n        ], 4),\r\n        createElementVNode(\"div\", {\r\n          class: \"right\",\r\n          style: normalizeStyle({ [isVertical.value ? \"height\" : \"width\"]: 100 - boundSplit.value + \"%\" })\r\n        }, [\r\n          renderSlot(_ctx.$slots, \"right\", {}, void 0, true)\r\n        ], 4),\r\n        createElementVNode(\"button\", {\r\n          class: \"toggler\",\r\n          onClick: _cache[0] || (_cache[0] = ($event) => showOutput.value = !showOutput.value)\r\n        }, toDisplayString(showOutput.value ? \"< Code\" : \"Output >\"), 1)\r\n      ], 34);\r\n    };\r\n  }\r\n});\r\n\r\nconst SplitPane_vue_vue_type_style_index_0_scoped_b004c5a4_lang = '';\r\n\r\nconst _export_sfc = (sfc, props) => {\r\n  const target = sfc.__vccOpts || sfc;\r\n  for (const [key, val] of props) {\r\n    target[key] = val;\r\n  }\r\n  return target;\r\n};\r\n\r\nconst SplitPane = /* @__PURE__ */ _export_sfc(_sfc_main$7, [[\"__scopeId\", \"data-v-b004c5a4\"]]);\r\n\r\nconst _sfc_main$6 = /* @__PURE__ */ defineComponent({\r\n  __name: \"Message\",\r\n  props: [\"err\", \"warn\"],\r\n  setup(__props) {\r\n    const props = __props;\r\n    const dismissed = ref(false);\r\n    watch(\r\n      () => [props.err, props.warn],\r\n      () => {\r\n        dismissed.value = false;\r\n      }\r\n    );\r\n    function formatMessage(err) {\r\n      if (typeof err === \"string\") {\r\n        return err;\r\n      } else {\r\n        let msg = err.message;\r\n        const loc = err.loc;\r\n        if (loc && loc.start) {\r\n          msg = `(${loc.start.line}:${loc.start.column}) ` + msg;\r\n        }\r\n        return msg;\r\n      }\r\n    }\r\n    return (_ctx, _cache) => {\r\n      return openBlock(), createBlock(Transition, { name: \"fade\" }, {\r\n        default: withCtx(() => [\r\n          !dismissed.value && (__props.err || __props.warn) ? (openBlock(), createElementBlock(\"div\", {\r\n            key: 0,\r\n            class: normalizeClass([\"msg\", __props.err ? \"err\" : \"warn\"])\r\n          }, [\r\n            createElementVNode(\"pre\", null, toDisplayString(formatMessage(__props.err || __props.warn)), 1),\r\n            createElementVNode(\"button\", {\r\n              class: \"dismiss\",\r\n              onClick: _cache[0] || (_cache[0] = ($event) => dismissed.value = true)\r\n            }, \"✕\")\r\n          ], 2)) : createCommentVNode(\"\", true)\r\n        ]),\r\n        _: 1\r\n      });\r\n    };\r\n  }\r\n});\r\n\r\nconst Message_vue_vue_type_style_index_0_scoped_92411507_lang = '';\r\n\r\nconst Message = /* @__PURE__ */ _export_sfc(_sfc_main$6, [[\"__scopeId\", \"data-v-92411507\"]]);\r\n\r\nconst srcdoc = \"<!DOCTYPE html>\\n<html>\\n  <head>\\n    <style>\\n      body {\\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\\n          Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\n      }\\n    </style>\\n    <!-- PREVIEW-OPTIONS-HEAD-HTML -->\\n    <script>\\n      ;(() => {\\n        let scriptEls = []\\n\\n        window.process = { env: {} }\\n        window.__modules__ = {}\\n\\n        window.__export__ = (mod, key, get) => {\\n          Object.defineProperty(mod, key, {\\n            enumerable: true,\\n            configurable: true,\\n            get,\\n          })\\n        }\\n\\n        window.__dynamic_import__ = (key) => {\\n          return Promise.resolve(window.__modules__[key])\\n        }\\n\\n        async function handle_message(ev) {\\n          let { action, cmd_id } = ev.data\\n          const send_message = (payload) =>\\n            parent.postMessage({ ...payload }, ev.origin)\\n          const send_reply = (payload) => send_message({ ...payload, cmd_id })\\n          const send_ok = () => send_reply({ action: 'cmd_ok' })\\n          const send_error = (message, stack) =>\\n            send_reply({ action: 'cmd_error', message, stack })\\n\\n          if (action === 'eval') {\\n            try {\\n              if (scriptEls.length) {\\n                scriptEls.forEach((el) => {\\n                  document.head.removeChild(el)\\n                })\\n                scriptEls.length = 0\\n              }\\n\\n              let { script: scripts } = ev.data.args\\n              if (typeof scripts === 'string') scripts = [scripts]\\n\\n              for (const script of scripts) {\\n                const scriptEl = document.createElement('script')\\n                scriptEl.setAttribute('type', 'module')\\n                // send ok in the module script to ensure sequential evaluation\\n                // of multiple proxy.eval() calls\\n                const done = new Promise((resolve) => {\\n                  window.__next__ = resolve\\n                })\\n                scriptEl.innerHTML = script + `\\\\nwindow.__next__()`\\n                document.head.appendChild(scriptEl)\\n                scriptEl.onerror = (err) => send_error(err.message, err.stack)\\n                scriptEls.push(scriptEl)\\n                await done\\n              }\\n              send_ok()\\n            } catch (e) {\\n              send_error(e.message, e.stack)\\n            }\\n          }\\n\\n          if (action === 'catch_clicks') {\\n            try {\\n              const top_origin = ev.origin\\n              document.body.addEventListener('click', (event) => {\\n                if (event.which !== 1) return\\n                if (event.metaKey || event.ctrlKey || event.shiftKey) return\\n                if (event.defaultPrevented) return\\n\\n                // ensure target is a link\\n                let el = event.target\\n                while (el && el.nodeName !== 'A') el = el.parentNode\\n                if (!el || el.nodeName !== 'A') return\\n\\n                if (\\n                  el.hasAttribute('download') ||\\n                  el.getAttribute('rel') === 'external' ||\\n                  el.target ||\\n                  el.href.startsWith('javascript:')\\n                )\\n                  return\\n\\n                event.preventDefault()\\n\\n                if (el.href.startsWith(top_origin)) {\\n                  const url = new URL(el.href)\\n                  if (url.hash[0] === '#') {\\n                    window.location.hash = url.hash\\n                    return\\n                  }\\n                }\\n\\n                window.open(el.href, '_blank')\\n              })\\n              send_ok()\\n            } catch (e) {\\n              send_error(e.message, e.stack)\\n            }\\n          }\\n        }\\n\\n        window.addEventListener('message', handle_message, false)\\n\\n        window.onerror = function (msg, url, lineNo, columnNo, error) {\\n          // ignore errors from import map polyfill - these are necessary for\\n          // it to detect browser support\\n          if (msg.includes('module specifier “vue”')) {\\n            // firefox only error, ignore\\n            return false\\n          }\\n          if (msg.includes(\\\"Module specifier, 'vue\\\")) {\\n            // Safari only\\n            return false\\n          }\\n          try {\\n            parent.postMessage({ action: 'error', value: error }, '*')\\n          } catch (e) {\\n            parent.postMessage({ action: 'error', value: msg }, '*')\\n          }\\n        }\\n\\n        window.addEventListener('unhandledrejection', (event) => {\\n          if (\\n            event.reason.message &&\\n            event.reason.message.includes('Cross-origin')\\n          ) {\\n            event.preventDefault()\\n            return\\n          }\\n          try {\\n            parent.postMessage(\\n              { action: 'unhandledrejection', value: event.reason },\\n              '*'\\n            )\\n          } catch (e) {\\n            parent.postMessage(\\n              { action: 'unhandledrejection', value: event.reason.message },\\n              '*'\\n            )\\n          }\\n        })\\n\\n        let previous = { level: null, args: null }\\n\\n        ;['clear', 'log', 'info', 'dir', 'warn', 'error', 'table'].forEach(\\n          (level) => {\\n            const original = console[level]\\n            console[level] = (...args) => {\\n              const msg = args[0]\\n              if (typeof msg === 'string') {\\n                if (\\n                  msg.includes('You are running a development build of Vue') ||\\n                  msg.includes('You are running the esm-bundler build of Vue')\\n                ) {\\n                  return\\n                }\\n              }\\n\\n              original(...args)\\n\\n              const stringifiedArgs = stringify(args)\\n              if (\\n                previous.level === level &&\\n                previous.args &&\\n                previous.args === stringifiedArgs\\n              ) {\\n                parent.postMessage(\\n                  { action: 'console', level, duplicate: true },\\n                  '*'\\n                )\\n              } else {\\n                previous = { level, args: stringifiedArgs }\\n\\n                try {\\n                  parent.postMessage({ action: 'console', level, args }, '*')\\n                } catch (err) {\\n                  parent.postMessage(\\n                    { action: 'console', level, args: args.map(toString) },\\n                    '*'\\n                  )\\n                }\\n              }\\n            }\\n          }\\n        )\\n        ;[\\n          { method: 'group', action: 'console_group' },\\n          { method: 'groupEnd', action: 'console_group_end' },\\n          { method: 'groupCollapsed', action: 'console_group_collapsed' },\\n        ].forEach((group_action) => {\\n          const original = console[group_action.method]\\n          console[group_action.method] = (label) => {\\n            parent.postMessage({ action: group_action.action, label }, '*')\\n\\n            original(label)\\n          }\\n        })\\n\\n        const timers = new Map()\\n        const original_time = console.time\\n        const original_timelog = console.timeLog\\n        const original_timeend = console.timeEnd\\n\\n        console.time = (label = 'default') => {\\n          original_time(label)\\n          timers.set(label, performance.now())\\n        }\\n        console.timeLog = (label = 'default') => {\\n          original_timelog(label)\\n          const now = performance.now()\\n          if (timers.has(label)) {\\n            parent.postMessage(\\n              {\\n                action: 'console',\\n                level: 'system-log',\\n                args: [`${label}: ${now - timers.get(label)}ms`],\\n              },\\n              '*'\\n            )\\n          } else {\\n            parent.postMessage(\\n              {\\n                action: 'console',\\n                level: 'system-warn',\\n                args: [`Timer '${label}' does not exist`],\\n              },\\n              '*'\\n            )\\n          }\\n        }\\n        console.timeEnd = (label = 'default') => {\\n          original_timeend(label)\\n          const now = performance.now()\\n          if (timers.has(label)) {\\n            parent.postMessage(\\n              {\\n                action: 'console',\\n                level: 'system-log',\\n                args: [`${label}: ${now - timers.get(label)}ms`],\\n              },\\n              '*'\\n            )\\n          } else {\\n            parent.postMessage(\\n              {\\n                action: 'console',\\n                level: 'system-warn',\\n                args: [`Timer '${label}' does not exist`],\\n              },\\n              '*'\\n            )\\n          }\\n          timers.delete(label)\\n        }\\n\\n        const original_assert = console.assert\\n        console.assert = (condition, ...args) => {\\n          if (condition) {\\n            const stack = new Error().stack\\n            parent.postMessage(\\n              { action: 'console', level: 'assert', args, stack },\\n              '*'\\n            )\\n          }\\n          original_assert(condition, ...args)\\n        }\\n\\n        const counter = new Map()\\n        const original_count = console.count\\n        const original_countreset = console.countReset\\n\\n        console.count = (label = 'default') => {\\n          counter.set(label, (counter.get(label) || 0) + 1)\\n          parent.postMessage(\\n            {\\n              action: 'console',\\n              level: 'system-log',\\n              args: `${label}: ${counter.get(label)}`,\\n            },\\n            '*'\\n          )\\n          original_count(label)\\n        }\\n\\n        console.countReset = (label = 'default') => {\\n          if (counter.has(label)) {\\n            counter.set(label, 0)\\n          } else {\\n            parent.postMessage(\\n              {\\n                action: 'console',\\n                level: 'system-warn',\\n                args: `Count for '${label}' does not exist`,\\n              },\\n              '*'\\n            )\\n          }\\n          original_countreset(label)\\n        }\\n\\n        const original_trace = console.trace\\n\\n        console.trace = (...args) => {\\n          const stack = new Error().stack\\n          parent.postMessage(\\n            { action: 'console', level: 'trace', args, stack },\\n            '*'\\n          )\\n          original_trace(...args)\\n        }\\n\\n        function toString(value) {\\n          if (value instanceof Error) {\\n            return value.message\\n          }\\n          for (const fn of [\\n            String,\\n            (v) => Object.prototype.toString.call(v),\\n            (v) => typeof v,\\n          ]) {\\n            try {\\n              return fn(value)\\n            } catch (err) {}\\n          }\\n        }\\n\\n        function isComponentProxy(value) {\\n          return (\\n            value &&\\n            typeof value === 'object' &&\\n            value.__v_skip === true &&\\n            typeof value.$nextTick === 'function' &&\\n            value.$ &&\\n            value._\\n          )\\n        }\\n\\n        function stringify(args) {\\n          try {\\n            return JSON.stringify(args, (key, value) => {\\n              return isComponentProxy(value) ? '{component proxy}' : value\\n            })\\n          } catch (error) {\\n            return null\\n          }\\n        }\\n      })()\\n    </script>\\n\\n    <!-- ES Module Shims: Import maps polyfill for modules browsers without import maps support (all except Chrome 89+) -->\\n    <script\\n      async\\n      src=\\\"https://cdn.jsdelivr.net/npm/es-module-shims@1.5.18/dist/es-module-shims.wasm.js\\\"\\n    ></script>\\n    <script type=\\\"importmap\\\">\\n      <!--IMPORT_MAP-->\\n    </script>\\n  </head>\\n  <body></body>\\n</html>\\n\";\r\n\r\nlet uid = 1;\r\nclass PreviewProxy {\r\n  constructor(iframe, handlers) {\r\n    this.iframe = iframe;\r\n    this.handlers = handlers;\r\n    this.pending_cmds = /* @__PURE__ */ new Map();\r\n    this.handle_event = (e) => this.handle_repl_message(e);\r\n    window.addEventListener(\"message\", this.handle_event, false);\r\n  }\r\n  destroy() {\r\n    window.removeEventListener(\"message\", this.handle_event);\r\n  }\r\n  iframe_command(action, args) {\r\n    return new Promise((resolve, reject) => {\r\n      const cmd_id = uid++;\r\n      this.pending_cmds.set(cmd_id, { resolve, reject });\r\n      this.iframe.contentWindow.postMessage({ action, cmd_id, args }, \"*\");\r\n    });\r\n  }\r\n  handle_command_message(cmd_data) {\r\n    let action = cmd_data.action;\r\n    let id = cmd_data.cmd_id;\r\n    let handler = this.pending_cmds.get(id);\r\n    if (handler) {\r\n      this.pending_cmds.delete(id);\r\n      if (action === \"cmd_error\") {\r\n        let { message, stack } = cmd_data;\r\n        let e = new Error(message);\r\n        e.stack = stack;\r\n        handler.reject(e);\r\n      }\r\n      if (action === \"cmd_ok\") {\r\n        handler.resolve(cmd_data.args);\r\n      }\r\n    } else if (action !== \"cmd_error\" && action !== \"cmd_ok\") {\r\n      console.error(\"command not found\", id, cmd_data, [\r\n        ...this.pending_cmds.keys()\r\n      ]);\r\n    }\r\n  }\r\n  handle_repl_message(event) {\r\n    if (event.source !== this.iframe.contentWindow)\r\n      return;\r\n    const { action, args } = event.data;\r\n    switch (action) {\r\n      case \"cmd_error\":\r\n      case \"cmd_ok\":\r\n        return this.handle_command_message(event.data);\r\n      case \"fetch_progress\":\r\n        return this.handlers.on_fetch_progress(args.remaining);\r\n      case \"error\":\r\n        return this.handlers.on_error(event.data);\r\n      case \"unhandledrejection\":\r\n        return this.handlers.on_unhandled_rejection(event.data);\r\n      case \"console\":\r\n        return this.handlers.on_console(event.data);\r\n      case \"console_group\":\r\n        return this.handlers.on_console_group(event.data);\r\n      case \"console_group_collapsed\":\r\n        return this.handlers.on_console_group_collapsed(event.data);\r\n      case \"console_group_end\":\r\n        return this.handlers.on_console_group_end(event.data);\r\n    }\r\n  }\r\n  eval(script) {\r\n    return this.iframe_command(\"eval\", { script });\r\n  }\r\n  handle_links() {\r\n    return this.iframe_command(\"catch_clicks\", {});\r\n  }\r\n}\r\n\r\nfunction compileModulesForPreview(store, isSSR = false) {\r\n  const seen = /* @__PURE__ */ new Set();\r\n  const processed = [];\r\n  processFile(\r\n    store,\r\n    store.state.files[store.state.mainFile],\r\n    processed,\r\n    seen,\r\n    isSSR\r\n  );\r\n  if (!isSSR) {\r\n    for (const filename in store.state.files) {\r\n      if (filename.endsWith(\".css\")) {\r\n        const file = store.state.files[filename];\r\n        if (!seen.has(file)) {\r\n          processed.push(\r\n            `\r\nwindow.__css__.push(${JSON.stringify(file.compiled.css)})`\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return processed;\r\n}\r\nconst modulesKey = `__modules__`;\r\nconst exportKey = `__export__`;\r\nconst dynamicImportKey = `__dynamic_import__`;\r\nconst moduleKey = `__module__`;\r\nfunction processFile(store, file, processed, seen, isSSR) {\r\n  if (seen.has(file)) {\r\n    return [];\r\n  }\r\n  seen.add(file);\r\n  if (!isSSR && file.filename.endsWith(\".html\")) {\r\n    return processHtmlFile(store, file.code, file.filename, processed, seen);\r\n  }\r\n  let {\r\n    code: js,\r\n    importedFiles,\r\n    hasDynamicImport\r\n  } = processModule(\r\n    store,\r\n    isSSR ? file.compiled.ssr : file.compiled.js,\r\n    file.filename\r\n  );\r\n  processChildFiles(\r\n    store,\r\n    importedFiles,\r\n    hasDynamicImport,\r\n    processed,\r\n    seen,\r\n    isSSR\r\n  );\r\n  if (file.compiled.css && !isSSR) {\r\n    js += `\r\nwindow.__css__.push(${JSON.stringify(file.compiled.css)})`;\r\n  }\r\n  processed.push(js);\r\n}\r\nfunction processChildFiles(store, importedFiles, hasDynamicImport, processed, seen, isSSR) {\r\n  if (hasDynamicImport) {\r\n    for (const file of Object.values(store.state.files)) {\r\n      if (seen.has(file))\r\n        continue;\r\n      processFile(store, file, processed, seen, isSSR);\r\n    }\r\n  } else if (importedFiles.size > 0) {\r\n    for (const imported of importedFiles) {\r\n      processFile(store, store.state.files[imported], processed, seen, isSSR);\r\n    }\r\n  }\r\n}\r\nfunction processModule(store, src, filename) {\r\n  const s = new MagicString(src);\r\n  const ast = babelParse(src, {\r\n    sourceFilename: filename,\r\n    sourceType: \"module\"\r\n  }).program.body;\r\n  const idToImportMap = /* @__PURE__ */ new Map();\r\n  const declaredConst = /* @__PURE__ */ new Set();\r\n  const importedFiles = /* @__PURE__ */ new Set();\r\n  const importToIdMap = /* @__PURE__ */ new Map();\r\n  function resolveImport(raw) {\r\n    const files = store.state.files;\r\n    let resolved = raw;\r\n    const file = files[resolved] || files[resolved = raw + \".ts\"] || files[resolved = raw + \".js\"];\r\n    return file ? resolved : void 0;\r\n  }\r\n  function defineImport(node, source) {\r\n    const filename2 = resolveImport(source.replace(/^\\.\\/+/, \"src/\"));\r\n    if (!filename2) {\r\n      throw new Error(`File \"${source}\" does not exist.`);\r\n    }\r\n    if (importedFiles.has(filename2)) {\r\n      return importToIdMap.get(filename2);\r\n    }\r\n    importedFiles.add(filename2);\r\n    const id = `__import_${importedFiles.size}__`;\r\n    importToIdMap.set(filename2, id);\r\n    s.appendLeft(\r\n      node.start,\r\n      `const ${id} = ${modulesKey}[${JSON.stringify(filename2)}]\r\n`\r\n    );\r\n    return id;\r\n  }\r\n  function defineExport(name, local = name) {\r\n    s.append(`\r\n${exportKey}(${moduleKey}, \"${name}\", () => ${local})`);\r\n  }\r\n  s.prepend(\r\n    `const ${moduleKey} = ${modulesKey}[${JSON.stringify(\r\n      filename\r\n    )}] = { [Symbol.toStringTag]: \"Module\" }\r\n\r\n`\r\n  );\r\n  for (const node of ast) {\r\n    if (node.type === \"ImportDeclaration\") {\r\n      const source = node.source.value;\r\n      if (source.startsWith(\"./\")) {\r\n        const importId = defineImport(node, node.source.value);\r\n        for (const spec of node.specifiers) {\r\n          if (spec.type === \"ImportSpecifier\") {\r\n            idToImportMap.set(\r\n              spec.local.name,\r\n              `${importId}.${spec.imported.name}`\r\n            );\r\n          } else if (spec.type === \"ImportDefaultSpecifier\") {\r\n            idToImportMap.set(spec.local.name, `${importId}.default`);\r\n          } else {\r\n            idToImportMap.set(spec.local.name, importId);\r\n          }\r\n        }\r\n        s.remove(node.start, node.end);\r\n      }\r\n    }\r\n  }\r\n  for (const node of ast) {\r\n    if (node.type === \"ExportNamedDeclaration\") {\r\n      if (node.declaration) {\r\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\r\n          defineExport(node.declaration.id.name);\r\n        } else if (node.declaration.type === \"VariableDeclaration\") {\r\n          for (const decl of node.declaration.declarations) {\r\n            for (const id of extractIdentifiers(decl.id)) {\r\n              defineExport(id.name);\r\n            }\r\n          }\r\n        }\r\n        s.remove(node.start, node.declaration.start);\r\n      } else if (node.source) {\r\n        const importId = defineImport(node, node.source.value);\r\n        for (const spec of node.specifiers) {\r\n          defineExport(\r\n            spec.exported.name,\r\n            `${importId}.${spec.local.name}`\r\n          );\r\n        }\r\n        s.remove(node.start, node.end);\r\n      } else {\r\n        for (const spec of node.specifiers) {\r\n          const local = spec.local.name;\r\n          const binding = idToImportMap.get(local);\r\n          defineExport(spec.exported.name, binding || local);\r\n        }\r\n        s.remove(node.start, node.end);\r\n      }\r\n    }\r\n    if (node.type === \"ExportDefaultDeclaration\") {\r\n      if (\"id\" in node.declaration && node.declaration.id) {\r\n        const { name } = node.declaration.id;\r\n        s.remove(node.start, node.start + 15);\r\n        s.append(`\r\n${exportKey}(${moduleKey}, \"default\", () => ${name})`);\r\n      } else {\r\n        s.overwrite(node.start, node.start + 14, `${moduleKey}.default =`);\r\n      }\r\n    }\r\n    if (node.type === \"ExportAllDeclaration\") {\r\n      const importId = defineImport(node, node.source.value);\r\n      s.remove(node.start, node.end);\r\n      s.append(`\r\nfor (const key in ${importId}) {\r\n        if (key !== 'default') {\r\n          ${exportKey}(${moduleKey}, key, () => ${importId}[key])\r\n        }\r\n      }`);\r\n    }\r\n  }\r\n  for (const node of ast) {\r\n    if (node.type === \"ImportDeclaration\")\r\n      continue;\r\n    walkIdentifiers(node, (id, parent, parentStack) => {\r\n      const binding = idToImportMap.get(id.name);\r\n      if (!binding) {\r\n        return;\r\n      }\r\n      if (isStaticProperty(parent) && parent.shorthand) {\r\n        if (!parent.inPattern || isInDestructureAssignment(parent, parentStack)) {\r\n          s.appendLeft(id.end, `: ${binding}`);\r\n        }\r\n      } else if (parent.type === \"ClassDeclaration\" && id === parent.superClass) {\r\n        if (!declaredConst.has(id.name)) {\r\n          declaredConst.add(id.name);\r\n          const topNode = parentStack[1];\r\n          s.prependRight(topNode.start, `const ${id.name} = ${binding};\r\n`);\r\n        }\r\n      } else {\r\n        s.overwrite(id.start, id.end, binding);\r\n      }\r\n    });\r\n  }\r\n  let hasDynamicImport = false;\r\n  walk(ast, {\r\n    enter(node, parent) {\r\n      if (node.type === \"Import\" && parent.type === \"CallExpression\") {\r\n        const arg = parent.arguments[0];\r\n        if (arg.type === \"StringLiteral\" && arg.value.startsWith(\"./\")) {\r\n          hasDynamicImport = true;\r\n          s.overwrite(node.start, node.start + 6, dynamicImportKey);\r\n          s.overwrite(\r\n            arg.start,\r\n            arg.end,\r\n            JSON.stringify(arg.value.replace(/^\\.\\/+/, \"\"))\r\n          );\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return {\r\n    code: s.toString(),\r\n    importedFiles,\r\n    hasDynamicImport\r\n  };\r\n}\r\nconst scriptRE = /<script\\b(?:\\s[^>]*>|>)([^]*?)<\\/script>/gi;\r\nconst scriptModuleRE = /<script\\b[^>]*type\\s*=\\s*(?:\"module\"|'module')[^>]*>([^]*?)<\\/script>/gi;\r\nfunction processHtmlFile(store, src, filename, processed, seen) {\r\n  const deps = [];\r\n  let jsCode = \"\";\r\n  const html = src.replace(scriptModuleRE, (_, content) => {\r\n    const { code, importedFiles, hasDynamicImport } = processModule(\r\n      store,\r\n      content,\r\n      filename\r\n    );\r\n    processChildFiles(\r\n      store,\r\n      importedFiles,\r\n      hasDynamicImport,\r\n      deps,\r\n      seen,\r\n      false\r\n    );\r\n    jsCode += \"\\n\" + code;\r\n    return \"\";\r\n  }).replace(scriptRE, (_, content) => {\r\n    jsCode += \"\\n\" + content;\r\n    return \"\";\r\n  });\r\n  processed.push(`document.body.innerHTML = ${JSON.stringify(html)}`);\r\n  processed.push(...deps);\r\n  processed.push(jsCode);\r\n}\r\n\r\nconst _sfc_main$5 = /* @__PURE__ */ defineComponent({\r\n  __name: \"Preview\",\r\n  props: {\r\n    show: { type: Boolean },\r\n    ssr: { type: Boolean }\r\n  },\r\n  setup(__props, { expose: __expose }) {\r\n    const props = __props;\r\n    const store = inject(\"store\");\r\n    const clearConsole = inject(\"clear-console\");\r\n    const previewOptions = inject(\"preview-options\");\r\n    const container = ref();\r\n    const runtimeError = ref();\r\n    const runtimeWarning = ref();\r\n    let sandbox;\r\n    let proxy;\r\n    let stopUpdateWatcher;\r\n    onMounted(createSandbox);\r\n    watch(\r\n      () => store.getImportMap(),\r\n      () => {\r\n        try {\r\n          createSandbox();\r\n        } catch (e) {\r\n          store.state.errors = [e];\r\n          return;\r\n        }\r\n      }\r\n    );\r\n    watch(() => store.state.resetFlip, createSandbox);\r\n    onUnmounted(() => {\r\n      proxy.destroy();\r\n      stopUpdateWatcher && stopUpdateWatcher();\r\n    });\r\n    function createSandbox() {\r\n      if (sandbox) {\r\n        proxy.destroy();\r\n        stopUpdateWatcher && stopUpdateWatcher();\r\n        container.value.removeChild(sandbox);\r\n      }\r\n      sandbox = document.createElement(\"iframe\");\r\n      sandbox.setAttribute(\r\n        \"sandbox\",\r\n        [\r\n          \"allow-forms\",\r\n          \"allow-modals\",\r\n          \"allow-pointer-lock\",\r\n          \"allow-popups\",\r\n          \"allow-same-origin\",\r\n          \"allow-scripts\",\r\n          \"allow-top-navigation-by-user-activation\"\r\n        ].join(\" \")\r\n      );\r\n      const importMap = store.getImportMap();\r\n      if (!importMap.imports) {\r\n        importMap.imports = {};\r\n      }\r\n      if (!importMap.imports.vue) {\r\n        importMap.imports.vue = store.state.vueRuntimeURL;\r\n      }\r\n      const sandboxSrc = srcdoc.replace(/<!--IMPORT_MAP-->/, JSON.stringify(importMap)).replace(\r\n        /<!-- PREVIEW-OPTIONS-HEAD-HTML -->/,\r\n        previewOptions?.headHTML || \"\"\r\n      );\r\n      sandbox.srcdoc = sandboxSrc;\r\n      container.value.appendChild(sandbox);\r\n      proxy = new PreviewProxy(sandbox, {\r\n        on_fetch_progress: (progress) => {\r\n        },\r\n        on_error: (event) => {\r\n          const msg = event.value instanceof Error ? event.value.message : event.value;\r\n          if (msg.includes(\"Failed to resolve module specifier\") || msg.includes(\"Error resolving module specifier\")) {\r\n            runtimeError.value = msg.replace(/\\. Relative references must.*$/, \"\") + `.\r\nTip: edit the \"Import Map\" tab to specify import paths for dependencies.`;\r\n          } else {\r\n            runtimeError.value = event.value;\r\n          }\r\n        },\r\n        on_unhandled_rejection: (event) => {\r\n          let error = event.value;\r\n          if (typeof error === \"string\") {\r\n            error = { message: error };\r\n          }\r\n          runtimeError.value = \"Uncaught (in promise): \" + error.message;\r\n        },\r\n        on_console: (log) => {\r\n          if (log.duplicate) {\r\n            return;\r\n          }\r\n          if (log.level === \"error\") {\r\n            if (log.args[0] instanceof Error) {\r\n              runtimeError.value = log.args[0].message;\r\n            } else {\r\n              runtimeError.value = log.args[0];\r\n            }\r\n          } else if (log.level === \"warn\") {\r\n            if (log.args[0].toString().includes(\"[Vue warn]\")) {\r\n              runtimeWarning.value = log.args.join(\"\").replace(/\\[Vue warn\\]:/, \"\").trim();\r\n            }\r\n          }\r\n        },\r\n        on_console_group: (action) => {\r\n        },\r\n        on_console_group_end: () => {\r\n        },\r\n        on_console_group_collapsed: (action) => {\r\n        }\r\n      });\r\n      sandbox.addEventListener(\"load\", () => {\r\n        proxy.handle_links();\r\n        stopUpdateWatcher = watchEffect(updatePreview);\r\n      });\r\n    }\r\n    async function updatePreview() {\r\n      if (clearConsole.value) {\r\n        console.clear();\r\n      }\r\n      runtimeError.value = null;\r\n      runtimeWarning.value = null;\r\n      let isSSR = props.ssr;\r\n      if (store.vueVersion) {\r\n        const [major, minor, patch] = store.vueVersion.split(\".\").map((v) => parseInt(v, 10));\r\n        if (major === 3 && (minor < 2 || minor === 2 && patch < 27)) {\r\n          alert(\r\n            `The selected version of Vue (${store.vueVersion}) does not support in-browser SSR. Rendering in client mode instead.`\r\n          );\r\n          isSSR = false;\r\n        }\r\n      }\r\n      try {\r\n        const mainFile = store.state.mainFile;\r\n        if (isSSR && mainFile.endsWith(\".vue\")) {\r\n          const ssrModules = compileModulesForPreview(store, true);\r\n          console.log(\r\n            `[@vue/repl] successfully compiled ${ssrModules.length} modules for SSR.`\r\n          );\r\n          await proxy.eval([\r\n            `const __modules__ = {};`,\r\n            ...ssrModules,\r\n            `import { renderToString as _renderToString } from 'vue/server-renderer'\r\n         import { createSSRApp as _createApp } from 'vue'\r\n         const AppComponent = __modules__[\"${mainFile}\"].default\r\n         AppComponent.name = 'Repl'\r\n         const app = _createApp(AppComponent)\r\n         if (!app.config.hasOwnProperty('unwrapInjectedRef')) {\r\n           app.config.unwrapInjectedRef = true\r\n         }\r\n         app.config.warnHandler = () => {}\r\n         window.__ssr_promise__ = _renderToString(app).then(html => {\r\n           document.body.innerHTML = '<div id=\"app\">' + html + '</div>' + \\`${previewOptions?.bodyHTML || \"\"}\\`\r\n         }).catch(err => {\r\n           console.error(\"SSR Error\", err)\r\n         })\r\n        `\r\n          ]);\r\n        }\r\n        const modules = compileModulesForPreview(store);\r\n        console.log(\r\n          `[@vue/repl] successfully compiled ${modules.length} module${modules.length > 1 ? `s` : ``}.`\r\n        );\r\n        const codeToEval = [\r\n          `window.__modules__ = {};window.__css__ = [];if (window.__app__) window.__app__.unmount();` + (isSSR ? `` : `document.body.innerHTML = '<div id=\"app\"></div>' + \\`${previewOptions?.bodyHTML || \"\"}\\``),\r\n          ...modules,\r\n          `setTimeout(()=> {\r\n        document.querySelectorAll('style[css]').forEach(el => el.remove())\r\n        document.head.insertAdjacentHTML('beforeend', window.__css__.map(s => \\`<style css>\\${s}</style>\\`).join('\\\\n'))\r\n      }, 1)`\r\n        ];\r\n        if (mainFile.endsWith(\".vue\")) {\r\n          codeToEval.push(\r\n            `import { ${isSSR ? `createSSRApp` : `createApp`} as _createApp } from \"vue\"\r\n        ${previewOptions?.customCode?.importCode || \"\"}\r\n        const _mount = () => {\r\n          const AppComponent = __modules__[\"${mainFile}\"].default\r\n          AppComponent.name = 'Repl'\r\n          const app = window.__app__ = _createApp(AppComponent)\r\n          if (!app.config.hasOwnProperty('unwrapInjectedRef')) {\r\n            app.config.unwrapInjectedRef = true\r\n          }\r\n          app.config.errorHandler = e => console.error(e)\r\n          ${previewOptions?.customCode?.useCode || \"\"}\r\n          app.mount('#app')\r\n        }\r\n        if (window.__ssr_promise__) {\r\n          window.__ssr_promise__.then(_mount)\r\n        } else {\r\n          _mount()\r\n        }`\r\n          );\r\n        }\r\n        await proxy.eval(codeToEval);\r\n      } catch (e) {\r\n        console.error(e);\r\n        runtimeError.value = e.message;\r\n      }\r\n    }\r\n    function reload() {\r\n      sandbox.contentWindow?.location.reload();\r\n    }\r\n    __expose({ reload });\r\n    return (_ctx, _cache) => {\r\n      return openBlock(), createElementBlock(Fragment, null, [\r\n        withDirectives(createElementVNode(\"div\", {\r\n          class: \"iframe-container\",\r\n          ref_key: \"container\",\r\n          ref: container\r\n        }, null, 512), [\r\n          [vShow, _ctx.show]\r\n        ]),\r\n        createVNode(Message, { err: runtimeError.value }, null, 8, [\"err\"]),\r\n        !runtimeError.value ? (openBlock(), createBlock(Message, {\r\n          key: 0,\r\n          warn: runtimeWarning.value\r\n        }, null, 8, [\"warn\"])) : createCommentVNode(\"\", true)\r\n      ], 64);\r\n    };\r\n  }\r\n});\r\n\r\nconst Preview_vue_vue_type_style_index_0_scoped_b9352b63_lang = '';\r\n\r\nconst Preview = /* @__PURE__ */ _export_sfc(_sfc_main$5, [[\"__scopeId\", \"data-v-b9352b63\"]]);\r\n\r\nconst _hoisted_1$4 = { class: \"tab-buttons\" };\r\nconst _hoisted_2$2 = [\"onClick\"];\r\nconst _hoisted_3$2 = { class: \"output-container\" };\r\nconst _sfc_main$4 = /* @__PURE__ */ defineComponent({\r\n  __name: \"Output\",\r\n  props: {\r\n    editorComponent: {},\r\n    showCompileOutput: { type: Boolean },\r\n    ssr: { type: Boolean }\r\n  },\r\n  setup(__props, { expose: __expose }) {\r\n    const props = __props;\r\n    const store = inject(\"store\");\r\n    const previewRef = ref();\r\n    const modes = computed(\r\n      () => props.showCompileOutput ? [\"preview\", \"js\", \"css\", \"ssr\"] : [\"preview\"]\r\n    );\r\n    const mode = ref(\r\n      modes.value.includes(store.initialOutputMode) ? store.initialOutputMode : \"preview\"\r\n    );\r\n    function reload() {\r\n      previewRef.value?.reload();\r\n    }\r\n    __expose({ reload });\r\n    return (_ctx, _cache) => {\r\n      return openBlock(), createElementBlock(Fragment, null, [\r\n        createElementVNode(\"div\", _hoisted_1$4, [\r\n          (openBlock(true), createElementBlock(Fragment, null, renderList(modes.value, (m) => {\r\n            return openBlock(), createElementBlock(\"button\", {\r\n              class: normalizeClass({ active: mode.value === m }),\r\n              onClick: ($event) => mode.value = m\r\n            }, [\r\n              createElementVNode(\"span\", null, toDisplayString(m), 1)\r\n            ], 10, _hoisted_2$2);\r\n          }), 256))\r\n        ]),\r\n        createElementVNode(\"div\", _hoisted_3$2, [\r\n          createVNode(Preview, {\r\n            ref_key: \"previewRef\",\r\n            ref: previewRef,\r\n            show: mode.value === \"preview\",\r\n            ssr: _ctx.ssr\r\n          }, null, 8, [\"show\", \"ssr\"]),\r\n          mode.value !== \"preview\" ? (openBlock(), createBlock(props.editorComponent, {\r\n            key: 0,\r\n            readonly: \"\",\r\n            filename: unref(store).state.activeFile.filename,\r\n            value: unref(store).state.activeFile.compiled[mode.value],\r\n            mode: mode.value\r\n          }, null, 8, [\"filename\", \"value\", \"mode\"])) : createCommentVNode(\"\", true)\r\n        ])\r\n      ], 64);\r\n    };\r\n  }\r\n});\r\n\r\nconst Output_vue_vue_type_style_index_0_scoped_f221f6e0_lang = '';\r\n\r\nconst Output = /* @__PURE__ */ _export_sfc(_sfc_main$4, [[\"__scopeId\", \"data-v-f221f6e0\"]]);\r\n\r\nvar ContextualKeyword; (function (ContextualKeyword) {\r\n  const NONE = 0; ContextualKeyword[ContextualKeyword[\"NONE\"] = NONE] = \"NONE\";\r\n  const _abstract = NONE + 1; ContextualKeyword[ContextualKeyword[\"_abstract\"] = _abstract] = \"_abstract\";\r\n  const _accessor = _abstract + 1; ContextualKeyword[ContextualKeyword[\"_accessor\"] = _accessor] = \"_accessor\";\r\n  const _as = _accessor + 1; ContextualKeyword[ContextualKeyword[\"_as\"] = _as] = \"_as\";\r\n  const _assert = _as + 1; ContextualKeyword[ContextualKeyword[\"_assert\"] = _assert] = \"_assert\";\r\n  const _asserts = _assert + 1; ContextualKeyword[ContextualKeyword[\"_asserts\"] = _asserts] = \"_asserts\";\r\n  const _async = _asserts + 1; ContextualKeyword[ContextualKeyword[\"_async\"] = _async] = \"_async\";\r\n  const _await = _async + 1; ContextualKeyword[ContextualKeyword[\"_await\"] = _await] = \"_await\";\r\n  const _checks = _await + 1; ContextualKeyword[ContextualKeyword[\"_checks\"] = _checks] = \"_checks\";\r\n  const _constructor = _checks + 1; ContextualKeyword[ContextualKeyword[\"_constructor\"] = _constructor] = \"_constructor\";\r\n  const _declare = _constructor + 1; ContextualKeyword[ContextualKeyword[\"_declare\"] = _declare] = \"_declare\";\r\n  const _enum = _declare + 1; ContextualKeyword[ContextualKeyword[\"_enum\"] = _enum] = \"_enum\";\r\n  const _exports = _enum + 1; ContextualKeyword[ContextualKeyword[\"_exports\"] = _exports] = \"_exports\";\r\n  const _from = _exports + 1; ContextualKeyword[ContextualKeyword[\"_from\"] = _from] = \"_from\";\r\n  const _get = _from + 1; ContextualKeyword[ContextualKeyword[\"_get\"] = _get] = \"_get\";\r\n  const _global = _get + 1; ContextualKeyword[ContextualKeyword[\"_global\"] = _global] = \"_global\";\r\n  const _implements = _global + 1; ContextualKeyword[ContextualKeyword[\"_implements\"] = _implements] = \"_implements\";\r\n  const _infer = _implements + 1; ContextualKeyword[ContextualKeyword[\"_infer\"] = _infer] = \"_infer\";\r\n  const _interface = _infer + 1; ContextualKeyword[ContextualKeyword[\"_interface\"] = _interface] = \"_interface\";\r\n  const _is = _interface + 1; ContextualKeyword[ContextualKeyword[\"_is\"] = _is] = \"_is\";\r\n  const _keyof = _is + 1; ContextualKeyword[ContextualKeyword[\"_keyof\"] = _keyof] = \"_keyof\";\r\n  const _mixins = _keyof + 1; ContextualKeyword[ContextualKeyword[\"_mixins\"] = _mixins] = \"_mixins\";\r\n  const _module = _mixins + 1; ContextualKeyword[ContextualKeyword[\"_module\"] = _module] = \"_module\";\r\n  const _namespace = _module + 1; ContextualKeyword[ContextualKeyword[\"_namespace\"] = _namespace] = \"_namespace\";\r\n  const _of = _namespace + 1; ContextualKeyword[ContextualKeyword[\"_of\"] = _of] = \"_of\";\r\n  const _opaque = _of + 1; ContextualKeyword[ContextualKeyword[\"_opaque\"] = _opaque] = \"_opaque\";\r\n  const _out = _opaque + 1; ContextualKeyword[ContextualKeyword[\"_out\"] = _out] = \"_out\";\r\n  const _override = _out + 1; ContextualKeyword[ContextualKeyword[\"_override\"] = _override] = \"_override\";\r\n  const _private = _override + 1; ContextualKeyword[ContextualKeyword[\"_private\"] = _private] = \"_private\";\r\n  const _protected = _private + 1; ContextualKeyword[ContextualKeyword[\"_protected\"] = _protected] = \"_protected\";\r\n  const _proto = _protected + 1; ContextualKeyword[ContextualKeyword[\"_proto\"] = _proto] = \"_proto\";\r\n  const _public = _proto + 1; ContextualKeyword[ContextualKeyword[\"_public\"] = _public] = \"_public\";\r\n  const _readonly = _public + 1; ContextualKeyword[ContextualKeyword[\"_readonly\"] = _readonly] = \"_readonly\";\r\n  const _require = _readonly + 1; ContextualKeyword[ContextualKeyword[\"_require\"] = _require] = \"_require\";\r\n  const _satisfies = _require + 1; ContextualKeyword[ContextualKeyword[\"_satisfies\"] = _satisfies] = \"_satisfies\";\r\n  const _set = _satisfies + 1; ContextualKeyword[ContextualKeyword[\"_set\"] = _set] = \"_set\";\r\n  const _static = _set + 1; ContextualKeyword[ContextualKeyword[\"_static\"] = _static] = \"_static\";\r\n  const _symbol = _static + 1; ContextualKeyword[ContextualKeyword[\"_symbol\"] = _symbol] = \"_symbol\";\r\n  const _type = _symbol + 1; ContextualKeyword[ContextualKeyword[\"_type\"] = _type] = \"_type\";\r\n  const _unique = _type + 1; ContextualKeyword[ContextualKeyword[\"_unique\"] = _unique] = \"_unique\";\r\n  const _using = _unique + 1; ContextualKeyword[ContextualKeyword[\"_using\"] = _using] = \"_using\";\r\n})(ContextualKeyword || (ContextualKeyword = {}));\r\n\r\n// Generated file, do not edit! Run \"yarn generate\" to re-generate this file.\r\n/* istanbul ignore file */\r\n/**\r\n * Enum of all token types, with bit fields to signify meaningful properties.\r\n */\r\nvar TokenType; (function (TokenType) {\r\n  // Precedence 0 means not an operator; otherwise it is a positive number up to 12.\r\n  const PRECEDENCE_MASK = 0xf; TokenType[TokenType[\"PRECEDENCE_MASK\"] = PRECEDENCE_MASK] = \"PRECEDENCE_MASK\";\r\n  const IS_KEYWORD = 1 << 4; TokenType[TokenType[\"IS_KEYWORD\"] = IS_KEYWORD] = \"IS_KEYWORD\";\r\n  const IS_ASSIGN = 1 << 5; TokenType[TokenType[\"IS_ASSIGN\"] = IS_ASSIGN] = \"IS_ASSIGN\";\r\n  const IS_RIGHT_ASSOCIATIVE = 1 << 6; TokenType[TokenType[\"IS_RIGHT_ASSOCIATIVE\"] = IS_RIGHT_ASSOCIATIVE] = \"IS_RIGHT_ASSOCIATIVE\";\r\n  const IS_PREFIX = 1 << 7; TokenType[TokenType[\"IS_PREFIX\"] = IS_PREFIX] = \"IS_PREFIX\";\r\n  const IS_POSTFIX = 1 << 8; TokenType[TokenType[\"IS_POSTFIX\"] = IS_POSTFIX] = \"IS_POSTFIX\";\r\n  const IS_EXPRESSION_START = 1 << 9; TokenType[TokenType[\"IS_EXPRESSION_START\"] = IS_EXPRESSION_START] = \"IS_EXPRESSION_START\";\r\n\r\n  const num = 512; TokenType[TokenType[\"num\"] = num] = \"num\"; // num startsExpr\r\n  const bigint = 1536; TokenType[TokenType[\"bigint\"] = bigint] = \"bigint\"; // bigint startsExpr\r\n  const decimal = 2560; TokenType[TokenType[\"decimal\"] = decimal] = \"decimal\"; // decimal startsExpr\r\n  const regexp = 3584; TokenType[TokenType[\"regexp\"] = regexp] = \"regexp\"; // regexp startsExpr\r\n  const string = 4608; TokenType[TokenType[\"string\"] = string] = \"string\"; // string startsExpr\r\n  const name = 5632; TokenType[TokenType[\"name\"] = name] = \"name\"; // name startsExpr\r\n  const eof = 6144; TokenType[TokenType[\"eof\"] = eof] = \"eof\"; // eof\r\n  const bracketL = 7680; TokenType[TokenType[\"bracketL\"] = bracketL] = \"bracketL\"; // [ startsExpr\r\n  const bracketR = 8192; TokenType[TokenType[\"bracketR\"] = bracketR] = \"bracketR\"; // ]\r\n  const braceL = 9728; TokenType[TokenType[\"braceL\"] = braceL] = \"braceL\"; // { startsExpr\r\n  const braceBarL = 10752; TokenType[TokenType[\"braceBarL\"] = braceBarL] = \"braceBarL\"; // {| startsExpr\r\n  const braceR = 11264; TokenType[TokenType[\"braceR\"] = braceR] = \"braceR\"; // }\r\n  const braceBarR = 12288; TokenType[TokenType[\"braceBarR\"] = braceBarR] = \"braceBarR\"; // |}\r\n  const parenL = 13824; TokenType[TokenType[\"parenL\"] = parenL] = \"parenL\"; // ( startsExpr\r\n  const parenR = 14336; TokenType[TokenType[\"parenR\"] = parenR] = \"parenR\"; // )\r\n  const comma = 15360; TokenType[TokenType[\"comma\"] = comma] = \"comma\"; // ,\r\n  const semi = 16384; TokenType[TokenType[\"semi\"] = semi] = \"semi\"; // ;\r\n  const colon = 17408; TokenType[TokenType[\"colon\"] = colon] = \"colon\"; // :\r\n  const doubleColon = 18432; TokenType[TokenType[\"doubleColon\"] = doubleColon] = \"doubleColon\"; // ::\r\n  const dot = 19456; TokenType[TokenType[\"dot\"] = dot] = \"dot\"; // .\r\n  const question = 20480; TokenType[TokenType[\"question\"] = question] = \"question\"; // ?\r\n  const questionDot = 21504; TokenType[TokenType[\"questionDot\"] = questionDot] = \"questionDot\"; // ?.\r\n  const arrow = 22528; TokenType[TokenType[\"arrow\"] = arrow] = \"arrow\"; // =>\r\n  const template = 23552; TokenType[TokenType[\"template\"] = template] = \"template\"; // template\r\n  const ellipsis = 24576; TokenType[TokenType[\"ellipsis\"] = ellipsis] = \"ellipsis\"; // ...\r\n  const backQuote = 25600; TokenType[TokenType[\"backQuote\"] = backQuote] = \"backQuote\"; // `\r\n  const dollarBraceL = 27136; TokenType[TokenType[\"dollarBraceL\"] = dollarBraceL] = \"dollarBraceL\"; // ${ startsExpr\r\n  const at = 27648; TokenType[TokenType[\"at\"] = at] = \"at\"; // @\r\n  const hash = 29184; TokenType[TokenType[\"hash\"] = hash] = \"hash\"; // # startsExpr\r\n  const eq = 29728; TokenType[TokenType[\"eq\"] = eq] = \"eq\"; // = isAssign\r\n  const assign = 30752; TokenType[TokenType[\"assign\"] = assign] = \"assign\"; // _= isAssign\r\n  const preIncDec = 32640; TokenType[TokenType[\"preIncDec\"] = preIncDec] = \"preIncDec\"; // ++/-- prefix postfix startsExpr\r\n  const postIncDec = 33664; TokenType[TokenType[\"postIncDec\"] = postIncDec] = \"postIncDec\"; // ++/-- prefix postfix startsExpr\r\n  const bang = 34432; TokenType[TokenType[\"bang\"] = bang] = \"bang\"; // ! prefix startsExpr\r\n  const tilde = 35456; TokenType[TokenType[\"tilde\"] = tilde] = \"tilde\"; // ~ prefix startsExpr\r\n  const pipeline = 35841; TokenType[TokenType[\"pipeline\"] = pipeline] = \"pipeline\"; // |> prec:1\r\n  const nullishCoalescing = 36866; TokenType[TokenType[\"nullishCoalescing\"] = nullishCoalescing] = \"nullishCoalescing\"; // ?? prec:2\r\n  const logicalOR = 37890; TokenType[TokenType[\"logicalOR\"] = logicalOR] = \"logicalOR\"; // || prec:2\r\n  const logicalAND = 38915; TokenType[TokenType[\"logicalAND\"] = logicalAND] = \"logicalAND\"; // && prec:3\r\n  const bitwiseOR = 39940; TokenType[TokenType[\"bitwiseOR\"] = bitwiseOR] = \"bitwiseOR\"; // | prec:4\r\n  const bitwiseXOR = 40965; TokenType[TokenType[\"bitwiseXOR\"] = bitwiseXOR] = \"bitwiseXOR\"; // ^ prec:5\r\n  const bitwiseAND = 41990; TokenType[TokenType[\"bitwiseAND\"] = bitwiseAND] = \"bitwiseAND\"; // & prec:6\r\n  const equality = 43015; TokenType[TokenType[\"equality\"] = equality] = \"equality\"; // ==/!= prec:7\r\n  const lessThan = 44040; TokenType[TokenType[\"lessThan\"] = lessThan] = \"lessThan\"; // < prec:8\r\n  const greaterThan = 45064; TokenType[TokenType[\"greaterThan\"] = greaterThan] = \"greaterThan\"; // > prec:8\r\n  const relationalOrEqual = 46088; TokenType[TokenType[\"relationalOrEqual\"] = relationalOrEqual] = \"relationalOrEqual\"; // <=/>= prec:8\r\n  const bitShiftL = 47113; TokenType[TokenType[\"bitShiftL\"] = bitShiftL] = \"bitShiftL\"; // << prec:9\r\n  const bitShiftR = 48137; TokenType[TokenType[\"bitShiftR\"] = bitShiftR] = \"bitShiftR\"; // >>/>>> prec:9\r\n  const plus = 49802; TokenType[TokenType[\"plus\"] = plus] = \"plus\"; // + prec:10 prefix startsExpr\r\n  const minus = 50826; TokenType[TokenType[\"minus\"] = minus] = \"minus\"; // - prec:10 prefix startsExpr\r\n  const modulo = 51723; TokenType[TokenType[\"modulo\"] = modulo] = \"modulo\"; // % prec:11 startsExpr\r\n  const star = 52235; TokenType[TokenType[\"star\"] = star] = \"star\"; // * prec:11\r\n  const slash = 53259; TokenType[TokenType[\"slash\"] = slash] = \"slash\"; // / prec:11\r\n  const exponent = 54348; TokenType[TokenType[\"exponent\"] = exponent] = \"exponent\"; // ** prec:12 rightAssociative\r\n  const jsxName = 55296; TokenType[TokenType[\"jsxName\"] = jsxName] = \"jsxName\"; // jsxName\r\n  const jsxText = 56320; TokenType[TokenType[\"jsxText\"] = jsxText] = \"jsxText\"; // jsxText\r\n  const jsxEmptyText = 57344; TokenType[TokenType[\"jsxEmptyText\"] = jsxEmptyText] = \"jsxEmptyText\"; // jsxEmptyText\r\n  const jsxTagStart = 58880; TokenType[TokenType[\"jsxTagStart\"] = jsxTagStart] = \"jsxTagStart\"; // jsxTagStart startsExpr\r\n  const jsxTagEnd = 59392; TokenType[TokenType[\"jsxTagEnd\"] = jsxTagEnd] = \"jsxTagEnd\"; // jsxTagEnd\r\n  const typeParameterStart = 60928; TokenType[TokenType[\"typeParameterStart\"] = typeParameterStart] = \"typeParameterStart\"; // typeParameterStart startsExpr\r\n  const nonNullAssertion = 61440; TokenType[TokenType[\"nonNullAssertion\"] = nonNullAssertion] = \"nonNullAssertion\"; // nonNullAssertion\r\n  const _break = 62480; TokenType[TokenType[\"_break\"] = _break] = \"_break\"; // break keyword\r\n  const _case = 63504; TokenType[TokenType[\"_case\"] = _case] = \"_case\"; // case keyword\r\n  const _catch = 64528; TokenType[TokenType[\"_catch\"] = _catch] = \"_catch\"; // catch keyword\r\n  const _continue = 65552; TokenType[TokenType[\"_continue\"] = _continue] = \"_continue\"; // continue keyword\r\n  const _debugger = 66576; TokenType[TokenType[\"_debugger\"] = _debugger] = \"_debugger\"; // debugger keyword\r\n  const _default = 67600; TokenType[TokenType[\"_default\"] = _default] = \"_default\"; // default keyword\r\n  const _do = 68624; TokenType[TokenType[\"_do\"] = _do] = \"_do\"; // do keyword\r\n  const _else = 69648; TokenType[TokenType[\"_else\"] = _else] = \"_else\"; // else keyword\r\n  const _finally = 70672; TokenType[TokenType[\"_finally\"] = _finally] = \"_finally\"; // finally keyword\r\n  const _for = 71696; TokenType[TokenType[\"_for\"] = _for] = \"_for\"; // for keyword\r\n  const _function = 73232; TokenType[TokenType[\"_function\"] = _function] = \"_function\"; // function keyword startsExpr\r\n  const _if = 73744; TokenType[TokenType[\"_if\"] = _if] = \"_if\"; // if keyword\r\n  const _return = 74768; TokenType[TokenType[\"_return\"] = _return] = \"_return\"; // return keyword\r\n  const _switch = 75792; TokenType[TokenType[\"_switch\"] = _switch] = \"_switch\"; // switch keyword\r\n  const _throw = 77456; TokenType[TokenType[\"_throw\"] = _throw] = \"_throw\"; // throw keyword prefix startsExpr\r\n  const _try = 77840; TokenType[TokenType[\"_try\"] = _try] = \"_try\"; // try keyword\r\n  const _var = 78864; TokenType[TokenType[\"_var\"] = _var] = \"_var\"; // var keyword\r\n  const _let = 79888; TokenType[TokenType[\"_let\"] = _let] = \"_let\"; // let keyword\r\n  const _const = 80912; TokenType[TokenType[\"_const\"] = _const] = \"_const\"; // const keyword\r\n  const _while = 81936; TokenType[TokenType[\"_while\"] = _while] = \"_while\"; // while keyword\r\n  const _with = 82960; TokenType[TokenType[\"_with\"] = _with] = \"_with\"; // with keyword\r\n  const _new = 84496; TokenType[TokenType[\"_new\"] = _new] = \"_new\"; // new keyword startsExpr\r\n  const _this = 85520; TokenType[TokenType[\"_this\"] = _this] = \"_this\"; // this keyword startsExpr\r\n  const _super = 86544; TokenType[TokenType[\"_super\"] = _super] = \"_super\"; // super keyword startsExpr\r\n  const _class = 87568; TokenType[TokenType[\"_class\"] = _class] = \"_class\"; // class keyword startsExpr\r\n  const _extends = 88080; TokenType[TokenType[\"_extends\"] = _extends] = \"_extends\"; // extends keyword\r\n  const _export = 89104; TokenType[TokenType[\"_export\"] = _export] = \"_export\"; // export keyword\r\n  const _import = 90640; TokenType[TokenType[\"_import\"] = _import] = \"_import\"; // import keyword startsExpr\r\n  const _yield = 91664; TokenType[TokenType[\"_yield\"] = _yield] = \"_yield\"; // yield keyword startsExpr\r\n  const _null = 92688; TokenType[TokenType[\"_null\"] = _null] = \"_null\"; // null keyword startsExpr\r\n  const _true = 93712; TokenType[TokenType[\"_true\"] = _true] = \"_true\"; // true keyword startsExpr\r\n  const _false = 94736; TokenType[TokenType[\"_false\"] = _false] = \"_false\"; // false keyword startsExpr\r\n  const _in = 95256; TokenType[TokenType[\"_in\"] = _in] = \"_in\"; // in prec:8 keyword\r\n  const _instanceof = 96280; TokenType[TokenType[\"_instanceof\"] = _instanceof] = \"_instanceof\"; // instanceof prec:8 keyword\r\n  const _typeof = 97936; TokenType[TokenType[\"_typeof\"] = _typeof] = \"_typeof\"; // typeof keyword prefix startsExpr\r\n  const _void = 98960; TokenType[TokenType[\"_void\"] = _void] = \"_void\"; // void keyword prefix startsExpr\r\n  const _delete = 99984; TokenType[TokenType[\"_delete\"] = _delete] = \"_delete\"; // delete keyword prefix startsExpr\r\n  const _async = 100880; TokenType[TokenType[\"_async\"] = _async] = \"_async\"; // async keyword startsExpr\r\n  const _get = 101904; TokenType[TokenType[\"_get\"] = _get] = \"_get\"; // get keyword startsExpr\r\n  const _set = 102928; TokenType[TokenType[\"_set\"] = _set] = \"_set\"; // set keyword startsExpr\r\n  const _declare = 103952; TokenType[TokenType[\"_declare\"] = _declare] = \"_declare\"; // declare keyword startsExpr\r\n  const _readonly = 104976; TokenType[TokenType[\"_readonly\"] = _readonly] = \"_readonly\"; // readonly keyword startsExpr\r\n  const _abstract = 106000; TokenType[TokenType[\"_abstract\"] = _abstract] = \"_abstract\"; // abstract keyword startsExpr\r\n  const _static = 107024; TokenType[TokenType[\"_static\"] = _static] = \"_static\"; // static keyword startsExpr\r\n  const _public = 107536; TokenType[TokenType[\"_public\"] = _public] = \"_public\"; // public keyword\r\n  const _private = 108560; TokenType[TokenType[\"_private\"] = _private] = \"_private\"; // private keyword\r\n  const _protected = 109584; TokenType[TokenType[\"_protected\"] = _protected] = \"_protected\"; // protected keyword\r\n  const _override = 110608; TokenType[TokenType[\"_override\"] = _override] = \"_override\"; // override keyword\r\n  const _as = 112144; TokenType[TokenType[\"_as\"] = _as] = \"_as\"; // as keyword startsExpr\r\n  const _enum = 113168; TokenType[TokenType[\"_enum\"] = _enum] = \"_enum\"; // enum keyword startsExpr\r\n  const _type = 114192; TokenType[TokenType[\"_type\"] = _type] = \"_type\"; // type keyword startsExpr\r\n  const _implements = 115216; TokenType[TokenType[\"_implements\"] = _implements] = \"_implements\"; // implements keyword startsExpr\r\n})(TokenType || (TokenType = {}));\r\nfunction formatTokenType(tokenType) {\r\n  switch (tokenType) {\r\n    case TokenType.num:\r\n      return \"num\";\r\n    case TokenType.bigint:\r\n      return \"bigint\";\r\n    case TokenType.decimal:\r\n      return \"decimal\";\r\n    case TokenType.regexp:\r\n      return \"regexp\";\r\n    case TokenType.string:\r\n      return \"string\";\r\n    case TokenType.name:\r\n      return \"name\";\r\n    case TokenType.eof:\r\n      return \"eof\";\r\n    case TokenType.bracketL:\r\n      return \"[\";\r\n    case TokenType.bracketR:\r\n      return \"]\";\r\n    case TokenType.braceL:\r\n      return \"{\";\r\n    case TokenType.braceBarL:\r\n      return \"{|\";\r\n    case TokenType.braceR:\r\n      return \"}\";\r\n    case TokenType.braceBarR:\r\n      return \"|}\";\r\n    case TokenType.parenL:\r\n      return \"(\";\r\n    case TokenType.parenR:\r\n      return \")\";\r\n    case TokenType.comma:\r\n      return \",\";\r\n    case TokenType.semi:\r\n      return \";\";\r\n    case TokenType.colon:\r\n      return \":\";\r\n    case TokenType.doubleColon:\r\n      return \"::\";\r\n    case TokenType.dot:\r\n      return \".\";\r\n    case TokenType.question:\r\n      return \"?\";\r\n    case TokenType.questionDot:\r\n      return \"?.\";\r\n    case TokenType.arrow:\r\n      return \"=>\";\r\n    case TokenType.template:\r\n      return \"template\";\r\n    case TokenType.ellipsis:\r\n      return \"...\";\r\n    case TokenType.backQuote:\r\n      return \"`\";\r\n    case TokenType.dollarBraceL:\r\n      return \"${\";\r\n    case TokenType.at:\r\n      return \"@\";\r\n    case TokenType.hash:\r\n      return \"#\";\r\n    case TokenType.eq:\r\n      return \"=\";\r\n    case TokenType.assign:\r\n      return \"_=\";\r\n    case TokenType.preIncDec:\r\n      return \"++/--\";\r\n    case TokenType.postIncDec:\r\n      return \"++/--\";\r\n    case TokenType.bang:\r\n      return \"!\";\r\n    case TokenType.tilde:\r\n      return \"~\";\r\n    case TokenType.pipeline:\r\n      return \"|>\";\r\n    case TokenType.nullishCoalescing:\r\n      return \"??\";\r\n    case TokenType.logicalOR:\r\n      return \"||\";\r\n    case TokenType.logicalAND:\r\n      return \"&&\";\r\n    case TokenType.bitwiseOR:\r\n      return \"|\";\r\n    case TokenType.bitwiseXOR:\r\n      return \"^\";\r\n    case TokenType.bitwiseAND:\r\n      return \"&\";\r\n    case TokenType.equality:\r\n      return \"==/!=\";\r\n    case TokenType.lessThan:\r\n      return \"<\";\r\n    case TokenType.greaterThan:\r\n      return \">\";\r\n    case TokenType.relationalOrEqual:\r\n      return \"<=/>=\";\r\n    case TokenType.bitShiftL:\r\n      return \"<<\";\r\n    case TokenType.bitShiftR:\r\n      return \">>/>>>\";\r\n    case TokenType.plus:\r\n      return \"+\";\r\n    case TokenType.minus:\r\n      return \"-\";\r\n    case TokenType.modulo:\r\n      return \"%\";\r\n    case TokenType.star:\r\n      return \"*\";\r\n    case TokenType.slash:\r\n      return \"/\";\r\n    case TokenType.exponent:\r\n      return \"**\";\r\n    case TokenType.jsxName:\r\n      return \"jsxName\";\r\n    case TokenType.jsxText:\r\n      return \"jsxText\";\r\n    case TokenType.jsxEmptyText:\r\n      return \"jsxEmptyText\";\r\n    case TokenType.jsxTagStart:\r\n      return \"jsxTagStart\";\r\n    case TokenType.jsxTagEnd:\r\n      return \"jsxTagEnd\";\r\n    case TokenType.typeParameterStart:\r\n      return \"typeParameterStart\";\r\n    case TokenType.nonNullAssertion:\r\n      return \"nonNullAssertion\";\r\n    case TokenType._break:\r\n      return \"break\";\r\n    case TokenType._case:\r\n      return \"case\";\r\n    case TokenType._catch:\r\n      return \"catch\";\r\n    case TokenType._continue:\r\n      return \"continue\";\r\n    case TokenType._debugger:\r\n      return \"debugger\";\r\n    case TokenType._default:\r\n      return \"default\";\r\n    case TokenType._do:\r\n      return \"do\";\r\n    case TokenType._else:\r\n      return \"else\";\r\n    case TokenType._finally:\r\n      return \"finally\";\r\n    case TokenType._for:\r\n      return \"for\";\r\n    case TokenType._function:\r\n      return \"function\";\r\n    case TokenType._if:\r\n      return \"if\";\r\n    case TokenType._return:\r\n      return \"return\";\r\n    case TokenType._switch:\r\n      return \"switch\";\r\n    case TokenType._throw:\r\n      return \"throw\";\r\n    case TokenType._try:\r\n      return \"try\";\r\n    case TokenType._var:\r\n      return \"var\";\r\n    case TokenType._let:\r\n      return \"let\";\r\n    case TokenType._const:\r\n      return \"const\";\r\n    case TokenType._while:\r\n      return \"while\";\r\n    case TokenType._with:\r\n      return \"with\";\r\n    case TokenType._new:\r\n      return \"new\";\r\n    case TokenType._this:\r\n      return \"this\";\r\n    case TokenType._super:\r\n      return \"super\";\r\n    case TokenType._class:\r\n      return \"class\";\r\n    case TokenType._extends:\r\n      return \"extends\";\r\n    case TokenType._export:\r\n      return \"export\";\r\n    case TokenType._import:\r\n      return \"import\";\r\n    case TokenType._yield:\r\n      return \"yield\";\r\n    case TokenType._null:\r\n      return \"null\";\r\n    case TokenType._true:\r\n      return \"true\";\r\n    case TokenType._false:\r\n      return \"false\";\r\n    case TokenType._in:\r\n      return \"in\";\r\n    case TokenType._instanceof:\r\n      return \"instanceof\";\r\n    case TokenType._typeof:\r\n      return \"typeof\";\r\n    case TokenType._void:\r\n      return \"void\";\r\n    case TokenType._delete:\r\n      return \"delete\";\r\n    case TokenType._async:\r\n      return \"async\";\r\n    case TokenType._get:\r\n      return \"get\";\r\n    case TokenType._set:\r\n      return \"set\";\r\n    case TokenType._declare:\r\n      return \"declare\";\r\n    case TokenType._readonly:\r\n      return \"readonly\";\r\n    case TokenType._abstract:\r\n      return \"abstract\";\r\n    case TokenType._static:\r\n      return \"static\";\r\n    case TokenType._public:\r\n      return \"public\";\r\n    case TokenType._private:\r\n      return \"private\";\r\n    case TokenType._protected:\r\n      return \"protected\";\r\n    case TokenType._override:\r\n      return \"override\";\r\n    case TokenType._as:\r\n      return \"as\";\r\n    case TokenType._enum:\r\n      return \"enum\";\r\n    case TokenType._type:\r\n      return \"type\";\r\n    case TokenType._implements:\r\n      return \"implements\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nclass Scope {\r\n  \r\n  \r\n  \r\n\r\n  constructor(startTokenIndex, endTokenIndex, isFunctionScope) {\r\n    this.startTokenIndex = startTokenIndex;\r\n    this.endTokenIndex = endTokenIndex;\r\n    this.isFunctionScope = isFunctionScope;\r\n  }\r\n}\r\n\r\nclass StateSnapshot {\r\n  constructor(\r\n     potentialArrowAt,\r\n     noAnonFunctionType,\r\n     inDisallowConditionalTypesContext,\r\n     tokensLength,\r\n     scopesLength,\r\n     pos,\r\n     type,\r\n     contextualKeyword,\r\n     start,\r\n     end,\r\n     isType,\r\n     scopeDepth,\r\n     error,\r\n  ) {this.potentialArrowAt = potentialArrowAt;this.noAnonFunctionType = noAnonFunctionType;this.inDisallowConditionalTypesContext = inDisallowConditionalTypesContext;this.tokensLength = tokensLength;this.scopesLength = scopesLength;this.pos = pos;this.type = type;this.contextualKeyword = contextualKeyword;this.start = start;this.end = end;this.isType = isType;this.scopeDepth = scopeDepth;this.error = error;}\r\n}\r\n\r\nclass State {constructor() { State.prototype.__init.call(this);State.prototype.__init2.call(this);State.prototype.__init3.call(this);State.prototype.__init4.call(this);State.prototype.__init5.call(this);State.prototype.__init6.call(this);State.prototype.__init7.call(this);State.prototype.__init8.call(this);State.prototype.__init9.call(this);State.prototype.__init10.call(this);State.prototype.__init11.call(this);State.prototype.__init12.call(this);State.prototype.__init13.call(this); }\r\n  // Used to signify the start of a potential arrow function\r\n  __init() {this.potentialArrowAt = -1;}\r\n\r\n  // Used by Flow to handle an edge case involving function type parsing.\r\n  __init2() {this.noAnonFunctionType = false;}\r\n\r\n  // Used by TypeScript to handle ambiguities when parsing conditional types.\r\n  __init3() {this.inDisallowConditionalTypesContext = false;}\r\n\r\n  // Token store.\r\n  __init4() {this.tokens = [];}\r\n\r\n  // Array of all observed scopes, ordered by their ending position.\r\n  __init5() {this.scopes = [];}\r\n\r\n  // The current position of the tokenizer in the input.\r\n  __init6() {this.pos = 0;}\r\n\r\n  // Information about the current token.\r\n  __init7() {this.type = TokenType.eof;}\r\n  __init8() {this.contextualKeyword = ContextualKeyword.NONE;}\r\n  __init9() {this.start = 0;}\r\n  __init10() {this.end = 0;}\r\n\r\n  __init11() {this.isType = false;}\r\n  __init12() {this.scopeDepth = 0;}\r\n\r\n  /**\r\n   * If the parser is in an error state, then the token is always tt.eof and all functions can\r\n   * keep executing but should be written so they don't get into an infinite loop in this situation.\r\n   *\r\n   * This approach, combined with the ability to snapshot and restore state, allows us to implement\r\n   * backtracking without exceptions and without needing to explicitly propagate error states\r\n   * everywhere.\r\n   */\r\n  __init13() {this.error = null;}\r\n\r\n  snapshot() {\r\n    return new StateSnapshot(\r\n      this.potentialArrowAt,\r\n      this.noAnonFunctionType,\r\n      this.inDisallowConditionalTypesContext,\r\n      this.tokens.length,\r\n      this.scopes.length,\r\n      this.pos,\r\n      this.type,\r\n      this.contextualKeyword,\r\n      this.start,\r\n      this.end,\r\n      this.isType,\r\n      this.scopeDepth,\r\n      this.error,\r\n    );\r\n  }\r\n\r\n  restoreFromSnapshot(snapshot) {\r\n    this.potentialArrowAt = snapshot.potentialArrowAt;\r\n    this.noAnonFunctionType = snapshot.noAnonFunctionType;\r\n    this.inDisallowConditionalTypesContext = snapshot.inDisallowConditionalTypesContext;\r\n    this.tokens.length = snapshot.tokensLength;\r\n    this.scopes.length = snapshot.scopesLength;\r\n    this.pos = snapshot.pos;\r\n    this.type = snapshot.type;\r\n    this.contextualKeyword = snapshot.contextualKeyword;\r\n    this.start = snapshot.start;\r\n    this.end = snapshot.end;\r\n    this.isType = snapshot.isType;\r\n    this.scopeDepth = snapshot.scopeDepth;\r\n    this.error = snapshot.error;\r\n  }\r\n}\r\n\r\nvar charCodes; (function (charCodes) {\r\n  const backSpace = 8; charCodes[charCodes[\"backSpace\"] = backSpace] = \"backSpace\";\r\n  const lineFeed = 10; charCodes[charCodes[\"lineFeed\"] = lineFeed] = \"lineFeed\"; //  '\\n'\r\n  const tab = 9; charCodes[charCodes[\"tab\"] = tab] = \"tab\"; //  '\\t'\r\n  const carriageReturn = 13; charCodes[charCodes[\"carriageReturn\"] = carriageReturn] = \"carriageReturn\"; //  '\\r'\r\n  const shiftOut = 14; charCodes[charCodes[\"shiftOut\"] = shiftOut] = \"shiftOut\";\r\n  const space = 32; charCodes[charCodes[\"space\"] = space] = \"space\";\r\n  const exclamationMark = 33; charCodes[charCodes[\"exclamationMark\"] = exclamationMark] = \"exclamationMark\"; //  '!'\r\n  const quotationMark = 34; charCodes[charCodes[\"quotationMark\"] = quotationMark] = \"quotationMark\"; //  '\"'\r\n  const numberSign = 35; charCodes[charCodes[\"numberSign\"] = numberSign] = \"numberSign\"; //  '#'\r\n  const dollarSign = 36; charCodes[charCodes[\"dollarSign\"] = dollarSign] = \"dollarSign\"; //  '$'\r\n  const percentSign = 37; charCodes[charCodes[\"percentSign\"] = percentSign] = \"percentSign\"; //  '%'\r\n  const ampersand = 38; charCodes[charCodes[\"ampersand\"] = ampersand] = \"ampersand\"; //  '&'\r\n  const apostrophe = 39; charCodes[charCodes[\"apostrophe\"] = apostrophe] = \"apostrophe\"; //  '''\r\n  const leftParenthesis = 40; charCodes[charCodes[\"leftParenthesis\"] = leftParenthesis] = \"leftParenthesis\"; //  '('\r\n  const rightParenthesis = 41; charCodes[charCodes[\"rightParenthesis\"] = rightParenthesis] = \"rightParenthesis\"; //  ')'\r\n  const asterisk = 42; charCodes[charCodes[\"asterisk\"] = asterisk] = \"asterisk\"; //  '*'\r\n  const plusSign = 43; charCodes[charCodes[\"plusSign\"] = plusSign] = \"plusSign\"; //  '+'\r\n  const comma = 44; charCodes[charCodes[\"comma\"] = comma] = \"comma\"; //  ','\r\n  const dash = 45; charCodes[charCodes[\"dash\"] = dash] = \"dash\"; //  '-'\r\n  const dot = 46; charCodes[charCodes[\"dot\"] = dot] = \"dot\"; //  '.'\r\n  const slash = 47; charCodes[charCodes[\"slash\"] = slash] = \"slash\"; //  '/'\r\n  const digit0 = 48; charCodes[charCodes[\"digit0\"] = digit0] = \"digit0\"; //  '0'\r\n  const digit1 = 49; charCodes[charCodes[\"digit1\"] = digit1] = \"digit1\"; //  '1'\r\n  const digit2 = 50; charCodes[charCodes[\"digit2\"] = digit2] = \"digit2\"; //  '2'\r\n  const digit3 = 51; charCodes[charCodes[\"digit3\"] = digit3] = \"digit3\"; //  '3'\r\n  const digit4 = 52; charCodes[charCodes[\"digit4\"] = digit4] = \"digit4\"; //  '4'\r\n  const digit5 = 53; charCodes[charCodes[\"digit5\"] = digit5] = \"digit5\"; //  '5'\r\n  const digit6 = 54; charCodes[charCodes[\"digit6\"] = digit6] = \"digit6\"; //  '6'\r\n  const digit7 = 55; charCodes[charCodes[\"digit7\"] = digit7] = \"digit7\"; //  '7'\r\n  const digit8 = 56; charCodes[charCodes[\"digit8\"] = digit8] = \"digit8\"; //  '8'\r\n  const digit9 = 57; charCodes[charCodes[\"digit9\"] = digit9] = \"digit9\"; //  '9'\r\n  const colon = 58; charCodes[charCodes[\"colon\"] = colon] = \"colon\"; //  ':'\r\n  const semicolon = 59; charCodes[charCodes[\"semicolon\"] = semicolon] = \"semicolon\"; //  ';'\r\n  const lessThan = 60; charCodes[charCodes[\"lessThan\"] = lessThan] = \"lessThan\"; //  '<'\r\n  const equalsTo = 61; charCodes[charCodes[\"equalsTo\"] = equalsTo] = \"equalsTo\"; //  '='\r\n  const greaterThan = 62; charCodes[charCodes[\"greaterThan\"] = greaterThan] = \"greaterThan\"; //  '>'\r\n  const questionMark = 63; charCodes[charCodes[\"questionMark\"] = questionMark] = \"questionMark\"; //  '?'\r\n  const atSign = 64; charCodes[charCodes[\"atSign\"] = atSign] = \"atSign\"; //  '@'\r\n  const uppercaseA = 65; charCodes[charCodes[\"uppercaseA\"] = uppercaseA] = \"uppercaseA\"; //  'A'\r\n  const uppercaseB = 66; charCodes[charCodes[\"uppercaseB\"] = uppercaseB] = \"uppercaseB\"; //  'B'\r\n  const uppercaseC = 67; charCodes[charCodes[\"uppercaseC\"] = uppercaseC] = \"uppercaseC\"; //  'C'\r\n  const uppercaseD = 68; charCodes[charCodes[\"uppercaseD\"] = uppercaseD] = \"uppercaseD\"; //  'D'\r\n  const uppercaseE = 69; charCodes[charCodes[\"uppercaseE\"] = uppercaseE] = \"uppercaseE\"; //  'E'\r\n  const uppercaseF = 70; charCodes[charCodes[\"uppercaseF\"] = uppercaseF] = \"uppercaseF\"; //  'F'\r\n  const uppercaseG = 71; charCodes[charCodes[\"uppercaseG\"] = uppercaseG] = \"uppercaseG\"; //  'G'\r\n  const uppercaseH = 72; charCodes[charCodes[\"uppercaseH\"] = uppercaseH] = \"uppercaseH\"; //  'H'\r\n  const uppercaseI = 73; charCodes[charCodes[\"uppercaseI\"] = uppercaseI] = \"uppercaseI\"; //  'I'\r\n  const uppercaseJ = 74; charCodes[charCodes[\"uppercaseJ\"] = uppercaseJ] = \"uppercaseJ\"; //  'J'\r\n  const uppercaseK = 75; charCodes[charCodes[\"uppercaseK\"] = uppercaseK] = \"uppercaseK\"; //  'K'\r\n  const uppercaseL = 76; charCodes[charCodes[\"uppercaseL\"] = uppercaseL] = \"uppercaseL\"; //  'L'\r\n  const uppercaseM = 77; charCodes[charCodes[\"uppercaseM\"] = uppercaseM] = \"uppercaseM\"; //  'M'\r\n  const uppercaseN = 78; charCodes[charCodes[\"uppercaseN\"] = uppercaseN] = \"uppercaseN\"; //  'N'\r\n  const uppercaseO = 79; charCodes[charCodes[\"uppercaseO\"] = uppercaseO] = \"uppercaseO\"; //  'O'\r\n  const uppercaseP = 80; charCodes[charCodes[\"uppercaseP\"] = uppercaseP] = \"uppercaseP\"; //  'P'\r\n  const uppercaseQ = 81; charCodes[charCodes[\"uppercaseQ\"] = uppercaseQ] = \"uppercaseQ\"; //  'Q'\r\n  const uppercaseR = 82; charCodes[charCodes[\"uppercaseR\"] = uppercaseR] = \"uppercaseR\"; //  'R'\r\n  const uppercaseS = 83; charCodes[charCodes[\"uppercaseS\"] = uppercaseS] = \"uppercaseS\"; //  'S'\r\n  const uppercaseT = 84; charCodes[charCodes[\"uppercaseT\"] = uppercaseT] = \"uppercaseT\"; //  'T'\r\n  const uppercaseU = 85; charCodes[charCodes[\"uppercaseU\"] = uppercaseU] = \"uppercaseU\"; //  'U'\r\n  const uppercaseV = 86; charCodes[charCodes[\"uppercaseV\"] = uppercaseV] = \"uppercaseV\"; //  'V'\r\n  const uppercaseW = 87; charCodes[charCodes[\"uppercaseW\"] = uppercaseW] = \"uppercaseW\"; //  'W'\r\n  const uppercaseX = 88; charCodes[charCodes[\"uppercaseX\"] = uppercaseX] = \"uppercaseX\"; //  'X'\r\n  const uppercaseY = 89; charCodes[charCodes[\"uppercaseY\"] = uppercaseY] = \"uppercaseY\"; //  'Y'\r\n  const uppercaseZ = 90; charCodes[charCodes[\"uppercaseZ\"] = uppercaseZ] = \"uppercaseZ\"; //  'Z'\r\n  const leftSquareBracket = 91; charCodes[charCodes[\"leftSquareBracket\"] = leftSquareBracket] = \"leftSquareBracket\"; //  '['\r\n  const backslash = 92; charCodes[charCodes[\"backslash\"] = backslash] = \"backslash\"; //  '\\    '\r\n  const rightSquareBracket = 93; charCodes[charCodes[\"rightSquareBracket\"] = rightSquareBracket] = \"rightSquareBracket\"; //  ']'\r\n  const caret = 94; charCodes[charCodes[\"caret\"] = caret] = \"caret\"; //  '^'\r\n  const underscore = 95; charCodes[charCodes[\"underscore\"] = underscore] = \"underscore\"; //  '_'\r\n  const graveAccent = 96; charCodes[charCodes[\"graveAccent\"] = graveAccent] = \"graveAccent\"; //  '`'\r\n  const lowercaseA = 97; charCodes[charCodes[\"lowercaseA\"] = lowercaseA] = \"lowercaseA\"; //  'a'\r\n  const lowercaseB = 98; charCodes[charCodes[\"lowercaseB\"] = lowercaseB] = \"lowercaseB\"; //  'b'\r\n  const lowercaseC = 99; charCodes[charCodes[\"lowercaseC\"] = lowercaseC] = \"lowercaseC\"; //  'c'\r\n  const lowercaseD = 100; charCodes[charCodes[\"lowercaseD\"] = lowercaseD] = \"lowercaseD\"; //  'd'\r\n  const lowercaseE = 101; charCodes[charCodes[\"lowercaseE\"] = lowercaseE] = \"lowercaseE\"; //  'e'\r\n  const lowercaseF = 102; charCodes[charCodes[\"lowercaseF\"] = lowercaseF] = \"lowercaseF\"; //  'f'\r\n  const lowercaseG = 103; charCodes[charCodes[\"lowercaseG\"] = lowercaseG] = \"lowercaseG\"; //  'g'\r\n  const lowercaseH = 104; charCodes[charCodes[\"lowercaseH\"] = lowercaseH] = \"lowercaseH\"; //  'h'\r\n  const lowercaseI = 105; charCodes[charCodes[\"lowercaseI\"] = lowercaseI] = \"lowercaseI\"; //  'i'\r\n  const lowercaseJ = 106; charCodes[charCodes[\"lowercaseJ\"] = lowercaseJ] = \"lowercaseJ\"; //  'j'\r\n  const lowercaseK = 107; charCodes[charCodes[\"lowercaseK\"] = lowercaseK] = \"lowercaseK\"; //  'k'\r\n  const lowercaseL = 108; charCodes[charCodes[\"lowercaseL\"] = lowercaseL] = \"lowercaseL\"; //  'l'\r\n  const lowercaseM = 109; charCodes[charCodes[\"lowercaseM\"] = lowercaseM] = \"lowercaseM\"; //  'm'\r\n  const lowercaseN = 110; charCodes[charCodes[\"lowercaseN\"] = lowercaseN] = \"lowercaseN\"; //  'n'\r\n  const lowercaseO = 111; charCodes[charCodes[\"lowercaseO\"] = lowercaseO] = \"lowercaseO\"; //  'o'\r\n  const lowercaseP = 112; charCodes[charCodes[\"lowercaseP\"] = lowercaseP] = \"lowercaseP\"; //  'p'\r\n  const lowercaseQ = 113; charCodes[charCodes[\"lowercaseQ\"] = lowercaseQ] = \"lowercaseQ\"; //  'q'\r\n  const lowercaseR = 114; charCodes[charCodes[\"lowercaseR\"] = lowercaseR] = \"lowercaseR\"; //  'r'\r\n  const lowercaseS = 115; charCodes[charCodes[\"lowercaseS\"] = lowercaseS] = \"lowercaseS\"; //  's'\r\n  const lowercaseT = 116; charCodes[charCodes[\"lowercaseT\"] = lowercaseT] = \"lowercaseT\"; //  't'\r\n  const lowercaseU = 117; charCodes[charCodes[\"lowercaseU\"] = lowercaseU] = \"lowercaseU\"; //  'u'\r\n  const lowercaseV = 118; charCodes[charCodes[\"lowercaseV\"] = lowercaseV] = \"lowercaseV\"; //  'v'\r\n  const lowercaseW = 119; charCodes[charCodes[\"lowercaseW\"] = lowercaseW] = \"lowercaseW\"; //  'w'\r\n  const lowercaseX = 120; charCodes[charCodes[\"lowercaseX\"] = lowercaseX] = \"lowercaseX\"; //  'x'\r\n  const lowercaseY = 121; charCodes[charCodes[\"lowercaseY\"] = lowercaseY] = \"lowercaseY\"; //  'y'\r\n  const lowercaseZ = 122; charCodes[charCodes[\"lowercaseZ\"] = lowercaseZ] = \"lowercaseZ\"; //  'z'\r\n  const leftCurlyBrace = 123; charCodes[charCodes[\"leftCurlyBrace\"] = leftCurlyBrace] = \"leftCurlyBrace\"; //  '{'\r\n  const verticalBar = 124; charCodes[charCodes[\"verticalBar\"] = verticalBar] = \"verticalBar\"; //  '|'\r\n  const rightCurlyBrace = 125; charCodes[charCodes[\"rightCurlyBrace\"] = rightCurlyBrace] = \"rightCurlyBrace\"; //  '}'\r\n  const tilde = 126; charCodes[charCodes[\"tilde\"] = tilde] = \"tilde\"; //  '~'\r\n  const nonBreakingSpace = 160; charCodes[charCodes[\"nonBreakingSpace\"] = nonBreakingSpace] = \"nonBreakingSpace\";\r\n  // eslint-disable-next-line no-irregular-whitespace\r\n  const oghamSpaceMark = 5760; charCodes[charCodes[\"oghamSpaceMark\"] = oghamSpaceMark] = \"oghamSpaceMark\"; // ' '\r\n  const lineSeparator = 8232; charCodes[charCodes[\"lineSeparator\"] = lineSeparator] = \"lineSeparator\";\r\n  const paragraphSeparator = 8233; charCodes[charCodes[\"paragraphSeparator\"] = paragraphSeparator] = \"paragraphSeparator\";\r\n})(charCodes || (charCodes = {}));\r\n\r\nlet isJSXEnabled;\r\nlet isTypeScriptEnabled;\r\nlet isFlowEnabled;\r\nlet state;\r\nlet input;\r\nlet nextContextId;\r\n\r\nfunction getNextContextId() {\r\n  return nextContextId++;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction augmentError(error) {\r\n  if (\"pos\" in error) {\r\n    const loc = locationForIndex(error.pos);\r\n    error.message += ` (${loc.line}:${loc.column})`;\r\n    error.loc = loc;\r\n  }\r\n  return error;\r\n}\r\n\r\nclass Loc {\r\n  \r\n  \r\n  constructor(line, column) {\r\n    this.line = line;\r\n    this.column = column;\r\n  }\r\n}\r\n\r\nfunction locationForIndex(pos) {\r\n  let line = 1;\r\n  let column = 1;\r\n  for (let i = 0; i < pos; i++) {\r\n    if (input.charCodeAt(i) === charCodes.lineFeed) {\r\n      line++;\r\n      column = 1;\r\n    } else {\r\n      column++;\r\n    }\r\n  }\r\n  return new Loc(line, column);\r\n}\r\n\r\nfunction initParser(\r\n  inputCode,\r\n  isJSXEnabledArg,\r\n  isTypeScriptEnabledArg,\r\n  isFlowEnabledArg,\r\n) {\r\n  input = inputCode;\r\n  state = new State();\r\n  nextContextId = 1;\r\n  isJSXEnabled = isJSXEnabledArg;\r\n  isTypeScriptEnabled = isTypeScriptEnabledArg;\r\n  isFlowEnabled = isFlowEnabledArg;\r\n}\r\n\r\n// ## Parser utilities\r\n\r\n// Tests whether parsed token is a contextual keyword.\r\nfunction isContextual(contextualKeyword) {\r\n  return state.contextualKeyword === contextualKeyword;\r\n}\r\n\r\nfunction isLookaheadContextual(contextualKeyword) {\r\n  const l = lookaheadTypeAndKeyword();\r\n  return l.type === TokenType.name && l.contextualKeyword === contextualKeyword;\r\n}\r\n\r\n// Consumes contextual keyword if possible.\r\nfunction eatContextual(contextualKeyword) {\r\n  return state.contextualKeyword === contextualKeyword && eat(TokenType.name);\r\n}\r\n\r\n// Asserts that following token is given contextual keyword.\r\nfunction expectContextual(contextualKeyword) {\r\n  if (!eatContextual(contextualKeyword)) {\r\n    unexpected();\r\n  }\r\n}\r\n\r\n// Test whether a semicolon can be inserted at the current position.\r\nfunction canInsertSemicolon() {\r\n  return match(TokenType.eof) || match(TokenType.braceR) || hasPrecedingLineBreak();\r\n}\r\n\r\nfunction hasPrecedingLineBreak() {\r\n  const prevToken = state.tokens[state.tokens.length - 1];\r\n  const lastTokEnd = prevToken ? prevToken.end : 0;\r\n  for (let i = lastTokEnd; i < state.start; i++) {\r\n    const code = input.charCodeAt(i);\r\n    if (\r\n      code === charCodes.lineFeed ||\r\n      code === charCodes.carriageReturn ||\r\n      code === 0x2028 ||\r\n      code === 0x2029\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction hasFollowingLineBreak() {\r\n  const nextStart = nextTokenStart();\r\n  for (let i = state.end; i < nextStart; i++) {\r\n    const code = input.charCodeAt(i);\r\n    if (\r\n      code === charCodes.lineFeed ||\r\n      code === charCodes.carriageReturn ||\r\n      code === 0x2028 ||\r\n      code === 0x2029\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isLineTerminator() {\r\n  return eat(TokenType.semi) || canInsertSemicolon();\r\n}\r\n\r\n// Consume a semicolon, or, failing that, see if we are allowed to\r\n// pretend that there is a semicolon at this position.\r\nfunction semicolon() {\r\n  if (!isLineTerminator()) {\r\n    unexpected('Unexpected token, expected \";\"');\r\n  }\r\n}\r\n\r\n// Expect a token of a given type. If found, consume it, otherwise,\r\n// raise an unexpected token error at given pos.\r\nfunction expect(type) {\r\n  const matched = eat(type);\r\n  if (!matched) {\r\n    unexpected(`Unexpected token, expected \"${formatTokenType(type)}\"`);\r\n  }\r\n}\r\n\r\n/**\r\n * Transition the parser to an error state. All code needs to be written to naturally unwind in this\r\n * state, which allows us to backtrack without exceptions and without error plumbing everywhere.\r\n */\r\nfunction unexpected(message = \"Unexpected token\", pos = state.start) {\r\n  if (state.error) {\r\n    return;\r\n  }\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const err = new SyntaxError(message);\r\n  err.pos = pos;\r\n  state.error = err;\r\n  state.pos = input.length;\r\n  finishToken(TokenType.eof);\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-white-space\r\nconst WHITESPACE_CHARS = [\r\n  0x0009,\r\n  0x000b,\r\n  0x000c,\r\n  charCodes.space,\r\n  charCodes.nonBreakingSpace,\r\n  charCodes.oghamSpaceMark,\r\n  0x2000, // EN QUAD\r\n  0x2001, // EM QUAD\r\n  0x2002, // EN SPACE\r\n  0x2003, // EM SPACE\r\n  0x2004, // THREE-PER-EM SPACE\r\n  0x2005, // FOUR-PER-EM SPACE\r\n  0x2006, // SIX-PER-EM SPACE\r\n  0x2007, // FIGURE SPACE\r\n  0x2008, // PUNCTUATION SPACE\r\n  0x2009, // THIN SPACE\r\n  0x200a, // HAIR SPACE\r\n  0x202f, // NARROW NO-BREAK SPACE\r\n  0x205f, // MEDIUM MATHEMATICAL SPACE\r\n  0x3000, // IDEOGRAPHIC SPACE\r\n  0xfeff, // ZERO WIDTH NO-BREAK SPACE\r\n];\r\n\r\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\r\n\r\nconst IS_WHITESPACE = new Uint8Array(65536);\r\nfor (const char of WHITESPACE_CHARS) {\r\n  IS_WHITESPACE[char] = 1;\r\n}\r\n\r\nfunction computeIsIdentifierChar(code) {\r\n  if (code < 48) return code === 36;\r\n  if (code < 58) return true;\r\n  if (code < 65) return false;\r\n  if (code < 91) return true;\r\n  if (code < 97) return code === 95;\r\n  if (code < 123) return true;\r\n  if (code < 128) return false;\r\n  throw new Error(\"Should not be called with non-ASCII char code.\");\r\n}\r\n\r\nconst IS_IDENTIFIER_CHAR = new Uint8Array(65536);\r\nfor (let i = 0; i < 128; i++) {\r\n  IS_IDENTIFIER_CHAR[i] = computeIsIdentifierChar(i) ? 1 : 0;\r\n}\r\nfor (let i = 128; i < 65536; i++) {\r\n  IS_IDENTIFIER_CHAR[i] = 1;\r\n}\r\n// Aside from whitespace and newlines, all characters outside the ASCII space are either\r\n// identifier characters or invalid. Since we're not performing code validation, we can just\r\n// treat all invalid characters as identifier characters.\r\nfor (const whitespaceChar of WHITESPACE_CHARS) {\r\n  IS_IDENTIFIER_CHAR[whitespaceChar] = 0;\r\n}\r\nIS_IDENTIFIER_CHAR[0x2028] = 0;\r\nIS_IDENTIFIER_CHAR[0x2029] = 0;\r\n\r\nconst IS_IDENTIFIER_START = IS_IDENTIFIER_CHAR.slice();\r\nfor (let numChar = charCodes.digit0; numChar <= charCodes.digit9; numChar++) {\r\n  IS_IDENTIFIER_START[numChar] = 0;\r\n}\r\n\r\n// Generated file, do not edit! Run \"yarn generate\" to re-generate this file.\r\n\r\n// prettier-ignore\r\nconst READ_WORD_TREE = new Int32Array([\r\n  // \"\"\r\n  -1, 27, 783, 918, 1755, 2376, 2862, 3483, -1, 3699, -1, 4617, 4752, 4833, 5130, 5508, 5940, -1, 6480, 6939, 7749, 8181, 8451, 8613, -1, 8829, -1,\r\n  // \"a\"\r\n  -1, -1, 54, 243, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 432, -1, -1, -1, 675, -1, -1, -1,\r\n  // \"ab\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"abs\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1,\r\n  // \"abst\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 135, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"abstr\"\r\n  -1, 162, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"abstra\"\r\n  -1, -1, -1, 189, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"abstrac\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 216, -1, -1, -1, -1, -1, -1,\r\n  // \"abstract\"\r\n  ContextualKeyword._abstract << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ac\"\r\n  -1, -1, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"acc\"\r\n  -1, -1, -1, -1, -1, 297, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"acce\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 324, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"acces\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 351, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"access\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 378, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"accesso\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 405, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"accessor\"\r\n  ContextualKeyword._accessor << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"as\"\r\n  ContextualKeyword._as << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 459, -1, -1, -1, -1, -1, 594, -1,\r\n  // \"ass\"\r\n  -1, -1, -1, -1, -1, 486, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"asse\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 513, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"asser\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 540, -1, -1, -1, -1, -1, -1,\r\n  // \"assert\"\r\n  ContextualKeyword._assert << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 567, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"asserts\"\r\n  ContextualKeyword._asserts << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"asy\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 621, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"asyn\"\r\n  -1, -1, -1, 648, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"async\"\r\n  ContextualKeyword._async << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"aw\"\r\n  -1, 702, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"awa\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 729, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"awai\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 756, -1, -1, -1, -1, -1, -1,\r\n  // \"await\"\r\n  ContextualKeyword._await << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"b\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 810, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"br\"\r\n  -1, -1, -1, -1, -1, 837, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"bre\"\r\n  -1, 864, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"brea\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 891, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"break\"\r\n  (TokenType._break << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"c\"\r\n  -1, 945, -1, -1, -1, -1, -1, -1, 1107, -1, -1, -1, 1242, -1, -1, 1350, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ca\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 972, 1026, -1, -1, -1, -1, -1, -1,\r\n  // \"cas\"\r\n  -1, -1, -1, -1, -1, 999, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"case\"\r\n  (TokenType._case << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"cat\"\r\n  -1, -1, -1, 1053, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"catc\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 1080, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"catch\"\r\n  (TokenType._catch << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ch\"\r\n  -1, -1, -1, -1, -1, 1134, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"che\"\r\n  -1, -1, -1, 1161, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"chec\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1188, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"check\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1215, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"checks\"\r\n  ContextualKeyword._checks << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"cl\"\r\n  -1, 1269, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"cla\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1296, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"clas\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1323, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"class\"\r\n  (TokenType._class << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"co\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1377, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"con\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1404, 1620, -1, -1, -1, -1, -1, -1,\r\n  // \"cons\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1431, -1, -1, -1, -1, -1, -1,\r\n  // \"const\"\r\n  (TokenType._const << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1458, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"constr\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1485, -1, -1, -1, -1, -1,\r\n  // \"constru\"\r\n  -1, -1, -1, 1512, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"construc\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1539, -1, -1, -1, -1, -1, -1,\r\n  // \"construct\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1566, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"constructo\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1593, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"constructor\"\r\n  ContextualKeyword._constructor << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"cont\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 1647, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"conti\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1674, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"contin\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1701, -1, -1, -1, -1, -1,\r\n  // \"continu\"\r\n  -1, -1, -1, -1, -1, 1728, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"continue\"\r\n  (TokenType._continue << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"d\"\r\n  -1, -1, -1, -1, -1, 1782, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2349, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"de\"\r\n  -1, -1, 1809, 1971, -1, -1, 2106, -1, -1, -1, -1, -1, 2241, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"deb\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1836, -1, -1, -1, -1, -1,\r\n  // \"debu\"\r\n  -1, -1, -1, -1, -1, -1, -1, 1863, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"debug\"\r\n  -1, -1, -1, -1, -1, -1, -1, 1890, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"debugg\"\r\n  -1, -1, -1, -1, -1, 1917, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"debugge\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1944, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"debugger\"\r\n  (TokenType._debugger << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"dec\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1998, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"decl\"\r\n  -1, 2025, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"decla\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2052, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"declar\"\r\n  -1, -1, -1, -1, -1, 2079, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"declare\"\r\n  ContextualKeyword._declare << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"def\"\r\n  -1, 2133, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"defa\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2160, -1, -1, -1, -1, -1,\r\n  // \"defau\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2187, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"defaul\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2214, -1, -1, -1, -1, -1, -1,\r\n  // \"default\"\r\n  (TokenType._default << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"del\"\r\n  -1, -1, -1, -1, -1, 2268, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"dele\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2295, -1, -1, -1, -1, -1, -1,\r\n  // \"delet\"\r\n  -1, -1, -1, -1, -1, 2322, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"delete\"\r\n  (TokenType._delete << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"do\"\r\n  (TokenType._do << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"e\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2403, -1, 2484, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2565, -1, -1,\r\n  // \"el\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2430, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"els\"\r\n  -1, -1, -1, -1, -1, 2457, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"else\"\r\n  (TokenType._else << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"en\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2511, -1, -1, -1, -1, -1,\r\n  // \"enu\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2538, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"enum\"\r\n  ContextualKeyword._enum << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ex\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2592, -1, -1, -1, 2727, -1, -1, -1, -1, -1, -1,\r\n  // \"exp\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2619, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"expo\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2646, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"expor\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2673, -1, -1, -1, -1, -1, -1,\r\n  // \"export\"\r\n  (TokenType._export << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2700, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"exports\"\r\n  ContextualKeyword._exports << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ext\"\r\n  -1, -1, -1, -1, -1, 2754, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"exte\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2781, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"exten\"\r\n  -1, -1, -1, -1, 2808, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"extend\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2835, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"extends\"\r\n  (TokenType._extends << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"f\"\r\n  -1, 2889, -1, -1, -1, -1, -1, -1, -1, 2997, -1, -1, -1, -1, -1, 3159, -1, -1, 3213, -1, -1, 3294, -1, -1, -1, -1, -1,\r\n  // \"fa\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2916, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fal\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2943, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fals\"\r\n  -1, -1, -1, -1, -1, 2970, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"false\"\r\n  (TokenType._false << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3024, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fin\"\r\n  -1, 3051, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fina\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3078, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"final\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3105, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"finall\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3132, -1,\r\n  // \"finally\"\r\n  (TokenType._finally << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fo\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3186, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"for\"\r\n  (TokenType._for << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fr\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3240, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fro\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3267, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"from\"\r\n  ContextualKeyword._from << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fu\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3321, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"fun\"\r\n  -1, -1, -1, 3348, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"func\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3375, -1, -1, -1, -1, -1, -1,\r\n  // \"funct\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 3402, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"functi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3429, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"functio\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3456, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"function\"\r\n  (TokenType._function << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"g\"\r\n  -1, -1, -1, -1, -1, 3510, -1, -1, -1, -1, -1, -1, 3564, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ge\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3537, -1, -1, -1, -1, -1, -1,\r\n  // \"get\"\r\n  ContextualKeyword._get << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"gl\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3591, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"glo\"\r\n  -1, -1, 3618, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"glob\"\r\n  -1, 3645, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"globa\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3672, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"global\"\r\n  ContextualKeyword._global << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"i\"\r\n  -1, -1, -1, -1, -1, -1, 3726, -1, -1, -1, -1, -1, -1, 3753, 4077, -1, -1, -1, -1, 4590, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"if\"\r\n  (TokenType._if << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"im\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3780, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"imp\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3807, -1, -1, 3996, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"impl\"\r\n  -1, -1, -1, -1, -1, 3834, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"imple\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3861, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"implem\"\r\n  -1, -1, -1, -1, -1, 3888, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"impleme\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3915, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"implemen\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3942, -1, -1, -1, -1, -1, -1,\r\n  // \"implement\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3969, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"implements\"\r\n  ContextualKeyword._implements << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"impo\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4023, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"impor\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4050, -1, -1, -1, -1, -1, -1,\r\n  // \"import\"\r\n  (TokenType._import << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"in\"\r\n  (TokenType._in << 1) + 1, -1, -1, -1, -1, -1, 4104, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4185, 4401, -1, -1, -1, -1, -1, -1,\r\n  // \"inf\"\r\n  -1, -1, -1, -1, -1, 4131, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"infe\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4158, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"infer\"\r\n  ContextualKeyword._infer << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ins\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4212, -1, -1, -1, -1, -1, -1,\r\n  // \"inst\"\r\n  -1, 4239, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"insta\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4266, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"instan\"\r\n  -1, -1, -1, 4293, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"instanc\"\r\n  -1, -1, -1, -1, -1, 4320, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"instance\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4347, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"instanceo\"\r\n  -1, -1, -1, -1, -1, -1, 4374, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"instanceof\"\r\n  (TokenType._instanceof << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"int\"\r\n  -1, -1, -1, -1, -1, 4428, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"inte\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4455, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"inter\"\r\n  -1, -1, -1, -1, -1, -1, 4482, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"interf\"\r\n  -1, 4509, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"interfa\"\r\n  -1, -1, -1, 4536, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"interfac\"\r\n  -1, -1, -1, -1, -1, 4563, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"interface\"\r\n  ContextualKeyword._interface << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"is\"\r\n  ContextualKeyword._is << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"k\"\r\n  -1, -1, -1, -1, -1, 4644, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ke\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4671, -1,\r\n  // \"key\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4698, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"keyo\"\r\n  -1, -1, -1, -1, -1, -1, 4725, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"keyof\"\r\n  ContextualKeyword._keyof << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"l\"\r\n  -1, -1, -1, -1, -1, 4779, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"le\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4806, -1, -1, -1, -1, -1, -1,\r\n  // \"let\"\r\n  (TokenType._let << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"m\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4860, -1, -1, -1, -1, -1, 4995, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"mi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4887, -1, -1,\r\n  // \"mix\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4914, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"mixi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4941, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"mixin\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4968, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"mixins\"\r\n  ContextualKeyword._mixins << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"mo\"\r\n  -1, -1, -1, -1, 5022, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"mod\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5049, -1, -1, -1, -1, -1,\r\n  // \"modu\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5076, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"modul\"\r\n  -1, -1, -1, -1, -1, 5103, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"module\"\r\n  ContextualKeyword._module << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"n\"\r\n  -1, 5157, -1, -1, -1, 5373, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5427, -1, -1, -1, -1, -1,\r\n  // \"na\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5184, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"nam\"\r\n  -1, -1, -1, -1, -1, 5211, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"name\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5238, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"names\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5265, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"namesp\"\r\n  -1, 5292, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"namespa\"\r\n  -1, -1, -1, 5319, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"namespac\"\r\n  -1, -1, -1, -1, -1, 5346, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"namespace\"\r\n  ContextualKeyword._namespace << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ne\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5400, -1, -1, -1,\r\n  // \"new\"\r\n  (TokenType._new << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"nu\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5454, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"nul\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5481, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"null\"\r\n  (TokenType._null << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"o\"\r\n  -1, -1, -1, -1, -1, -1, 5535, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5562, -1, -1, -1, -1, 5697, 5751, -1, -1, -1, -1,\r\n  // \"of\"\r\n  ContextualKeyword._of << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"op\"\r\n  -1, 5589, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"opa\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5616, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"opaq\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5643, -1, -1, -1, -1, -1,\r\n  // \"opaqu\"\r\n  -1, -1, -1, -1, -1, 5670, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"opaque\"\r\n  ContextualKeyword._opaque << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ou\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5724, -1, -1, -1, -1, -1, -1,\r\n  // \"out\"\r\n  ContextualKeyword._out << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ov\"\r\n  -1, -1, -1, -1, -1, 5778, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ove\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5805, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"over\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5832, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"overr\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 5859, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"overri\"\r\n  -1, -1, -1, -1, 5886, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"overrid\"\r\n  -1, -1, -1, -1, -1, 5913, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"override\"\r\n  ContextualKeyword._override << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"p\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5967, -1, -1, 6345, -1, -1, -1, -1, -1,\r\n  // \"pr\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 5994, -1, -1, -1, -1, -1, 6129, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"pri\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6021, -1, -1, -1, -1,\r\n  // \"priv\"\r\n  -1, 6048, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"priva\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6075, -1, -1, -1, -1, -1, -1,\r\n  // \"privat\"\r\n  -1, -1, -1, -1, -1, 6102, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"private\"\r\n  ContextualKeyword._private << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"pro\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6156, -1, -1, -1, -1, -1, -1,\r\n  // \"prot\"\r\n  -1, -1, -1, -1, -1, 6183, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6318, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"prote\"\r\n  -1, -1, -1, 6210, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"protec\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6237, -1, -1, -1, -1, -1, -1,\r\n  // \"protect\"\r\n  -1, -1, -1, -1, -1, 6264, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"protecte\"\r\n  -1, -1, -1, -1, 6291, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"protected\"\r\n  ContextualKeyword._protected << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"proto\"\r\n  ContextualKeyword._proto << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"pu\"\r\n  -1, -1, 6372, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"pub\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6399, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"publ\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 6426, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"publi\"\r\n  -1, -1, -1, 6453, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"public\"\r\n  ContextualKeyword._public << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"r\"\r\n  -1, -1, -1, -1, -1, 6507, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"re\"\r\n  -1, 6534, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6696, -1, -1, 6831, -1, -1, -1, -1, -1, -1,\r\n  // \"rea\"\r\n  -1, -1, -1, -1, 6561, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"read\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6588, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"reado\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6615, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"readon\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6642, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"readonl\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6669, -1,\r\n  // \"readonly\"\r\n  ContextualKeyword._readonly << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"req\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6723, -1, -1, -1, -1, -1,\r\n  // \"requ\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 6750, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"requi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6777, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"requir\"\r\n  -1, -1, -1, -1, -1, 6804, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"require\"\r\n  ContextualKeyword._require << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ret\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6858, -1, -1, -1, -1, -1,\r\n  // \"retu\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6885, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"retur\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6912, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"return\"\r\n  (TokenType._return << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"s\"\r\n  -1, 6966, -1, -1, -1, 7182, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7236, 7371, -1, 7479, -1, 7614, -1,\r\n  // \"sa\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6993, -1, -1, -1, -1, -1, -1,\r\n  // \"sat\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7020, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"sati\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7047, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"satis\"\r\n  -1, -1, -1, -1, -1, -1, 7074, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"satisf\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7101, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"satisfi\"\r\n  -1, -1, -1, -1, -1, 7128, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"satisfie\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7155, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"satisfies\"\r\n  ContextualKeyword._satisfies << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"se\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7209, -1, -1, -1, -1, -1, -1,\r\n  // \"set\"\r\n  ContextualKeyword._set << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"st\"\r\n  -1, 7263, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"sta\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7290, -1, -1, -1, -1, -1, -1,\r\n  // \"stat\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7317, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"stati\"\r\n  -1, -1, -1, 7344, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"static\"\r\n  ContextualKeyword._static << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"su\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7398, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"sup\"\r\n  -1, -1, -1, -1, -1, 7425, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"supe\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7452, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"super\"\r\n  (TokenType._super << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"sw\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7506, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"swi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7533, -1, -1, -1, -1, -1, -1,\r\n  // \"swit\"\r\n  -1, -1, -1, 7560, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"switc\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 7587, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"switch\"\r\n  (TokenType._switch << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"sy\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7641, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"sym\"\r\n  -1, -1, 7668, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"symb\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7695, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"symbo\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7722, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"symbol\"\r\n  ContextualKeyword._symbol << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"t\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 7776, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7938, -1, -1, -1, -1, -1, -1, 8046, -1,\r\n  // \"th\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7803, -1, -1, -1, -1, -1, -1, -1, -1, 7857, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"thi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7830, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"this\"\r\n  (TokenType._this << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"thr\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7884, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"thro\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7911, -1, -1, -1,\r\n  // \"throw\"\r\n  (TokenType._throw << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"tr\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7965, -1, -1, -1, 8019, -1,\r\n  // \"tru\"\r\n  -1, -1, -1, -1, -1, 7992, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"true\"\r\n  (TokenType._true << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"try\"\r\n  (TokenType._try << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"ty\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8073, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"typ\"\r\n  -1, -1, -1, -1, -1, 8100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"type\"\r\n  ContextualKeyword._type << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8127, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"typeo\"\r\n  -1, -1, -1, -1, -1, -1, 8154, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"typeof\"\r\n  (TokenType._typeof << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"u\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8208, -1, -1, -1, -1, 8343, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"un\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8235, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"uni\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8262, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"uniq\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8289, -1, -1, -1, -1, -1,\r\n  // \"uniqu\"\r\n  -1, -1, -1, -1, -1, 8316, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"unique\"\r\n  ContextualKeyword._unique << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"us\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8370, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"usi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8397, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"usin\"\r\n  -1, -1, -1, -1, -1, -1, -1, 8424, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"using\"\r\n  ContextualKeyword._using << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"v\"\r\n  -1, 8478, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8532, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"va\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8505, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"var\"\r\n  (TokenType._var << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"vo\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8559, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"voi\"\r\n  -1, -1, -1, -1, 8586, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"void\"\r\n  (TokenType._void << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"w\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 8640, 8748, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"wh\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8667, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"whi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8694, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"whil\"\r\n  -1, -1, -1, -1, -1, 8721, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"while\"\r\n  (TokenType._while << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"wi\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8775, -1, -1, -1, -1, -1, -1,\r\n  // \"wit\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 8802, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"with\"\r\n  (TokenType._with << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"y\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8856, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"yi\"\r\n  -1, -1, -1, -1, -1, 8883, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"yie\"\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8910, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"yiel\"\r\n  -1, -1, -1, -1, 8937, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  // \"yield\"\r\n  (TokenType._yield << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n]);\r\n\r\n/**\r\n * Read an identifier, producing either a name token or matching on one of the existing keywords.\r\n * For performance, we pre-generate big decision tree that we traverse. Each node represents a\r\n * prefix and has 27 values, where the first value is the token or contextual token, if any (-1 if\r\n * not), and the other 26 values are the transitions to other nodes, or -1 to stop.\r\n */\r\nfunction readWord() {\r\n  let treePos = 0;\r\n  let code = 0;\r\n  let pos = state.pos;\r\n  while (pos < input.length) {\r\n    code = input.charCodeAt(pos);\r\n    if (code < charCodes.lowercaseA || code > charCodes.lowercaseZ) {\r\n      break;\r\n    }\r\n    const next = READ_WORD_TREE[treePos + (code - charCodes.lowercaseA) + 1];\r\n    if (next === -1) {\r\n      break;\r\n    } else {\r\n      treePos = next;\r\n      pos++;\r\n    }\r\n  }\r\n\r\n  const keywordValue = READ_WORD_TREE[treePos];\r\n  if (keywordValue > -1 && !IS_IDENTIFIER_CHAR[code]) {\r\n    state.pos = pos;\r\n    if (keywordValue & 1) {\r\n      finishToken(keywordValue >>> 1);\r\n    } else {\r\n      finishToken(TokenType.name, keywordValue >>> 1);\r\n    }\r\n    return;\r\n  }\r\n\r\n  while (pos < input.length) {\r\n    const ch = input.charCodeAt(pos);\r\n    if (IS_IDENTIFIER_CHAR[ch]) {\r\n      pos++;\r\n    } else if (ch === charCodes.backslash) {\r\n      // \\u\r\n      pos += 2;\r\n      if (input.charCodeAt(pos) === charCodes.leftCurlyBrace) {\r\n        while (pos < input.length && input.charCodeAt(pos) !== charCodes.rightCurlyBrace) {\r\n          pos++;\r\n        }\r\n        pos++;\r\n      }\r\n    } else if (ch === charCodes.atSign && input.charCodeAt(pos + 1) === charCodes.atSign) {\r\n      pos += 2;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  state.pos = pos;\r\n  finishToken(TokenType.name);\r\n}\r\n\r\n/* eslint max-len: 0 */\r\n\r\n\r\nvar IdentifierRole; (function (IdentifierRole) {\r\n  const Access = 0; IdentifierRole[IdentifierRole[\"Access\"] = Access] = \"Access\";\r\n  const ExportAccess = Access + 1; IdentifierRole[IdentifierRole[\"ExportAccess\"] = ExportAccess] = \"ExportAccess\";\r\n  const TopLevelDeclaration = ExportAccess + 1; IdentifierRole[IdentifierRole[\"TopLevelDeclaration\"] = TopLevelDeclaration] = \"TopLevelDeclaration\";\r\n  const FunctionScopedDeclaration = TopLevelDeclaration + 1; IdentifierRole[IdentifierRole[\"FunctionScopedDeclaration\"] = FunctionScopedDeclaration] = \"FunctionScopedDeclaration\";\r\n  const BlockScopedDeclaration = FunctionScopedDeclaration + 1; IdentifierRole[IdentifierRole[\"BlockScopedDeclaration\"] = BlockScopedDeclaration] = \"BlockScopedDeclaration\";\r\n  const ObjectShorthandTopLevelDeclaration = BlockScopedDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectShorthandTopLevelDeclaration\"] = ObjectShorthandTopLevelDeclaration] = \"ObjectShorthandTopLevelDeclaration\";\r\n  const ObjectShorthandFunctionScopedDeclaration = ObjectShorthandTopLevelDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectShorthandFunctionScopedDeclaration\"] = ObjectShorthandFunctionScopedDeclaration] = \"ObjectShorthandFunctionScopedDeclaration\";\r\n  const ObjectShorthandBlockScopedDeclaration = ObjectShorthandFunctionScopedDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectShorthandBlockScopedDeclaration\"] = ObjectShorthandBlockScopedDeclaration] = \"ObjectShorthandBlockScopedDeclaration\";\r\n  const ObjectShorthand = ObjectShorthandBlockScopedDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectShorthand\"] = ObjectShorthand] = \"ObjectShorthand\";\r\n  // Any identifier bound in an import statement, e.g. both A and b from\r\n  // `import A, * as b from 'A';`\r\n  const ImportDeclaration = ObjectShorthand + 1; IdentifierRole[IdentifierRole[\"ImportDeclaration\"] = ImportDeclaration] = \"ImportDeclaration\";\r\n  const ObjectKey = ImportDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectKey\"] = ObjectKey] = \"ObjectKey\";\r\n  // The `foo` in `import {foo as bar} from \"./abc\";`.\r\n  const ImportAccess = ObjectKey + 1; IdentifierRole[IdentifierRole[\"ImportAccess\"] = ImportAccess] = \"ImportAccess\";\r\n})(IdentifierRole || (IdentifierRole = {}));\r\n\r\n/**\r\n * Extra information on jsxTagStart tokens, used to determine which of the three\r\n * jsx functions are called in the automatic transform.\r\n */\r\nvar JSXRole; (function (JSXRole) {\r\n  // The element is self-closing or has a body that resolves to empty. We\r\n  // shouldn't emit children at all in this case.\r\n  const NoChildren = 0; JSXRole[JSXRole[\"NoChildren\"] = NoChildren] = \"NoChildren\";\r\n  // The element has a single explicit child, which might still be an arbitrary\r\n  // expression like an array. We should emit that expression as the children.\r\n  const OneChild = NoChildren + 1; JSXRole[JSXRole[\"OneChild\"] = OneChild] = \"OneChild\";\r\n  // The element has at least two explicitly-specified children or has spread\r\n  // children, so child positions are assumed to be \"static\". We should wrap\r\n  // these children in an array.\r\n  const StaticChildren = OneChild + 1; JSXRole[JSXRole[\"StaticChildren\"] = StaticChildren] = \"StaticChildren\";\r\n  // The element has a prop named \"key\" after a prop spread, so we should fall\r\n  // back to the createElement function.\r\n  const KeyAfterPropSpread = StaticChildren + 1; JSXRole[JSXRole[\"KeyAfterPropSpread\"] = KeyAfterPropSpread] = \"KeyAfterPropSpread\";\r\n})(JSXRole || (JSXRole = {}));\r\n\r\nfunction isDeclaration(token) {\r\n  const role = token.identifierRole;\r\n  return (\r\n    role === IdentifierRole.TopLevelDeclaration ||\r\n    role === IdentifierRole.FunctionScopedDeclaration ||\r\n    role === IdentifierRole.BlockScopedDeclaration ||\r\n    role === IdentifierRole.ObjectShorthandTopLevelDeclaration ||\r\n    role === IdentifierRole.ObjectShorthandFunctionScopedDeclaration ||\r\n    role === IdentifierRole.ObjectShorthandBlockScopedDeclaration\r\n  );\r\n}\r\n\r\nfunction isNonTopLevelDeclaration(token) {\r\n  const role = token.identifierRole;\r\n  return (\r\n    role === IdentifierRole.FunctionScopedDeclaration ||\r\n    role === IdentifierRole.BlockScopedDeclaration ||\r\n    role === IdentifierRole.ObjectShorthandFunctionScopedDeclaration ||\r\n    role === IdentifierRole.ObjectShorthandBlockScopedDeclaration\r\n  );\r\n}\r\n\r\nfunction isTopLevelDeclaration(token) {\r\n  const role = token.identifierRole;\r\n  return (\r\n    role === IdentifierRole.TopLevelDeclaration ||\r\n    role === IdentifierRole.ObjectShorthandTopLevelDeclaration ||\r\n    role === IdentifierRole.ImportDeclaration\r\n  );\r\n}\r\n\r\nfunction isBlockScopedDeclaration(token) {\r\n  const role = token.identifierRole;\r\n  // Treat top-level declarations as block scope since the distinction doesn't matter here.\r\n  return (\r\n    role === IdentifierRole.TopLevelDeclaration ||\r\n    role === IdentifierRole.BlockScopedDeclaration ||\r\n    role === IdentifierRole.ObjectShorthandTopLevelDeclaration ||\r\n    role === IdentifierRole.ObjectShorthandBlockScopedDeclaration\r\n  );\r\n}\r\n\r\nfunction isFunctionScopedDeclaration(token) {\r\n  const role = token.identifierRole;\r\n  return (\r\n    role === IdentifierRole.FunctionScopedDeclaration ||\r\n    role === IdentifierRole.ObjectShorthandFunctionScopedDeclaration\r\n  );\r\n}\r\n\r\nfunction isObjectShorthandDeclaration(token) {\r\n  return (\r\n    token.identifierRole === IdentifierRole.ObjectShorthandTopLevelDeclaration ||\r\n    token.identifierRole === IdentifierRole.ObjectShorthandBlockScopedDeclaration ||\r\n    token.identifierRole === IdentifierRole.ObjectShorthandFunctionScopedDeclaration\r\n  );\r\n}\r\n\r\n// Object type used to represent tokens. Note that normally, tokens\r\n// simply exist as properties on the parser object. This is only\r\n// used for the onToken callback and the external tokenizer.\r\nclass Token {\r\n  constructor() {\r\n    this.type = state.type;\r\n    this.contextualKeyword = state.contextualKeyword;\r\n    this.start = state.start;\r\n    this.end = state.end;\r\n    this.scopeDepth = state.scopeDepth;\r\n    this.isType = state.isType;\r\n    this.identifierRole = null;\r\n    this.jsxRole = null;\r\n    this.shadowsGlobal = false;\r\n    this.isAsyncOperation = false;\r\n    this.contextId = null;\r\n    this.rhsEndIndex = null;\r\n    this.isExpression = false;\r\n    this.numNullishCoalesceStarts = 0;\r\n    this.numNullishCoalesceEnds = 0;\r\n    this.isOptionalChainStart = false;\r\n    this.isOptionalChainEnd = false;\r\n    this.subscriptStartIndex = null;\r\n    this.nullishStartIndex = null;\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  // Initially false for all tokens, then may be computed in a follow-up step that does scope\r\n  // analysis.\r\n  \r\n  // Initially false for all tokens, but may be set during transform to mark it as containing an\r\n  // await operation.\r\n  \r\n  \r\n  // For assignments, the index of the RHS. For export tokens, the end of the export.\r\n  \r\n  // For class tokens, records if the class is a class expression or a class statement.\r\n  \r\n  // Number of times to insert a `nullishCoalesce(` snippet before this token.\r\n  \r\n  // Number of times to insert a `)` snippet after this token.\r\n  \r\n  // If true, insert an `optionalChain([` snippet before this token.\r\n  \r\n  // If true, insert a `])` snippet after this token.\r\n  \r\n  // Tag for `.`, `?.`, `[`, `?.[`, `(`, and `?.(` to denote the \"root\" token for this\r\n  // subscript chain. This can be used to determine if this chain is an optional chain.\r\n  \r\n  // Tag for `??` operators to denote the root token for this nullish coalescing call.\r\n  \r\n}\r\n\r\n// ## Tokenizer\r\n\r\n// Move to the next token\r\nfunction next() {\r\n  state.tokens.push(new Token());\r\n  nextToken();\r\n}\r\n\r\n// Call instead of next when inside a template, since that needs to be handled differently.\r\nfunction nextTemplateToken() {\r\n  state.tokens.push(new Token());\r\n  state.start = state.pos;\r\n  readTmplToken();\r\n}\r\n\r\n// The tokenizer never parses regexes by default. Instead, the parser is responsible for\r\n// instructing it to parse a regex when we see a slash at the start of an expression.\r\nfunction retokenizeSlashAsRegex() {\r\n  if (state.type === TokenType.assign) {\r\n    --state.pos;\r\n  }\r\n  readRegexp();\r\n}\r\n\r\nfunction pushTypeContext(existingTokensInType) {\r\n  for (let i = state.tokens.length - existingTokensInType; i < state.tokens.length; i++) {\r\n    state.tokens[i].isType = true;\r\n  }\r\n  const oldIsType = state.isType;\r\n  state.isType = true;\r\n  return oldIsType;\r\n}\r\n\r\nfunction popTypeContext(oldIsType) {\r\n  state.isType = oldIsType;\r\n}\r\n\r\nfunction eat(type) {\r\n  if (match(type)) {\r\n    next();\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction eatTypeToken(tokenType) {\r\n  const oldIsType = state.isType;\r\n  state.isType = true;\r\n  eat(tokenType);\r\n  state.isType = oldIsType;\r\n}\r\n\r\nfunction match(type) {\r\n  return state.type === type;\r\n}\r\n\r\nfunction lookaheadType() {\r\n  const snapshot = state.snapshot();\r\n  next();\r\n  const type = state.type;\r\n  state.restoreFromSnapshot(snapshot);\r\n  return type;\r\n}\r\n\r\nclass TypeAndKeyword {\r\n  \r\n  \r\n  constructor(type, contextualKeyword) {\r\n    this.type = type;\r\n    this.contextualKeyword = contextualKeyword;\r\n  }\r\n}\r\n\r\nfunction lookaheadTypeAndKeyword() {\r\n  const snapshot = state.snapshot();\r\n  next();\r\n  const type = state.type;\r\n  const contextualKeyword = state.contextualKeyword;\r\n  state.restoreFromSnapshot(snapshot);\r\n  return new TypeAndKeyword(type, contextualKeyword);\r\n}\r\n\r\nfunction nextTokenStart() {\r\n  return nextTokenStartSince(state.pos);\r\n}\r\n\r\nfunction nextTokenStartSince(pos) {\r\n  skipWhiteSpace.lastIndex = pos;\r\n  const skip = skipWhiteSpace.exec(input);\r\n  return pos + skip[0].length;\r\n}\r\n\r\nfunction lookaheadCharCode() {\r\n  return input.charCodeAt(nextTokenStart());\r\n}\r\n\r\n// Read a single token, updating the parser object's token-related\r\n// properties.\r\nfunction nextToken() {\r\n  skipSpace();\r\n  state.start = state.pos;\r\n  if (state.pos >= input.length) {\r\n    const tokens = state.tokens;\r\n    // We normally run past the end a bit, but if we're way past the end, avoid an infinite loop.\r\n    // Also check the token positions rather than the types since sometimes we rewrite the token\r\n    // type to something else.\r\n    if (\r\n      tokens.length >= 2 &&\r\n      tokens[tokens.length - 1].start >= input.length &&\r\n      tokens[tokens.length - 2].start >= input.length\r\n    ) {\r\n      unexpected(\"Unexpectedly reached the end of input.\");\r\n    }\r\n    finishToken(TokenType.eof);\r\n    return;\r\n  }\r\n  readToken(input.charCodeAt(state.pos));\r\n}\r\n\r\nfunction readToken(code) {\r\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\r\n  // identifiers, so '\\' also dispatches to that.\r\n  if (\r\n    IS_IDENTIFIER_START[code] ||\r\n    code === charCodes.backslash ||\r\n    (code === charCodes.atSign && input.charCodeAt(state.pos + 1) === charCodes.atSign)\r\n  ) {\r\n    readWord();\r\n  } else {\r\n    getTokenFromCode(code);\r\n  }\r\n}\r\n\r\nfunction skipBlockComment() {\r\n  while (\r\n    input.charCodeAt(state.pos) !== charCodes.asterisk ||\r\n    input.charCodeAt(state.pos + 1) !== charCodes.slash\r\n  ) {\r\n    state.pos++;\r\n    if (state.pos > input.length) {\r\n      unexpected(\"Unterminated comment\", state.pos - 2);\r\n      return;\r\n    }\r\n  }\r\n  state.pos += 2;\r\n}\r\n\r\nfunction skipLineComment(startSkip) {\r\n  let ch = input.charCodeAt((state.pos += startSkip));\r\n  if (state.pos < input.length) {\r\n    while (\r\n      ch !== charCodes.lineFeed &&\r\n      ch !== charCodes.carriageReturn &&\r\n      ch !== charCodes.lineSeparator &&\r\n      ch !== charCodes.paragraphSeparator &&\r\n      ++state.pos < input.length\r\n    ) {\r\n      ch = input.charCodeAt(state.pos);\r\n    }\r\n  }\r\n}\r\n\r\n// Called at the start of the parse and after every token. Skips\r\n// whitespace and comments.\r\nfunction skipSpace() {\r\n  while (state.pos < input.length) {\r\n    const ch = input.charCodeAt(state.pos);\r\n    switch (ch) {\r\n      case charCodes.carriageReturn:\r\n        if (input.charCodeAt(state.pos + 1) === charCodes.lineFeed) {\r\n          ++state.pos;\r\n        }\r\n\r\n      case charCodes.lineFeed:\r\n      case charCodes.lineSeparator:\r\n      case charCodes.paragraphSeparator:\r\n        ++state.pos;\r\n        break;\r\n\r\n      case charCodes.slash:\r\n        switch (input.charCodeAt(state.pos + 1)) {\r\n          case charCodes.asterisk:\r\n            state.pos += 2;\r\n            skipBlockComment();\r\n            break;\r\n\r\n          case charCodes.slash:\r\n            skipLineComment(2);\r\n            break;\r\n\r\n          default:\r\n            return;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        if (IS_WHITESPACE[ch]) {\r\n          ++state.pos;\r\n        } else {\r\n          return;\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\n// Called at the end of every token. Sets various fields, and skips the space after the token, so\r\n// that the next one's `start` will point at the right position.\r\nfunction finishToken(\r\n  type,\r\n  contextualKeyword = ContextualKeyword.NONE,\r\n) {\r\n  state.end = state.pos;\r\n  state.type = type;\r\n  state.contextualKeyword = contextualKeyword;\r\n}\r\n\r\n// ### Token reading\r\n\r\n// This is the function that is called to fetch the next token. It\r\n// is somewhat obscure, because it works in character codes rather\r\n// than characters, and because operator parsing has been inlined\r\n// into it.\r\n//\r\n// All in the name of speed.\r\nfunction readToken_dot() {\r\n  const nextChar = input.charCodeAt(state.pos + 1);\r\n  if (nextChar >= charCodes.digit0 && nextChar <= charCodes.digit9) {\r\n    readNumber(true);\r\n    return;\r\n  }\r\n\r\n  if (nextChar === charCodes.dot && input.charCodeAt(state.pos + 2) === charCodes.dot) {\r\n    state.pos += 3;\r\n    finishToken(TokenType.ellipsis);\r\n  } else {\r\n    ++state.pos;\r\n    finishToken(TokenType.dot);\r\n  }\r\n}\r\n\r\nfunction readToken_slash() {\r\n  const nextChar = input.charCodeAt(state.pos + 1);\r\n  if (nextChar === charCodes.equalsTo) {\r\n    finishOp(TokenType.assign, 2);\r\n  } else {\r\n    finishOp(TokenType.slash, 1);\r\n  }\r\n}\r\n\r\nfunction readToken_mult_modulo(code) {\r\n  // '%*'\r\n  let tokenType = code === charCodes.asterisk ? TokenType.star : TokenType.modulo;\r\n  let width = 1;\r\n  let nextChar = input.charCodeAt(state.pos + 1);\r\n\r\n  // Exponentiation operator **\r\n  if (code === charCodes.asterisk && nextChar === charCodes.asterisk) {\r\n    width++;\r\n    nextChar = input.charCodeAt(state.pos + 2);\r\n    tokenType = TokenType.exponent;\r\n  }\r\n\r\n  // Match *= or %=, disallowing *=> which can be valid in flow.\r\n  if (\r\n    nextChar === charCodes.equalsTo &&\r\n    input.charCodeAt(state.pos + 2) !== charCodes.greaterThan\r\n  ) {\r\n    width++;\r\n    tokenType = TokenType.assign;\r\n  }\r\n\r\n  finishOp(tokenType, width);\r\n}\r\n\r\nfunction readToken_pipe_amp(code) {\r\n  // '|&'\r\n  const nextChar = input.charCodeAt(state.pos + 1);\r\n\r\n  if (nextChar === code) {\r\n    if (input.charCodeAt(state.pos + 2) === charCodes.equalsTo) {\r\n      // ||= or &&=\r\n      finishOp(TokenType.assign, 3);\r\n    } else {\r\n      // || or &&\r\n      finishOp(code === charCodes.verticalBar ? TokenType.logicalOR : TokenType.logicalAND, 2);\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (code === charCodes.verticalBar) {\r\n    // '|>'\r\n    if (nextChar === charCodes.greaterThan) {\r\n      finishOp(TokenType.pipeline, 2);\r\n      return;\r\n    } else if (nextChar === charCodes.rightCurlyBrace && isFlowEnabled) {\r\n      // '|}'\r\n      finishOp(TokenType.braceBarR, 2);\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (nextChar === charCodes.equalsTo) {\r\n    finishOp(TokenType.assign, 2);\r\n    return;\r\n  }\r\n\r\n  finishOp(code === charCodes.verticalBar ? TokenType.bitwiseOR : TokenType.bitwiseAND, 1);\r\n}\r\n\r\nfunction readToken_caret() {\r\n  // '^'\r\n  const nextChar = input.charCodeAt(state.pos + 1);\r\n  if (nextChar === charCodes.equalsTo) {\r\n    finishOp(TokenType.assign, 2);\r\n  } else {\r\n    finishOp(TokenType.bitwiseXOR, 1);\r\n  }\r\n}\r\n\r\nfunction readToken_plus_min(code) {\r\n  // '+-'\r\n  const nextChar = input.charCodeAt(state.pos + 1);\r\n\r\n  if (nextChar === code) {\r\n    // Tentatively call this a prefix operator, but it might be changed to postfix later.\r\n    finishOp(TokenType.preIncDec, 2);\r\n    return;\r\n  }\r\n\r\n  if (nextChar === charCodes.equalsTo) {\r\n    finishOp(TokenType.assign, 2);\r\n  } else if (code === charCodes.plusSign) {\r\n    finishOp(TokenType.plus, 1);\r\n  } else {\r\n    finishOp(TokenType.minus, 1);\r\n  }\r\n}\r\n\r\nfunction readToken_lt() {\r\n  const nextChar = input.charCodeAt(state.pos + 1);\r\n\r\n  if (nextChar === charCodes.lessThan) {\r\n    if (input.charCodeAt(state.pos + 2) === charCodes.equalsTo) {\r\n      finishOp(TokenType.assign, 3);\r\n      return;\r\n    }\r\n    // We see <<, but need to be really careful about whether to treat it as a\r\n    // true left-shift or as two < tokens.\r\n    if (state.isType) {\r\n      // Within a type, << might come up in a snippet like `Array<<T>() => void>`,\r\n      // so treat it as two < tokens. Importantly, this should only override <<\r\n      // rather than other tokens like <= . If we treated <= as < in a type\r\n      // context, then the snippet `a as T <= 1` would incorrectly start parsing\r\n      // a type argument on T. We don't need to worry about `a as T << 1`\r\n      // because TypeScript disallows that syntax.\r\n      finishOp(TokenType.lessThan, 1);\r\n    } else {\r\n      // Outside a type, this might be a true left-shift operator, or it might\r\n      // still be two open-type-arg tokens, such as in `f<<T>() => void>()`. We\r\n      // look at the token while considering the `f`, so we don't yet know that\r\n      // we're in a type context. In this case, we initially tokenize as a\r\n      // left-shift and correct after-the-fact as necessary in\r\n      // tsParseTypeArgumentsWithPossibleBitshift .\r\n      finishOp(TokenType.bitShiftL, 2);\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (nextChar === charCodes.equalsTo) {\r\n    // <=\r\n    finishOp(TokenType.relationalOrEqual, 2);\r\n  } else {\r\n    finishOp(TokenType.lessThan, 1);\r\n  }\r\n}\r\n\r\nfunction readToken_gt() {\r\n  if (state.isType) {\r\n    // Avoid right-shift for things like `Array<Array<string>>` and\r\n    // greater-than-or-equal for things like `const a: Array<number>=[];`.\r\n    finishOp(TokenType.greaterThan, 1);\r\n    return;\r\n  }\r\n\r\n  const nextChar = input.charCodeAt(state.pos + 1);\r\n\r\n  if (nextChar === charCodes.greaterThan) {\r\n    const size = input.charCodeAt(state.pos + 2) === charCodes.greaterThan ? 3 : 2;\r\n    if (input.charCodeAt(state.pos + size) === charCodes.equalsTo) {\r\n      finishOp(TokenType.assign, size + 1);\r\n      return;\r\n    }\r\n    finishOp(TokenType.bitShiftR, size);\r\n    return;\r\n  }\r\n\r\n  if (nextChar === charCodes.equalsTo) {\r\n    // >=\r\n    finishOp(TokenType.relationalOrEqual, 2);\r\n  } else {\r\n    finishOp(TokenType.greaterThan, 1);\r\n  }\r\n}\r\n\r\n/**\r\n * Called after `as` expressions in TS; we're switching from a type to a\r\n * non-type context, so a > token may actually be >= . This is needed because >=\r\n * must be tokenized as a > in a type context because of code like\r\n * `const x: Array<T>=[];`, but `a as T >= 1` is a code example where it must be\r\n * treated as >=.\r\n *\r\n * Notably, this only applies to >, not <. In a code snippet like `a as T <= 1`,\r\n * we must NOT tokenize as <, or else the type parser will start parsing a type\r\n * argument and fail.\r\n */\r\nfunction rescan_gt() {\r\n  if (state.type === TokenType.greaterThan) {\r\n    state.pos -= 1;\r\n    readToken_gt();\r\n  }\r\n}\r\n\r\nfunction readToken_eq_excl(code) {\r\n  // '=!'\r\n  const nextChar = input.charCodeAt(state.pos + 1);\r\n  if (nextChar === charCodes.equalsTo) {\r\n    finishOp(TokenType.equality, input.charCodeAt(state.pos + 2) === charCodes.equalsTo ? 3 : 2);\r\n    return;\r\n  }\r\n  if (code === charCodes.equalsTo && nextChar === charCodes.greaterThan) {\r\n    // '=>'\r\n    state.pos += 2;\r\n    finishToken(TokenType.arrow);\r\n    return;\r\n  }\r\n  finishOp(code === charCodes.equalsTo ? TokenType.eq : TokenType.bang, 1);\r\n}\r\n\r\nfunction readToken_question() {\r\n  // '?'\r\n  const nextChar = input.charCodeAt(state.pos + 1);\r\n  const nextChar2 = input.charCodeAt(state.pos + 2);\r\n  if (\r\n    nextChar === charCodes.questionMark &&\r\n    // In Flow (but not TypeScript), ??string is a valid type that should be\r\n    // tokenized as two individual ? tokens.\r\n    !(isFlowEnabled && state.isType)\r\n  ) {\r\n    if (nextChar2 === charCodes.equalsTo) {\r\n      // '??='\r\n      finishOp(TokenType.assign, 3);\r\n    } else {\r\n      // '??'\r\n      finishOp(TokenType.nullishCoalescing, 2);\r\n    }\r\n  } else if (\r\n    nextChar === charCodes.dot &&\r\n    !(nextChar2 >= charCodes.digit0 && nextChar2 <= charCodes.digit9)\r\n  ) {\r\n    // '.' not followed by a number\r\n    state.pos += 2;\r\n    finishToken(TokenType.questionDot);\r\n  } else {\r\n    ++state.pos;\r\n    finishToken(TokenType.question);\r\n  }\r\n}\r\n\r\nfunction getTokenFromCode(code) {\r\n  switch (code) {\r\n    case charCodes.numberSign:\r\n      ++state.pos;\r\n      finishToken(TokenType.hash);\r\n      return;\r\n\r\n    // The interpretation of a dot depends on whether it is followed\r\n    // by a digit or another two dots.\r\n\r\n    case charCodes.dot:\r\n      readToken_dot();\r\n      return;\r\n\r\n    // Punctuation tokens.\r\n    case charCodes.leftParenthesis:\r\n      ++state.pos;\r\n      finishToken(TokenType.parenL);\r\n      return;\r\n    case charCodes.rightParenthesis:\r\n      ++state.pos;\r\n      finishToken(TokenType.parenR);\r\n      return;\r\n    case charCodes.semicolon:\r\n      ++state.pos;\r\n      finishToken(TokenType.semi);\r\n      return;\r\n    case charCodes.comma:\r\n      ++state.pos;\r\n      finishToken(TokenType.comma);\r\n      return;\r\n    case charCodes.leftSquareBracket:\r\n      ++state.pos;\r\n      finishToken(TokenType.bracketL);\r\n      return;\r\n    case charCodes.rightSquareBracket:\r\n      ++state.pos;\r\n      finishToken(TokenType.bracketR);\r\n      return;\r\n\r\n    case charCodes.leftCurlyBrace:\r\n      if (isFlowEnabled && input.charCodeAt(state.pos + 1) === charCodes.verticalBar) {\r\n        finishOp(TokenType.braceBarL, 2);\r\n      } else {\r\n        ++state.pos;\r\n        finishToken(TokenType.braceL);\r\n      }\r\n      return;\r\n\r\n    case charCodes.rightCurlyBrace:\r\n      ++state.pos;\r\n      finishToken(TokenType.braceR);\r\n      return;\r\n\r\n    case charCodes.colon:\r\n      if (input.charCodeAt(state.pos + 1) === charCodes.colon) {\r\n        finishOp(TokenType.doubleColon, 2);\r\n      } else {\r\n        ++state.pos;\r\n        finishToken(TokenType.colon);\r\n      }\r\n      return;\r\n\r\n    case charCodes.questionMark:\r\n      readToken_question();\r\n      return;\r\n    case charCodes.atSign:\r\n      ++state.pos;\r\n      finishToken(TokenType.at);\r\n      return;\r\n\r\n    case charCodes.graveAccent:\r\n      ++state.pos;\r\n      finishToken(TokenType.backQuote);\r\n      return;\r\n\r\n    case charCodes.digit0: {\r\n      const nextChar = input.charCodeAt(state.pos + 1);\r\n      // '0x', '0X', '0o', '0O', '0b', '0B'\r\n      if (\r\n        nextChar === charCodes.lowercaseX ||\r\n        nextChar === charCodes.uppercaseX ||\r\n        nextChar === charCodes.lowercaseO ||\r\n        nextChar === charCodes.uppercaseO ||\r\n        nextChar === charCodes.lowercaseB ||\r\n        nextChar === charCodes.uppercaseB\r\n      ) {\r\n        readRadixNumber();\r\n        return;\r\n      }\r\n    }\r\n    // Anything else beginning with a digit is an integer, octal\r\n    // number, or float.\r\n    case charCodes.digit1:\r\n    case charCodes.digit2:\r\n    case charCodes.digit3:\r\n    case charCodes.digit4:\r\n    case charCodes.digit5:\r\n    case charCodes.digit6:\r\n    case charCodes.digit7:\r\n    case charCodes.digit8:\r\n    case charCodes.digit9:\r\n      readNumber(false);\r\n      return;\r\n\r\n    // Quotes produce strings.\r\n    case charCodes.quotationMark:\r\n    case charCodes.apostrophe:\r\n      readString(code);\r\n      return;\r\n\r\n    // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\r\n    // often referred to. `finishOp` simply skips the amount of\r\n    // characters it is given as second argument, and returns a token\r\n    // of the type given by its first argument.\r\n\r\n    case charCodes.slash:\r\n      readToken_slash();\r\n      return;\r\n\r\n    case charCodes.percentSign:\r\n    case charCodes.asterisk:\r\n      readToken_mult_modulo(code);\r\n      return;\r\n\r\n    case charCodes.verticalBar:\r\n    case charCodes.ampersand:\r\n      readToken_pipe_amp(code);\r\n      return;\r\n\r\n    case charCodes.caret:\r\n      readToken_caret();\r\n      return;\r\n\r\n    case charCodes.plusSign:\r\n    case charCodes.dash:\r\n      readToken_plus_min(code);\r\n      return;\r\n\r\n    case charCodes.lessThan:\r\n      readToken_lt();\r\n      return;\r\n\r\n    case charCodes.greaterThan:\r\n      readToken_gt();\r\n      return;\r\n\r\n    case charCodes.equalsTo:\r\n    case charCodes.exclamationMark:\r\n      readToken_eq_excl(code);\r\n      return;\r\n\r\n    case charCodes.tilde:\r\n      finishOp(TokenType.tilde, 1);\r\n      return;\r\n  }\r\n\r\n  unexpected(`Unexpected character '${String.fromCharCode(code)}'`, state.pos);\r\n}\r\n\r\nfunction finishOp(type, size) {\r\n  state.pos += size;\r\n  finishToken(type);\r\n}\r\n\r\nfunction readRegexp() {\r\n  const start = state.pos;\r\n  let escaped = false;\r\n  let inClass = false;\r\n  for (;;) {\r\n    if (state.pos >= input.length) {\r\n      unexpected(\"Unterminated regular expression\", start);\r\n      return;\r\n    }\r\n    const code = input.charCodeAt(state.pos);\r\n    if (escaped) {\r\n      escaped = false;\r\n    } else {\r\n      if (code === charCodes.leftSquareBracket) {\r\n        inClass = true;\r\n      } else if (code === charCodes.rightSquareBracket && inClass) {\r\n        inClass = false;\r\n      } else if (code === charCodes.slash && !inClass) {\r\n        break;\r\n      }\r\n      escaped = code === charCodes.backslash;\r\n    }\r\n    ++state.pos;\r\n  }\r\n  ++state.pos;\r\n  // Need to use `skipWord` because '\\uXXXX' sequences are allowed here (don't ask).\r\n  skipWord();\r\n\r\n  finishToken(TokenType.regexp);\r\n}\r\n\r\n/**\r\n * Read a decimal integer. Note that this can't be unified with the similar code\r\n * in readRadixNumber (which also handles hex digits) because \"e\" needs to be\r\n * the end of the integer so that we can properly handle scientific notation.\r\n */\r\nfunction readInt() {\r\n  while (true) {\r\n    const code = input.charCodeAt(state.pos);\r\n    if ((code >= charCodes.digit0 && code <= charCodes.digit9) || code === charCodes.underscore) {\r\n      state.pos++;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction readRadixNumber() {\r\n  state.pos += 2; // 0x\r\n\r\n  // Walk to the end of the number, allowing hex digits.\r\n  while (true) {\r\n    const code = input.charCodeAt(state.pos);\r\n    if (\r\n      (code >= charCodes.digit0 && code <= charCodes.digit9) ||\r\n      (code >= charCodes.lowercaseA && code <= charCodes.lowercaseF) ||\r\n      (code >= charCodes.uppercaseA && code <= charCodes.uppercaseF) ||\r\n      code === charCodes.underscore\r\n    ) {\r\n      state.pos++;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n\r\n  const nextChar = input.charCodeAt(state.pos);\r\n  if (nextChar === charCodes.lowercaseN) {\r\n    ++state.pos;\r\n    finishToken(TokenType.bigint);\r\n  } else {\r\n    finishToken(TokenType.num);\r\n  }\r\n}\r\n\r\n// Read an integer, octal integer, or floating-point number.\r\nfunction readNumber(startsWithDot) {\r\n  let isBigInt = false;\r\n  let isDecimal = false;\r\n\r\n  if (!startsWithDot) {\r\n    readInt();\r\n  }\r\n\r\n  let nextChar = input.charCodeAt(state.pos);\r\n  if (nextChar === charCodes.dot) {\r\n    ++state.pos;\r\n    readInt();\r\n    nextChar = input.charCodeAt(state.pos);\r\n  }\r\n\r\n  if (nextChar === charCodes.uppercaseE || nextChar === charCodes.lowercaseE) {\r\n    nextChar = input.charCodeAt(++state.pos);\r\n    if (nextChar === charCodes.plusSign || nextChar === charCodes.dash) {\r\n      ++state.pos;\r\n    }\r\n    readInt();\r\n    nextChar = input.charCodeAt(state.pos);\r\n  }\r\n\r\n  if (nextChar === charCodes.lowercaseN) {\r\n    ++state.pos;\r\n    isBigInt = true;\r\n  } else if (nextChar === charCodes.lowercaseM) {\r\n    ++state.pos;\r\n    isDecimal = true;\r\n  }\r\n\r\n  if (isBigInt) {\r\n    finishToken(TokenType.bigint);\r\n    return;\r\n  }\r\n\r\n  if (isDecimal) {\r\n    finishToken(TokenType.decimal);\r\n    return;\r\n  }\r\n\r\n  finishToken(TokenType.num);\r\n}\r\n\r\nfunction readString(quote) {\r\n  state.pos++;\r\n  for (;;) {\r\n    if (state.pos >= input.length) {\r\n      unexpected(\"Unterminated string constant\");\r\n      return;\r\n    }\r\n    const ch = input.charCodeAt(state.pos);\r\n    if (ch === charCodes.backslash) {\r\n      state.pos++;\r\n    } else if (ch === quote) {\r\n      break;\r\n    }\r\n    state.pos++;\r\n  }\r\n  state.pos++;\r\n  finishToken(TokenType.string);\r\n}\r\n\r\n// Reads template string tokens.\r\nfunction readTmplToken() {\r\n  for (;;) {\r\n    if (state.pos >= input.length) {\r\n      unexpected(\"Unterminated template\");\r\n      return;\r\n    }\r\n    const ch = input.charCodeAt(state.pos);\r\n    if (\r\n      ch === charCodes.graveAccent ||\r\n      (ch === charCodes.dollarSign && input.charCodeAt(state.pos + 1) === charCodes.leftCurlyBrace)\r\n    ) {\r\n      if (state.pos === state.start && match(TokenType.template)) {\r\n        if (ch === charCodes.dollarSign) {\r\n          state.pos += 2;\r\n          finishToken(TokenType.dollarBraceL);\r\n          return;\r\n        } else {\r\n          ++state.pos;\r\n          finishToken(TokenType.backQuote);\r\n          return;\r\n        }\r\n      }\r\n      finishToken(TokenType.template);\r\n      return;\r\n    }\r\n    if (ch === charCodes.backslash) {\r\n      state.pos++;\r\n    }\r\n    state.pos++;\r\n  }\r\n}\r\n\r\n// Skip to the end of the current word. Note that this is the same as the snippet at the end of\r\n// readWord, but calling skipWord from readWord seems to slightly hurt performance from some rough\r\n// measurements.\r\nfunction skipWord() {\r\n  while (state.pos < input.length) {\r\n    const ch = input.charCodeAt(state.pos);\r\n    if (IS_IDENTIFIER_CHAR[ch]) {\r\n      state.pos++;\r\n    } else if (ch === charCodes.backslash) {\r\n      // \\u\r\n      state.pos += 2;\r\n      if (input.charCodeAt(state.pos) === charCodes.leftCurlyBrace) {\r\n        while (\r\n          state.pos < input.length &&\r\n          input.charCodeAt(state.pos) !== charCodes.rightCurlyBrace\r\n        ) {\r\n          state.pos++;\r\n        }\r\n        state.pos++;\r\n      }\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Determine information about this named import or named export specifier.\r\n *\r\n * This syntax is the `a` from statements like these:\r\n * import {A} from \"./foo\";\r\n * export {A};\r\n * export {A} from \"./foo\";\r\n *\r\n * As it turns out, we can exactly characterize the syntax meaning by simply\r\n * counting the number of tokens, which can be from 1 to 4:\r\n * {A}\r\n * {type A}\r\n * {A as B}\r\n * {type A as B}\r\n *\r\n * In the type case, we never actually need the names in practice, so don't get\r\n * them.\r\n *\r\n * TODO: There's some redundancy with the type detection here and the isType\r\n * flag that's already present on tokens in TS mode. This function could\r\n * potentially be simplified and/or pushed to the call sites to avoid the object\r\n * allocation.\r\n */\r\nfunction getImportExportSpecifierInfo(\r\n  tokens,\r\n  index = tokens.currentIndex(),\r\n) {\r\n  let endIndex = index + 1;\r\n  if (isSpecifierEnd(tokens, endIndex)) {\r\n    // import {A}\r\n    const name = tokens.identifierNameAtIndex(index);\r\n    return {\r\n      isType: false,\r\n      leftName: name,\r\n      rightName: name,\r\n      endIndex,\r\n    };\r\n  }\r\n  endIndex++;\r\n  if (isSpecifierEnd(tokens, endIndex)) {\r\n    // import {type A}\r\n    return {\r\n      isType: true,\r\n      leftName: null,\r\n      rightName: null,\r\n      endIndex,\r\n    };\r\n  }\r\n  endIndex++;\r\n  if (isSpecifierEnd(tokens, endIndex)) {\r\n    // import {A as B}\r\n    return {\r\n      isType: false,\r\n      leftName: tokens.identifierNameAtIndex(index),\r\n      rightName: tokens.identifierNameAtIndex(index + 2),\r\n      endIndex,\r\n    };\r\n  }\r\n  endIndex++;\r\n  if (isSpecifierEnd(tokens, endIndex)) {\r\n    // import {type A as B}\r\n    return {\r\n      isType: true,\r\n      leftName: null,\r\n      rightName: null,\r\n      endIndex,\r\n    };\r\n  }\r\n  throw new Error(`Unexpected import/export specifier at ${index}`);\r\n}\r\n\r\nfunction isSpecifierEnd(tokens, index) {\r\n  const token = tokens.tokens[index];\r\n  return token.type === TokenType.braceR || token.type === TokenType.comma;\r\n}\r\n\r\n// Use a Map rather than object to avoid unexpected __proto__ access.\r\nconst XHTMLEntities = new Map([\r\n  [\"quot\", \"\\u0022\"],\r\n  [\"amp\", \"&\"],\r\n  [\"apos\", \"\\u0027\"],\r\n  [\"lt\", \"<\"],\r\n  [\"gt\", \">\"],\r\n  [\"nbsp\", \"\\u00A0\"],\r\n  [\"iexcl\", \"\\u00A1\"],\r\n  [\"cent\", \"\\u00A2\"],\r\n  [\"pound\", \"\\u00A3\"],\r\n  [\"curren\", \"\\u00A4\"],\r\n  [\"yen\", \"\\u00A5\"],\r\n  [\"brvbar\", \"\\u00A6\"],\r\n  [\"sect\", \"\\u00A7\"],\r\n  [\"uml\", \"\\u00A8\"],\r\n  [\"copy\", \"\\u00A9\"],\r\n  [\"ordf\", \"\\u00AA\"],\r\n  [\"laquo\", \"\\u00AB\"],\r\n  [\"not\", \"\\u00AC\"],\r\n  [\"shy\", \"\\u00AD\"],\r\n  [\"reg\", \"\\u00AE\"],\r\n  [\"macr\", \"\\u00AF\"],\r\n  [\"deg\", \"\\u00B0\"],\r\n  [\"plusmn\", \"\\u00B1\"],\r\n  [\"sup2\", \"\\u00B2\"],\r\n  [\"sup3\", \"\\u00B3\"],\r\n  [\"acute\", \"\\u00B4\"],\r\n  [\"micro\", \"\\u00B5\"],\r\n  [\"para\", \"\\u00B6\"],\r\n  [\"middot\", \"\\u00B7\"],\r\n  [\"cedil\", \"\\u00B8\"],\r\n  [\"sup1\", \"\\u00B9\"],\r\n  [\"ordm\", \"\\u00BA\"],\r\n  [\"raquo\", \"\\u00BB\"],\r\n  [\"frac14\", \"\\u00BC\"],\r\n  [\"frac12\", \"\\u00BD\"],\r\n  [\"frac34\", \"\\u00BE\"],\r\n  [\"iquest\", \"\\u00BF\"],\r\n  [\"Agrave\", \"\\u00C0\"],\r\n  [\"Aacute\", \"\\u00C1\"],\r\n  [\"Acirc\", \"\\u00C2\"],\r\n  [\"Atilde\", \"\\u00C3\"],\r\n  [\"Auml\", \"\\u00C4\"],\r\n  [\"Aring\", \"\\u00C5\"],\r\n  [\"AElig\", \"\\u00C6\"],\r\n  [\"Ccedil\", \"\\u00C7\"],\r\n  [\"Egrave\", \"\\u00C8\"],\r\n  [\"Eacute\", \"\\u00C9\"],\r\n  [\"Ecirc\", \"\\u00CA\"],\r\n  [\"Euml\", \"\\u00CB\"],\r\n  [\"Igrave\", \"\\u00CC\"],\r\n  [\"Iacute\", \"\\u00CD\"],\r\n  [\"Icirc\", \"\\u00CE\"],\r\n  [\"Iuml\", \"\\u00CF\"],\r\n  [\"ETH\", \"\\u00D0\"],\r\n  [\"Ntilde\", \"\\u00D1\"],\r\n  [\"Ograve\", \"\\u00D2\"],\r\n  [\"Oacute\", \"\\u00D3\"],\r\n  [\"Ocirc\", \"\\u00D4\"],\r\n  [\"Otilde\", \"\\u00D5\"],\r\n  [\"Ouml\", \"\\u00D6\"],\r\n  [\"times\", \"\\u00D7\"],\r\n  [\"Oslash\", \"\\u00D8\"],\r\n  [\"Ugrave\", \"\\u00D9\"],\r\n  [\"Uacute\", \"\\u00DA\"],\r\n  [\"Ucirc\", \"\\u00DB\"],\r\n  [\"Uuml\", \"\\u00DC\"],\r\n  [\"Yacute\", \"\\u00DD\"],\r\n  [\"THORN\", \"\\u00DE\"],\r\n  [\"szlig\", \"\\u00DF\"],\r\n  [\"agrave\", \"\\u00E0\"],\r\n  [\"aacute\", \"\\u00E1\"],\r\n  [\"acirc\", \"\\u00E2\"],\r\n  [\"atilde\", \"\\u00E3\"],\r\n  [\"auml\", \"\\u00E4\"],\r\n  [\"aring\", \"\\u00E5\"],\r\n  [\"aelig\", \"\\u00E6\"],\r\n  [\"ccedil\", \"\\u00E7\"],\r\n  [\"egrave\", \"\\u00E8\"],\r\n  [\"eacute\", \"\\u00E9\"],\r\n  [\"ecirc\", \"\\u00EA\"],\r\n  [\"euml\", \"\\u00EB\"],\r\n  [\"igrave\", \"\\u00EC\"],\r\n  [\"iacute\", \"\\u00ED\"],\r\n  [\"icirc\", \"\\u00EE\"],\r\n  [\"iuml\", \"\\u00EF\"],\r\n  [\"eth\", \"\\u00F0\"],\r\n  [\"ntilde\", \"\\u00F1\"],\r\n  [\"ograve\", \"\\u00F2\"],\r\n  [\"oacute\", \"\\u00F3\"],\r\n  [\"ocirc\", \"\\u00F4\"],\r\n  [\"otilde\", \"\\u00F5\"],\r\n  [\"ouml\", \"\\u00F6\"],\r\n  [\"divide\", \"\\u00F7\"],\r\n  [\"oslash\", \"\\u00F8\"],\r\n  [\"ugrave\", \"\\u00F9\"],\r\n  [\"uacute\", \"\\u00FA\"],\r\n  [\"ucirc\", \"\\u00FB\"],\r\n  [\"uuml\", \"\\u00FC\"],\r\n  [\"yacute\", \"\\u00FD\"],\r\n  [\"thorn\", \"\\u00FE\"],\r\n  [\"yuml\", \"\\u00FF\"],\r\n  [\"OElig\", \"\\u0152\"],\r\n  [\"oelig\", \"\\u0153\"],\r\n  [\"Scaron\", \"\\u0160\"],\r\n  [\"scaron\", \"\\u0161\"],\r\n  [\"Yuml\", \"\\u0178\"],\r\n  [\"fnof\", \"\\u0192\"],\r\n  [\"circ\", \"\\u02C6\"],\r\n  [\"tilde\", \"\\u02DC\"],\r\n  [\"Alpha\", \"\\u0391\"],\r\n  [\"Beta\", \"\\u0392\"],\r\n  [\"Gamma\", \"\\u0393\"],\r\n  [\"Delta\", \"\\u0394\"],\r\n  [\"Epsilon\", \"\\u0395\"],\r\n  [\"Zeta\", \"\\u0396\"],\r\n  [\"Eta\", \"\\u0397\"],\r\n  [\"Theta\", \"\\u0398\"],\r\n  [\"Iota\", \"\\u0399\"],\r\n  [\"Kappa\", \"\\u039A\"],\r\n  [\"Lambda\", \"\\u039B\"],\r\n  [\"Mu\", \"\\u039C\"],\r\n  [\"Nu\", \"\\u039D\"],\r\n  [\"Xi\", \"\\u039E\"],\r\n  [\"Omicron\", \"\\u039F\"],\r\n  [\"Pi\", \"\\u03A0\"],\r\n  [\"Rho\", \"\\u03A1\"],\r\n  [\"Sigma\", \"\\u03A3\"],\r\n  [\"Tau\", \"\\u03A4\"],\r\n  [\"Upsilon\", \"\\u03A5\"],\r\n  [\"Phi\", \"\\u03A6\"],\r\n  [\"Chi\", \"\\u03A7\"],\r\n  [\"Psi\", \"\\u03A8\"],\r\n  [\"Omega\", \"\\u03A9\"],\r\n  [\"alpha\", \"\\u03B1\"],\r\n  [\"beta\", \"\\u03B2\"],\r\n  [\"gamma\", \"\\u03B3\"],\r\n  [\"delta\", \"\\u03B4\"],\r\n  [\"epsilon\", \"\\u03B5\"],\r\n  [\"zeta\", \"\\u03B6\"],\r\n  [\"eta\", \"\\u03B7\"],\r\n  [\"theta\", \"\\u03B8\"],\r\n  [\"iota\", \"\\u03B9\"],\r\n  [\"kappa\", \"\\u03BA\"],\r\n  [\"lambda\", \"\\u03BB\"],\r\n  [\"mu\", \"\\u03BC\"],\r\n  [\"nu\", \"\\u03BD\"],\r\n  [\"xi\", \"\\u03BE\"],\r\n  [\"omicron\", \"\\u03BF\"],\r\n  [\"pi\", \"\\u03C0\"],\r\n  [\"rho\", \"\\u03C1\"],\r\n  [\"sigmaf\", \"\\u03C2\"],\r\n  [\"sigma\", \"\\u03C3\"],\r\n  [\"tau\", \"\\u03C4\"],\r\n  [\"upsilon\", \"\\u03C5\"],\r\n  [\"phi\", \"\\u03C6\"],\r\n  [\"chi\", \"\\u03C7\"],\r\n  [\"psi\", \"\\u03C8\"],\r\n  [\"omega\", \"\\u03C9\"],\r\n  [\"thetasym\", \"\\u03D1\"],\r\n  [\"upsih\", \"\\u03D2\"],\r\n  [\"piv\", \"\\u03D6\"],\r\n  [\"ensp\", \"\\u2002\"],\r\n  [\"emsp\", \"\\u2003\"],\r\n  [\"thinsp\", \"\\u2009\"],\r\n  [\"zwnj\", \"\\u200C\"],\r\n  [\"zwj\", \"\\u200D\"],\r\n  [\"lrm\", \"\\u200E\"],\r\n  [\"rlm\", \"\\u200F\"],\r\n  [\"ndash\", \"\\u2013\"],\r\n  [\"mdash\", \"\\u2014\"],\r\n  [\"lsquo\", \"\\u2018\"],\r\n  [\"rsquo\", \"\\u2019\"],\r\n  [\"sbquo\", \"\\u201A\"],\r\n  [\"ldquo\", \"\\u201C\"],\r\n  [\"rdquo\", \"\\u201D\"],\r\n  [\"bdquo\", \"\\u201E\"],\r\n  [\"dagger\", \"\\u2020\"],\r\n  [\"Dagger\", \"\\u2021\"],\r\n  [\"bull\", \"\\u2022\"],\r\n  [\"hellip\", \"\\u2026\"],\r\n  [\"permil\", \"\\u2030\"],\r\n  [\"prime\", \"\\u2032\"],\r\n  [\"Prime\", \"\\u2033\"],\r\n  [\"lsaquo\", \"\\u2039\"],\r\n  [\"rsaquo\", \"\\u203A\"],\r\n  [\"oline\", \"\\u203E\"],\r\n  [\"frasl\", \"\\u2044\"],\r\n  [\"euro\", \"\\u20AC\"],\r\n  [\"image\", \"\\u2111\"],\r\n  [\"weierp\", \"\\u2118\"],\r\n  [\"real\", \"\\u211C\"],\r\n  [\"trade\", \"\\u2122\"],\r\n  [\"alefsym\", \"\\u2135\"],\r\n  [\"larr\", \"\\u2190\"],\r\n  [\"uarr\", \"\\u2191\"],\r\n  [\"rarr\", \"\\u2192\"],\r\n  [\"darr\", \"\\u2193\"],\r\n  [\"harr\", \"\\u2194\"],\r\n  [\"crarr\", \"\\u21B5\"],\r\n  [\"lArr\", \"\\u21D0\"],\r\n  [\"uArr\", \"\\u21D1\"],\r\n  [\"rArr\", \"\\u21D2\"],\r\n  [\"dArr\", \"\\u21D3\"],\r\n  [\"hArr\", \"\\u21D4\"],\r\n  [\"forall\", \"\\u2200\"],\r\n  [\"part\", \"\\u2202\"],\r\n  [\"exist\", \"\\u2203\"],\r\n  [\"empty\", \"\\u2205\"],\r\n  [\"nabla\", \"\\u2207\"],\r\n  [\"isin\", \"\\u2208\"],\r\n  [\"notin\", \"\\u2209\"],\r\n  [\"ni\", \"\\u220B\"],\r\n  [\"prod\", \"\\u220F\"],\r\n  [\"sum\", \"\\u2211\"],\r\n  [\"minus\", \"\\u2212\"],\r\n  [\"lowast\", \"\\u2217\"],\r\n  [\"radic\", \"\\u221A\"],\r\n  [\"prop\", \"\\u221D\"],\r\n  [\"infin\", \"\\u221E\"],\r\n  [\"ang\", \"\\u2220\"],\r\n  [\"and\", \"\\u2227\"],\r\n  [\"or\", \"\\u2228\"],\r\n  [\"cap\", \"\\u2229\"],\r\n  [\"cup\", \"\\u222A\"],\r\n  [\"int\", \"\\u222B\"],\r\n  [\"there4\", \"\\u2234\"],\r\n  [\"sim\", \"\\u223C\"],\r\n  [\"cong\", \"\\u2245\"],\r\n  [\"asymp\", \"\\u2248\"],\r\n  [\"ne\", \"\\u2260\"],\r\n  [\"equiv\", \"\\u2261\"],\r\n  [\"le\", \"\\u2264\"],\r\n  [\"ge\", \"\\u2265\"],\r\n  [\"sub\", \"\\u2282\"],\r\n  [\"sup\", \"\\u2283\"],\r\n  [\"nsub\", \"\\u2284\"],\r\n  [\"sube\", \"\\u2286\"],\r\n  [\"supe\", \"\\u2287\"],\r\n  [\"oplus\", \"\\u2295\"],\r\n  [\"otimes\", \"\\u2297\"],\r\n  [\"perp\", \"\\u22A5\"],\r\n  [\"sdot\", \"\\u22C5\"],\r\n  [\"lceil\", \"\\u2308\"],\r\n  [\"rceil\", \"\\u2309\"],\r\n  [\"lfloor\", \"\\u230A\"],\r\n  [\"rfloor\", \"\\u230B\"],\r\n  [\"lang\", \"\\u2329\"],\r\n  [\"rang\", \"\\u232A\"],\r\n  [\"loz\", \"\\u25CA\"],\r\n  [\"spades\", \"\\u2660\"],\r\n  [\"clubs\", \"\\u2663\"],\r\n  [\"hearts\", \"\\u2665\"],\r\n  [\"diams\", \"\\u2666\"],\r\n]);\r\n\r\nfunction getJSXPragmaInfo(options) {\r\n  const [base, suffix] = splitPragma(options.jsxPragma || \"React.createElement\");\r\n  const [fragmentBase, fragmentSuffix] = splitPragma(options.jsxFragmentPragma || \"React.Fragment\");\r\n  return {base, suffix, fragmentBase, fragmentSuffix};\r\n}\r\n\r\nfunction splitPragma(pragma) {\r\n  let dotIndex = pragma.indexOf(\".\");\r\n  if (dotIndex === -1) {\r\n    dotIndex = pragma.length;\r\n  }\r\n  return [pragma.slice(0, dotIndex), pragma.slice(dotIndex)];\r\n}\r\n\r\nclass Transformer {\r\n  // Return true if anything was processed, false otherwise.\r\n  \r\n\r\n  getPrefixCode() {\r\n    return \"\";\r\n  }\r\n\r\n  getHoistedCode() {\r\n    return \"\";\r\n  }\r\n\r\n  getSuffixCode() {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nclass JSXTransformer extends Transformer {\r\n  \r\n  \r\n  \r\n\r\n  // State for calculating the line number of each JSX tag in development.\r\n  __init() {this.lastLineNumber = 1;}\r\n  __init2() {this.lastIndex = 0;}\r\n\r\n  // In development, variable name holding the name of the current file.\r\n  __init3() {this.filenameVarName = null;}\r\n  // Mapping of claimed names for imports in the automatic transform, e,g.\r\n  // {jsx: \"_jsx\"}. This determines which imports to generate in the prefix.\r\n  __init4() {this.esmAutomaticImportNameResolutions = {};}\r\n  // When automatically adding imports in CJS mode, we store the variable name\r\n  // holding the imported CJS module so we can require it in the prefix.\r\n  __init5() {this.cjsAutomaticModuleNameResolutions = {};}\r\n\r\n  constructor(\r\n     rootTransformer,\r\n     tokens,\r\n     importProcessor,\r\n     nameManager,\r\n     options,\r\n  ) {\r\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.importProcessor = importProcessor;this.nameManager = nameManager;this.options = options;JSXTransformer.prototype.__init.call(this);JSXTransformer.prototype.__init2.call(this);JSXTransformer.prototype.__init3.call(this);JSXTransformer.prototype.__init4.call(this);JSXTransformer.prototype.__init5.call(this);    this.jsxPragmaInfo = getJSXPragmaInfo(options);\r\n    this.isAutomaticRuntime = options.jsxRuntime === \"automatic\";\r\n    this.jsxImportSource = options.jsxImportSource || \"react\";\r\n  }\r\n\r\n  process() {\r\n    if (this.tokens.matches1(TokenType.jsxTagStart)) {\r\n      this.processJSXTag();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPrefixCode() {\r\n    let prefix = \"\";\r\n    if (this.filenameVarName) {\r\n      prefix += `const ${this.filenameVarName} = ${JSON.stringify(this.options.filePath || \"\")};`;\r\n    }\r\n    if (this.isAutomaticRuntime) {\r\n      if (this.importProcessor) {\r\n        // CJS mode: emit require statements for all modules that were referenced.\r\n        for (const [path, resolvedName] of Object.entries(this.cjsAutomaticModuleNameResolutions)) {\r\n          prefix += `var ${resolvedName} = require(\"${path}\");`;\r\n        }\r\n      } else {\r\n        // ESM mode: consolidate and emit import statements for referenced names.\r\n        const {createElement: createElementResolution, ...otherResolutions} =\r\n          this.esmAutomaticImportNameResolutions;\r\n        if (createElementResolution) {\r\n          prefix += `import {createElement as ${createElementResolution}} from \"${this.jsxImportSource}\";`;\r\n        }\r\n        const importSpecifiers = Object.entries(otherResolutions)\r\n          .map(([name, resolvedName]) => `${name} as ${resolvedName}`)\r\n          .join(\", \");\r\n        if (importSpecifiers) {\r\n          const importPath =\r\n            this.jsxImportSource + (this.options.production ? \"/jsx-runtime\" : \"/jsx-dev-runtime\");\r\n          prefix += `import {${importSpecifiers}} from \"${importPath}\";`;\r\n        }\r\n      }\r\n    }\r\n    return prefix;\r\n  }\r\n\r\n  processJSXTag() {\r\n    const {jsxRole, start} = this.tokens.currentToken();\r\n    // Calculate line number information at the very start (if in development\r\n    // mode) so that the information is guaranteed to be queried in token order.\r\n    const elementLocationCode = this.options.production ? null : this.getElementLocationCode(start);\r\n    if (this.isAutomaticRuntime && jsxRole !== JSXRole.KeyAfterPropSpread) {\r\n      this.transformTagToJSXFunc(elementLocationCode, jsxRole);\r\n    } else {\r\n      this.transformTagToCreateElement(elementLocationCode);\r\n    }\r\n  }\r\n\r\n  getElementLocationCode(firstTokenStart) {\r\n    const lineNumber = this.getLineNumberForIndex(firstTokenStart);\r\n    return `lineNumber: ${lineNumber}`;\r\n  }\r\n\r\n  /**\r\n   * Get the line number for this source position. This is calculated lazily and\r\n   * must be called in increasing order by index.\r\n   */\r\n  getLineNumberForIndex(index) {\r\n    const code = this.tokens.code;\r\n    while (this.lastIndex < index && this.lastIndex < code.length) {\r\n      if (code[this.lastIndex] === \"\\n\") {\r\n        this.lastLineNumber++;\r\n      }\r\n      this.lastIndex++;\r\n    }\r\n    return this.lastLineNumber;\r\n  }\r\n\r\n  /**\r\n   * Convert the current JSX element to a call to jsx, jsxs, or jsxDEV. This is\r\n   * the primary transformation for the automatic transform.\r\n   *\r\n   * Example:\r\n   * <div a={1} key={2}>Hello{x}</div>\r\n   * becomes\r\n   * jsxs('div', {a: 1, children: [\"Hello\", x]}, 2)\r\n   */\r\n  transformTagToJSXFunc(elementLocationCode, jsxRole) {\r\n    const isStatic = jsxRole === JSXRole.StaticChildren;\r\n    // First tag is always jsxTagStart.\r\n    this.tokens.replaceToken(this.getJSXFuncInvocationCode(isStatic));\r\n\r\n    let keyCode = null;\r\n    if (this.tokens.matches1(TokenType.jsxTagEnd)) {\r\n      // Fragment syntax.\r\n      this.tokens.replaceToken(`${this.getFragmentCode()}, {`);\r\n      this.processAutomaticChildrenAndEndProps(jsxRole);\r\n    } else {\r\n      // Normal open tag or self-closing tag.\r\n      this.processTagIntro();\r\n      this.tokens.appendCode(\", {\");\r\n      keyCode = this.processProps(true);\r\n\r\n      if (this.tokens.matches2(TokenType.slash, TokenType.jsxTagEnd)) {\r\n        // Self-closing tag, no children to add, so close the props.\r\n        this.tokens.appendCode(\"}\");\r\n      } else if (this.tokens.matches1(TokenType.jsxTagEnd)) {\r\n        // Tag with children.\r\n        this.tokens.removeToken();\r\n        this.processAutomaticChildrenAndEndProps(jsxRole);\r\n      } else {\r\n        throw new Error(\"Expected either /> or > at the end of the tag.\");\r\n      }\r\n      // If a key was present, move it to its own arg. Note that moving code\r\n      // like this will cause line numbers to get out of sync within the JSX\r\n      // element if the key expression has a newline in it. This is unfortunate,\r\n      // but hopefully should be rare.\r\n      if (keyCode) {\r\n        this.tokens.appendCode(`, ${keyCode}`);\r\n      }\r\n    }\r\n    if (!this.options.production) {\r\n      // If the key wasn't already added, add it now so we can correctly set\r\n      // positional args for jsxDEV.\r\n      if (keyCode === null) {\r\n        this.tokens.appendCode(\", void 0\");\r\n      }\r\n      this.tokens.appendCode(`, ${isStatic}, ${this.getDevSource(elementLocationCode)}, this`);\r\n    }\r\n    // We're at the close-tag or the end of a self-closing tag, so remove\r\n    // everything else and close the function call.\r\n    this.tokens.removeInitialToken();\r\n    while (!this.tokens.matches1(TokenType.jsxTagEnd)) {\r\n      this.tokens.removeToken();\r\n    }\r\n    this.tokens.replaceToken(\")\");\r\n  }\r\n\r\n  /**\r\n   * Convert the current JSX element to a createElement call. In the classic\r\n   * runtime, this is the only case. In the automatic runtime, this is called\r\n   * as a fallback in some situations.\r\n   *\r\n   * Example:\r\n   * <div a={1} key={2}>Hello{x}</div>\r\n   * becomes\r\n   * React.createElement('div', {a: 1, key: 2}, \"Hello\", x)\r\n   */\r\n  transformTagToCreateElement(elementLocationCode) {\r\n    // First tag is always jsxTagStart.\r\n    this.tokens.replaceToken(this.getCreateElementInvocationCode());\r\n\r\n    if (this.tokens.matches1(TokenType.jsxTagEnd)) {\r\n      // Fragment syntax.\r\n      this.tokens.replaceToken(`${this.getFragmentCode()}, null`);\r\n      this.processChildren(true);\r\n    } else {\r\n      // Normal open tag or self-closing tag.\r\n      this.processTagIntro();\r\n      this.processPropsObjectWithDevInfo(elementLocationCode);\r\n\r\n      if (this.tokens.matches2(TokenType.slash, TokenType.jsxTagEnd)) ; else if (this.tokens.matches1(TokenType.jsxTagEnd)) {\r\n        // Tag with children and a close-tag; process the children as args.\r\n        this.tokens.removeToken();\r\n        this.processChildren(true);\r\n      } else {\r\n        throw new Error(\"Expected either /> or > at the end of the tag.\");\r\n      }\r\n    }\r\n    // We're at the close-tag or the end of a self-closing tag, so remove\r\n    // everything else and close the function call.\r\n    this.tokens.removeInitialToken();\r\n    while (!this.tokens.matches1(TokenType.jsxTagEnd)) {\r\n      this.tokens.removeToken();\r\n    }\r\n    this.tokens.replaceToken(\")\");\r\n  }\r\n\r\n  /**\r\n   * Get the code for the relevant function for this context: jsx, jsxs,\r\n   * or jsxDEV. The following open-paren is included as well.\r\n   *\r\n   * These functions are only used for the automatic runtime, so they are always\r\n   * auto-imported, but the auto-import will be either CJS or ESM based on the\r\n   * target module format.\r\n   */\r\n  getJSXFuncInvocationCode(isStatic) {\r\n    if (this.options.production) {\r\n      if (isStatic) {\r\n        return this.claimAutoImportedFuncInvocation(\"jsxs\", \"/jsx-runtime\");\r\n      } else {\r\n        return this.claimAutoImportedFuncInvocation(\"jsx\", \"/jsx-runtime\");\r\n      }\r\n    } else {\r\n      return this.claimAutoImportedFuncInvocation(\"jsxDEV\", \"/jsx-dev-runtime\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the code to use for the createElement function, e.g.\r\n   * `React.createElement`, including the following open-paren.\r\n   *\r\n   * This is the main function to use for the classic runtime. For the\r\n   * automatic runtime, this function is used as a fallback function to\r\n   * preserve behavior when there is a prop spread followed by an explicit\r\n   * key. In that automatic runtime case, the function should be automatically\r\n   * imported.\r\n   */\r\n  getCreateElementInvocationCode() {\r\n    if (this.isAutomaticRuntime) {\r\n      return this.claimAutoImportedFuncInvocation(\"createElement\", \"\");\r\n    } else {\r\n      const {jsxPragmaInfo} = this;\r\n      const resolvedPragmaBaseName = this.importProcessor\r\n        ? this.importProcessor.getIdentifierReplacement(jsxPragmaInfo.base) || jsxPragmaInfo.base\r\n        : jsxPragmaInfo.base;\r\n      return `${resolvedPragmaBaseName}${jsxPragmaInfo.suffix}(`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the code to use as the component when compiling a shorthand\r\n   * fragment, e.g. `React.Fragment`.\r\n   *\r\n   * This may be called from either the classic or automatic runtime, and\r\n   * the value should be auto-imported for the automatic runtime.\r\n   */\r\n  getFragmentCode() {\r\n    if (this.isAutomaticRuntime) {\r\n      return this.claimAutoImportedName(\r\n        \"Fragment\",\r\n        this.options.production ? \"/jsx-runtime\" : \"/jsx-dev-runtime\",\r\n      );\r\n    } else {\r\n      const {jsxPragmaInfo} = this;\r\n      const resolvedFragmentPragmaBaseName = this.importProcessor\r\n        ? this.importProcessor.getIdentifierReplacement(jsxPragmaInfo.fragmentBase) ||\r\n          jsxPragmaInfo.fragmentBase\r\n        : jsxPragmaInfo.fragmentBase;\r\n      return resolvedFragmentPragmaBaseName + jsxPragmaInfo.fragmentSuffix;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return code that invokes the given function.\r\n   *\r\n   * When the imports transform is enabled, use the CJSImportTransformer\r\n   * strategy of using `.call(void 0, ...` to avoid passing a `this` value in a\r\n   * situation that would otherwise look like a method call.\r\n   */\r\n  claimAutoImportedFuncInvocation(funcName, importPathSuffix) {\r\n    const funcCode = this.claimAutoImportedName(funcName, importPathSuffix);\r\n    if (this.importProcessor) {\r\n      return `${funcCode}.call(void 0, `;\r\n    } else {\r\n      return `${funcCode}(`;\r\n    }\r\n  }\r\n\r\n  claimAutoImportedName(funcName, importPathSuffix) {\r\n    if (this.importProcessor) {\r\n      // CJS mode: claim a name for the module and mark it for import.\r\n      const path = this.jsxImportSource + importPathSuffix;\r\n      if (!this.cjsAutomaticModuleNameResolutions[path]) {\r\n        this.cjsAutomaticModuleNameResolutions[path] =\r\n          this.importProcessor.getFreeIdentifierForPath(path);\r\n      }\r\n      return `${this.cjsAutomaticModuleNameResolutions[path]}.${funcName}`;\r\n    } else {\r\n      // ESM mode: claim a name for this function and add it to the names that\r\n      // should be auto-imported when the prefix is generated.\r\n      if (!this.esmAutomaticImportNameResolutions[funcName]) {\r\n        this.esmAutomaticImportNameResolutions[funcName] = this.nameManager.claimFreeName(\r\n          `_${funcName}`,\r\n        );\r\n      }\r\n      return this.esmAutomaticImportNameResolutions[funcName];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process the first part of a tag, before any props.\r\n   */\r\n  processTagIntro() {\r\n    // Walk forward until we see one of these patterns:\r\n    // jsxName to start the first prop, preceded by another jsxName to end the tag name.\r\n    // jsxName to start the first prop, preceded by greaterThan to end the type argument.\r\n    // [open brace] to start the first prop.\r\n    // [jsxTagEnd] to end the open-tag.\r\n    // [slash, jsxTagEnd] to end the self-closing tag.\r\n    let introEnd = this.tokens.currentIndex() + 1;\r\n    while (\r\n      this.tokens.tokens[introEnd].isType ||\r\n      (!this.tokens.matches2AtIndex(introEnd - 1, TokenType.jsxName, TokenType.jsxName) &&\r\n        !this.tokens.matches2AtIndex(introEnd - 1, TokenType.greaterThan, TokenType.jsxName) &&\r\n        !this.tokens.matches1AtIndex(introEnd, TokenType.braceL) &&\r\n        !this.tokens.matches1AtIndex(introEnd, TokenType.jsxTagEnd) &&\r\n        !this.tokens.matches2AtIndex(introEnd, TokenType.slash, TokenType.jsxTagEnd))\r\n    ) {\r\n      introEnd++;\r\n    }\r\n    if (introEnd === this.tokens.currentIndex() + 1) {\r\n      const tagName = this.tokens.identifierName();\r\n      if (startsWithLowerCase(tagName)) {\r\n        this.tokens.replaceToken(`'${tagName}'`);\r\n      }\r\n    }\r\n    while (this.tokens.currentIndex() < introEnd) {\r\n      this.rootTransformer.processToken();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starting at the beginning of the props, add the props argument to\r\n   * React.createElement, including the comma before it.\r\n   */\r\n  processPropsObjectWithDevInfo(elementLocationCode) {\r\n    const devProps = this.options.production\r\n      ? \"\"\r\n      : `__self: this, __source: ${this.getDevSource(elementLocationCode)}`;\r\n    if (!this.tokens.matches1(TokenType.jsxName) && !this.tokens.matches1(TokenType.braceL)) {\r\n      if (devProps) {\r\n        this.tokens.appendCode(`, {${devProps}}`);\r\n      } else {\r\n        this.tokens.appendCode(`, null`);\r\n      }\r\n      return;\r\n    }\r\n    this.tokens.appendCode(`, {`);\r\n    this.processProps(false);\r\n    if (devProps) {\r\n      this.tokens.appendCode(` ${devProps}}`);\r\n    } else {\r\n      this.tokens.appendCode(\"}\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform the core part of the props, assuming that a { has already been\r\n   * inserted before us and that a } will be inserted after us.\r\n   *\r\n   * If extractKeyCode is true (i.e. when using any jsx... function), any prop\r\n   * named \"key\" has its code captured and returned rather than being emitted to\r\n   * the output code. This shifts line numbers, and emitting the code later will\r\n   * correct line numbers again. If no key is found or if extractKeyCode is\r\n   * false, this function returns null.\r\n   */\r\n  processProps(extractKeyCode) {\r\n    let keyCode = null;\r\n    while (true) {\r\n      if (this.tokens.matches2(TokenType.jsxName, TokenType.eq)) {\r\n        // This is a regular key={value} or key=\"value\" prop.\r\n        const propName = this.tokens.identifierName();\r\n        if (extractKeyCode && propName === \"key\") {\r\n          if (keyCode !== null) {\r\n            // The props list has multiple keys. Different implementations are\r\n            // inconsistent about what to do here: as of this writing, Babel and\r\n            // swc keep the *last* key and completely remove the rest, while\r\n            // TypeScript uses the *first* key and leaves the others as regular\r\n            // props. The React team collaborated with Babel on the\r\n            // implementation of this behavior, so presumably the Babel behavior\r\n            // is the one to use.\r\n            // Since we won't ever be emitting the previous key code, we need to\r\n            // at least emit its newlines here so that the line numbers match up\r\n            // in the long run.\r\n            this.tokens.appendCode(keyCode.replace(/[^\\n]/g, \"\"));\r\n          }\r\n          // key\r\n          this.tokens.removeToken();\r\n          // =\r\n          this.tokens.removeToken();\r\n          const snapshot = this.tokens.snapshot();\r\n          this.processPropValue();\r\n          keyCode = this.tokens.dangerouslyGetAndRemoveCodeSinceSnapshot(snapshot);\r\n          // Don't add a comma\r\n          continue;\r\n        } else {\r\n          this.processPropName(propName);\r\n          this.tokens.replaceToken(\": \");\r\n          this.processPropValue();\r\n        }\r\n      } else if (this.tokens.matches1(TokenType.jsxName)) {\r\n        // This is a shorthand prop like <input disabled />.\r\n        const propName = this.tokens.identifierName();\r\n        this.processPropName(propName);\r\n        this.tokens.appendCode(\": true\");\r\n      } else if (this.tokens.matches1(TokenType.braceL)) {\r\n        // This is prop spread, like <div {...getProps()}>, which we can pass\r\n        // through fairly directly as an object spread.\r\n        this.tokens.replaceToken(\"\");\r\n        this.rootTransformer.processBalancedCode();\r\n        this.tokens.replaceToken(\"\");\r\n      } else {\r\n        break;\r\n      }\r\n      this.tokens.appendCode(\",\");\r\n    }\r\n    return keyCode;\r\n  }\r\n\r\n  processPropName(propName) {\r\n    if (propName.includes(\"-\")) {\r\n      this.tokens.replaceToken(`'${propName}'`);\r\n    } else {\r\n      this.tokens.copyToken();\r\n    }\r\n  }\r\n\r\n  processPropValue() {\r\n    if (this.tokens.matches1(TokenType.braceL)) {\r\n      this.tokens.replaceToken(\"\");\r\n      this.rootTransformer.processBalancedCode();\r\n      this.tokens.replaceToken(\"\");\r\n    } else if (this.tokens.matches1(TokenType.jsxTagStart)) {\r\n      this.processJSXTag();\r\n    } else {\r\n      this.processStringPropValue();\r\n    }\r\n  }\r\n\r\n  processStringPropValue() {\r\n    const token = this.tokens.currentToken();\r\n    const valueCode = this.tokens.code.slice(token.start + 1, token.end - 1);\r\n    const replacementCode = formatJSXTextReplacement(valueCode);\r\n    const literalCode = formatJSXStringValueLiteral(valueCode);\r\n    this.tokens.replaceToken(literalCode + replacementCode);\r\n  }\r\n\r\n  /**\r\n   * Starting in the middle of the props object literal, produce an additional\r\n   * prop for the children and close the object literal.\r\n   */\r\n  processAutomaticChildrenAndEndProps(jsxRole) {\r\n    if (jsxRole === JSXRole.StaticChildren) {\r\n      this.tokens.appendCode(\" children: [\");\r\n      this.processChildren(false);\r\n      this.tokens.appendCode(\"]}\");\r\n    } else {\r\n      // The parser information tells us whether we will see a real child or if\r\n      // all remaining children (if any) will resolve to empty. If there are no\r\n      // non-empty children, don't emit a children prop at all, but still\r\n      // process children so that we properly transform the code into nothing.\r\n      if (jsxRole === JSXRole.OneChild) {\r\n        this.tokens.appendCode(\" children: \");\r\n      }\r\n      this.processChildren(false);\r\n      this.tokens.appendCode(\"}\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform children into a comma-separated list, which will be either\r\n   * arguments to createElement or array elements of a children prop.\r\n   */\r\n  processChildren(needsInitialComma) {\r\n    let needsComma = needsInitialComma;\r\n    while (true) {\r\n      if (this.tokens.matches2(TokenType.jsxTagStart, TokenType.slash)) {\r\n        // Closing tag, so no more children.\r\n        return;\r\n      }\r\n      let didEmitElement = false;\r\n      if (this.tokens.matches1(TokenType.braceL)) {\r\n        if (this.tokens.matches2(TokenType.braceL, TokenType.braceR)) {\r\n          // Empty interpolations and comment-only interpolations are allowed\r\n          // and don't create an extra child arg.\r\n          this.tokens.replaceToken(\"\");\r\n          this.tokens.replaceToken(\"\");\r\n        } else {\r\n          // Interpolated expression.\r\n          this.tokens.replaceToken(needsComma ? \", \" : \"\");\r\n          this.rootTransformer.processBalancedCode();\r\n          this.tokens.replaceToken(\"\");\r\n          didEmitElement = true;\r\n        }\r\n      } else if (this.tokens.matches1(TokenType.jsxTagStart)) {\r\n        // Child JSX element\r\n        this.tokens.appendCode(needsComma ? \", \" : \"\");\r\n        this.processJSXTag();\r\n        didEmitElement = true;\r\n      } else if (this.tokens.matches1(TokenType.jsxText) || this.tokens.matches1(TokenType.jsxEmptyText)) {\r\n        didEmitElement = this.processChildTextElement(needsComma);\r\n      } else {\r\n        throw new Error(\"Unexpected token when processing JSX children.\");\r\n      }\r\n      if (didEmitElement) {\r\n        needsComma = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Turn a JSX text element into a string literal, or nothing at all if the JSX\r\n   * text resolves to the empty string.\r\n   *\r\n   * Returns true if a string literal is emitted, false otherwise.\r\n   */\r\n  processChildTextElement(needsComma) {\r\n    const token = this.tokens.currentToken();\r\n    const valueCode = this.tokens.code.slice(token.start, token.end);\r\n    const replacementCode = formatJSXTextReplacement(valueCode);\r\n    const literalCode = formatJSXTextLiteral(valueCode);\r\n    if (literalCode === '\"\"') {\r\n      this.tokens.replaceToken(replacementCode);\r\n      return false;\r\n    } else {\r\n      this.tokens.replaceToken(`${needsComma ? \", \" : \"\"}${literalCode}${replacementCode}`);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  getDevSource(elementLocationCode) {\r\n    return `{fileName: ${this.getFilenameVarName()}, ${elementLocationCode}}`;\r\n  }\r\n\r\n  getFilenameVarName() {\r\n    if (!this.filenameVarName) {\r\n      this.filenameVarName = this.nameManager.claimFreeName(\"_jsxFileName\");\r\n    }\r\n    return this.filenameVarName;\r\n  }\r\n}\r\n\r\n/**\r\n * Spec for identifiers: https://tc39.github.io/ecma262/#prod-IdentifierStart.\r\n *\r\n * Really only treat anything starting with a-z as tag names.  `_`, `$`, `é`\r\n * should be treated as component names\r\n */\r\nfunction startsWithLowerCase(s) {\r\n  const firstChar = s.charCodeAt(0);\r\n  return firstChar >= charCodes.lowercaseA && firstChar <= charCodes.lowercaseZ;\r\n}\r\n\r\n/**\r\n * Turn the given jsxText string into a JS string literal. Leading and trailing\r\n * whitespace on lines is removed, except immediately after the open-tag and\r\n * before the close-tag. Empty lines are completely removed, and spaces are\r\n * added between lines after that.\r\n *\r\n * We use JSON.stringify to introduce escape characters as necessary, and trim\r\n * the start and end of each line and remove blank lines.\r\n */\r\nfunction formatJSXTextLiteral(text) {\r\n  let result = \"\";\r\n  let whitespace = \"\";\r\n\r\n  let isInInitialLineWhitespace = false;\r\n  let seenNonWhitespace = false;\r\n  for (let i = 0; i < text.length; i++) {\r\n    const c = text[i];\r\n    if (c === \" \" || c === \"\\t\" || c === \"\\r\") {\r\n      if (!isInInitialLineWhitespace) {\r\n        whitespace += c;\r\n      }\r\n    } else if (c === \"\\n\") {\r\n      whitespace = \"\";\r\n      isInInitialLineWhitespace = true;\r\n    } else {\r\n      if (seenNonWhitespace && isInInitialLineWhitespace) {\r\n        result += \" \";\r\n      }\r\n      result += whitespace;\r\n      whitespace = \"\";\r\n      if (c === \"&\") {\r\n        const {entity, newI} = processEntity(text, i + 1);\r\n        i = newI - 1;\r\n        result += entity;\r\n      } else {\r\n        result += c;\r\n      }\r\n      seenNonWhitespace = true;\r\n      isInInitialLineWhitespace = false;\r\n    }\r\n  }\r\n  if (!isInInitialLineWhitespace) {\r\n    result += whitespace;\r\n  }\r\n  return JSON.stringify(result);\r\n}\r\n\r\n/**\r\n * Produce the code that should be printed after the JSX text string literal,\r\n * with most content removed, but all newlines preserved and all spacing at the\r\n * end preserved.\r\n */\r\nfunction formatJSXTextReplacement(text) {\r\n  let numNewlines = 0;\r\n  let numSpaces = 0;\r\n  for (const c of text) {\r\n    if (c === \"\\n\") {\r\n      numNewlines++;\r\n      numSpaces = 0;\r\n    } else if (c === \" \") {\r\n      numSpaces++;\r\n    }\r\n  }\r\n  return \"\\n\".repeat(numNewlines) + \" \".repeat(numSpaces);\r\n}\r\n\r\n/**\r\n * Format a string in the value position of a JSX prop.\r\n *\r\n * Use the same implementation as convertAttribute from\r\n * babel-helper-builder-react-jsx.\r\n */\r\nfunction formatJSXStringValueLiteral(text) {\r\n  let result = \"\";\r\n  for (let i = 0; i < text.length; i++) {\r\n    const c = text[i];\r\n    if (c === \"\\n\") {\r\n      if (/\\s/.test(text[i + 1])) {\r\n        result += \" \";\r\n        while (i < text.length && /\\s/.test(text[i + 1])) {\r\n          i++;\r\n        }\r\n      } else {\r\n        result += \"\\n\";\r\n      }\r\n    } else if (c === \"&\") {\r\n      const {entity, newI} = processEntity(text, i + 1);\r\n      result += entity;\r\n      i = newI - 1;\r\n    } else {\r\n      result += c;\r\n    }\r\n  }\r\n  return JSON.stringify(result);\r\n}\r\n\r\n/**\r\n * Starting at a &, see if there's an HTML entity (specified by name, decimal\r\n * char code, or hex char code) and return it if so.\r\n *\r\n * Modified from jsxReadString in babel-parser.\r\n */\r\nfunction processEntity(text, indexAfterAmpersand) {\r\n  let str = \"\";\r\n  let count = 0;\r\n  let entity;\r\n  let i = indexAfterAmpersand;\r\n\r\n  if (text[i] === \"#\") {\r\n    let radix = 10;\r\n    i++;\r\n    let numStart;\r\n    if (text[i] === \"x\") {\r\n      radix = 16;\r\n      i++;\r\n      numStart = i;\r\n      while (i < text.length && isHexDigit(text.charCodeAt(i))) {\r\n        i++;\r\n      }\r\n    } else {\r\n      numStart = i;\r\n      while (i < text.length && isDecimalDigit(text.charCodeAt(i))) {\r\n        i++;\r\n      }\r\n    }\r\n    if (text[i] === \";\") {\r\n      const numStr = text.slice(numStart, i);\r\n      if (numStr) {\r\n        i++;\r\n        entity = String.fromCodePoint(parseInt(numStr, radix));\r\n      }\r\n    }\r\n  } else {\r\n    while (i < text.length && count++ < 10) {\r\n      const ch = text[i];\r\n      i++;\r\n      if (ch === \";\") {\r\n        entity = XHTMLEntities.get(str);\r\n        break;\r\n      }\r\n      str += ch;\r\n    }\r\n  }\r\n\r\n  if (!entity) {\r\n    return {entity: \"&\", newI: indexAfterAmpersand};\r\n  }\r\n  return {entity, newI: i};\r\n}\r\n\r\nfunction isDecimalDigit(code) {\r\n  return code >= charCodes.digit0 && code <= charCodes.digit9;\r\n}\r\n\r\nfunction isHexDigit(code) {\r\n  return (\r\n    (code >= charCodes.digit0 && code <= charCodes.digit9) ||\r\n    (code >= charCodes.lowercaseA && code <= charCodes.lowercaseF) ||\r\n    (code >= charCodes.uppercaseA && code <= charCodes.uppercaseF)\r\n  );\r\n}\r\n\r\nfunction getNonTypeIdentifiers(tokens, options) {\r\n  const jsxPragmaInfo = getJSXPragmaInfo(options);\r\n  const nonTypeIdentifiers = new Set();\r\n  for (let i = 0; i < tokens.tokens.length; i++) {\r\n    const token = tokens.tokens[i];\r\n    if (\r\n      token.type === TokenType.name &&\r\n      !token.isType &&\r\n      (token.identifierRole === IdentifierRole.Access ||\r\n        token.identifierRole === IdentifierRole.ObjectShorthand ||\r\n        token.identifierRole === IdentifierRole.ExportAccess) &&\r\n      !token.shadowsGlobal\r\n    ) {\r\n      nonTypeIdentifiers.add(tokens.identifierNameForToken(token));\r\n    }\r\n    if (token.type === TokenType.jsxTagStart) {\r\n      nonTypeIdentifiers.add(jsxPragmaInfo.base);\r\n    }\r\n    if (\r\n      token.type === TokenType.jsxTagStart &&\r\n      i + 1 < tokens.tokens.length &&\r\n      tokens.tokens[i + 1].type === TokenType.jsxTagEnd\r\n    ) {\r\n      nonTypeIdentifiers.add(jsxPragmaInfo.base);\r\n      nonTypeIdentifiers.add(jsxPragmaInfo.fragmentBase);\r\n    }\r\n    if (token.type === TokenType.jsxName && token.identifierRole === IdentifierRole.Access) {\r\n      const identifierName = tokens.identifierNameForToken(token);\r\n      // Lower-case single-component tag names like \"div\" don't count.\r\n      if (!startsWithLowerCase(identifierName) || tokens.tokens[i + 1].type === TokenType.dot) {\r\n        nonTypeIdentifiers.add(tokens.identifierNameForToken(token));\r\n      }\r\n    }\r\n  }\r\n  return nonTypeIdentifiers;\r\n}\r\n\r\n/**\r\n * Class responsible for preprocessing and bookkeeping import and export declarations within the\r\n * file.\r\n *\r\n * TypeScript uses a simpler mechanism that does not use functions like interopRequireDefault and\r\n * interopRequireWildcard, so we also allow that mode for compatibility.\r\n */\r\nclass CJSImportProcessor {\r\n   __init() {this.nonTypeIdentifiers = new Set();}\r\n   __init2() {this.importInfoByPath = new Map();}\r\n   __init3() {this.importsToReplace = new Map();}\r\n   __init4() {this.identifierReplacements = new Map();}\r\n   __init5() {this.exportBindingsByLocalName = new Map();}\r\n\r\n  constructor(\r\n     nameManager,\r\n     tokens,\r\n     enableLegacyTypeScriptModuleInterop,\r\n     options,\r\n     isTypeScriptTransformEnabled,\r\n     helperManager,\r\n  ) {this.nameManager = nameManager;this.tokens = tokens;this.enableLegacyTypeScriptModuleInterop = enableLegacyTypeScriptModuleInterop;this.options = options;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;this.helperManager = helperManager;CJSImportProcessor.prototype.__init.call(this);CJSImportProcessor.prototype.__init2.call(this);CJSImportProcessor.prototype.__init3.call(this);CJSImportProcessor.prototype.__init4.call(this);CJSImportProcessor.prototype.__init5.call(this);}\r\n\r\n  preprocessTokens() {\r\n    for (let i = 0; i < this.tokens.tokens.length; i++) {\r\n      if (\r\n        this.tokens.matches1AtIndex(i, TokenType._import) &&\r\n        !this.tokens.matches3AtIndex(i, TokenType._import, TokenType.name, TokenType.eq)\r\n      ) {\r\n        this.preprocessImportAtIndex(i);\r\n      }\r\n      if (\r\n        this.tokens.matches1AtIndex(i, TokenType._export) &&\r\n        !this.tokens.matches2AtIndex(i, TokenType._export, TokenType.eq)\r\n      ) {\r\n        this.preprocessExportAtIndex(i);\r\n      }\r\n    }\r\n    this.generateImportReplacements();\r\n  }\r\n\r\n  /**\r\n   * In TypeScript, import statements that only import types should be removed. This does not count\r\n   * bare imports.\r\n   */\r\n  pruneTypeOnlyImports() {\r\n    this.nonTypeIdentifiers = getNonTypeIdentifiers(this.tokens, this.options);\r\n    for (const [path, importInfo] of this.importInfoByPath.entries()) {\r\n      if (\r\n        importInfo.hasBareImport ||\r\n        importInfo.hasStarExport ||\r\n        importInfo.exportStarNames.length > 0 ||\r\n        importInfo.namedExports.length > 0\r\n      ) {\r\n        continue;\r\n      }\r\n      const names = [\r\n        ...importInfo.defaultNames,\r\n        ...importInfo.wildcardNames,\r\n        ...importInfo.namedImports.map(({localName}) => localName),\r\n      ];\r\n      if (names.every((name) => this.isTypeName(name))) {\r\n        this.importsToReplace.set(path, \"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  isTypeName(name) {\r\n    return this.isTypeScriptTransformEnabled && !this.nonTypeIdentifiers.has(name);\r\n  }\r\n\r\n   generateImportReplacements() {\r\n    for (const [path, importInfo] of this.importInfoByPath.entries()) {\r\n      const {\r\n        defaultNames,\r\n        wildcardNames,\r\n        namedImports,\r\n        namedExports,\r\n        exportStarNames,\r\n        hasStarExport,\r\n      } = importInfo;\r\n\r\n      if (\r\n        defaultNames.length === 0 &&\r\n        wildcardNames.length === 0 &&\r\n        namedImports.length === 0 &&\r\n        namedExports.length === 0 &&\r\n        exportStarNames.length === 0 &&\r\n        !hasStarExport\r\n      ) {\r\n        // Import is never used, so don't even assign a name.\r\n        this.importsToReplace.set(path, `require('${path}');`);\r\n        continue;\r\n      }\r\n\r\n      const primaryImportName = this.getFreeIdentifierForPath(path);\r\n      let secondaryImportName;\r\n      if (this.enableLegacyTypeScriptModuleInterop) {\r\n        secondaryImportName = primaryImportName;\r\n      } else {\r\n        secondaryImportName =\r\n          wildcardNames.length > 0 ? wildcardNames[0] : this.getFreeIdentifierForPath(path);\r\n      }\r\n      let requireCode = `var ${primaryImportName} = require('${path}');`;\r\n      if (wildcardNames.length > 0) {\r\n        for (const wildcardName of wildcardNames) {\r\n          const moduleExpr = this.enableLegacyTypeScriptModuleInterop\r\n            ? primaryImportName\r\n            : `${this.helperManager.getHelperName(\"interopRequireWildcard\")}(${primaryImportName})`;\r\n          requireCode += ` var ${wildcardName} = ${moduleExpr};`;\r\n        }\r\n      } else if (exportStarNames.length > 0 && secondaryImportName !== primaryImportName) {\r\n        requireCode += ` var ${secondaryImportName} = ${this.helperManager.getHelperName(\r\n          \"interopRequireWildcard\",\r\n        )}(${primaryImportName});`;\r\n      } else if (defaultNames.length > 0 && secondaryImportName !== primaryImportName) {\r\n        requireCode += ` var ${secondaryImportName} = ${this.helperManager.getHelperName(\r\n          \"interopRequireDefault\",\r\n        )}(${primaryImportName});`;\r\n      }\r\n\r\n      for (const {importedName, localName} of namedExports) {\r\n        requireCode += ` ${this.helperManager.getHelperName(\r\n          \"createNamedExportFrom\",\r\n        )}(${primaryImportName}, '${localName}', '${importedName}');`;\r\n      }\r\n      for (const exportStarName of exportStarNames) {\r\n        requireCode += ` exports.${exportStarName} = ${secondaryImportName};`;\r\n      }\r\n      if (hasStarExport) {\r\n        requireCode += ` ${this.helperManager.getHelperName(\r\n          \"createStarExport\",\r\n        )}(${primaryImportName});`;\r\n      }\r\n\r\n      this.importsToReplace.set(path, requireCode);\r\n\r\n      for (const defaultName of defaultNames) {\r\n        this.identifierReplacements.set(defaultName, `${secondaryImportName}.default`);\r\n      }\r\n      for (const {importedName, localName} of namedImports) {\r\n        this.identifierReplacements.set(localName, `${primaryImportName}.${importedName}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFreeIdentifierForPath(path) {\r\n    const components = path.split(\"/\");\r\n    const lastComponent = components[components.length - 1];\r\n    const baseName = lastComponent.replace(/\\W/g, \"\");\r\n    return this.nameManager.claimFreeName(`_${baseName}`);\r\n  }\r\n\r\n   preprocessImportAtIndex(index) {\r\n    const defaultNames = [];\r\n    const wildcardNames = [];\r\n    const namedImports = [];\r\n\r\n    index++;\r\n    if (\r\n      (this.tokens.matchesContextualAtIndex(index, ContextualKeyword._type) ||\r\n        this.tokens.matches1AtIndex(index, TokenType._typeof)) &&\r\n      !this.tokens.matches1AtIndex(index + 1, TokenType.comma) &&\r\n      !this.tokens.matchesContextualAtIndex(index + 1, ContextualKeyword._from)\r\n    ) {\r\n      // import type declaration, so no need to process anything.\r\n      return;\r\n    }\r\n\r\n    if (this.tokens.matches1AtIndex(index, TokenType.parenL)) {\r\n      // Dynamic import, so nothing to do\r\n      return;\r\n    }\r\n\r\n    if (this.tokens.matches1AtIndex(index, TokenType.name)) {\r\n      defaultNames.push(this.tokens.identifierNameAtIndex(index));\r\n      index++;\r\n      if (this.tokens.matches1AtIndex(index, TokenType.comma)) {\r\n        index++;\r\n      }\r\n    }\r\n\r\n    if (this.tokens.matches1AtIndex(index, TokenType.star)) {\r\n      // * as\r\n      index += 2;\r\n      wildcardNames.push(this.tokens.identifierNameAtIndex(index));\r\n      index++;\r\n    }\r\n\r\n    if (this.tokens.matches1AtIndex(index, TokenType.braceL)) {\r\n      const result = this.getNamedImports(index + 1);\r\n      index = result.newIndex;\r\n\r\n      for (const namedImport of result.namedImports) {\r\n        // Treat {default as X} as a default import to ensure usage of require interop helper\r\n        if (namedImport.importedName === \"default\") {\r\n          defaultNames.push(namedImport.localName);\r\n        } else {\r\n          namedImports.push(namedImport);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.tokens.matchesContextualAtIndex(index, ContextualKeyword._from)) {\r\n      index++;\r\n    }\r\n\r\n    if (!this.tokens.matches1AtIndex(index, TokenType.string)) {\r\n      throw new Error(\"Expected string token at the end of import statement.\");\r\n    }\r\n    const path = this.tokens.stringValueAtIndex(index);\r\n    const importInfo = this.getImportInfo(path);\r\n    importInfo.defaultNames.push(...defaultNames);\r\n    importInfo.wildcardNames.push(...wildcardNames);\r\n    importInfo.namedImports.push(...namedImports);\r\n    if (defaultNames.length === 0 && wildcardNames.length === 0 && namedImports.length === 0) {\r\n      importInfo.hasBareImport = true;\r\n    }\r\n  }\r\n\r\n   preprocessExportAtIndex(index) {\r\n    if (\r\n      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._var) ||\r\n      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._let) ||\r\n      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._const)\r\n    ) {\r\n      this.preprocessVarExportAtIndex(index);\r\n    } else if (\r\n      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._function) ||\r\n      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._class)\r\n    ) {\r\n      const exportName = this.tokens.identifierNameAtIndex(index + 2);\r\n      this.addExportBinding(exportName, exportName);\r\n    } else if (this.tokens.matches3AtIndex(index, TokenType._export, TokenType.name, TokenType._function)) {\r\n      const exportName = this.tokens.identifierNameAtIndex(index + 3);\r\n      this.addExportBinding(exportName, exportName);\r\n    } else if (this.tokens.matches2AtIndex(index, TokenType._export, TokenType.braceL)) {\r\n      this.preprocessNamedExportAtIndex(index);\r\n    } else if (this.tokens.matches2AtIndex(index, TokenType._export, TokenType.star)) {\r\n      this.preprocessExportStarAtIndex(index);\r\n    }\r\n  }\r\n\r\n   preprocessVarExportAtIndex(index) {\r\n    let depth = 0;\r\n    // Handle cases like `export let {x} = y;`, starting at the open-brace in that case.\r\n    for (let i = index + 2; ; i++) {\r\n      if (\r\n        this.tokens.matches1AtIndex(i, TokenType.braceL) ||\r\n        this.tokens.matches1AtIndex(i, TokenType.dollarBraceL) ||\r\n        this.tokens.matches1AtIndex(i, TokenType.bracketL)\r\n      ) {\r\n        depth++;\r\n      } else if (\r\n        this.tokens.matches1AtIndex(i, TokenType.braceR) ||\r\n        this.tokens.matches1AtIndex(i, TokenType.bracketR)\r\n      ) {\r\n        depth--;\r\n      } else if (depth === 0 && !this.tokens.matches1AtIndex(i, TokenType.name)) {\r\n        break;\r\n      } else if (this.tokens.matches1AtIndex(1, TokenType.eq)) {\r\n        const endIndex = this.tokens.currentToken().rhsEndIndex;\r\n        if (endIndex == null) {\r\n          throw new Error(\"Expected = token with an end index.\");\r\n        }\r\n        i = endIndex - 1;\r\n      } else {\r\n        const token = this.tokens.tokens[i];\r\n        if (isDeclaration(token)) {\r\n          const exportName = this.tokens.identifierNameAtIndex(i);\r\n          this.identifierReplacements.set(exportName, `exports.${exportName}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Walk this export statement just in case it's an export...from statement.\r\n   * If it is, combine it into the import info for that path. Otherwise, just\r\n   * bail out; it'll be handled later.\r\n   */\r\n   preprocessNamedExportAtIndex(index) {\r\n    // export {\r\n    index += 2;\r\n    const {newIndex, namedImports} = this.getNamedImports(index);\r\n    index = newIndex;\r\n\r\n    if (this.tokens.matchesContextualAtIndex(index, ContextualKeyword._from)) {\r\n      index++;\r\n    } else {\r\n      // Reinterpret \"a as b\" to be local/exported rather than imported/local.\r\n      for (const {importedName: localName, localName: exportedName} of namedImports) {\r\n        this.addExportBinding(localName, exportedName);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (!this.tokens.matches1AtIndex(index, TokenType.string)) {\r\n      throw new Error(\"Expected string token at the end of import statement.\");\r\n    }\r\n    const path = this.tokens.stringValueAtIndex(index);\r\n    const importInfo = this.getImportInfo(path);\r\n    importInfo.namedExports.push(...namedImports);\r\n  }\r\n\r\n   preprocessExportStarAtIndex(index) {\r\n    let exportedName = null;\r\n    if (this.tokens.matches3AtIndex(index, TokenType._export, TokenType.star, TokenType._as)) {\r\n      // export * as\r\n      index += 3;\r\n      exportedName = this.tokens.identifierNameAtIndex(index);\r\n      // foo from\r\n      index += 2;\r\n    } else {\r\n      // export * from\r\n      index += 3;\r\n    }\r\n    if (!this.tokens.matches1AtIndex(index, TokenType.string)) {\r\n      throw new Error(\"Expected string token at the end of star export statement.\");\r\n    }\r\n    const path = this.tokens.stringValueAtIndex(index);\r\n    const importInfo = this.getImportInfo(path);\r\n    if (exportedName !== null) {\r\n      importInfo.exportStarNames.push(exportedName);\r\n    } else {\r\n      importInfo.hasStarExport = true;\r\n    }\r\n  }\r\n\r\n   getNamedImports(index) {\r\n    const namedImports = [];\r\n    while (true) {\r\n      if (this.tokens.matches1AtIndex(index, TokenType.braceR)) {\r\n        index++;\r\n        break;\r\n      }\r\n\r\n      const specifierInfo = getImportExportSpecifierInfo(this.tokens, index);\r\n      index = specifierInfo.endIndex;\r\n      if (!specifierInfo.isType) {\r\n        namedImports.push({\r\n          importedName: specifierInfo.leftName,\r\n          localName: specifierInfo.rightName,\r\n        });\r\n      }\r\n\r\n      if (this.tokens.matches2AtIndex(index, TokenType.comma, TokenType.braceR)) {\r\n        index += 2;\r\n        break;\r\n      } else if (this.tokens.matches1AtIndex(index, TokenType.braceR)) {\r\n        index++;\r\n        break;\r\n      } else if (this.tokens.matches1AtIndex(index, TokenType.comma)) {\r\n        index++;\r\n      } else {\r\n        throw new Error(`Unexpected token: ${JSON.stringify(this.tokens.tokens[index])}`);\r\n      }\r\n    }\r\n    return {newIndex: index, namedImports};\r\n  }\r\n\r\n  /**\r\n   * Get a mutable import info object for this path, creating one if it doesn't\r\n   * exist yet.\r\n   */\r\n   getImportInfo(path) {\r\n    const existingInfo = this.importInfoByPath.get(path);\r\n    if (existingInfo) {\r\n      return existingInfo;\r\n    }\r\n    const newInfo = {\r\n      defaultNames: [],\r\n      wildcardNames: [],\r\n      namedImports: [],\r\n      namedExports: [],\r\n      hasBareImport: false,\r\n      exportStarNames: [],\r\n      hasStarExport: false,\r\n    };\r\n    this.importInfoByPath.set(path, newInfo);\r\n    return newInfo;\r\n  }\r\n\r\n   addExportBinding(localName, exportedName) {\r\n    if (!this.exportBindingsByLocalName.has(localName)) {\r\n      this.exportBindingsByLocalName.set(localName, []);\r\n    }\r\n    this.exportBindingsByLocalName.get(localName).push(exportedName);\r\n  }\r\n\r\n  /**\r\n   * Return the code to use for the import for this path, or the empty string if\r\n   * the code has already been \"claimed\" by a previous import.\r\n   */\r\n  claimImportCode(importPath) {\r\n    const result = this.importsToReplace.get(importPath);\r\n    this.importsToReplace.set(importPath, \"\");\r\n    return result || \"\";\r\n  }\r\n\r\n  getIdentifierReplacement(identifierName) {\r\n    return this.identifierReplacements.get(identifierName) || null;\r\n  }\r\n\r\n  /**\r\n   * Return a string like `exports.foo = exports.bar`.\r\n   */\r\n  resolveExportBinding(assignedName) {\r\n    const exportedNames = this.exportBindingsByLocalName.get(assignedName);\r\n    if (!exportedNames || exportedNames.length === 0) {\r\n      return null;\r\n    }\r\n    return exportedNames.map((exportedName) => `exports.${exportedName}`).join(\" = \");\r\n  }\r\n\r\n  /**\r\n   * Return all imported/exported names where we might be interested in whether usages of those\r\n   * names are shadowed.\r\n   */\r\n  getGlobalNames() {\r\n    return new Set([\r\n      ...this.identifierReplacements.keys(),\r\n      ...this.exportBindingsByLocalName.keys(),\r\n    ]);\r\n  }\r\n}\r\n\r\nvar genMapping_umd = {exports: {}};\r\n\r\nvar setArray_umd = {exports: {}};\r\n\r\nvar hasRequiredSetArray_umd;\r\n\r\nfunction requireSetArray_umd () {\r\n\tif (hasRequiredSetArray_umd) return setArray_umd.exports;\r\n\thasRequiredSetArray_umd = 1;\r\n\t(function (module, exports) {\r\n\t\t(function (global, factory) {\r\n\t\t    factory(exports) ;\r\n\t\t})(commonjsGlobal, (function (exports) {\r\n\t\t    /**\r\n\t\t     * Gets the index associated with `key` in the backing array, if it is already present.\r\n\t\t     */\r\n\t\t    exports.get = void 0;\r\n\t\t    /**\r\n\t\t     * Puts `key` into the backing array, if it is not already present. Returns\r\n\t\t     * the index of the `key` in the backing array.\r\n\t\t     */\r\n\t\t    exports.put = void 0;\r\n\t\t    /**\r\n\t\t     * Pops the last added item out of the SetArray.\r\n\t\t     */\r\n\t\t    exports.pop = void 0;\r\n\t\t    /**\r\n\t\t     * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\r\n\t\t     * index of the `key` in the backing array.\r\n\t\t     *\r\n\t\t     * This is designed to allow synchronizing a second array with the contents of the backing array,\r\n\t\t     * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\r\n\t\t     * and there are never duplicates.\r\n\t\t     */\r\n\t\t    class SetArray {\r\n\t\t        constructor() {\r\n\t\t            this._indexes = { __proto__: null };\r\n\t\t            this.array = [];\r\n\t\t        }\r\n\t\t    }\r\n\t\t    (() => {\r\n\t\t        exports.get = (strarr, key) => strarr._indexes[key];\r\n\t\t        exports.put = (strarr, key) => {\r\n\t\t            // The key may or may not be present. If it is present, it's a number.\r\n\t\t            const index = exports.get(strarr, key);\r\n\t\t            if (index !== undefined)\r\n\t\t                return index;\r\n\t\t            const { array, _indexes: indexes } = strarr;\r\n\t\t            return (indexes[key] = array.push(key) - 1);\r\n\t\t        };\r\n\t\t        exports.pop = (strarr) => {\r\n\t\t            const { array, _indexes: indexes } = strarr;\r\n\t\t            if (array.length === 0)\r\n\t\t                return;\r\n\t\t            const last = array.pop();\r\n\t\t            indexes[last] = undefined;\r\n\t\t        };\r\n\t\t    })();\r\n\r\n\t\t    exports.SetArray = SetArray;\r\n\r\n\t\t    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n\t\t}));\r\n\t\t\r\n\t} (setArray_umd, setArray_umd.exports));\r\n\treturn setArray_umd.exports;\r\n}\r\n\r\nvar sourcemapCodec_umd$1 = {exports: {}};\r\n\r\nvar hasRequiredSourcemapCodec_umd$1;\r\n\r\nfunction requireSourcemapCodec_umd$1 () {\r\n\tif (hasRequiredSourcemapCodec_umd$1) return sourcemapCodec_umd$1.exports;\r\n\thasRequiredSourcemapCodec_umd$1 = 1;\r\n\t(function (module, exports) {\r\n\t\t(function (global, factory) {\r\n\t\t    factory(exports) ;\r\n\t\t})(commonjsGlobal, (function (exports) {\r\n\t\t    const comma = ','.charCodeAt(0);\r\n\t\t    const semicolon = ';'.charCodeAt(0);\r\n\t\t    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\t\t    const intToChar = new Uint8Array(64); // 64 possible chars.\r\n\t\t    const charToInt = new Uint8Array(128); // z is 122 in ASCII\r\n\t\t    for (let i = 0; i < chars.length; i++) {\r\n\t\t        const c = chars.charCodeAt(i);\r\n\t\t        intToChar[i] = c;\r\n\t\t        charToInt[c] = i;\r\n\t\t    }\r\n\t\t    // Provide a fallback for older environments.\r\n\t\t    const td = typeof TextDecoder !== 'undefined'\r\n\t\t        ? /* #__PURE__ */ new TextDecoder()\r\n\t\t        : typeof Buffer !== 'undefined'\r\n\t\t            ? {\r\n\t\t                decode(buf) {\r\n\t\t                    const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\r\n\t\t                    return out.toString();\r\n\t\t                },\r\n\t\t            }\r\n\t\t            : {\r\n\t\t                decode(buf) {\r\n\t\t                    let out = '';\r\n\t\t                    for (let i = 0; i < buf.length; i++) {\r\n\t\t                        out += String.fromCharCode(buf[i]);\r\n\t\t                    }\r\n\t\t                    return out;\r\n\t\t                },\r\n\t\t            };\r\n\t\t    function decode(mappings) {\r\n\t\t        const state = new Int32Array(5);\r\n\t\t        const decoded = [];\r\n\t\t        let index = 0;\r\n\t\t        do {\r\n\t\t            const semi = indexOf(mappings, index);\r\n\t\t            const line = [];\r\n\t\t            let sorted = true;\r\n\t\t            let lastCol = 0;\r\n\t\t            state[0] = 0;\r\n\t\t            for (let i = index; i < semi; i++) {\r\n\t\t                let seg;\r\n\t\t                i = decodeInteger(mappings, i, state, 0); // genColumn\r\n\t\t                const col = state[0];\r\n\t\t                if (col < lastCol)\r\n\t\t                    sorted = false;\r\n\t\t                lastCol = col;\r\n\t\t                if (hasMoreVlq(mappings, i, semi)) {\r\n\t\t                    i = decodeInteger(mappings, i, state, 1); // sourcesIndex\r\n\t\t                    i = decodeInteger(mappings, i, state, 2); // sourceLine\r\n\t\t                    i = decodeInteger(mappings, i, state, 3); // sourceColumn\r\n\t\t                    if (hasMoreVlq(mappings, i, semi)) {\r\n\t\t                        i = decodeInteger(mappings, i, state, 4); // namesIndex\r\n\t\t                        seg = [col, state[1], state[2], state[3], state[4]];\r\n\t\t                    }\r\n\t\t                    else {\r\n\t\t                        seg = [col, state[1], state[2], state[3]];\r\n\t\t                    }\r\n\t\t                }\r\n\t\t                else {\r\n\t\t                    seg = [col];\r\n\t\t                }\r\n\t\t                line.push(seg);\r\n\t\t            }\r\n\t\t            if (!sorted)\r\n\t\t                sort(line);\r\n\t\t            decoded.push(line);\r\n\t\t            index = semi + 1;\r\n\t\t        } while (index <= mappings.length);\r\n\t\t        return decoded;\r\n\t\t    }\r\n\t\t    function indexOf(mappings, index) {\r\n\t\t        const idx = mappings.indexOf(';', index);\r\n\t\t        return idx === -1 ? mappings.length : idx;\r\n\t\t    }\r\n\t\t    function decodeInteger(mappings, pos, state, j) {\r\n\t\t        let value = 0;\r\n\t\t        let shift = 0;\r\n\t\t        let integer = 0;\r\n\t\t        do {\r\n\t\t            const c = mappings.charCodeAt(pos++);\r\n\t\t            integer = charToInt[c];\r\n\t\t            value |= (integer & 31) << shift;\r\n\t\t            shift += 5;\r\n\t\t        } while (integer & 32);\r\n\t\t        const shouldNegate = value & 1;\r\n\t\t        value >>>= 1;\r\n\t\t        if (shouldNegate) {\r\n\t\t            value = -0x80000000 | -value;\r\n\t\t        }\r\n\t\t        state[j] += value;\r\n\t\t        return pos;\r\n\t\t    }\r\n\t\t    function hasMoreVlq(mappings, i, length) {\r\n\t\t        if (i >= length)\r\n\t\t            return false;\r\n\t\t        return mappings.charCodeAt(i) !== comma;\r\n\t\t    }\r\n\t\t    function sort(line) {\r\n\t\t        line.sort(sortComparator);\r\n\t\t    }\r\n\t\t    function sortComparator(a, b) {\r\n\t\t        return a[0] - b[0];\r\n\t\t    }\r\n\t\t    function encode(decoded) {\r\n\t\t        const state = new Int32Array(5);\r\n\t\t        const bufLength = 1024 * 16;\r\n\t\t        const subLength = bufLength - 36;\r\n\t\t        const buf = new Uint8Array(bufLength);\r\n\t\t        const sub = buf.subarray(0, subLength);\r\n\t\t        let pos = 0;\r\n\t\t        let out = '';\r\n\t\t        for (let i = 0; i < decoded.length; i++) {\r\n\t\t            const line = decoded[i];\r\n\t\t            if (i > 0) {\r\n\t\t                if (pos === bufLength) {\r\n\t\t                    out += td.decode(buf);\r\n\t\t                    pos = 0;\r\n\t\t                }\r\n\t\t                buf[pos++] = semicolon;\r\n\t\t            }\r\n\t\t            if (line.length === 0)\r\n\t\t                continue;\r\n\t\t            state[0] = 0;\r\n\t\t            for (let j = 0; j < line.length; j++) {\r\n\t\t                const segment = line[j];\r\n\t\t                // We can push up to 5 ints, each int can take at most 7 chars, and we\r\n\t\t                // may push a comma.\r\n\t\t                if (pos > subLength) {\r\n\t\t                    out += td.decode(sub);\r\n\t\t                    buf.copyWithin(0, subLength, pos);\r\n\t\t                    pos -= subLength;\r\n\t\t                }\r\n\t\t                if (j > 0)\r\n\t\t                    buf[pos++] = comma;\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\r\n\t\t                if (segment.length === 1)\r\n\t\t                    continue;\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\r\n\t\t                if (segment.length === 4)\r\n\t\t                    continue;\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return out + td.decode(buf.subarray(0, pos));\r\n\t\t    }\r\n\t\t    function encodeInteger(buf, pos, state, segment, j) {\r\n\t\t        const next = segment[j];\r\n\t\t        let num = next - state[j];\r\n\t\t        state[j] = next;\r\n\t\t        num = num < 0 ? (-num << 1) | 1 : num << 1;\r\n\t\t        do {\r\n\t\t            let clamped = num & 0b011111;\r\n\t\t            num >>>= 5;\r\n\t\t            if (num > 0)\r\n\t\t                clamped |= 0b100000;\r\n\t\t            buf[pos++] = intToChar[clamped];\r\n\t\t        } while (num > 0);\r\n\t\t        return pos;\r\n\t\t    }\r\n\r\n\t\t    exports.decode = decode;\r\n\t\t    exports.encode = encode;\r\n\r\n\t\t    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n\t\t}));\r\n\t\t\r\n\t} (sourcemapCodec_umd$1, sourcemapCodec_umd$1.exports));\r\n\treturn sourcemapCodec_umd$1.exports;\r\n}\r\n\r\nvar traceMapping_umd = {exports: {}};\r\n\r\nvar sourcemapCodec_umd = {exports: {}};\r\n\r\nvar hasRequiredSourcemapCodec_umd;\r\n\r\nfunction requireSourcemapCodec_umd () {\r\n\tif (hasRequiredSourcemapCodec_umd) return sourcemapCodec_umd.exports;\r\n\thasRequiredSourcemapCodec_umd = 1;\r\n\t(function (module, exports) {\r\n\t\t(function (global, factory) {\r\n\t\t    factory(exports) ;\r\n\t\t})(commonjsGlobal, (function (exports) {\r\n\t\t    const comma = ','.charCodeAt(0);\r\n\t\t    const semicolon = ';'.charCodeAt(0);\r\n\t\t    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\t\t    const intToChar = new Uint8Array(64); // 64 possible chars.\r\n\t\t    const charToInt = new Uint8Array(128); // z is 122 in ASCII\r\n\t\t    for (let i = 0; i < chars.length; i++) {\r\n\t\t        const c = chars.charCodeAt(i);\r\n\t\t        intToChar[i] = c;\r\n\t\t        charToInt[c] = i;\r\n\t\t    }\r\n\t\t    // Provide a fallback for older environments.\r\n\t\t    const td = typeof TextDecoder !== 'undefined'\r\n\t\t        ? /* #__PURE__ */ new TextDecoder()\r\n\t\t        : typeof Buffer !== 'undefined'\r\n\t\t            ? {\r\n\t\t                decode(buf) {\r\n\t\t                    const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\r\n\t\t                    return out.toString();\r\n\t\t                },\r\n\t\t            }\r\n\t\t            : {\r\n\t\t                decode(buf) {\r\n\t\t                    let out = '';\r\n\t\t                    for (let i = 0; i < buf.length; i++) {\r\n\t\t                        out += String.fromCharCode(buf[i]);\r\n\t\t                    }\r\n\t\t                    return out;\r\n\t\t                },\r\n\t\t            };\r\n\t\t    function decode(mappings) {\r\n\t\t        const state = new Int32Array(5);\r\n\t\t        const decoded = [];\r\n\t\t        let index = 0;\r\n\t\t        do {\r\n\t\t            const semi = indexOf(mappings, index);\r\n\t\t            const line = [];\r\n\t\t            let sorted = true;\r\n\t\t            let lastCol = 0;\r\n\t\t            state[0] = 0;\r\n\t\t            for (let i = index; i < semi; i++) {\r\n\t\t                let seg;\r\n\t\t                i = decodeInteger(mappings, i, state, 0); // genColumn\r\n\t\t                const col = state[0];\r\n\t\t                if (col < lastCol)\r\n\t\t                    sorted = false;\r\n\t\t                lastCol = col;\r\n\t\t                if (hasMoreVlq(mappings, i, semi)) {\r\n\t\t                    i = decodeInteger(mappings, i, state, 1); // sourcesIndex\r\n\t\t                    i = decodeInteger(mappings, i, state, 2); // sourceLine\r\n\t\t                    i = decodeInteger(mappings, i, state, 3); // sourceColumn\r\n\t\t                    if (hasMoreVlq(mappings, i, semi)) {\r\n\t\t                        i = decodeInteger(mappings, i, state, 4); // namesIndex\r\n\t\t                        seg = [col, state[1], state[2], state[3], state[4]];\r\n\t\t                    }\r\n\t\t                    else {\r\n\t\t                        seg = [col, state[1], state[2], state[3]];\r\n\t\t                    }\r\n\t\t                }\r\n\t\t                else {\r\n\t\t                    seg = [col];\r\n\t\t                }\r\n\t\t                line.push(seg);\r\n\t\t            }\r\n\t\t            if (!sorted)\r\n\t\t                sort(line);\r\n\t\t            decoded.push(line);\r\n\t\t            index = semi + 1;\r\n\t\t        } while (index <= mappings.length);\r\n\t\t        return decoded;\r\n\t\t    }\r\n\t\t    function indexOf(mappings, index) {\r\n\t\t        const idx = mappings.indexOf(';', index);\r\n\t\t        return idx === -1 ? mappings.length : idx;\r\n\t\t    }\r\n\t\t    function decodeInteger(mappings, pos, state, j) {\r\n\t\t        let value = 0;\r\n\t\t        let shift = 0;\r\n\t\t        let integer = 0;\r\n\t\t        do {\r\n\t\t            const c = mappings.charCodeAt(pos++);\r\n\t\t            integer = charToInt[c];\r\n\t\t            value |= (integer & 31) << shift;\r\n\t\t            shift += 5;\r\n\t\t        } while (integer & 32);\r\n\t\t        const shouldNegate = value & 1;\r\n\t\t        value >>>= 1;\r\n\t\t        if (shouldNegate) {\r\n\t\t            value = -0x80000000 | -value;\r\n\t\t        }\r\n\t\t        state[j] += value;\r\n\t\t        return pos;\r\n\t\t    }\r\n\t\t    function hasMoreVlq(mappings, i, length) {\r\n\t\t        if (i >= length)\r\n\t\t            return false;\r\n\t\t        return mappings.charCodeAt(i) !== comma;\r\n\t\t    }\r\n\t\t    function sort(line) {\r\n\t\t        line.sort(sortComparator);\r\n\t\t    }\r\n\t\t    function sortComparator(a, b) {\r\n\t\t        return a[0] - b[0];\r\n\t\t    }\r\n\t\t    function encode(decoded) {\r\n\t\t        const state = new Int32Array(5);\r\n\t\t        const bufLength = 1024 * 16;\r\n\t\t        const subLength = bufLength - 36;\r\n\t\t        const buf = new Uint8Array(bufLength);\r\n\t\t        const sub = buf.subarray(0, subLength);\r\n\t\t        let pos = 0;\r\n\t\t        let out = '';\r\n\t\t        for (let i = 0; i < decoded.length; i++) {\r\n\t\t            const line = decoded[i];\r\n\t\t            if (i > 0) {\r\n\t\t                if (pos === bufLength) {\r\n\t\t                    out += td.decode(buf);\r\n\t\t                    pos = 0;\r\n\t\t                }\r\n\t\t                buf[pos++] = semicolon;\r\n\t\t            }\r\n\t\t            if (line.length === 0)\r\n\t\t                continue;\r\n\t\t            state[0] = 0;\r\n\t\t            for (let j = 0; j < line.length; j++) {\r\n\t\t                const segment = line[j];\r\n\t\t                // We can push up to 5 ints, each int can take at most 7 chars, and we\r\n\t\t                // may push a comma.\r\n\t\t                if (pos > subLength) {\r\n\t\t                    out += td.decode(sub);\r\n\t\t                    buf.copyWithin(0, subLength, pos);\r\n\t\t                    pos -= subLength;\r\n\t\t                }\r\n\t\t                if (j > 0)\r\n\t\t                    buf[pos++] = comma;\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\r\n\t\t                if (segment.length === 1)\r\n\t\t                    continue;\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\r\n\t\t                if (segment.length === 4)\r\n\t\t                    continue;\r\n\t\t                pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return out + td.decode(buf.subarray(0, pos));\r\n\t\t    }\r\n\t\t    function encodeInteger(buf, pos, state, segment, j) {\r\n\t\t        const next = segment[j];\r\n\t\t        let num = next - state[j];\r\n\t\t        state[j] = next;\r\n\t\t        num = num < 0 ? (-num << 1) | 1 : num << 1;\r\n\t\t        do {\r\n\t\t            let clamped = num & 0b011111;\r\n\t\t            num >>>= 5;\r\n\t\t            if (num > 0)\r\n\t\t                clamped |= 0b100000;\r\n\t\t            buf[pos++] = intToChar[clamped];\r\n\t\t        } while (num > 0);\r\n\t\t        return pos;\r\n\t\t    }\r\n\r\n\t\t    exports.decode = decode;\r\n\t\t    exports.encode = encode;\r\n\r\n\t\t    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n\t\t}));\r\n\t\t\r\n\t} (sourcemapCodec_umd, sourcemapCodec_umd.exports));\r\n\treturn sourcemapCodec_umd.exports;\r\n}\r\n\r\nvar resolveUri_umd = {exports: {}};\r\n\r\nvar hasRequiredResolveUri_umd;\r\n\r\nfunction requireResolveUri_umd () {\r\n\tif (hasRequiredResolveUri_umd) return resolveUri_umd.exports;\r\n\thasRequiredResolveUri_umd = 1;\r\n\t(function (module, exports) {\r\n\t\t(function (global, factory) {\r\n\t\t    module.exports = factory() ;\r\n\t\t})(commonjsGlobal, (function () {\r\n\t\t    // Matches the scheme of a URL, eg \"http://\"\r\n\t\t    const schemeRegex = /^[\\w+.-]+:\\/\\//;\r\n\t\t    /**\r\n\t\t     * Matches the parts of a URL:\r\n\t\t     * 1. Scheme, including \":\", guaranteed.\r\n\t\t     * 2. User/password, including \"@\", optional.\r\n\t\t     * 3. Host, guaranteed.\r\n\t\t     * 4. Port, including \":\", optional.\r\n\t\t     * 5. Path, including \"/\", optional.\r\n\t\t     * 6. Query, including \"?\", optional.\r\n\t\t     * 7. Hash, including \"#\", optional.\r\n\t\t     */\r\n\t\t    const urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\r\n\t\t    /**\r\n\t\t     * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\r\n\t\t     * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\r\n\t\t     *\r\n\t\t     * 1. Host, optional.\r\n\t\t     * 2. Path, which may include \"/\", guaranteed.\r\n\t\t     * 3. Query, including \"?\", optional.\r\n\t\t     * 4. Hash, including \"#\", optional.\r\n\t\t     */\r\n\t\t    const fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\r\n\t\t    var UrlType;\r\n\t\t    (function (UrlType) {\r\n\t\t        UrlType[UrlType[\"Empty\"] = 1] = \"Empty\";\r\n\t\t        UrlType[UrlType[\"Hash\"] = 2] = \"Hash\";\r\n\t\t        UrlType[UrlType[\"Query\"] = 3] = \"Query\";\r\n\t\t        UrlType[UrlType[\"RelativePath\"] = 4] = \"RelativePath\";\r\n\t\t        UrlType[UrlType[\"AbsolutePath\"] = 5] = \"AbsolutePath\";\r\n\t\t        UrlType[UrlType[\"SchemeRelative\"] = 6] = \"SchemeRelative\";\r\n\t\t        UrlType[UrlType[\"Absolute\"] = 7] = \"Absolute\";\r\n\t\t    })(UrlType || (UrlType = {}));\r\n\t\t    function isAbsoluteUrl(input) {\r\n\t\t        return schemeRegex.test(input);\r\n\t\t    }\r\n\t\t    function isSchemeRelativeUrl(input) {\r\n\t\t        return input.startsWith('//');\r\n\t\t    }\r\n\t\t    function isAbsolutePath(input) {\r\n\t\t        return input.startsWith('/');\r\n\t\t    }\r\n\t\t    function isFileUrl(input) {\r\n\t\t        return input.startsWith('file:');\r\n\t\t    }\r\n\t\t    function isRelative(input) {\r\n\t\t        return /^[.?#]/.test(input);\r\n\t\t    }\r\n\t\t    function parseAbsoluteUrl(input) {\r\n\t\t        const match = urlRegex.exec(input);\r\n\t\t        return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/', match[6] || '', match[7] || '');\r\n\t\t    }\r\n\t\t    function parseFileUrl(input) {\r\n\t\t        const match = fileRegex.exec(input);\r\n\t\t        const path = match[2];\r\n\t\t        return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path, match[3] || '', match[4] || '');\r\n\t\t    }\r\n\t\t    function makeUrl(scheme, user, host, port, path, query, hash) {\r\n\t\t        return {\r\n\t\t            scheme,\r\n\t\t            user,\r\n\t\t            host,\r\n\t\t            port,\r\n\t\t            path,\r\n\t\t            query,\r\n\t\t            hash,\r\n\t\t            type: UrlType.Absolute,\r\n\t\t        };\r\n\t\t    }\r\n\t\t    function parseUrl(input) {\r\n\t\t        if (isSchemeRelativeUrl(input)) {\r\n\t\t            const url = parseAbsoluteUrl('http:' + input);\r\n\t\t            url.scheme = '';\r\n\t\t            url.type = UrlType.SchemeRelative;\r\n\t\t            return url;\r\n\t\t        }\r\n\t\t        if (isAbsolutePath(input)) {\r\n\t\t            const url = parseAbsoluteUrl('http://foo.com' + input);\r\n\t\t            url.scheme = '';\r\n\t\t            url.host = '';\r\n\t\t            url.type = UrlType.AbsolutePath;\r\n\t\t            return url;\r\n\t\t        }\r\n\t\t        if (isFileUrl(input))\r\n\t\t            return parseFileUrl(input);\r\n\t\t        if (isAbsoluteUrl(input))\r\n\t\t            return parseAbsoluteUrl(input);\r\n\t\t        const url = parseAbsoluteUrl('http://foo.com/' + input);\r\n\t\t        url.scheme = '';\r\n\t\t        url.host = '';\r\n\t\t        url.type = input\r\n\t\t            ? input.startsWith('?')\r\n\t\t                ? UrlType.Query\r\n\t\t                : input.startsWith('#')\r\n\t\t                    ? UrlType.Hash\r\n\t\t                    : UrlType.RelativePath\r\n\t\t            : UrlType.Empty;\r\n\t\t        return url;\r\n\t\t    }\r\n\t\t    function stripPathFilename(path) {\r\n\t\t        // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\r\n\t\t        // paths. It's not a file, so we can't strip it.\r\n\t\t        if (path.endsWith('/..'))\r\n\t\t            return path;\r\n\t\t        const index = path.lastIndexOf('/');\r\n\t\t        return path.slice(0, index + 1);\r\n\t\t    }\r\n\t\t    function mergePaths(url, base) {\r\n\t\t        normalizePath(base, base.type);\r\n\t\t        // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\r\n\t\t        // path).\r\n\t\t        if (url.path === '/') {\r\n\t\t            url.path = base.path;\r\n\t\t        }\r\n\t\t        else {\r\n\t\t            // Resolution happens relative to the base path's directory, not the file.\r\n\t\t            url.path = stripPathFilename(base.path) + url.path;\r\n\t\t        }\r\n\t\t    }\r\n\t\t    /**\r\n\t\t     * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\r\n\t\t     * \"foo/.\". We need to normalize to a standard representation.\r\n\t\t     */\r\n\t\t    function normalizePath(url, type) {\r\n\t\t        const rel = type <= UrlType.RelativePath;\r\n\t\t        const pieces = url.path.split('/');\r\n\t\t        // We need to preserve the first piece always, so that we output a leading slash. The item at\r\n\t\t        // pieces[0] is an empty string.\r\n\t\t        let pointer = 1;\r\n\t\t        // Positive is the number of real directories we've output, used for popping a parent directory.\r\n\t\t        // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\r\n\t\t        let positive = 0;\r\n\t\t        // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\r\n\t\t        // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\r\n\t\t        // real directory, we won't need to append, unless the other conditions happen again.\r\n\t\t        let addTrailingSlash = false;\r\n\t\t        for (let i = 1; i < pieces.length; i++) {\r\n\t\t            const piece = pieces[i];\r\n\t\t            // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\r\n\t\t            if (!piece) {\r\n\t\t                addTrailingSlash = true;\r\n\t\t                continue;\r\n\t\t            }\r\n\t\t            // If we encounter a real directory, then we don't need to append anymore.\r\n\t\t            addTrailingSlash = false;\r\n\t\t            // A current directory, which we can always drop.\r\n\t\t            if (piece === '.')\r\n\t\t                continue;\r\n\t\t            // A parent directory, we need to see if there are any real directories we can pop. Else, we\r\n\t\t            // have an excess of parents, and we'll need to keep the \"..\".\r\n\t\t            if (piece === '..') {\r\n\t\t                if (positive) {\r\n\t\t                    addTrailingSlash = true;\r\n\t\t                    positive--;\r\n\t\t                    pointer--;\r\n\t\t                }\r\n\t\t                else if (rel) {\r\n\t\t                    // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\r\n\t\t                    // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\r\n\t\t                    pieces[pointer++] = piece;\r\n\t\t                }\r\n\t\t                continue;\r\n\t\t            }\r\n\t\t            // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\r\n\t\t            // any popped or dropped directories.\r\n\t\t            pieces[pointer++] = piece;\r\n\t\t            positive++;\r\n\t\t        }\r\n\t\t        let path = '';\r\n\t\t        for (let i = 1; i < pointer; i++) {\r\n\t\t            path += '/' + pieces[i];\r\n\t\t        }\r\n\t\t        if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\r\n\t\t            path += '/';\r\n\t\t        }\r\n\t\t        url.path = path;\r\n\t\t    }\r\n\t\t    /**\r\n\t\t     * Attempts to resolve `input` URL/path relative to `base`.\r\n\t\t     */\r\n\t\t    function resolve(input, base) {\r\n\t\t        if (!input && !base)\r\n\t\t            return '';\r\n\t\t        const url = parseUrl(input);\r\n\t\t        let inputType = url.type;\r\n\t\t        if (base && inputType !== UrlType.Absolute) {\r\n\t\t            const baseUrl = parseUrl(base);\r\n\t\t            const baseType = baseUrl.type;\r\n\t\t            switch (inputType) {\r\n\t\t                case UrlType.Empty:\r\n\t\t                    url.hash = baseUrl.hash;\r\n\t\t                // fall through\r\n\t\t                case UrlType.Hash:\r\n\t\t                    url.query = baseUrl.query;\r\n\t\t                // fall through\r\n\t\t                case UrlType.Query:\r\n\t\t                case UrlType.RelativePath:\r\n\t\t                    mergePaths(url, baseUrl);\r\n\t\t                // fall through\r\n\t\t                case UrlType.AbsolutePath:\r\n\t\t                    // The host, user, and port are joined, you can't copy one without the others.\r\n\t\t                    url.user = baseUrl.user;\r\n\t\t                    url.host = baseUrl.host;\r\n\t\t                    url.port = baseUrl.port;\r\n\t\t                // fall through\r\n\t\t                case UrlType.SchemeRelative:\r\n\t\t                    // The input doesn't have a schema at least, so we need to copy at least that over.\r\n\t\t                    url.scheme = baseUrl.scheme;\r\n\t\t            }\r\n\t\t            if (baseType > inputType)\r\n\t\t                inputType = baseType;\r\n\t\t        }\r\n\t\t        normalizePath(url, inputType);\r\n\t\t        const queryHash = url.query + url.hash;\r\n\t\t        switch (inputType) {\r\n\t\t            // This is impossible, because of the empty checks at the start of the function.\r\n\t\t            // case UrlType.Empty:\r\n\t\t            case UrlType.Hash:\r\n\t\t            case UrlType.Query:\r\n\t\t                return queryHash;\r\n\t\t            case UrlType.RelativePath: {\r\n\t\t                // The first char is always a \"/\", and we need it to be relative.\r\n\t\t                const path = url.path.slice(1);\r\n\t\t                if (!path)\r\n\t\t                    return queryHash || '.';\r\n\t\t                if (isRelative(base || input) && !isRelative(path)) {\r\n\t\t                    // If base started with a leading \".\", or there is no base and input started with a \".\",\r\n\t\t                    // then we need to ensure that the relative path starts with a \".\". We don't know if\r\n\t\t                    // relative starts with a \"..\", though, so check before prepending.\r\n\t\t                    return './' + path + queryHash;\r\n\t\t                }\r\n\t\t                return path + queryHash;\r\n\t\t            }\r\n\t\t            case UrlType.AbsolutePath:\r\n\t\t                return url.path + queryHash;\r\n\t\t            default:\r\n\t\t                return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\r\n\t\t        }\r\n\t\t    }\r\n\r\n\t\t    return resolve;\r\n\r\n\t\t}));\r\n\t\t\r\n\t} (resolveUri_umd));\r\n\treturn resolveUri_umd.exports;\r\n}\r\n\r\nvar hasRequiredTraceMapping_umd;\r\n\r\nfunction requireTraceMapping_umd () {\r\n\tif (hasRequiredTraceMapping_umd) return traceMapping_umd.exports;\r\n\thasRequiredTraceMapping_umd = 1;\r\n\t(function (module, exports) {\r\n\t\t(function (global, factory) {\r\n\t\t    factory(exports, requireSourcemapCodec_umd(), requireResolveUri_umd()) ;\r\n\t\t})(commonjsGlobal, (function (exports, sourcemapCodec, resolveUri) {\r\n\t\t    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\r\n\r\n\t\t    var resolveUri__default = /*#__PURE__*/_interopDefaultLegacy(resolveUri);\r\n\r\n\t\t    function resolve(input, base) {\r\n\t\t        // The base is always treated as a directory, if it's not empty.\r\n\t\t        // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\r\n\t\t        // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\r\n\t\t        if (base && !base.endsWith('/'))\r\n\t\t            base += '/';\r\n\t\t        return resolveUri__default[\"default\"](input, base);\r\n\t\t    }\r\n\r\n\t\t    /**\r\n\t\t     * Removes everything after the last \"/\", but leaves the slash.\r\n\t\t     */\r\n\t\t    function stripFilename(path) {\r\n\t\t        if (!path)\r\n\t\t            return '';\r\n\t\t        const index = path.lastIndexOf('/');\r\n\t\t        return path.slice(0, index + 1);\r\n\t\t    }\r\n\r\n\t\t    const COLUMN = 0;\r\n\t\t    const SOURCES_INDEX = 1;\r\n\t\t    const SOURCE_LINE = 2;\r\n\t\t    const SOURCE_COLUMN = 3;\r\n\t\t    const NAMES_INDEX = 4;\r\n\t\t    const REV_GENERATED_LINE = 1;\r\n\t\t    const REV_GENERATED_COLUMN = 2;\r\n\r\n\t\t    function maybeSort(mappings, owned) {\r\n\t\t        const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\r\n\t\t        if (unsortedIndex === mappings.length)\r\n\t\t            return mappings;\r\n\t\t        // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If\r\n\t\t        // not, we do not want to modify the consumer's input array.\r\n\t\t        if (!owned)\r\n\t\t            mappings = mappings.slice();\r\n\t\t        for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\r\n\t\t            mappings[i] = sortSegments(mappings[i], owned);\r\n\t\t        }\r\n\t\t        return mappings;\r\n\t\t    }\r\n\t\t    function nextUnsortedSegmentLine(mappings, start) {\r\n\t\t        for (let i = start; i < mappings.length; i++) {\r\n\t\t            if (!isSorted(mappings[i]))\r\n\t\t                return i;\r\n\t\t        }\r\n\t\t        return mappings.length;\r\n\t\t    }\r\n\t\t    function isSorted(line) {\r\n\t\t        for (let j = 1; j < line.length; j++) {\r\n\t\t            if (line[j][COLUMN] < line[j - 1][COLUMN]) {\r\n\t\t                return false;\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return true;\r\n\t\t    }\r\n\t\t    function sortSegments(line, owned) {\r\n\t\t        if (!owned)\r\n\t\t            line = line.slice();\r\n\t\t        return line.sort(sortComparator);\r\n\t\t    }\r\n\t\t    function sortComparator(a, b) {\r\n\t\t        return a[COLUMN] - b[COLUMN];\r\n\t\t    }\r\n\r\n\t\t    let found = false;\r\n\t\t    /**\r\n\t\t     * A binary search implementation that returns the index if a match is found.\r\n\t\t     * If no match is found, then the left-index (the index associated with the item that comes just\r\n\t\t     * before the desired index) is returned. To maintain proper sort order, a splice would happen at\r\n\t\t     * the next index:\r\n\t\t     *\r\n\t\t     * ```js\r\n\t\t     * const array = [1, 3];\r\n\t\t     * const needle = 2;\r\n\t\t     * const index = binarySearch(array, needle, (item, needle) => item - needle);\r\n\t\t     *\r\n\t\t     * assert.equal(index, 0);\r\n\t\t     * array.splice(index + 1, 0, needle);\r\n\t\t     * assert.deepEqual(array, [1, 2, 3]);\r\n\t\t     * ```\r\n\t\t     */\r\n\t\t    function binarySearch(haystack, needle, low, high) {\r\n\t\t        while (low <= high) {\r\n\t\t            const mid = low + ((high - low) >> 1);\r\n\t\t            const cmp = haystack[mid][COLUMN] - needle;\r\n\t\t            if (cmp === 0) {\r\n\t\t                found = true;\r\n\t\t                return mid;\r\n\t\t            }\r\n\t\t            if (cmp < 0) {\r\n\t\t                low = mid + 1;\r\n\t\t            }\r\n\t\t            else {\r\n\t\t                high = mid - 1;\r\n\t\t            }\r\n\t\t        }\r\n\t\t        found = false;\r\n\t\t        return low - 1;\r\n\t\t    }\r\n\t\t    function upperBound(haystack, needle, index) {\r\n\t\t        for (let i = index + 1; i < haystack.length; index = i++) {\r\n\t\t            if (haystack[i][COLUMN] !== needle)\r\n\t\t                break;\r\n\t\t        }\r\n\t\t        return index;\r\n\t\t    }\r\n\t\t    function lowerBound(haystack, needle, index) {\r\n\t\t        for (let i = index - 1; i >= 0; index = i--) {\r\n\t\t            if (haystack[i][COLUMN] !== needle)\r\n\t\t                break;\r\n\t\t        }\r\n\t\t        return index;\r\n\t\t    }\r\n\t\t    function memoizedState() {\r\n\t\t        return {\r\n\t\t            lastKey: -1,\r\n\t\t            lastNeedle: -1,\r\n\t\t            lastIndex: -1,\r\n\t\t        };\r\n\t\t    }\r\n\t\t    /**\r\n\t\t     * This overly complicated beast is just to record the last tested line/column and the resulting\r\n\t\t     * index, allowing us to skip a few tests if mappings are monotonically increasing.\r\n\t\t     */\r\n\t\t    function memoizedBinarySearch(haystack, needle, state, key) {\r\n\t\t        const { lastKey, lastNeedle, lastIndex } = state;\r\n\t\t        let low = 0;\r\n\t\t        let high = haystack.length - 1;\r\n\t\t        if (key === lastKey) {\r\n\t\t            if (needle === lastNeedle) {\r\n\t\t                found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\r\n\t\t                return lastIndex;\r\n\t\t            }\r\n\t\t            if (needle >= lastNeedle) {\r\n\t\t                // lastIndex may be -1 if the previous needle was not found.\r\n\t\t                low = lastIndex === -1 ? 0 : lastIndex;\r\n\t\t            }\r\n\t\t            else {\r\n\t\t                high = lastIndex;\r\n\t\t            }\r\n\t\t        }\r\n\t\t        state.lastKey = key;\r\n\t\t        state.lastNeedle = needle;\r\n\t\t        return (state.lastIndex = binarySearch(haystack, needle, low, high));\r\n\t\t    }\r\n\r\n\t\t    // Rebuilds the original source files, with mappings that are ordered by source line/column instead\r\n\t\t    // of generated line/column.\r\n\t\t    function buildBySources(decoded, memos) {\r\n\t\t        const sources = memos.map(buildNullArray);\r\n\t\t        for (let i = 0; i < decoded.length; i++) {\r\n\t\t            const line = decoded[i];\r\n\t\t            for (let j = 0; j < line.length; j++) {\r\n\t\t                const seg = line[j];\r\n\t\t                if (seg.length === 1)\r\n\t\t                    continue;\r\n\t\t                const sourceIndex = seg[SOURCES_INDEX];\r\n\t\t                const sourceLine = seg[SOURCE_LINE];\r\n\t\t                const sourceColumn = seg[SOURCE_COLUMN];\r\n\t\t                const originalSource = sources[sourceIndex];\r\n\t\t                const originalLine = (originalSource[sourceLine] || (originalSource[sourceLine] = []));\r\n\t\t                const memo = memos[sourceIndex];\r\n\t\t                // The binary search either found a match, or it found the left-index just before where the\r\n\t\t                // segment should go. Either way, we want to insert after that. And there may be multiple\r\n\t\t                // generated segments associated with an original location, so there may need to move several\r\n\t\t                // indexes before we find where we need to insert.\r\n\t\t                const index = upperBound(originalLine, sourceColumn, memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine));\r\n\t\t                insert(originalLine, (memo.lastIndex = index + 1), [sourceColumn, i, seg[COLUMN]]);\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return sources;\r\n\t\t    }\r\n\t\t    function insert(array, index, value) {\r\n\t\t        for (let i = array.length; i > index; i--) {\r\n\t\t            array[i] = array[i - 1];\r\n\t\t        }\r\n\t\t        array[index] = value;\r\n\t\t    }\r\n\t\t    // Null arrays allow us to use ordered index keys without actually allocating contiguous memory like\r\n\t\t    // a real array. We use a null-prototype object to avoid prototype pollution and deoptimizations.\r\n\t\t    // Numeric properties on objects are magically sorted in ascending order by the engine regardless of\r\n\t\t    // the insertion order. So, by setting any numeric keys, even out of order, we'll get ascending\r\n\t\t    // order when iterating with for-in.\r\n\t\t    function buildNullArray() {\r\n\t\t        return { __proto__: null };\r\n\t\t    }\r\n\r\n\t\t    const AnyMap = function (map, mapUrl) {\r\n\t\t        const parsed = typeof map === 'string' ? JSON.parse(map) : map;\r\n\t\t        if (!('sections' in parsed))\r\n\t\t            return new TraceMap(parsed, mapUrl);\r\n\t\t        const mappings = [];\r\n\t\t        const sources = [];\r\n\t\t        const sourcesContent = [];\r\n\t\t        const names = [];\r\n\t\t        recurse(parsed, mapUrl, mappings, sources, sourcesContent, names, 0, 0, Infinity, Infinity);\r\n\t\t        const joined = {\r\n\t\t            version: 3,\r\n\t\t            file: parsed.file,\r\n\t\t            names,\r\n\t\t            sources,\r\n\t\t            sourcesContent,\r\n\t\t            mappings,\r\n\t\t        };\r\n\t\t        return exports.presortedDecodedMap(joined);\r\n\t\t    };\r\n\t\t    function recurse(input, mapUrl, mappings, sources, sourcesContent, names, lineOffset, columnOffset, stopLine, stopColumn) {\r\n\t\t        const { sections } = input;\r\n\t\t        for (let i = 0; i < sections.length; i++) {\r\n\t\t            const { map, offset } = sections[i];\r\n\t\t            let sl = stopLine;\r\n\t\t            let sc = stopColumn;\r\n\t\t            if (i + 1 < sections.length) {\r\n\t\t                const nextOffset = sections[i + 1].offset;\r\n\t\t                sl = Math.min(stopLine, lineOffset + nextOffset.line);\r\n\t\t                if (sl === stopLine) {\r\n\t\t                    sc = Math.min(stopColumn, columnOffset + nextOffset.column);\r\n\t\t                }\r\n\t\t                else if (sl < stopLine) {\r\n\t\t                    sc = columnOffset + nextOffset.column;\r\n\t\t                }\r\n\t\t            }\r\n\t\t            addSection(map, mapUrl, mappings, sources, sourcesContent, names, lineOffset + offset.line, columnOffset + offset.column, sl, sc);\r\n\t\t        }\r\n\t\t    }\r\n\t\t    function addSection(input, mapUrl, mappings, sources, sourcesContent, names, lineOffset, columnOffset, stopLine, stopColumn) {\r\n\t\t        if ('sections' in input)\r\n\t\t            return recurse(...arguments);\r\n\t\t        const map = new TraceMap(input, mapUrl);\r\n\t\t        const sourcesOffset = sources.length;\r\n\t\t        const namesOffset = names.length;\r\n\t\t        const decoded = exports.decodedMappings(map);\r\n\t\t        const { resolvedSources, sourcesContent: contents } = map;\r\n\t\t        append(sources, resolvedSources);\r\n\t\t        append(names, map.names);\r\n\t\t        if (contents)\r\n\t\t            append(sourcesContent, contents);\r\n\t\t        else\r\n\t\t            for (let i = 0; i < resolvedSources.length; i++)\r\n\t\t                sourcesContent.push(null);\r\n\t\t        for (let i = 0; i < decoded.length; i++) {\r\n\t\t            const lineI = lineOffset + i;\r\n\t\t            // We can only add so many lines before we step into the range that the next section's map\r\n\t\t            // controls. When we get to the last line, then we'll start checking the segments to see if\r\n\t\t            // they've crossed into the column range. But it may not have any columns that overstep, so we\r\n\t\t            // still need to check that we don't overstep lines, too.\r\n\t\t            if (lineI > stopLine)\r\n\t\t                return;\r\n\t\t            // The out line may already exist in mappings (if we're continuing the line started by a\r\n\t\t            // previous section). Or, we may have jumped ahead several lines to start this section.\r\n\t\t            const out = getLine(mappings, lineI);\r\n\t\t            // On the 0th loop, the section's column offset shifts us forward. On all other lines (since the\r\n\t\t            // map can be multiple lines), it doesn't.\r\n\t\t            const cOffset = i === 0 ? columnOffset : 0;\r\n\t\t            const line = decoded[i];\r\n\t\t            for (let j = 0; j < line.length; j++) {\r\n\t\t                const seg = line[j];\r\n\t\t                const column = cOffset + seg[COLUMN];\r\n\t\t                // If this segment steps into the column range that the next section's map controls, we need\r\n\t\t                // to stop early.\r\n\t\t                if (lineI === stopLine && column >= stopColumn)\r\n\t\t                    return;\r\n\t\t                if (seg.length === 1) {\r\n\t\t                    out.push([column]);\r\n\t\t                    continue;\r\n\t\t                }\r\n\t\t                const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];\r\n\t\t                const sourceLine = seg[SOURCE_LINE];\r\n\t\t                const sourceColumn = seg[SOURCE_COLUMN];\r\n\t\t                out.push(seg.length === 4\r\n\t\t                    ? [column, sourcesIndex, sourceLine, sourceColumn]\r\n\t\t                    : [column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]]);\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t    function append(arr, other) {\r\n\t\t        for (let i = 0; i < other.length; i++)\r\n\t\t            arr.push(other[i]);\r\n\t\t    }\r\n\t\t    function getLine(arr, index) {\r\n\t\t        for (let i = arr.length; i <= index; i++)\r\n\t\t            arr[i] = [];\r\n\t\t        return arr[index];\r\n\t\t    }\r\n\r\n\t\t    const LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';\r\n\t\t    const COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';\r\n\t\t    const LEAST_UPPER_BOUND = -1;\r\n\t\t    const GREATEST_LOWER_BOUND = 1;\r\n\t\t    /**\r\n\t\t     * Returns the encoded (VLQ string) form of the SourceMap's mappings field.\r\n\t\t     */\r\n\t\t    exports.encodedMappings = void 0;\r\n\t\t    /**\r\n\t\t     * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.\r\n\t\t     */\r\n\t\t    exports.decodedMappings = void 0;\r\n\t\t    /**\r\n\t\t     * A low-level API to find the segment associated with a generated line/column (think, from a\r\n\t\t     * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.\r\n\t\t     */\r\n\t\t    exports.traceSegment = void 0;\r\n\t\t    /**\r\n\t\t     * A higher-level API to find the source/line/column associated with a generated line/column\r\n\t\t     * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in\r\n\t\t     * `source-map` library.\r\n\t\t     */\r\n\t\t    exports.originalPositionFor = void 0;\r\n\t\t    /**\r\n\t\t     * Finds the generated line/column position of the provided source/line/column source position.\r\n\t\t     */\r\n\t\t    exports.generatedPositionFor = void 0;\r\n\t\t    /**\r\n\t\t     * Finds all generated line/column positions of the provided source/line/column source position.\r\n\t\t     */\r\n\t\t    exports.allGeneratedPositionsFor = void 0;\r\n\t\t    /**\r\n\t\t     * Iterates each mapping in generated position order.\r\n\t\t     */\r\n\t\t    exports.eachMapping = void 0;\r\n\t\t    /**\r\n\t\t     * Retrieves the source content for a particular source, if its found. Returns null if not.\r\n\t\t     */\r\n\t\t    exports.sourceContentFor = void 0;\r\n\t\t    /**\r\n\t\t     * A helper that skips sorting of the input map's mappings array, which can be expensive for larger\r\n\t\t     * maps.\r\n\t\t     */\r\n\t\t    exports.presortedDecodedMap = void 0;\r\n\t\t    /**\r\n\t\t     * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\r\n\t\t     * a sourcemap, or to JSON.stringify.\r\n\t\t     */\r\n\t\t    exports.decodedMap = void 0;\r\n\t\t    /**\r\n\t\t     * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\r\n\t\t     * a sourcemap, or to JSON.stringify.\r\n\t\t     */\r\n\t\t    exports.encodedMap = void 0;\r\n\t\t    class TraceMap {\r\n\t\t        constructor(map, mapUrl) {\r\n\t\t            const isString = typeof map === 'string';\r\n\t\t            if (!isString && map._decodedMemo)\r\n\t\t                return map;\r\n\t\t            const parsed = (isString ? JSON.parse(map) : map);\r\n\t\t            const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\r\n\t\t            this.version = version;\r\n\t\t            this.file = file;\r\n\t\t            this.names = names;\r\n\t\t            this.sourceRoot = sourceRoot;\r\n\t\t            this.sources = sources;\r\n\t\t            this.sourcesContent = sourcesContent;\r\n\t\t            const from = resolve(sourceRoot || '', stripFilename(mapUrl));\r\n\t\t            this.resolvedSources = sources.map((s) => resolve(s || '', from));\r\n\t\t            const { mappings } = parsed;\r\n\t\t            if (typeof mappings === 'string') {\r\n\t\t                this._encoded = mappings;\r\n\t\t                this._decoded = undefined;\r\n\t\t            }\r\n\t\t            else {\r\n\t\t                this._encoded = undefined;\r\n\t\t                this._decoded = maybeSort(mappings, isString);\r\n\t\t            }\r\n\t\t            this._decodedMemo = memoizedState();\r\n\t\t            this._bySources = undefined;\r\n\t\t            this._bySourceMemos = undefined;\r\n\t\t        }\r\n\t\t    }\r\n\t\t    (() => {\r\n\t\t        exports.encodedMappings = (map) => {\r\n\t\t            var _a;\r\n\t\t            return ((_a = map._encoded) !== null && _a !== void 0 ? _a : (map._encoded = sourcemapCodec.encode(map._decoded)));\r\n\t\t        };\r\n\t\t        exports.decodedMappings = (map) => {\r\n\t\t            return (map._decoded || (map._decoded = sourcemapCodec.decode(map._encoded)));\r\n\t\t        };\r\n\t\t        exports.traceSegment = (map, line, column) => {\r\n\t\t            const decoded = exports.decodedMappings(map);\r\n\t\t            // It's common for parent source maps to have pointers to lines that have no\r\n\t\t            // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\r\n\t\t            if (line >= decoded.length)\r\n\t\t                return null;\r\n\t\t            const segments = decoded[line];\r\n\t\t            const index = traceSegmentInternal(segments, map._decodedMemo, line, column, GREATEST_LOWER_BOUND);\r\n\t\t            return index === -1 ? null : segments[index];\r\n\t\t        };\r\n\t\t        exports.originalPositionFor = (map, { line, column, bias }) => {\r\n\t\t            line--;\r\n\t\t            if (line < 0)\r\n\t\t                throw new Error(LINE_GTR_ZERO);\r\n\t\t            if (column < 0)\r\n\t\t                throw new Error(COL_GTR_EQ_ZERO);\r\n\t\t            const decoded = exports.decodedMappings(map);\r\n\t\t            // It's common for parent source maps to have pointers to lines that have no\r\n\t\t            // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\r\n\t\t            if (line >= decoded.length)\r\n\t\t                return OMapping(null, null, null, null);\r\n\t\t            const segments = decoded[line];\r\n\t\t            const index = traceSegmentInternal(segments, map._decodedMemo, line, column, bias || GREATEST_LOWER_BOUND);\r\n\t\t            if (index === -1)\r\n\t\t                return OMapping(null, null, null, null);\r\n\t\t            const segment = segments[index];\r\n\t\t            if (segment.length === 1)\r\n\t\t                return OMapping(null, null, null, null);\r\n\t\t            const { names, resolvedSources } = map;\r\n\t\t            return OMapping(resolvedSources[segment[SOURCES_INDEX]], segment[SOURCE_LINE] + 1, segment[SOURCE_COLUMN], segment.length === 5 ? names[segment[NAMES_INDEX]] : null);\r\n\t\t        };\r\n\t\t        exports.allGeneratedPositionsFor = (map, { source, line, column, bias }) => {\r\n\t\t            // SourceMapConsumer uses LEAST_UPPER_BOUND for some reason, so we follow suit.\r\n\t\t            return generatedPosition(map, source, line, column, bias || LEAST_UPPER_BOUND, true);\r\n\t\t        };\r\n\t\t        exports.generatedPositionFor = (map, { source, line, column, bias }) => {\r\n\t\t            return generatedPosition(map, source, line, column, bias || GREATEST_LOWER_BOUND, false);\r\n\t\t        };\r\n\t\t        exports.eachMapping = (map, cb) => {\r\n\t\t            const decoded = exports.decodedMappings(map);\r\n\t\t            const { names, resolvedSources } = map;\r\n\t\t            for (let i = 0; i < decoded.length; i++) {\r\n\t\t                const line = decoded[i];\r\n\t\t                for (let j = 0; j < line.length; j++) {\r\n\t\t                    const seg = line[j];\r\n\t\t                    const generatedLine = i + 1;\r\n\t\t                    const generatedColumn = seg[0];\r\n\t\t                    let source = null;\r\n\t\t                    let originalLine = null;\r\n\t\t                    let originalColumn = null;\r\n\t\t                    let name = null;\r\n\t\t                    if (seg.length !== 1) {\r\n\t\t                        source = resolvedSources[seg[1]];\r\n\t\t                        originalLine = seg[2] + 1;\r\n\t\t                        originalColumn = seg[3];\r\n\t\t                    }\r\n\t\t                    if (seg.length === 5)\r\n\t\t                        name = names[seg[4]];\r\n\t\t                    cb({\r\n\t\t                        generatedLine,\r\n\t\t                        generatedColumn,\r\n\t\t                        source,\r\n\t\t                        originalLine,\r\n\t\t                        originalColumn,\r\n\t\t                        name,\r\n\t\t                    });\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\t\t        exports.sourceContentFor = (map, source) => {\r\n\t\t            const { sources, resolvedSources, sourcesContent } = map;\r\n\t\t            if (sourcesContent == null)\r\n\t\t                return null;\r\n\t\t            let index = sources.indexOf(source);\r\n\t\t            if (index === -1)\r\n\t\t                index = resolvedSources.indexOf(source);\r\n\t\t            return index === -1 ? null : sourcesContent[index];\r\n\t\t        };\r\n\t\t        exports.presortedDecodedMap = (map, mapUrl) => {\r\n\t\t            const tracer = new TraceMap(clone(map, []), mapUrl);\r\n\t\t            tracer._decoded = map.mappings;\r\n\t\t            return tracer;\r\n\t\t        };\r\n\t\t        exports.decodedMap = (map) => {\r\n\t\t            return clone(map, exports.decodedMappings(map));\r\n\t\t        };\r\n\t\t        exports.encodedMap = (map) => {\r\n\t\t            return clone(map, exports.encodedMappings(map));\r\n\t\t        };\r\n\t\t        function generatedPosition(map, source, line, column, bias, all) {\r\n\t\t            line--;\r\n\t\t            if (line < 0)\r\n\t\t                throw new Error(LINE_GTR_ZERO);\r\n\t\t            if (column < 0)\r\n\t\t                throw new Error(COL_GTR_EQ_ZERO);\r\n\t\t            const { sources, resolvedSources } = map;\r\n\t\t            let sourceIndex = sources.indexOf(source);\r\n\t\t            if (sourceIndex === -1)\r\n\t\t                sourceIndex = resolvedSources.indexOf(source);\r\n\t\t            if (sourceIndex === -1)\r\n\t\t                return all ? [] : GMapping(null, null);\r\n\t\t            const generated = (map._bySources || (map._bySources = buildBySources(exports.decodedMappings(map), (map._bySourceMemos = sources.map(memoizedState)))));\r\n\t\t            const segments = generated[sourceIndex][line];\r\n\t\t            if (segments == null)\r\n\t\t                return all ? [] : GMapping(null, null);\r\n\t\t            const memo = map._bySourceMemos[sourceIndex];\r\n\t\t            if (all)\r\n\t\t                return sliceGeneratedPositions(segments, memo, line, column, bias);\r\n\t\t            const index = traceSegmentInternal(segments, memo, line, column, bias);\r\n\t\t            if (index === -1)\r\n\t\t                return GMapping(null, null);\r\n\t\t            const segment = segments[index];\r\n\t\t            return GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]);\r\n\t\t        }\r\n\t\t    })();\r\n\t\t    function clone(map, mappings) {\r\n\t\t        return {\r\n\t\t            version: map.version,\r\n\t\t            file: map.file,\r\n\t\t            names: map.names,\r\n\t\t            sourceRoot: map.sourceRoot,\r\n\t\t            sources: map.sources,\r\n\t\t            sourcesContent: map.sourcesContent,\r\n\t\t            mappings,\r\n\t\t        };\r\n\t\t    }\r\n\t\t    function OMapping(source, line, column, name) {\r\n\t\t        return { source, line, column, name };\r\n\t\t    }\r\n\t\t    function GMapping(line, column) {\r\n\t\t        return { line, column };\r\n\t\t    }\r\n\t\t    function traceSegmentInternal(segments, memo, line, column, bias) {\r\n\t\t        let index = memoizedBinarySearch(segments, column, memo, line);\r\n\t\t        if (found) {\r\n\t\t            index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\r\n\t\t        }\r\n\t\t        else if (bias === LEAST_UPPER_BOUND)\r\n\t\t            index++;\r\n\t\t        if (index === -1 || index === segments.length)\r\n\t\t            return -1;\r\n\t\t        return index;\r\n\t\t    }\r\n\t\t    function sliceGeneratedPositions(segments, memo, line, column, bias) {\r\n\t\t        let min = traceSegmentInternal(segments, memo, line, column, GREATEST_LOWER_BOUND);\r\n\t\t        // We ignored the bias when tracing the segment so that we're guarnateed to find the first (in\r\n\t\t        // insertion order) segment that matched. Even if we did respect the bias when tracing, we would\r\n\t\t        // still need to call `lowerBound()` to find the first segment, which is slower than just looking\r\n\t\t        // for the GREATEST_LOWER_BOUND to begin with. The only difference that matters for us is when the\r\n\t\t        // binary search didn't match, in which case GREATEST_LOWER_BOUND just needs to increment to\r\n\t\t        // match LEAST_UPPER_BOUND.\r\n\t\t        if (!found && bias === LEAST_UPPER_BOUND)\r\n\t\t            min++;\r\n\t\t        if (min === -1 || min === segments.length)\r\n\t\t            return [];\r\n\t\t        // We may have found the segment that started at an earlier column. If this is the case, then we\r\n\t\t        // need to slice all generated segments that match _that_ column, because all such segments span\r\n\t\t        // to our desired column.\r\n\t\t        const matchedColumn = found ? column : segments[min][COLUMN];\r\n\t\t        // The binary search is not guaranteed to find the lower bound when a match wasn't found.\r\n\t\t        if (!found)\r\n\t\t            min = lowerBound(segments, matchedColumn, min);\r\n\t\t        const max = upperBound(segments, matchedColumn, min);\r\n\t\t        const result = [];\r\n\t\t        for (; min <= max; min++) {\r\n\t\t            const segment = segments[min];\r\n\t\t            result.push(GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]));\r\n\t\t        }\r\n\t\t        return result;\r\n\t\t    }\r\n\r\n\t\t    exports.AnyMap = AnyMap;\r\n\t\t    exports.GREATEST_LOWER_BOUND = GREATEST_LOWER_BOUND;\r\n\t\t    exports.LEAST_UPPER_BOUND = LEAST_UPPER_BOUND;\r\n\t\t    exports.TraceMap = TraceMap;\r\n\r\n\t\t    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n\t\t}));\r\n\t\t\r\n\t} (traceMapping_umd, traceMapping_umd.exports));\r\n\treturn traceMapping_umd.exports;\r\n}\r\n\r\n(function (module, exports) {\r\n\t(function (global, factory) {\r\n\t    factory(exports, requireSetArray_umd(), requireSourcemapCodec_umd$1(), requireTraceMapping_umd()) ;\r\n\t})(commonjsGlobal, (function (exports, setArray, sourcemapCodec, traceMapping) {\r\n\t    const COLUMN = 0;\r\n\t    const SOURCES_INDEX = 1;\r\n\t    const SOURCE_LINE = 2;\r\n\t    const SOURCE_COLUMN = 3;\r\n\t    const NAMES_INDEX = 4;\r\n\r\n\t    const NO_NAME = -1;\r\n\t    /**\r\n\t     * A low-level API to associate a generated position with an original source position. Line and\r\n\t     * column here are 0-based, unlike `addMapping`.\r\n\t     */\r\n\t    exports.addSegment = void 0;\r\n\t    /**\r\n\t     * A high-level API to associate a generated position with an original source position. Line is\r\n\t     * 1-based, but column is 0-based, due to legacy behavior in `source-map` library.\r\n\t     */\r\n\t    exports.addMapping = void 0;\r\n\t    /**\r\n\t     * Same as `addSegment`, but will only add the segment if it generates useful information in the\r\n\t     * resulting map. This only works correctly if segments are added **in order**, meaning you should\r\n\t     * not add a segment with a lower generated line/column than one that came before.\r\n\t     */\r\n\t    exports.maybeAddSegment = void 0;\r\n\t    /**\r\n\t     * Same as `addMapping`, but will only add the mapping if it generates useful information in the\r\n\t     * resulting map. This only works correctly if mappings are added **in order**, meaning you should\r\n\t     * not add a mapping with a lower generated line/column than one that came before.\r\n\t     */\r\n\t    exports.maybeAddMapping = void 0;\r\n\t    /**\r\n\t     * Adds/removes the content of the source file to the source map.\r\n\t     */\r\n\t    exports.setSourceContent = void 0;\r\n\t    /**\r\n\t     * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\r\n\t     * a sourcemap, or to JSON.stringify.\r\n\t     */\r\n\t    exports.toDecodedMap = void 0;\r\n\t    /**\r\n\t     * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\r\n\t     * a sourcemap, or to JSON.stringify.\r\n\t     */\r\n\t    exports.toEncodedMap = void 0;\r\n\t    /**\r\n\t     * Constructs a new GenMapping, using the already present mappings of the input.\r\n\t     */\r\n\t    exports.fromMap = void 0;\r\n\t    /**\r\n\t     * Returns an array of high-level mapping objects for every recorded segment, which could then be\r\n\t     * passed to the `source-map` library.\r\n\t     */\r\n\t    exports.allMappings = void 0;\r\n\t    // This split declaration is only so that terser can elminiate the static initialization block.\r\n\t    let addSegmentInternal;\r\n\t    /**\r\n\t     * Provides the state to generate a sourcemap.\r\n\t     */\r\n\t    class GenMapping {\r\n\t        constructor({ file, sourceRoot } = {}) {\r\n\t            this._names = new setArray.SetArray();\r\n\t            this._sources = new setArray.SetArray();\r\n\t            this._sourcesContent = [];\r\n\t            this._mappings = [];\r\n\t            this.file = file;\r\n\t            this.sourceRoot = sourceRoot;\r\n\t        }\r\n\t    }\r\n\t    (() => {\r\n\t        exports.addSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) => {\r\n\t            return addSegmentInternal(false, map, genLine, genColumn, source, sourceLine, sourceColumn, name, content);\r\n\t        };\r\n\t        exports.maybeAddSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) => {\r\n\t            return addSegmentInternal(true, map, genLine, genColumn, source, sourceLine, sourceColumn, name, content);\r\n\t        };\r\n\t        exports.addMapping = (map, mapping) => {\r\n\t            return addMappingInternal(false, map, mapping);\r\n\t        };\r\n\t        exports.maybeAddMapping = (map, mapping) => {\r\n\t            return addMappingInternal(true, map, mapping);\r\n\t        };\r\n\t        exports.setSourceContent = (map, source, content) => {\r\n\t            const { _sources: sources, _sourcesContent: sourcesContent } = map;\r\n\t            sourcesContent[setArray.put(sources, source)] = content;\r\n\t        };\r\n\t        exports.toDecodedMap = (map) => {\r\n\t            const { file, sourceRoot, _mappings: mappings, _sources: sources, _sourcesContent: sourcesContent, _names: names, } = map;\r\n\t            removeEmptyFinalLines(mappings);\r\n\t            return {\r\n\t                version: 3,\r\n\t                file: file || undefined,\r\n\t                names: names.array,\r\n\t                sourceRoot: sourceRoot || undefined,\r\n\t                sources: sources.array,\r\n\t                sourcesContent,\r\n\t                mappings,\r\n\t            };\r\n\t        };\r\n\t        exports.toEncodedMap = (map) => {\r\n\t            const decoded = exports.toDecodedMap(map);\r\n\t            return Object.assign(Object.assign({}, decoded), { mappings: sourcemapCodec.encode(decoded.mappings) });\r\n\t        };\r\n\t        exports.allMappings = (map) => {\r\n\t            const out = [];\r\n\t            const { _mappings: mappings, _sources: sources, _names: names } = map;\r\n\t            for (let i = 0; i < mappings.length; i++) {\r\n\t                const line = mappings[i];\r\n\t                for (let j = 0; j < line.length; j++) {\r\n\t                    const seg = line[j];\r\n\t                    const generated = { line: i + 1, column: seg[COLUMN] };\r\n\t                    let source = undefined;\r\n\t                    let original = undefined;\r\n\t                    let name = undefined;\r\n\t                    if (seg.length !== 1) {\r\n\t                        source = sources.array[seg[SOURCES_INDEX]];\r\n\t                        original = { line: seg[SOURCE_LINE] + 1, column: seg[SOURCE_COLUMN] };\r\n\t                        if (seg.length === 5)\r\n\t                            name = names.array[seg[NAMES_INDEX]];\r\n\t                    }\r\n\t                    out.push({ generated, source, original, name });\r\n\t                }\r\n\t            }\r\n\t            return out;\r\n\t        };\r\n\t        exports.fromMap = (input) => {\r\n\t            const map = new traceMapping.TraceMap(input);\r\n\t            const gen = new GenMapping({ file: map.file, sourceRoot: map.sourceRoot });\r\n\t            putAll(gen._names, map.names);\r\n\t            putAll(gen._sources, map.sources);\r\n\t            gen._sourcesContent = map.sourcesContent || map.sources.map(() => null);\r\n\t            gen._mappings = traceMapping.decodedMappings(map);\r\n\t            return gen;\r\n\t        };\r\n\t        // Internal helpers\r\n\t        addSegmentInternal = (skipable, map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) => {\r\n\t            const { _mappings: mappings, _sources: sources, _sourcesContent: sourcesContent, _names: names, } = map;\r\n\t            const line = getLine(mappings, genLine);\r\n\t            const index = getColumnIndex(line, genColumn);\r\n\t            if (!source) {\r\n\t                if (skipable && skipSourceless(line, index))\r\n\t                    return;\r\n\t                return insert(line, index, [genColumn]);\r\n\t            }\r\n\t            const sourcesIndex = setArray.put(sources, source);\r\n\t            const namesIndex = name ? setArray.put(names, name) : NO_NAME;\r\n\t            if (sourcesIndex === sourcesContent.length)\r\n\t                sourcesContent[sourcesIndex] = content !== null && content !== void 0 ? content : null;\r\n\t            if (skipable && skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex)) {\r\n\t                return;\r\n\t            }\r\n\t            return insert(line, index, name\r\n\t                ? [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex]\r\n\t                : [genColumn, sourcesIndex, sourceLine, sourceColumn]);\r\n\t        };\r\n\t    })();\r\n\t    function getLine(mappings, index) {\r\n\t        for (let i = mappings.length; i <= index; i++) {\r\n\t            mappings[i] = [];\r\n\t        }\r\n\t        return mappings[index];\r\n\t    }\r\n\t    function getColumnIndex(line, genColumn) {\r\n\t        let index = line.length;\r\n\t        for (let i = index - 1; i >= 0; index = i--) {\r\n\t            const current = line[i];\r\n\t            if (genColumn >= current[COLUMN])\r\n\t                break;\r\n\t        }\r\n\t        return index;\r\n\t    }\r\n\t    function insert(array, index, value) {\r\n\t        for (let i = array.length; i > index; i--) {\r\n\t            array[i] = array[i - 1];\r\n\t        }\r\n\t        array[index] = value;\r\n\t    }\r\n\t    function removeEmptyFinalLines(mappings) {\r\n\t        const { length } = mappings;\r\n\t        let len = length;\r\n\t        for (let i = len - 1; i >= 0; len = i, i--) {\r\n\t            if (mappings[i].length > 0)\r\n\t                break;\r\n\t        }\r\n\t        if (len < length)\r\n\t            mappings.length = len;\r\n\t    }\r\n\t    function putAll(strarr, array) {\r\n\t        for (let i = 0; i < array.length; i++)\r\n\t            setArray.put(strarr, array[i]);\r\n\t    }\r\n\t    function skipSourceless(line, index) {\r\n\t        // The start of a line is already sourceless, so adding a sourceless segment to the beginning\r\n\t        // doesn't generate any useful information.\r\n\t        if (index === 0)\r\n\t            return true;\r\n\t        const prev = line[index - 1];\r\n\t        // If the previous segment is also sourceless, then adding another sourceless segment doesn't\r\n\t        // genrate any new information. Else, this segment will end the source/named segment and point to\r\n\t        // a sourceless position, which is useful.\r\n\t        return prev.length === 1;\r\n\t    }\r\n\t    function skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex) {\r\n\t        // A source/named segment at the start of a line gives position at that genColumn\r\n\t        if (index === 0)\r\n\t            return false;\r\n\t        const prev = line[index - 1];\r\n\t        // If the previous segment is sourceless, then we're transitioning to a source.\r\n\t        if (prev.length === 1)\r\n\t            return false;\r\n\t        // If the previous segment maps to the exact same source position, then this segment doesn't\r\n\t        // provide any new position information.\r\n\t        return (sourcesIndex === prev[SOURCES_INDEX] &&\r\n\t            sourceLine === prev[SOURCE_LINE] &&\r\n\t            sourceColumn === prev[SOURCE_COLUMN] &&\r\n\t            namesIndex === (prev.length === 5 ? prev[NAMES_INDEX] : NO_NAME));\r\n\t    }\r\n\t    function addMappingInternal(skipable, map, mapping) {\r\n\t        const { generated, source, original, name, content } = mapping;\r\n\t        if (!source) {\r\n\t            return addSegmentInternal(skipable, map, generated.line - 1, generated.column, null, null, null, null, null);\r\n\t        }\r\n\t        const s = source;\r\n\t        return addSegmentInternal(skipable, map, generated.line - 1, generated.column, s, original.line - 1, original.column, name, content);\r\n\t    }\r\n\r\n\t    exports.GenMapping = GenMapping;\r\n\r\n\t    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n\t}));\r\n\t\r\n} (genMapping_umd, genMapping_umd.exports));\r\n\r\nvar genMapping_umdExports = genMapping_umd.exports;\r\n\r\n/**\r\n * Generate a source map indicating that each line maps directly to the original line,\r\n * with the tokens in their new positions.\r\n */\r\nfunction computeSourceMap(\r\n  {code: generatedCode, mappings: rawMappings},\r\n  filePath,\r\n  options,\r\n  source,\r\n  tokens,\r\n) {\r\n  const sourceColumns = computeSourceColumns(source, tokens);\r\n  const map = new genMapping_umdExports.GenMapping({file: options.compiledFilename});\r\n  let tokenIndex = 0;\r\n  // currentMapping is the output source index for the current input token being\r\n  // considered.\r\n  let currentMapping = rawMappings[0];\r\n  while (currentMapping === undefined && tokenIndex < rawMappings.length - 1) {\r\n    tokenIndex++;\r\n    currentMapping = rawMappings[tokenIndex];\r\n  }\r\n  let line = 0;\r\n  let lineStart = 0;\r\n  if (currentMapping !== lineStart) {\r\n    genMapping_umdExports.maybeAddSegment(map, line, 0, filePath, line, 0);\r\n  }\r\n  for (let i = 0; i < generatedCode.length; i++) {\r\n    if (i === currentMapping) {\r\n      const genColumn = currentMapping - lineStart;\r\n      const sourceColumn = sourceColumns[tokenIndex];\r\n      genMapping_umdExports.maybeAddSegment(map, line, genColumn, filePath, line, sourceColumn);\r\n      while (\r\n        (currentMapping === i || currentMapping === undefined) &&\r\n        tokenIndex < rawMappings.length - 1\r\n      ) {\r\n        tokenIndex++;\r\n        currentMapping = rawMappings[tokenIndex];\r\n      }\r\n    }\r\n    if (generatedCode.charCodeAt(i) === charCodes.lineFeed) {\r\n      line++;\r\n      lineStart = i + 1;\r\n      if (currentMapping !== lineStart) {\r\n        genMapping_umdExports.maybeAddSegment(map, line, 0, filePath, line, 0);\r\n      }\r\n    }\r\n  }\r\n  const {sourceRoot, sourcesContent, ...sourceMap} = genMapping_umdExports.toEncodedMap(map);\r\n  return sourceMap ;\r\n}\r\n\r\n/**\r\n * Create an array mapping each token index to the 0-based column of the start\r\n * position of the token.\r\n */\r\nfunction computeSourceColumns(code, tokens) {\r\n  const sourceColumns = new Array(tokens.length);\r\n  let tokenIndex = 0;\r\n  let currentMapping = tokens[tokenIndex].start;\r\n  let lineStart = 0;\r\n  for (let i = 0; i < code.length; i++) {\r\n    if (i === currentMapping) {\r\n      sourceColumns[tokenIndex] = currentMapping - lineStart;\r\n      tokenIndex++;\r\n      currentMapping = tokens[tokenIndex].start;\r\n    }\r\n    if (code.charCodeAt(i) === charCodes.lineFeed) {\r\n      lineStart = i + 1;\r\n    }\r\n  }\r\n  return sourceColumns;\r\n}\r\n\r\nconst HELPERS = {\r\n  require: `\r\n    import {createRequire as CREATE_REQUIRE_NAME} from \"module\";\r\n    const require = CREATE_REQUIRE_NAME(import.meta.url);\r\n  `,\r\n  interopRequireWildcard: `\r\n    function interopRequireWildcard(obj) {\r\n      if (obj && obj.__esModule) {\r\n        return obj;\r\n      } else {\r\n        var newObj = {};\r\n        if (obj != null) {\r\n          for (var key in obj) {\r\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n              newObj[key] = obj[key];\r\n            }\r\n          }\r\n        }\r\n        newObj.default = obj;\r\n        return newObj;\r\n      }\r\n    }\r\n  `,\r\n  interopRequireDefault: `\r\n    function interopRequireDefault(obj) {\r\n      return obj && obj.__esModule ? obj : { default: obj };\r\n    }\r\n  `,\r\n  createNamedExportFrom: `\r\n    function createNamedExportFrom(obj, localName, importedName) {\r\n      Object.defineProperty(exports, localName, {enumerable: true, configurable: true, get: () => obj[importedName]});\r\n    }\r\n  `,\r\n  // Note that TypeScript and Babel do this differently; TypeScript does a simple existence\r\n  // check in the exports object and does a plain assignment, whereas Babel uses\r\n  // defineProperty and builds an object of explicitly-exported names so that star exports can\r\n  // always take lower precedence. For now, we do the easier TypeScript thing.\r\n  createStarExport: `\r\n    function createStarExport(obj) {\r\n      Object.keys(obj)\r\n        .filter((key) => key !== \"default\" && key !== \"__esModule\")\r\n        .forEach((key) => {\r\n          if (exports.hasOwnProperty(key)) {\r\n            return;\r\n          }\r\n          Object.defineProperty(exports, key, {enumerable: true, configurable: true, get: () => obj[key]});\r\n        });\r\n    }\r\n  `,\r\n  nullishCoalesce: `\r\n    function nullishCoalesce(lhs, rhsFn) {\r\n      if (lhs != null) {\r\n        return lhs;\r\n      } else {\r\n        return rhsFn();\r\n      }\r\n    }\r\n  `,\r\n  asyncNullishCoalesce: `\r\n    async function asyncNullishCoalesce(lhs, rhsFn) {\r\n      if (lhs != null) {\r\n        return lhs;\r\n      } else {\r\n        return await rhsFn();\r\n      }\r\n    }\r\n  `,\r\n  optionalChain: `\r\n    function optionalChain(ops) {\r\n      let lastAccessLHS = undefined;\r\n      let value = ops[0];\r\n      let i = 1;\r\n      while (i < ops.length) {\r\n        const op = ops[i];\r\n        const fn = ops[i + 1];\r\n        i += 2;\r\n        if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\r\n          return undefined;\r\n        }\r\n        if (op === 'access' || op === 'optionalAccess') {\r\n          lastAccessLHS = value;\r\n          value = fn(value);\r\n        } else if (op === 'call' || op === 'optionalCall') {\r\n          value = fn((...args) => value.call(lastAccessLHS, ...args));\r\n          lastAccessLHS = undefined;\r\n        }\r\n      }\r\n      return value;\r\n    }\r\n  `,\r\n  asyncOptionalChain: `\r\n    async function asyncOptionalChain(ops) {\r\n      let lastAccessLHS = undefined;\r\n      let value = ops[0];\r\n      let i = 1;\r\n      while (i < ops.length) {\r\n        const op = ops[i];\r\n        const fn = ops[i + 1];\r\n        i += 2;\r\n        if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\r\n          return undefined;\r\n        }\r\n        if (op === 'access' || op === 'optionalAccess') {\r\n          lastAccessLHS = value;\r\n          value = await fn(value);\r\n        } else if (op === 'call' || op === 'optionalCall') {\r\n          value = await fn((...args) => value.call(lastAccessLHS, ...args));\r\n          lastAccessLHS = undefined;\r\n        }\r\n      }\r\n      return value;\r\n    }\r\n  `,\r\n  optionalChainDelete: `\r\n    function optionalChainDelete(ops) {\r\n      const result = OPTIONAL_CHAIN_NAME(ops);\r\n      return result == null ? true : result;\r\n    }\r\n  `,\r\n  asyncOptionalChainDelete: `\r\n    async function asyncOptionalChainDelete(ops) {\r\n      const result = await ASYNC_OPTIONAL_CHAIN_NAME(ops);\r\n      return result == null ? true : result;\r\n    }\r\n  `,\r\n};\r\n\r\nclass HelperManager {\r\n  __init() {this.helperNames = {};}\r\n  __init2() {this.createRequireName = null;}\r\n  constructor( nameManager) {this.nameManager = nameManager;HelperManager.prototype.__init.call(this);HelperManager.prototype.__init2.call(this);}\r\n\r\n  getHelperName(baseName) {\r\n    let helperName = this.helperNames[baseName];\r\n    if (helperName) {\r\n      return helperName;\r\n    }\r\n    helperName = this.nameManager.claimFreeName(`_${baseName}`);\r\n    this.helperNames[baseName] = helperName;\r\n    return helperName;\r\n  }\r\n\r\n  emitHelpers() {\r\n    let resultCode = \"\";\r\n    if (this.helperNames.optionalChainDelete) {\r\n      this.getHelperName(\"optionalChain\");\r\n    }\r\n    if (this.helperNames.asyncOptionalChainDelete) {\r\n      this.getHelperName(\"asyncOptionalChain\");\r\n    }\r\n    for (const [baseName, helperCodeTemplate] of Object.entries(HELPERS)) {\r\n      const helperName = this.helperNames[baseName];\r\n      let helperCode = helperCodeTemplate;\r\n      if (baseName === \"optionalChainDelete\") {\r\n        helperCode = helperCode.replace(\"OPTIONAL_CHAIN_NAME\", this.helperNames.optionalChain);\r\n      } else if (baseName === \"asyncOptionalChainDelete\") {\r\n        helperCode = helperCode.replace(\r\n          \"ASYNC_OPTIONAL_CHAIN_NAME\",\r\n          this.helperNames.asyncOptionalChain,\r\n        );\r\n      } else if (baseName === \"require\") {\r\n        if (this.createRequireName === null) {\r\n          this.createRequireName = this.nameManager.claimFreeName(\"_createRequire\");\r\n        }\r\n        helperCode = helperCode.replace(/CREATE_REQUIRE_NAME/g, this.createRequireName);\r\n      }\r\n      if (helperName) {\r\n        resultCode += \" \";\r\n        resultCode += helperCode.replace(baseName, helperName).replace(/\\s+/g, \" \").trim();\r\n      }\r\n    }\r\n    return resultCode;\r\n  }\r\n}\r\n\r\n/**\r\n * Traverse the given tokens and modify them if necessary to indicate that some names shadow global\r\n * variables.\r\n */\r\nfunction identifyShadowedGlobals(\r\n  tokens,\r\n  scopes,\r\n  globalNames,\r\n) {\r\n  if (!hasShadowedGlobals(tokens, globalNames)) {\r\n    return;\r\n  }\r\n  markShadowedGlobals(tokens, scopes, globalNames);\r\n}\r\n\r\n/**\r\n * We can do a fast up-front check to see if there are any declarations to global names. If not,\r\n * then there's no point in computing scope assignments.\r\n */\r\n// Exported for testing.\r\nfunction hasShadowedGlobals(tokens, globalNames) {\r\n  for (const token of tokens.tokens) {\r\n    if (\r\n      token.type === TokenType.name &&\r\n      isNonTopLevelDeclaration(token) &&\r\n      globalNames.has(tokens.identifierNameForToken(token))\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction markShadowedGlobals(\r\n  tokens,\r\n  scopes,\r\n  globalNames,\r\n) {\r\n  const scopeStack = [];\r\n  let scopeIndex = scopes.length - 1;\r\n  // Scopes were generated at completion time, so they're sorted by end index, so we can maintain a\r\n  // good stack by going backwards through them.\r\n  for (let i = tokens.tokens.length - 1; ; i--) {\r\n    while (scopeStack.length > 0 && scopeStack[scopeStack.length - 1].startTokenIndex === i + 1) {\r\n      scopeStack.pop();\r\n    }\r\n    while (scopeIndex >= 0 && scopes[scopeIndex].endTokenIndex === i + 1) {\r\n      scopeStack.push(scopes[scopeIndex]);\r\n      scopeIndex--;\r\n    }\r\n    // Process scopes after the last iteration so we can make sure we pop all of them.\r\n    if (i < 0) {\r\n      break;\r\n    }\r\n\r\n    const token = tokens.tokens[i];\r\n    const name = tokens.identifierNameForToken(token);\r\n    if (scopeStack.length > 1 && token.type === TokenType.name && globalNames.has(name)) {\r\n      if (isBlockScopedDeclaration(token)) {\r\n        markShadowedForScope(scopeStack[scopeStack.length - 1], tokens, name);\r\n      } else if (isFunctionScopedDeclaration(token)) {\r\n        let stackIndex = scopeStack.length - 1;\r\n        while (stackIndex > 0 && !scopeStack[stackIndex].isFunctionScope) {\r\n          stackIndex--;\r\n        }\r\n        if (stackIndex < 0) {\r\n          throw new Error(\"Did not find parent function scope.\");\r\n        }\r\n        markShadowedForScope(scopeStack[stackIndex], tokens, name);\r\n      }\r\n    }\r\n  }\r\n  if (scopeStack.length > 0) {\r\n    throw new Error(\"Expected empty scope stack after processing file.\");\r\n  }\r\n}\r\n\r\nfunction markShadowedForScope(scope, tokens, name) {\r\n  for (let i = scope.startTokenIndex; i < scope.endTokenIndex; i++) {\r\n    const token = tokens.tokens[i];\r\n    if (\r\n      (token.type === TokenType.name || token.type === TokenType.jsxName) &&\r\n      tokens.identifierNameForToken(token) === name\r\n    ) {\r\n      token.shadowsGlobal = true;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get all identifier names in the code, in order, including duplicates.\r\n */\r\nfunction getIdentifierNames(code, tokens) {\r\n  const names = [];\r\n  for (const token of tokens) {\r\n    if (token.type === TokenType.name) {\r\n      names.push(code.slice(token.start, token.end));\r\n    }\r\n  }\r\n  return names;\r\n}\r\n\r\nclass NameManager {\r\n    __init() {this.usedNames = new Set();}\r\n\r\n  constructor(code, tokens) {NameManager.prototype.__init.call(this);\r\n    this.usedNames = new Set(getIdentifierNames(code, tokens));\r\n  }\r\n\r\n  claimFreeName(name) {\r\n    const newName = this.findFreeName(name);\r\n    this.usedNames.add(newName);\r\n    return newName;\r\n  }\r\n\r\n  findFreeName(name) {\r\n    if (!this.usedNames.has(name)) {\r\n      return name;\r\n    }\r\n    let suffixNum = 2;\r\n    while (this.usedNames.has(name + String(suffixNum))) {\r\n      suffixNum++;\r\n    }\r\n    return name + String(suffixNum);\r\n  }\r\n}\r\n\r\nvar dist = {};\r\n\r\nvar types = {};\r\n\r\nvar util = {};\r\n\r\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(util, \"__esModule\", { value: true });\r\nutil.DetailContext = util.NoopContext = util.VError = void 0;\r\n/**\r\n * Error thrown by validation. Besides an informative message, it includes the path to the\r\n * property which triggered the failure.\r\n */\r\nvar VError = /** @class */ (function (_super) {\r\n    __extends(VError, _super);\r\n    function VError(path, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.path = path;\r\n        // See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work for info about this workaround.\r\n        Object.setPrototypeOf(_this, VError.prototype);\r\n        return _this;\r\n    }\r\n    return VError;\r\n}(Error));\r\nutil.VError = VError;\r\n/**\r\n * Fast implementation of IContext used for first-pass validation. If that fails, we can validate\r\n * using DetailContext to collect error messages. That's faster for the common case when messages\r\n * normally pass validation.\r\n */\r\nvar NoopContext = /** @class */ (function () {\r\n    function NoopContext() {\r\n    }\r\n    NoopContext.prototype.fail = function (relPath, message, score) {\r\n        return false;\r\n    };\r\n    NoopContext.prototype.unionResolver = function () { return this; };\r\n    NoopContext.prototype.createContext = function () { return this; };\r\n    NoopContext.prototype.resolveUnion = function (ur) { };\r\n    return NoopContext;\r\n}());\r\nutil.NoopContext = NoopContext;\r\n/**\r\n * Complete implementation of IContext that collects meaningfull errors.\r\n */\r\nvar DetailContext = /** @class */ (function () {\r\n    function DetailContext() {\r\n        // Stack of property names and associated messages for reporting helpful error messages.\r\n        this._propNames = [\"\"];\r\n        this._messages = [null];\r\n        // Score is used to choose the best union member whose DetailContext to use for reporting.\r\n        // Higher score means better match (or rather less severe mismatch).\r\n        this._score = 0;\r\n    }\r\n    DetailContext.prototype.fail = function (relPath, message, score) {\r\n        this._propNames.push(relPath);\r\n        this._messages.push(message);\r\n        this._score += score;\r\n        return false;\r\n    };\r\n    DetailContext.prototype.unionResolver = function () {\r\n        return new DetailUnionResolver();\r\n    };\r\n    DetailContext.prototype.resolveUnion = function (unionResolver) {\r\n        var _a, _b;\r\n        var u = unionResolver;\r\n        var best = null;\r\n        for (var _i = 0, _c = u.contexts; _i < _c.length; _i++) {\r\n            var ctx = _c[_i];\r\n            if (!best || ctx._score >= best._score) {\r\n                best = ctx;\r\n            }\r\n        }\r\n        if (best && best._score > 0) {\r\n            (_a = this._propNames).push.apply(_a, best._propNames);\r\n            (_b = this._messages).push.apply(_b, best._messages);\r\n        }\r\n    };\r\n    DetailContext.prototype.getError = function (path) {\r\n        var msgParts = [];\r\n        for (var i = this._propNames.length - 1; i >= 0; i--) {\r\n            var p = this._propNames[i];\r\n            path += (typeof p === \"number\") ? \"[\" + p + \"]\" : (p ? \".\" + p : \"\");\r\n            var m = this._messages[i];\r\n            if (m) {\r\n                msgParts.push(path + \" \" + m);\r\n            }\r\n        }\r\n        return new VError(path, msgParts.join(\"; \"));\r\n    };\r\n    DetailContext.prototype.getErrorDetail = function (path) {\r\n        var details = [];\r\n        for (var i = this._propNames.length - 1; i >= 0; i--) {\r\n            var p = this._propNames[i];\r\n            path += (typeof p === \"number\") ? \"[\" + p + \"]\" : (p ? \".\" + p : \"\");\r\n            var message = this._messages[i];\r\n            if (message) {\r\n                details.push({ path: path, message: message });\r\n            }\r\n        }\r\n        var detail = null;\r\n        for (var i = details.length - 1; i >= 0; i--) {\r\n            if (detail) {\r\n                details[i].nested = [detail];\r\n            }\r\n            detail = details[i];\r\n        }\r\n        return detail;\r\n    };\r\n    return DetailContext;\r\n}());\r\nutil.DetailContext = DetailContext;\r\nvar DetailUnionResolver = /** @class */ (function () {\r\n    function DetailUnionResolver() {\r\n        this.contexts = [];\r\n    }\r\n    DetailUnionResolver.prototype.createContext = function () {\r\n        var ctx = new DetailContext();\r\n        this.contexts.push(ctx);\r\n        return ctx;\r\n    };\r\n    return DetailUnionResolver;\r\n}());\r\n\r\n(function (exports) {\r\n\t/**\r\n\t * This module defines nodes used to define types and validations for objects and interfaces.\r\n\t */\r\n\t// tslint:disable:no-shadowed-variable prefer-for-of\r\n\tvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.basicTypes = exports.BasicType = exports.TParamList = exports.TParam = exports.param = exports.TFunc = exports.func = exports.TProp = exports.TOptional = exports.opt = exports.TIface = exports.iface = exports.TEnumLiteral = exports.enumlit = exports.TEnumType = exports.enumtype = exports.TIntersection = exports.intersection = exports.TUnion = exports.union = exports.TTuple = exports.tuple = exports.TArray = exports.array = exports.TLiteral = exports.lit = exports.TName = exports.name = exports.TType = void 0;\r\n\tvar util_1 = util;\r\n\t/** Node that represents a type. */\r\n\tvar TType = /** @class */ (function () {\r\n\t    function TType() {\r\n\t    }\r\n\t    return TType;\r\n\t}());\r\n\texports.TType = TType;\r\n\t/** Parses a type spec into a TType node. */\r\n\tfunction parseSpec(typeSpec) {\r\n\t    return typeof typeSpec === \"string\" ? name(typeSpec) : typeSpec;\r\n\t}\r\n\tfunction getNamedType(suite, name) {\r\n\t    var ttype = suite[name];\r\n\t    if (!ttype) {\r\n\t        throw new Error(\"Unknown type \" + name);\r\n\t    }\r\n\t    return ttype;\r\n\t}\r\n\t/**\r\n\t * Defines a type name, either built-in, or defined in this suite. It can typically be included in\r\n\t * the specs as just a plain string.\r\n\t */\r\n\tfunction name(value) { return new TName(value); }\r\n\texports.name = name;\r\n\tvar TName = /** @class */ (function (_super) {\r\n\t    __extends(TName, _super);\r\n\t    function TName(name) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.name = name;\r\n\t        _this._failMsg = \"is not a \" + name;\r\n\t        return _this;\r\n\t    }\r\n\t    TName.prototype.getChecker = function (suite, strict, allowedProps) {\r\n\t        var _this = this;\r\n\t        var ttype = getNamedType(suite, this.name);\r\n\t        var checker = ttype.getChecker(suite, strict, allowedProps);\r\n\t        if (ttype instanceof BasicType || ttype instanceof TName) {\r\n\t            return checker;\r\n\t        }\r\n\t        // For complex types, add an additional \"is not a <Type>\" message on failure.\r\n\t        return function (value, ctx) { return checker(value, ctx) ? true : ctx.fail(null, _this._failMsg, 0); };\r\n\t    };\r\n\t    return TName;\r\n\t}(TType));\r\n\texports.TName = TName;\r\n\t/**\r\n\t * Defines a literal value, e.g. lit('hello') or lit(123).\r\n\t */\r\n\tfunction lit(value) { return new TLiteral(value); }\r\n\texports.lit = lit;\r\n\tvar TLiteral = /** @class */ (function (_super) {\r\n\t    __extends(TLiteral, _super);\r\n\t    function TLiteral(value) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.value = value;\r\n\t        _this.name = JSON.stringify(value);\r\n\t        _this._failMsg = \"is not \" + _this.name;\r\n\t        return _this;\r\n\t    }\r\n\t    TLiteral.prototype.getChecker = function (suite, strict) {\r\n\t        var _this = this;\r\n\t        return function (value, ctx) { return (value === _this.value) ? true : ctx.fail(null, _this._failMsg, -1); };\r\n\t    };\r\n\t    return TLiteral;\r\n\t}(TType));\r\n\texports.TLiteral = TLiteral;\r\n\t/**\r\n\t * Defines an array type, e.g. array('number').\r\n\t */\r\n\tfunction array(typeSpec) { return new TArray(parseSpec(typeSpec)); }\r\n\texports.array = array;\r\n\tvar TArray = /** @class */ (function (_super) {\r\n\t    __extends(TArray, _super);\r\n\t    function TArray(ttype) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.ttype = ttype;\r\n\t        return _this;\r\n\t    }\r\n\t    TArray.prototype.getChecker = function (suite, strict) {\r\n\t        var itemChecker = this.ttype.getChecker(suite, strict);\r\n\t        return function (value, ctx) {\r\n\t            if (!Array.isArray(value)) {\r\n\t                return ctx.fail(null, \"is not an array\", 0);\r\n\t            }\r\n\t            for (var i = 0; i < value.length; i++) {\r\n\t                var ok = itemChecker(value[i], ctx);\r\n\t                if (!ok) {\r\n\t                    return ctx.fail(i, null, 1);\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        };\r\n\t    };\r\n\t    return TArray;\r\n\t}(TType));\r\n\texports.TArray = TArray;\r\n\t/**\r\n\t * Defines a tuple type, e.g. tuple('string', 'number').\r\n\t */\r\n\tfunction tuple() {\r\n\t    var typeSpec = [];\r\n\t    for (var _i = 0; _i < arguments.length; _i++) {\r\n\t        typeSpec[_i] = arguments[_i];\r\n\t    }\r\n\t    return new TTuple(typeSpec.map(function (t) { return parseSpec(t); }));\r\n\t}\r\n\texports.tuple = tuple;\r\n\tvar TTuple = /** @class */ (function (_super) {\r\n\t    __extends(TTuple, _super);\r\n\t    function TTuple(ttypes) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.ttypes = ttypes;\r\n\t        return _this;\r\n\t    }\r\n\t    TTuple.prototype.getChecker = function (suite, strict) {\r\n\t        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict); });\r\n\t        var checker = function (value, ctx) {\r\n\t            if (!Array.isArray(value)) {\r\n\t                return ctx.fail(null, \"is not an array\", 0);\r\n\t            }\r\n\t            for (var i = 0; i < itemCheckers.length; i++) {\r\n\t                var ok = itemCheckers[i](value[i], ctx);\r\n\t                if (!ok) {\r\n\t                    return ctx.fail(i, null, 1);\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        };\r\n\t        if (!strict) {\r\n\t            return checker;\r\n\t        }\r\n\t        return function (value, ctx) {\r\n\t            if (!checker(value, ctx)) {\r\n\t                return false;\r\n\t            }\r\n\t            return value.length <= itemCheckers.length ? true :\r\n\t                ctx.fail(itemCheckers.length, \"is extraneous\", 2);\r\n\t        };\r\n\t    };\r\n\t    return TTuple;\r\n\t}(TType));\r\n\texports.TTuple = TTuple;\r\n\t/**\r\n\t * Defines a union type, e.g. union('number', 'null').\r\n\t */\r\n\tfunction union() {\r\n\t    var typeSpec = [];\r\n\t    for (var _i = 0; _i < arguments.length; _i++) {\r\n\t        typeSpec[_i] = arguments[_i];\r\n\t    }\r\n\t    return new TUnion(typeSpec.map(function (t) { return parseSpec(t); }));\r\n\t}\r\n\texports.union = union;\r\n\tvar TUnion = /** @class */ (function (_super) {\r\n\t    __extends(TUnion, _super);\r\n\t    function TUnion(ttypes) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.ttypes = ttypes;\r\n\t        var names = ttypes.map(function (t) { return t instanceof TName || t instanceof TLiteral ? t.name : null; })\r\n\t            .filter(function (n) { return n; });\r\n\t        var otherTypes = ttypes.length - names.length;\r\n\t        if (names.length) {\r\n\t            if (otherTypes > 0) {\r\n\t                names.push(otherTypes + \" more\");\r\n\t            }\r\n\t            _this._failMsg = \"is none of \" + names.join(\", \");\r\n\t        }\r\n\t        else {\r\n\t            _this._failMsg = \"is none of \" + otherTypes + \" types\";\r\n\t        }\r\n\t        return _this;\r\n\t    }\r\n\t    TUnion.prototype.getChecker = function (suite, strict) {\r\n\t        var _this = this;\r\n\t        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict); });\r\n\t        return function (value, ctx) {\r\n\t            var ur = ctx.unionResolver();\r\n\t            for (var i = 0; i < itemCheckers.length; i++) {\r\n\t                var ok = itemCheckers[i](value, ur.createContext());\r\n\t                if (ok) {\r\n\t                    return true;\r\n\t                }\r\n\t            }\r\n\t            ctx.resolveUnion(ur);\r\n\t            return ctx.fail(null, _this._failMsg, 0);\r\n\t        };\r\n\t    };\r\n\t    return TUnion;\r\n\t}(TType));\r\n\texports.TUnion = TUnion;\r\n\t/**\r\n\t * Defines an intersection type, e.g. intersection('number', 'null').\r\n\t */\r\n\tfunction intersection() {\r\n\t    var typeSpec = [];\r\n\t    for (var _i = 0; _i < arguments.length; _i++) {\r\n\t        typeSpec[_i] = arguments[_i];\r\n\t    }\r\n\t    return new TIntersection(typeSpec.map(function (t) { return parseSpec(t); }));\r\n\t}\r\n\texports.intersection = intersection;\r\n\tvar TIntersection = /** @class */ (function (_super) {\r\n\t    __extends(TIntersection, _super);\r\n\t    function TIntersection(ttypes) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.ttypes = ttypes;\r\n\t        return _this;\r\n\t    }\r\n\t    TIntersection.prototype.getChecker = function (suite, strict) {\r\n\t        var allowedProps = new Set();\r\n\t        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict, allowedProps); });\r\n\t        return function (value, ctx) {\r\n\t            var ok = itemCheckers.every(function (checker) { return checker(value, ctx); });\r\n\t            if (ok) {\r\n\t                return true;\r\n\t            }\r\n\t            return ctx.fail(null, null, 0);\r\n\t        };\r\n\t    };\r\n\t    return TIntersection;\r\n\t}(TType));\r\n\texports.TIntersection = TIntersection;\r\n\t/**\r\n\t * Defines an enum type, e.g. enum({'A': 1, 'B': 2}).\r\n\t */\r\n\tfunction enumtype(values) {\r\n\t    return new TEnumType(values);\r\n\t}\r\n\texports.enumtype = enumtype;\r\n\tvar TEnumType = /** @class */ (function (_super) {\r\n\t    __extends(TEnumType, _super);\r\n\t    function TEnumType(members) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.members = members;\r\n\t        _this.validValues = new Set();\r\n\t        _this._failMsg = \"is not a valid enum value\";\r\n\t        _this.validValues = new Set(Object.keys(members).map(function (name) { return members[name]; }));\r\n\t        return _this;\r\n\t    }\r\n\t    TEnumType.prototype.getChecker = function (suite, strict) {\r\n\t        var _this = this;\r\n\t        return function (value, ctx) {\r\n\t            return (_this.validValues.has(value) ? true : ctx.fail(null, _this._failMsg, 0));\r\n\t        };\r\n\t    };\r\n\t    return TEnumType;\r\n\t}(TType));\r\n\texports.TEnumType = TEnumType;\r\n\t/**\r\n\t * Defines a literal enum value, such as Direction.Up, specified as enumlit(\"Direction\", \"Up\").\r\n\t */\r\n\tfunction enumlit(name, prop) {\r\n\t    return new TEnumLiteral(name, prop);\r\n\t}\r\n\texports.enumlit = enumlit;\r\n\tvar TEnumLiteral = /** @class */ (function (_super) {\r\n\t    __extends(TEnumLiteral, _super);\r\n\t    function TEnumLiteral(enumName, prop) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.enumName = enumName;\r\n\t        _this.prop = prop;\r\n\t        _this._failMsg = \"is not \" + enumName + \".\" + prop;\r\n\t        return _this;\r\n\t    }\r\n\t    TEnumLiteral.prototype.getChecker = function (suite, strict) {\r\n\t        var _this = this;\r\n\t        var ttype = getNamedType(suite, this.enumName);\r\n\t        if (!(ttype instanceof TEnumType)) {\r\n\t            throw new Error(\"Type \" + this.enumName + \" used in enumlit is not an enum type\");\r\n\t        }\r\n\t        var val = ttype.members[this.prop];\r\n\t        if (!ttype.members.hasOwnProperty(this.prop)) {\r\n\t            throw new Error(\"Unknown value \" + this.enumName + \".\" + this.prop + \" used in enumlit\");\r\n\t        }\r\n\t        return function (value, ctx) { return (value === val) ? true : ctx.fail(null, _this._failMsg, -1); };\r\n\t    };\r\n\t    return TEnumLiteral;\r\n\t}(TType));\r\n\texports.TEnumLiteral = TEnumLiteral;\r\n\tfunction makeIfaceProps(props) {\r\n\t    return Object.keys(props).map(function (name) { return makeIfaceProp(name, props[name]); });\r\n\t}\r\n\tfunction makeIfaceProp(name, prop) {\r\n\t    return prop instanceof TOptional ?\r\n\t        new TProp(name, prop.ttype, true) :\r\n\t        new TProp(name, parseSpec(prop), false);\r\n\t}\r\n\t/**\r\n\t * Defines an interface. The first argument is an array of interfaces that it extends, and the\r\n\t * second is an array of properties.\r\n\t */\r\n\tfunction iface(bases, props) {\r\n\t    return new TIface(bases, makeIfaceProps(props));\r\n\t}\r\n\texports.iface = iface;\r\n\tvar TIface = /** @class */ (function (_super) {\r\n\t    __extends(TIface, _super);\r\n\t    function TIface(bases, props) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.bases = bases;\r\n\t        _this.props = props;\r\n\t        _this.propSet = new Set(props.map(function (p) { return p.name; }));\r\n\t        return _this;\r\n\t    }\r\n\t    TIface.prototype.getChecker = function (suite, strict, allowedProps) {\r\n\t        var _this = this;\r\n\t        var baseCheckers = this.bases.map(function (b) { return getNamedType(suite, b).getChecker(suite, strict); });\r\n\t        var propCheckers = this.props.map(function (prop) { return prop.ttype.getChecker(suite, strict); });\r\n\t        var testCtx = new util_1.NoopContext();\r\n\t        // Consider a prop required if it's not optional AND does not allow for undefined as a value.\r\n\t        var isPropRequired = this.props.map(function (prop, i) {\r\n\t            return !prop.isOpt && !propCheckers[i](undefined, testCtx);\r\n\t        });\r\n\t        var checker = function (value, ctx) {\r\n\t            if (typeof value !== \"object\" || value === null) {\r\n\t                return ctx.fail(null, \"is not an object\", 0);\r\n\t            }\r\n\t            for (var i = 0; i < baseCheckers.length; i++) {\r\n\t                if (!baseCheckers[i](value, ctx)) {\r\n\t                    return false;\r\n\t                }\r\n\t            }\r\n\t            for (var i = 0; i < propCheckers.length; i++) {\r\n\t                var name_1 = _this.props[i].name;\r\n\t                var v = value[name_1];\r\n\t                if (v === undefined) {\r\n\t                    if (isPropRequired[i]) {\r\n\t                        return ctx.fail(name_1, \"is missing\", 1);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    var ok = propCheckers[i](v, ctx);\r\n\t                    if (!ok) {\r\n\t                        return ctx.fail(name_1, null, 1);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        };\r\n\t        if (!strict) {\r\n\t            return checker;\r\n\t        }\r\n\t        var propSet = this.propSet;\r\n\t        if (allowedProps) {\r\n\t            this.propSet.forEach(function (prop) { return allowedProps.add(prop); });\r\n\t            propSet = allowedProps;\r\n\t        }\r\n\t        // In strict mode, check also for unknown enumerable properties.\r\n\t        return function (value, ctx) {\r\n\t            if (!checker(value, ctx)) {\r\n\t                return false;\r\n\t            }\r\n\t            for (var prop in value) {\r\n\t                if (!propSet.has(prop)) {\r\n\t                    return ctx.fail(prop, \"is extraneous\", 2);\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        };\r\n\t    };\r\n\t    return TIface;\r\n\t}(TType));\r\n\texports.TIface = TIface;\r\n\t/**\r\n\t * Defines an optional property on an interface.\r\n\t */\r\n\tfunction opt(typeSpec) { return new TOptional(parseSpec(typeSpec)); }\r\n\texports.opt = opt;\r\n\tvar TOptional = /** @class */ (function (_super) {\r\n\t    __extends(TOptional, _super);\r\n\t    function TOptional(ttype) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.ttype = ttype;\r\n\t        return _this;\r\n\t    }\r\n\t    TOptional.prototype.getChecker = function (suite, strict) {\r\n\t        var itemChecker = this.ttype.getChecker(suite, strict);\r\n\t        return function (value, ctx) {\r\n\t            return value === undefined || itemChecker(value, ctx);\r\n\t        };\r\n\t    };\r\n\t    return TOptional;\r\n\t}(TType));\r\n\texports.TOptional = TOptional;\r\n\t/**\r\n\t * Defines a property in an interface.\r\n\t */\r\n\tvar TProp = /** @class */ (function () {\r\n\t    function TProp(name, ttype, isOpt) {\r\n\t        this.name = name;\r\n\t        this.ttype = ttype;\r\n\t        this.isOpt = isOpt;\r\n\t    }\r\n\t    return TProp;\r\n\t}());\r\n\texports.TProp = TProp;\r\n\t/**\r\n\t * Defines a function. The first argument declares the function's return type, the rest declare\r\n\t * its parameters.\r\n\t */\r\n\tfunction func(resultSpec) {\r\n\t    var params = [];\r\n\t    for (var _i = 1; _i < arguments.length; _i++) {\r\n\t        params[_i - 1] = arguments[_i];\r\n\t    }\r\n\t    return new TFunc(new TParamList(params), parseSpec(resultSpec));\r\n\t}\r\n\texports.func = func;\r\n\tvar TFunc = /** @class */ (function (_super) {\r\n\t    __extends(TFunc, _super);\r\n\t    function TFunc(paramList, result) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.paramList = paramList;\r\n\t        _this.result = result;\r\n\t        return _this;\r\n\t    }\r\n\t    TFunc.prototype.getChecker = function (suite, strict) {\r\n\t        return function (value, ctx) {\r\n\t            return typeof value === \"function\" ? true : ctx.fail(null, \"is not a function\", 0);\r\n\t        };\r\n\t    };\r\n\t    return TFunc;\r\n\t}(TType));\r\n\texports.TFunc = TFunc;\r\n\t/**\r\n\t * Defines a function parameter.\r\n\t */\r\n\tfunction param(name, typeSpec, isOpt) {\r\n\t    return new TParam(name, parseSpec(typeSpec), Boolean(isOpt));\r\n\t}\r\n\texports.param = param;\r\n\tvar TParam = /** @class */ (function () {\r\n\t    function TParam(name, ttype, isOpt) {\r\n\t        this.name = name;\r\n\t        this.ttype = ttype;\r\n\t        this.isOpt = isOpt;\r\n\t    }\r\n\t    return TParam;\r\n\t}());\r\n\texports.TParam = TParam;\r\n\t/**\r\n\t * Defines a function parameter list.\r\n\t */\r\n\tvar TParamList = /** @class */ (function (_super) {\r\n\t    __extends(TParamList, _super);\r\n\t    function TParamList(params) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.params = params;\r\n\t        return _this;\r\n\t    }\r\n\t    TParamList.prototype.getChecker = function (suite, strict) {\r\n\t        var _this = this;\r\n\t        var itemCheckers = this.params.map(function (t) { return t.ttype.getChecker(suite, strict); });\r\n\t        var testCtx = new util_1.NoopContext();\r\n\t        var isParamRequired = this.params.map(function (param, i) {\r\n\t            return !param.isOpt && !itemCheckers[i](undefined, testCtx);\r\n\t        });\r\n\t        var checker = function (value, ctx) {\r\n\t            if (!Array.isArray(value)) {\r\n\t                return ctx.fail(null, \"is not an array\", 0);\r\n\t            }\r\n\t            for (var i = 0; i < itemCheckers.length; i++) {\r\n\t                var p = _this.params[i];\r\n\t                if (value[i] === undefined) {\r\n\t                    if (isParamRequired[i]) {\r\n\t                        return ctx.fail(p.name, \"is missing\", 1);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    var ok = itemCheckers[i](value[i], ctx);\r\n\t                    if (!ok) {\r\n\t                        return ctx.fail(p.name, null, 1);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        };\r\n\t        if (!strict) {\r\n\t            return checker;\r\n\t        }\r\n\t        return function (value, ctx) {\r\n\t            if (!checker(value, ctx)) {\r\n\t                return false;\r\n\t            }\r\n\t            return value.length <= itemCheckers.length ? true :\r\n\t                ctx.fail(itemCheckers.length, \"is extraneous\", 2);\r\n\t        };\r\n\t    };\r\n\t    return TParamList;\r\n\t}(TType));\r\n\texports.TParamList = TParamList;\r\n\t/**\r\n\t * Single TType implementation for all basic built-in types.\r\n\t */\r\n\tvar BasicType = /** @class */ (function (_super) {\r\n\t    __extends(BasicType, _super);\r\n\t    function BasicType(validator, message) {\r\n\t        var _this = _super.call(this) || this;\r\n\t        _this.validator = validator;\r\n\t        _this.message = message;\r\n\t        return _this;\r\n\t    }\r\n\t    BasicType.prototype.getChecker = function (suite, strict) {\r\n\t        var _this = this;\r\n\t        return function (value, ctx) { return _this.validator(value) ? true : ctx.fail(null, _this.message, 0); };\r\n\t    };\r\n\t    return BasicType;\r\n\t}(TType));\r\n\texports.BasicType = BasicType;\r\n\t/**\r\n\t * Defines the suite of basic types.\r\n\t */\r\n\texports.basicTypes = {\r\n\t    any: new BasicType(function (v) { return true; }, \"is invalid\"),\r\n\t    number: new BasicType(function (v) { return (typeof v === \"number\"); }, \"is not a number\"),\r\n\t    object: new BasicType(function (v) { return (typeof v === \"object\" && v); }, \"is not an object\"),\r\n\t    boolean: new BasicType(function (v) { return (typeof v === \"boolean\"); }, \"is not a boolean\"),\r\n\t    string: new BasicType(function (v) { return (typeof v === \"string\"); }, \"is not a string\"),\r\n\t    symbol: new BasicType(function (v) { return (typeof v === \"symbol\"); }, \"is not a symbol\"),\r\n\t    void: new BasicType(function (v) { return (v == null); }, \"is not void\"),\r\n\t    undefined: new BasicType(function (v) { return (v === undefined); }, \"is not undefined\"),\r\n\t    null: new BasicType(function (v) { return (v === null); }, \"is not null\"),\r\n\t    never: new BasicType(function (v) { return false; }, \"is unexpected\"),\r\n\t    Date: new BasicType(getIsNativeChecker(\"[object Date]\"), \"is not a Date\"),\r\n\t    RegExp: new BasicType(getIsNativeChecker(\"[object RegExp]\"), \"is not a RegExp\"),\r\n\t};\r\n\t// This approach for checking native object types mirrors that of lodash. Its advantage over\r\n\t// `isinstance` is that it can still return true for native objects created in different JS\r\n\t// execution environments.\r\n\tvar nativeToString = Object.prototype.toString;\r\n\tfunction getIsNativeChecker(tag) {\r\n\t    return function (v) { return typeof v === \"object\" && v && nativeToString.call(v) === tag; };\r\n\t}\r\n\tif (typeof Buffer !== \"undefined\") {\r\n\t    exports.basicTypes.Buffer = new BasicType(function (v) { return Buffer.isBuffer(v); }, \"is not a Buffer\");\r\n\t}\r\n\tvar _loop_1 = function (array_1) {\r\n\t    exports.basicTypes[array_1.name] = new BasicType(function (v) { return (v instanceof array_1); }, \"is not a \" + array_1.name);\r\n\t};\r\n\t// Support typed arrays of various flavors\r\n\tfor (var _i = 0, _a = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array,\r\n\t    Int32Array, Uint32Array, Float32Array, Float64Array, ArrayBuffer]; _i < _a.length; _i++) {\r\n\t    var array_1 = _a[_i];\r\n\t    _loop_1(array_1);\r\n\t} \r\n} (types));\r\n\r\n(function (exports) {\r\n\tvar __spreadArrays = (commonjsGlobal && commonjsGlobal.__spreadArrays) || function () {\r\n\t    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n\t    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n\t        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n\t            r[k] = a[j];\r\n\t    return r;\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.Checker = exports.createCheckers = void 0;\r\n\tvar types_1 = types;\r\n\tvar util_1 = util;\r\n\t/**\r\n\t * Export functions used to define interfaces.\r\n\t */\r\n\tvar types_2 = types;\r\n\tObject.defineProperty(exports, \"TArray\", { enumerable: true, get: function () { return types_2.TArray; } });\r\n\tObject.defineProperty(exports, \"TEnumType\", { enumerable: true, get: function () { return types_2.TEnumType; } });\r\n\tObject.defineProperty(exports, \"TEnumLiteral\", { enumerable: true, get: function () { return types_2.TEnumLiteral; } });\r\n\tObject.defineProperty(exports, \"TFunc\", { enumerable: true, get: function () { return types_2.TFunc; } });\r\n\tObject.defineProperty(exports, \"TIface\", { enumerable: true, get: function () { return types_2.TIface; } });\r\n\tObject.defineProperty(exports, \"TLiteral\", { enumerable: true, get: function () { return types_2.TLiteral; } });\r\n\tObject.defineProperty(exports, \"TName\", { enumerable: true, get: function () { return types_2.TName; } });\r\n\tObject.defineProperty(exports, \"TOptional\", { enumerable: true, get: function () { return types_2.TOptional; } });\r\n\tObject.defineProperty(exports, \"TParam\", { enumerable: true, get: function () { return types_2.TParam; } });\r\n\tObject.defineProperty(exports, \"TParamList\", { enumerable: true, get: function () { return types_2.TParamList; } });\r\n\tObject.defineProperty(exports, \"TProp\", { enumerable: true, get: function () { return types_2.TProp; } });\r\n\tObject.defineProperty(exports, \"TTuple\", { enumerable: true, get: function () { return types_2.TTuple; } });\r\n\tObject.defineProperty(exports, \"TType\", { enumerable: true, get: function () { return types_2.TType; } });\r\n\tObject.defineProperty(exports, \"TUnion\", { enumerable: true, get: function () { return types_2.TUnion; } });\r\n\tObject.defineProperty(exports, \"TIntersection\", { enumerable: true, get: function () { return types_2.TIntersection; } });\r\n\tObject.defineProperty(exports, \"array\", { enumerable: true, get: function () { return types_2.array; } });\r\n\tObject.defineProperty(exports, \"enumlit\", { enumerable: true, get: function () { return types_2.enumlit; } });\r\n\tObject.defineProperty(exports, \"enumtype\", { enumerable: true, get: function () { return types_2.enumtype; } });\r\n\tObject.defineProperty(exports, \"func\", { enumerable: true, get: function () { return types_2.func; } });\r\n\tObject.defineProperty(exports, \"iface\", { enumerable: true, get: function () { return types_2.iface; } });\r\n\tObject.defineProperty(exports, \"lit\", { enumerable: true, get: function () { return types_2.lit; } });\r\n\tObject.defineProperty(exports, \"name\", { enumerable: true, get: function () { return types_2.name; } });\r\n\tObject.defineProperty(exports, \"opt\", { enumerable: true, get: function () { return types_2.opt; } });\r\n\tObject.defineProperty(exports, \"param\", { enumerable: true, get: function () { return types_2.param; } });\r\n\tObject.defineProperty(exports, \"tuple\", { enumerable: true, get: function () { return types_2.tuple; } });\r\n\tObject.defineProperty(exports, \"union\", { enumerable: true, get: function () { return types_2.union; } });\r\n\tObject.defineProperty(exports, \"intersection\", { enumerable: true, get: function () { return types_2.intersection; } });\r\n\tObject.defineProperty(exports, \"BasicType\", { enumerable: true, get: function () { return types_2.BasicType; } });\r\n\tvar util_2 = util;\r\n\tObject.defineProperty(exports, \"VError\", { enumerable: true, get: function () { return util_2.VError; } });\r\n\t/**\r\n\t * Takes one of more type suites (e.g. a module generated by `ts-interface-builder`), and combines\r\n\t * them into a suite of interface checkers. If a type is used by name, that name should be present\r\n\t * among the passed-in type suites.\r\n\t *\r\n\t * The returned object maps type names to Checker objects.\r\n\t */\r\n\tfunction createCheckers() {\r\n\t    var typeSuite = [];\r\n\t    for (var _i = 0; _i < arguments.length; _i++) {\r\n\t        typeSuite[_i] = arguments[_i];\r\n\t    }\r\n\t    var fullSuite = Object.assign.apply(Object, __spreadArrays([{}, types_1.basicTypes], typeSuite));\r\n\t    var checkers = {};\r\n\t    for (var _a = 0, typeSuite_1 = typeSuite; _a < typeSuite_1.length; _a++) {\r\n\t        var suite_1 = typeSuite_1[_a];\r\n\t        for (var _b = 0, _c = Object.keys(suite_1); _b < _c.length; _b++) {\r\n\t            var name = _c[_b];\r\n\t            checkers[name] = new Checker(fullSuite, suite_1[name]);\r\n\t        }\r\n\t    }\r\n\t    return checkers;\r\n\t}\r\n\texports.createCheckers = createCheckers;\r\n\t/**\r\n\t * Checker implements validation of objects, and also includes accessors to validate method calls.\r\n\t * Checkers should be created using `createCheckers()`.\r\n\t */\r\n\tvar Checker = /** @class */ (function () {\r\n\t    // Create checkers by using `createCheckers()` function.\r\n\t    function Checker(suite, ttype, _path) {\r\n\t        if (_path === void 0) { _path = 'value'; }\r\n\t        this.suite = suite;\r\n\t        this.ttype = ttype;\r\n\t        this._path = _path;\r\n\t        this.props = new Map();\r\n\t        if (ttype instanceof types_1.TIface) {\r\n\t            for (var _i = 0, _a = ttype.props; _i < _a.length; _i++) {\r\n\t                var p = _a[_i];\r\n\t                this.props.set(p.name, p.ttype);\r\n\t            }\r\n\t        }\r\n\t        this.checkerPlain = this.ttype.getChecker(suite, false);\r\n\t        this.checkerStrict = this.ttype.getChecker(suite, true);\r\n\t    }\r\n\t    /**\r\n\t     * Set the path to report in errors, instead of the default \"value\". (E.g. if the Checker is for\r\n\t     * a \"person\" interface, set path to \"person\" to report e.g. \"person.name is not a string\".)\r\n\t     */\r\n\t    Checker.prototype.setReportedPath = function (path) {\r\n\t        this._path = path;\r\n\t    };\r\n\t    /**\r\n\t     * Check that the given value satisfies this checker's type, or throw Error.\r\n\t     */\r\n\t    Checker.prototype.check = function (value) { return this._doCheck(this.checkerPlain, value); };\r\n\t    /**\r\n\t     * A fast check for whether or not the given value satisfies this Checker's type. This returns\r\n\t     * true or false, does not produce an error message, and is fast both on success and on failure.\r\n\t     */\r\n\t    Checker.prototype.test = function (value) {\r\n\t        return this.checkerPlain(value, new util_1.NoopContext());\r\n\t    };\r\n\t    /**\r\n\t     * Returns an error object describing the errors if the given value does not satisfy this\r\n\t     * Checker's type, or null if it does.\r\n\t     */\r\n\t    Checker.prototype.validate = function (value) {\r\n\t        return this._doValidate(this.checkerPlain, value);\r\n\t    };\r\n\t    /**\r\n\t     * Check that the given value satisfies this checker's type strictly. This checks that objects\r\n\t     * and tuples have no extra members. Note that this prevents backward compatibility, so usually\r\n\t     * a plain check() is more appropriate.\r\n\t     */\r\n\t    Checker.prototype.strictCheck = function (value) { return this._doCheck(this.checkerStrict, value); };\r\n\t    /**\r\n\t     * A fast strict check for whether or not the given value satisfies this Checker's type. Returns\r\n\t     * true or false, does not produce an error message, and is fast both on success and on failure.\r\n\t     */\r\n\t    Checker.prototype.strictTest = function (value) {\r\n\t        return this.checkerStrict(value, new util_1.NoopContext());\r\n\t    };\r\n\t    /**\r\n\t     * Returns an error object describing the errors if the given value does not satisfy this\r\n\t     * Checker's type strictly, or null if it does.\r\n\t     */\r\n\t    Checker.prototype.strictValidate = function (value) {\r\n\t        return this._doValidate(this.checkerStrict, value);\r\n\t    };\r\n\t    /**\r\n\t     * If this checker is for an interface, returns a Checker for the type required for the given\r\n\t     * property of this interface.\r\n\t     */\r\n\t    Checker.prototype.getProp = function (prop) {\r\n\t        var ttype = this.props.get(prop);\r\n\t        if (!ttype) {\r\n\t            throw new Error(\"Type has no property \" + prop);\r\n\t        }\r\n\t        return new Checker(this.suite, ttype, this._path + \".\" + prop);\r\n\t    };\r\n\t    /**\r\n\t     * If this checker is for an interface, returns a Checker for the argument-list required to call\r\n\t     * the given method of this interface. E.g. if this Checker is for the interface:\r\n\t     *    interface Foo {\r\n\t     *      find(s: string, pos?: number): number;\r\n\t     *    }\r\n\t     * Then methodArgs(\"find\").check(...) will succeed for [\"foo\"] and [\"foo\", 3], but not for [17].\r\n\t     */\r\n\t    Checker.prototype.methodArgs = function (methodName) {\r\n\t        var tfunc = this._getMethod(methodName);\r\n\t        return new Checker(this.suite, tfunc.paramList);\r\n\t    };\r\n\t    /**\r\n\t     * If this checker is for an interface, returns a Checker for the return value of the given\r\n\t     * method of this interface.\r\n\t     */\r\n\t    Checker.prototype.methodResult = function (methodName) {\r\n\t        var tfunc = this._getMethod(methodName);\r\n\t        return new Checker(this.suite, tfunc.result);\r\n\t    };\r\n\t    /**\r\n\t     * If this checker is for a function, returns a Checker for its argument-list.\r\n\t     */\r\n\t    Checker.prototype.getArgs = function () {\r\n\t        if (!(this.ttype instanceof types_1.TFunc)) {\r\n\t            throw new Error(\"getArgs() applied to non-function\");\r\n\t        }\r\n\t        return new Checker(this.suite, this.ttype.paramList);\r\n\t    };\r\n\t    /**\r\n\t     * If this checker is for a function, returns a Checker for its result.\r\n\t     */\r\n\t    Checker.prototype.getResult = function () {\r\n\t        if (!(this.ttype instanceof types_1.TFunc)) {\r\n\t            throw new Error(\"getResult() applied to non-function\");\r\n\t        }\r\n\t        return new Checker(this.suite, this.ttype.result);\r\n\t    };\r\n\t    /**\r\n\t     * Return the type for which this is a checker.\r\n\t     */\r\n\t    Checker.prototype.getType = function () {\r\n\t        return this.ttype;\r\n\t    };\r\n\t    /**\r\n\t     * Actual implementation of check() and strictCheck().\r\n\t     */\r\n\t    Checker.prototype._doCheck = function (checkerFunc, value) {\r\n\t        var noopCtx = new util_1.NoopContext();\r\n\t        if (!checkerFunc(value, noopCtx)) {\r\n\t            var detailCtx = new util_1.DetailContext();\r\n\t            checkerFunc(value, detailCtx);\r\n\t            throw detailCtx.getError(this._path);\r\n\t        }\r\n\t    };\r\n\t    Checker.prototype._doValidate = function (checkerFunc, value) {\r\n\t        var noopCtx = new util_1.NoopContext();\r\n\t        if (checkerFunc(value, noopCtx)) {\r\n\t            return null;\r\n\t        }\r\n\t        var detailCtx = new util_1.DetailContext();\r\n\t        checkerFunc(value, detailCtx);\r\n\t        return detailCtx.getErrorDetail(this._path);\r\n\t    };\r\n\t    Checker.prototype._getMethod = function (methodName) {\r\n\t        var ttype = this.props.get(methodName);\r\n\t        if (!ttype) {\r\n\t            throw new Error(\"Type has no property \" + methodName);\r\n\t        }\r\n\t        if (!(ttype instanceof types_1.TFunc)) {\r\n\t            throw new Error(\"Property \" + methodName + \" is not a method\");\r\n\t        }\r\n\t        return ttype;\r\n\t    };\r\n\t    return Checker;\r\n\t}());\r\n\texports.Checker = Checker; \r\n} (dist));\r\n\r\n/**\r\n * This module was automatically generated by `ts-interface-builder`\r\n */\r\n// tslint:disable:object-literal-key-quotes\r\n\r\nconst Transform = dist.union(\r\n  dist.lit(\"jsx\"),\r\n  dist.lit(\"typescript\"),\r\n  dist.lit(\"flow\"),\r\n  dist.lit(\"imports\"),\r\n  dist.lit(\"react-hot-loader\"),\r\n  dist.lit(\"jest\"),\r\n);\r\n\r\nconst SourceMapOptions = dist.iface([], {\r\n  compiledFilename: \"string\",\r\n});\r\n\r\nconst Options = dist.iface([], {\r\n  transforms: dist.array(\"Transform\"),\r\n  disableESTransforms: dist.opt(\"boolean\"),\r\n  jsxRuntime: dist.opt(dist.union(dist.lit(\"classic\"), dist.lit(\"automatic\"), dist.lit(\"preserve\"))),\r\n  production: dist.opt(\"boolean\"),\r\n  jsxImportSource: dist.opt(\"string\"),\r\n  jsxPragma: dist.opt(\"string\"),\r\n  jsxFragmentPragma: dist.opt(\"string\"),\r\n  preserveDynamicImport: dist.opt(\"boolean\"),\r\n  injectCreateRequireForImportRequire: dist.opt(\"boolean\"),\r\n  enableLegacyTypeScriptModuleInterop: dist.opt(\"boolean\"),\r\n  enableLegacyBabel5ModuleInterop: dist.opt(\"boolean\"),\r\n  sourceMapOptions: dist.opt(\"SourceMapOptions\"),\r\n  filePath: dist.opt(\"string\"),\r\n});\r\n\r\nconst exportedTypeSuite = {\r\n  Transform,\r\n  SourceMapOptions,\r\n  Options,\r\n};\r\n\r\nconst {Options: OptionsChecker} = dist.createCheckers(exportedTypeSuite);\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction validateOptions(options) {\r\n  OptionsChecker.strictCheck(options);\r\n}\r\n\r\nfunction parseSpread() {\r\n  next();\r\n  parseMaybeAssign(false);\r\n}\r\n\r\nfunction parseRest(isBlockScope) {\r\n  next();\r\n  parseBindingAtom(isBlockScope);\r\n}\r\n\r\nfunction parseBindingIdentifier(isBlockScope) {\r\n  parseIdentifier();\r\n  markPriorBindingIdentifier(isBlockScope);\r\n}\r\n\r\nfunction parseImportedIdentifier() {\r\n  parseIdentifier();\r\n  state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;\r\n}\r\n\r\nfunction markPriorBindingIdentifier(isBlockScope) {\r\n  let identifierRole;\r\n  if (state.scopeDepth === 0) {\r\n    identifierRole = IdentifierRole.TopLevelDeclaration;\r\n  } else if (isBlockScope) {\r\n    identifierRole = IdentifierRole.BlockScopedDeclaration;\r\n  } else {\r\n    identifierRole = IdentifierRole.FunctionScopedDeclaration;\r\n  }\r\n  state.tokens[state.tokens.length - 1].identifierRole = identifierRole;\r\n}\r\n\r\n// Parses lvalue (assignable) atom.\r\nfunction parseBindingAtom(isBlockScope) {\r\n  switch (state.type) {\r\n    case TokenType._this: {\r\n      // In TypeScript, \"this\" may be the name of a parameter, so allow it.\r\n      const oldIsType = pushTypeContext(0);\r\n      next();\r\n      popTypeContext(oldIsType);\r\n      return;\r\n    }\r\n\r\n    case TokenType._yield:\r\n    case TokenType.name: {\r\n      state.type = TokenType.name;\r\n      parseBindingIdentifier(isBlockScope);\r\n      return;\r\n    }\r\n\r\n    case TokenType.bracketL: {\r\n      next();\r\n      parseBindingList(TokenType.bracketR, isBlockScope, true /* allowEmpty */);\r\n      return;\r\n    }\r\n\r\n    case TokenType.braceL:\r\n      parseObj(true, isBlockScope);\r\n      return;\r\n\r\n    default:\r\n      unexpected();\r\n  }\r\n}\r\n\r\nfunction parseBindingList(\r\n  close,\r\n  isBlockScope,\r\n  allowEmpty = false,\r\n  allowModifiers = false,\r\n  contextId = 0,\r\n) {\r\n  let first = true;\r\n\r\n  let hasRemovedComma = false;\r\n  const firstItemTokenIndex = state.tokens.length;\r\n\r\n  while (!eat(close) && !state.error) {\r\n    if (first) {\r\n      first = false;\r\n    } else {\r\n      expect(TokenType.comma);\r\n      state.tokens[state.tokens.length - 1].contextId = contextId;\r\n      // After a \"this\" type in TypeScript, we need to set the following comma (if any) to also be\r\n      // a type token so that it will be removed.\r\n      if (!hasRemovedComma && state.tokens[firstItemTokenIndex].isType) {\r\n        state.tokens[state.tokens.length - 1].isType = true;\r\n        hasRemovedComma = true;\r\n      }\r\n    }\r\n    if (allowEmpty && match(TokenType.comma)) ; else if (eat(close)) {\r\n      break;\r\n    } else if (match(TokenType.ellipsis)) {\r\n      parseRest(isBlockScope);\r\n      parseAssignableListItemTypes();\r\n      // Support rest element trailing commas allowed by TypeScript <2.9.\r\n      eat(TokenType.comma);\r\n      expect(close);\r\n      break;\r\n    } else {\r\n      parseAssignableListItem(allowModifiers, isBlockScope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseAssignableListItem(allowModifiers, isBlockScope) {\r\n  if (allowModifiers) {\r\n    tsParseModifiers([\r\n      ContextualKeyword._public,\r\n      ContextualKeyword._protected,\r\n      ContextualKeyword._private,\r\n      ContextualKeyword._readonly,\r\n      ContextualKeyword._override,\r\n    ]);\r\n  }\r\n\r\n  parseMaybeDefault(isBlockScope);\r\n  parseAssignableListItemTypes();\r\n  parseMaybeDefault(isBlockScope, true /* leftAlreadyParsed */);\r\n}\r\n\r\nfunction parseAssignableListItemTypes() {\r\n  if (isFlowEnabled) {\r\n    flowParseAssignableListItemTypes();\r\n  } else if (isTypeScriptEnabled) {\r\n    tsParseAssignableListItemTypes();\r\n  }\r\n}\r\n\r\n// Parses assignment pattern around given atom if possible.\r\nfunction parseMaybeDefault(isBlockScope, leftAlreadyParsed = false) {\r\n  if (!leftAlreadyParsed) {\r\n    parseBindingAtom(isBlockScope);\r\n  }\r\n  if (!eat(TokenType.eq)) {\r\n    return;\r\n  }\r\n  const eqIndex = state.tokens.length - 1;\r\n  parseMaybeAssign();\r\n  state.tokens[eqIndex].rhsEndIndex = state.tokens.length;\r\n}\r\n\r\nfunction tsIsIdentifier() {\r\n  // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\r\n  // See https://github.com/Microsoft/TypeScript/issues/15008\r\n  return match(TokenType.name);\r\n}\r\n\r\nfunction isLiteralPropertyName() {\r\n  return (\r\n    match(TokenType.name) ||\r\n    Boolean(state.type & TokenType.IS_KEYWORD) ||\r\n    match(TokenType.string) ||\r\n    match(TokenType.num) ||\r\n    match(TokenType.bigint) ||\r\n    match(TokenType.decimal)\r\n  );\r\n}\r\n\r\nfunction tsNextTokenCanFollowModifier() {\r\n  // Note: TypeScript's implementation is much more complicated because\r\n  // more things are considered modifiers there.\r\n  // This implementation only handles modifiers not handled by babylon itself. And \"static\".\r\n  // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\r\n  const snapshot = state.snapshot();\r\n\r\n  next();\r\n  const canFollowModifier =\r\n    (match(TokenType.bracketL) ||\r\n      match(TokenType.braceL) ||\r\n      match(TokenType.star) ||\r\n      match(TokenType.ellipsis) ||\r\n      match(TokenType.hash) ||\r\n      isLiteralPropertyName()) &&\r\n    !hasPrecedingLineBreak();\r\n\r\n  if (canFollowModifier) {\r\n    return true;\r\n  } else {\r\n    state.restoreFromSnapshot(snapshot);\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction tsParseModifiers(allowedModifiers) {\r\n  while (true) {\r\n    const modifier = tsParseModifier(allowedModifiers);\r\n    if (modifier === null) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n/** Parses a modifier matching one the given modifier names. */\r\nfunction tsParseModifier(\r\n  allowedModifiers,\r\n) {\r\n  if (!match(TokenType.name)) {\r\n    return null;\r\n  }\r\n\r\n  const modifier = state.contextualKeyword;\r\n  if (allowedModifiers.indexOf(modifier) !== -1 && tsNextTokenCanFollowModifier()) {\r\n    switch (modifier) {\r\n      case ContextualKeyword._readonly:\r\n        state.tokens[state.tokens.length - 1].type = TokenType._readonly;\r\n        break;\r\n      case ContextualKeyword._abstract:\r\n        state.tokens[state.tokens.length - 1].type = TokenType._abstract;\r\n        break;\r\n      case ContextualKeyword._static:\r\n        state.tokens[state.tokens.length - 1].type = TokenType._static;\r\n        break;\r\n      case ContextualKeyword._public:\r\n        state.tokens[state.tokens.length - 1].type = TokenType._public;\r\n        break;\r\n      case ContextualKeyword._private:\r\n        state.tokens[state.tokens.length - 1].type = TokenType._private;\r\n        break;\r\n      case ContextualKeyword._protected:\r\n        state.tokens[state.tokens.length - 1].type = TokenType._protected;\r\n        break;\r\n      case ContextualKeyword._override:\r\n        state.tokens[state.tokens.length - 1].type = TokenType._override;\r\n        break;\r\n      case ContextualKeyword._declare:\r\n        state.tokens[state.tokens.length - 1].type = TokenType._declare;\r\n        break;\r\n    }\r\n    return modifier;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction tsParseEntityName() {\r\n  parseIdentifier();\r\n  while (eat(TokenType.dot)) {\r\n    parseIdentifier();\r\n  }\r\n}\r\n\r\nfunction tsParseTypeReference() {\r\n  tsParseEntityName();\r\n  if (!hasPrecedingLineBreak() && match(TokenType.lessThan)) {\r\n    tsParseTypeArguments();\r\n  }\r\n}\r\n\r\nfunction tsParseThisTypePredicate() {\r\n  next();\r\n  tsParseTypeAnnotation();\r\n}\r\n\r\nfunction tsParseThisTypeNode() {\r\n  next();\r\n}\r\n\r\nfunction tsParseTypeQuery() {\r\n  expect(TokenType._typeof);\r\n  if (match(TokenType._import)) {\r\n    tsParseImportType();\r\n  } else {\r\n    tsParseEntityName();\r\n  }\r\n  if (!hasPrecedingLineBreak() && match(TokenType.lessThan)) {\r\n    tsParseTypeArguments();\r\n  }\r\n}\r\n\r\nfunction tsParseImportType() {\r\n  expect(TokenType._import);\r\n  expect(TokenType.parenL);\r\n  expect(TokenType.string);\r\n  expect(TokenType.parenR);\r\n  if (eat(TokenType.dot)) {\r\n    tsParseEntityName();\r\n  }\r\n  if (match(TokenType.lessThan)) {\r\n    tsParseTypeArguments();\r\n  }\r\n}\r\n\r\nfunction tsParseTypeParameter() {\r\n  eat(TokenType._const);\r\n  const hadIn = eat(TokenType._in);\r\n  const hadOut = eatContextual(ContextualKeyword._out);\r\n  eat(TokenType._const);\r\n  if ((hadIn || hadOut) && !match(TokenType.name)) {\r\n    // The \"in\" or \"out\" keyword must have actually been the type parameter\r\n    // name, so set it as the name.\r\n    state.tokens[state.tokens.length - 1].type = TokenType.name;\r\n  } else {\r\n    parseIdentifier();\r\n  }\r\n\r\n  if (eat(TokenType._extends)) {\r\n    tsParseType();\r\n  }\r\n  if (eat(TokenType.eq)) {\r\n    tsParseType();\r\n  }\r\n}\r\n\r\nfunction tsTryParseTypeParameters() {\r\n  if (match(TokenType.lessThan)) {\r\n    tsParseTypeParameters();\r\n  }\r\n}\r\n\r\nfunction tsParseTypeParameters() {\r\n  const oldIsType = pushTypeContext(0);\r\n  if (match(TokenType.lessThan) || match(TokenType.typeParameterStart)) {\r\n    next();\r\n  } else {\r\n    unexpected();\r\n  }\r\n\r\n  while (!eat(TokenType.greaterThan) && !state.error) {\r\n    tsParseTypeParameter();\r\n    eat(TokenType.comma);\r\n  }\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\n// Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\r\n// but here it's always false, because this is only used for types.\r\nfunction tsFillSignature(returnToken) {\r\n  // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\r\n  const returnTokenRequired = returnToken === TokenType.arrow;\r\n  tsTryParseTypeParameters();\r\n  expect(TokenType.parenL);\r\n  // Create a scope even though we're doing type parsing so we don't accidentally\r\n  // treat params as top-level bindings.\r\n  state.scopeDepth++;\r\n  tsParseBindingListForSignature(false /* isBlockScope */);\r\n  state.scopeDepth--;\r\n  if (returnTokenRequired) {\r\n    tsParseTypeOrTypePredicateAnnotation(returnToken);\r\n  } else if (match(returnToken)) {\r\n    tsParseTypeOrTypePredicateAnnotation(returnToken);\r\n  }\r\n}\r\n\r\nfunction tsParseBindingListForSignature(isBlockScope) {\r\n  parseBindingList(TokenType.parenR, isBlockScope);\r\n}\r\n\r\nfunction tsParseTypeMemberSemicolon() {\r\n  if (!eat(TokenType.comma)) {\r\n    semicolon();\r\n  }\r\n}\r\n\r\nfunction tsParseSignatureMember() {\r\n  tsFillSignature(TokenType.colon);\r\n  tsParseTypeMemberSemicolon();\r\n}\r\n\r\nfunction tsIsUnambiguouslyIndexSignature() {\r\n  const snapshot = state.snapshot();\r\n  next(); // Skip '{'\r\n  const isIndexSignature = eat(TokenType.name) && match(TokenType.colon);\r\n  state.restoreFromSnapshot(snapshot);\r\n  return isIndexSignature;\r\n}\r\n\r\nfunction tsTryParseIndexSignature() {\r\n  if (!(match(TokenType.bracketL) && tsIsUnambiguouslyIndexSignature())) {\r\n    return false;\r\n  }\r\n\r\n  const oldIsType = pushTypeContext(0);\r\n\r\n  expect(TokenType.bracketL);\r\n  parseIdentifier();\r\n  tsParseTypeAnnotation();\r\n  expect(TokenType.bracketR);\r\n\r\n  tsTryParseTypeAnnotation();\r\n  tsParseTypeMemberSemicolon();\r\n\r\n  popTypeContext(oldIsType);\r\n  return true;\r\n}\r\n\r\nfunction tsParsePropertyOrMethodSignature(isReadonly) {\r\n  eat(TokenType.question);\r\n\r\n  if (!isReadonly && (match(TokenType.parenL) || match(TokenType.lessThan))) {\r\n    tsFillSignature(TokenType.colon);\r\n    tsParseTypeMemberSemicolon();\r\n  } else {\r\n    tsTryParseTypeAnnotation();\r\n    tsParseTypeMemberSemicolon();\r\n  }\r\n}\r\n\r\nfunction tsParseTypeMember() {\r\n  if (match(TokenType.parenL) || match(TokenType.lessThan)) {\r\n    // call signature\r\n    tsParseSignatureMember();\r\n    return;\r\n  }\r\n  if (match(TokenType._new)) {\r\n    next();\r\n    if (match(TokenType.parenL) || match(TokenType.lessThan)) {\r\n      // constructor signature\r\n      tsParseSignatureMember();\r\n    } else {\r\n      tsParsePropertyOrMethodSignature(false);\r\n    }\r\n    return;\r\n  }\r\n  const readonly = !!tsParseModifier([ContextualKeyword._readonly]);\r\n\r\n  const found = tsTryParseIndexSignature();\r\n  if (found) {\r\n    return;\r\n  }\r\n  if (\r\n    (isContextual(ContextualKeyword._get) || isContextual(ContextualKeyword._set)) &&\r\n    tsNextTokenCanFollowModifier()\r\n  ) ;\r\n  parsePropertyName(-1 /* Types don't need context IDs. */);\r\n  tsParsePropertyOrMethodSignature(readonly);\r\n}\r\n\r\nfunction tsParseTypeLiteral() {\r\n  tsParseObjectTypeMembers();\r\n}\r\n\r\nfunction tsParseObjectTypeMembers() {\r\n  expect(TokenType.braceL);\r\n  while (!eat(TokenType.braceR) && !state.error) {\r\n    tsParseTypeMember();\r\n  }\r\n}\r\n\r\nfunction tsLookaheadIsStartOfMappedType() {\r\n  const snapshot = state.snapshot();\r\n  const isStartOfMappedType = tsIsStartOfMappedType();\r\n  state.restoreFromSnapshot(snapshot);\r\n  return isStartOfMappedType;\r\n}\r\n\r\nfunction tsIsStartOfMappedType() {\r\n  next();\r\n  if (eat(TokenType.plus) || eat(TokenType.minus)) {\r\n    return isContextual(ContextualKeyword._readonly);\r\n  }\r\n  if (isContextual(ContextualKeyword._readonly)) {\r\n    next();\r\n  }\r\n  if (!match(TokenType.bracketL)) {\r\n    return false;\r\n  }\r\n  next();\r\n  if (!tsIsIdentifier()) {\r\n    return false;\r\n  }\r\n  next();\r\n  return match(TokenType._in);\r\n}\r\n\r\nfunction tsParseMappedTypeParameter() {\r\n  parseIdentifier();\r\n  expect(TokenType._in);\r\n  tsParseType();\r\n}\r\n\r\nfunction tsParseMappedType() {\r\n  expect(TokenType.braceL);\r\n  if (match(TokenType.plus) || match(TokenType.minus)) {\r\n    next();\r\n    expectContextual(ContextualKeyword._readonly);\r\n  } else {\r\n    eatContextual(ContextualKeyword._readonly);\r\n  }\r\n  expect(TokenType.bracketL);\r\n  tsParseMappedTypeParameter();\r\n  if (eatContextual(ContextualKeyword._as)) {\r\n    tsParseType();\r\n  }\r\n  expect(TokenType.bracketR);\r\n  if (match(TokenType.plus) || match(TokenType.minus)) {\r\n    next();\r\n    expect(TokenType.question);\r\n  } else {\r\n    eat(TokenType.question);\r\n  }\r\n  tsTryParseType();\r\n  semicolon();\r\n  expect(TokenType.braceR);\r\n}\r\n\r\nfunction tsParseTupleType() {\r\n  expect(TokenType.bracketL);\r\n  while (!eat(TokenType.bracketR) && !state.error) {\r\n    // Do not validate presence of either none or only labeled elements\r\n    tsParseTupleElementType();\r\n    eat(TokenType.comma);\r\n  }\r\n}\r\n\r\nfunction tsParseTupleElementType() {\r\n  // parses `...TsType[]`\r\n  if (eat(TokenType.ellipsis)) {\r\n    tsParseType();\r\n  } else {\r\n    // parses `TsType?`\r\n    tsParseType();\r\n    eat(TokenType.question);\r\n  }\r\n\r\n  // The type we parsed above was actually a label\r\n  if (eat(TokenType.colon)) {\r\n    // Labeled tuple types must affix the label with `...` or `?`, so no need to handle those here\r\n    tsParseType();\r\n  }\r\n}\r\n\r\nfunction tsParseParenthesizedType() {\r\n  expect(TokenType.parenL);\r\n  tsParseType();\r\n  expect(TokenType.parenR);\r\n}\r\n\r\nfunction tsParseTemplateLiteralType() {\r\n  // Finish `, read quasi\r\n  nextTemplateToken();\r\n  // Finish quasi, read ${\r\n  nextTemplateToken();\r\n  while (!match(TokenType.backQuote) && !state.error) {\r\n    expect(TokenType.dollarBraceL);\r\n    tsParseType();\r\n    // Finish }, read quasi\r\n    nextTemplateToken();\r\n    // Finish quasi, read either ${ or `\r\n    nextTemplateToken();\r\n  }\r\n  next();\r\n}\r\n\r\nvar FunctionType; (function (FunctionType) {\r\n  const TSFunctionType = 0; FunctionType[FunctionType[\"TSFunctionType\"] = TSFunctionType] = \"TSFunctionType\";\r\n  const TSConstructorType = TSFunctionType + 1; FunctionType[FunctionType[\"TSConstructorType\"] = TSConstructorType] = \"TSConstructorType\";\r\n  const TSAbstractConstructorType = TSConstructorType + 1; FunctionType[FunctionType[\"TSAbstractConstructorType\"] = TSAbstractConstructorType] = \"TSAbstractConstructorType\";\r\n})(FunctionType || (FunctionType = {}));\r\n\r\nfunction tsParseFunctionOrConstructorType(type) {\r\n  if (type === FunctionType.TSAbstractConstructorType) {\r\n    expectContextual(ContextualKeyword._abstract);\r\n  }\r\n  if (type === FunctionType.TSConstructorType || type === FunctionType.TSAbstractConstructorType) {\r\n    expect(TokenType._new);\r\n  }\r\n  const oldInDisallowConditionalTypesContext = state.inDisallowConditionalTypesContext;\r\n  state.inDisallowConditionalTypesContext = false;\r\n  tsFillSignature(TokenType.arrow);\r\n  state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\r\n}\r\n\r\nfunction tsParseNonArrayType() {\r\n  switch (state.type) {\r\n    case TokenType.name:\r\n      tsParseTypeReference();\r\n      return;\r\n    case TokenType._void:\r\n    case TokenType._null:\r\n      next();\r\n      return;\r\n    case TokenType.string:\r\n    case TokenType.num:\r\n    case TokenType.bigint:\r\n    case TokenType.decimal:\r\n    case TokenType._true:\r\n    case TokenType._false:\r\n      parseLiteral();\r\n      return;\r\n    case TokenType.minus:\r\n      next();\r\n      parseLiteral();\r\n      return;\r\n    case TokenType._this: {\r\n      tsParseThisTypeNode();\r\n      if (isContextual(ContextualKeyword._is) && !hasPrecedingLineBreak()) {\r\n        tsParseThisTypePredicate();\r\n      }\r\n      return;\r\n    }\r\n    case TokenType._typeof:\r\n      tsParseTypeQuery();\r\n      return;\r\n    case TokenType._import:\r\n      tsParseImportType();\r\n      return;\r\n    case TokenType.braceL:\r\n      if (tsLookaheadIsStartOfMappedType()) {\r\n        tsParseMappedType();\r\n      } else {\r\n        tsParseTypeLiteral();\r\n      }\r\n      return;\r\n    case TokenType.bracketL:\r\n      tsParseTupleType();\r\n      return;\r\n    case TokenType.parenL:\r\n      tsParseParenthesizedType();\r\n      return;\r\n    case TokenType.backQuote:\r\n      tsParseTemplateLiteralType();\r\n      return;\r\n    default:\r\n      if (state.type & TokenType.IS_KEYWORD) {\r\n        next();\r\n        state.tokens[state.tokens.length - 1].type = TokenType.name;\r\n        return;\r\n      }\r\n      break;\r\n  }\r\n\r\n  unexpected();\r\n}\r\n\r\nfunction tsParseArrayTypeOrHigher() {\r\n  tsParseNonArrayType();\r\n  while (!hasPrecedingLineBreak() && eat(TokenType.bracketL)) {\r\n    if (!eat(TokenType.bracketR)) {\r\n      // If we hit ] immediately, this is an array type, otherwise it's an indexed access type.\r\n      tsParseType();\r\n      expect(TokenType.bracketR);\r\n    }\r\n  }\r\n}\r\n\r\nfunction tsParseInferType() {\r\n  expectContextual(ContextualKeyword._infer);\r\n  parseIdentifier();\r\n  if (match(TokenType._extends)) {\r\n    // Infer type constraints introduce an ambiguity about whether the \"extends\"\r\n    // is a constraint for this infer type or is another conditional type.\r\n    const snapshot = state.snapshot();\r\n    expect(TokenType._extends);\r\n    const oldInDisallowConditionalTypesContext = state.inDisallowConditionalTypesContext;\r\n    state.inDisallowConditionalTypesContext = true;\r\n    tsParseType();\r\n    state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\r\n    if (state.error || (!state.inDisallowConditionalTypesContext && match(TokenType.question))) {\r\n      state.restoreFromSnapshot(snapshot);\r\n    }\r\n  }\r\n}\r\n\r\nfunction tsParseTypeOperatorOrHigher() {\r\n  if (\r\n    isContextual(ContextualKeyword._keyof) ||\r\n    isContextual(ContextualKeyword._unique) ||\r\n    isContextual(ContextualKeyword._readonly)\r\n  ) {\r\n    next();\r\n    tsParseTypeOperatorOrHigher();\r\n  } else if (isContextual(ContextualKeyword._infer)) {\r\n    tsParseInferType();\r\n  } else {\r\n    const oldInDisallowConditionalTypesContext = state.inDisallowConditionalTypesContext;\r\n    state.inDisallowConditionalTypesContext = false;\r\n    tsParseArrayTypeOrHigher();\r\n    state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\r\n  }\r\n}\r\n\r\nfunction tsParseIntersectionTypeOrHigher() {\r\n  eat(TokenType.bitwiseAND);\r\n  tsParseTypeOperatorOrHigher();\r\n  if (match(TokenType.bitwiseAND)) {\r\n    while (eat(TokenType.bitwiseAND)) {\r\n      tsParseTypeOperatorOrHigher();\r\n    }\r\n  }\r\n}\r\n\r\nfunction tsParseUnionTypeOrHigher() {\r\n  eat(TokenType.bitwiseOR);\r\n  tsParseIntersectionTypeOrHigher();\r\n  if (match(TokenType.bitwiseOR)) {\r\n    while (eat(TokenType.bitwiseOR)) {\r\n      tsParseIntersectionTypeOrHigher();\r\n    }\r\n  }\r\n}\r\n\r\nfunction tsIsStartOfFunctionType() {\r\n  if (match(TokenType.lessThan)) {\r\n    return true;\r\n  }\r\n  return match(TokenType.parenL) && tsLookaheadIsUnambiguouslyStartOfFunctionType();\r\n}\r\n\r\nfunction tsSkipParameterStart() {\r\n  if (match(TokenType.name) || match(TokenType._this)) {\r\n    next();\r\n    return true;\r\n  }\r\n  // If this is a possible array/object destructure, walk to the matching bracket/brace.\r\n  // The next token after will tell us definitively whether this is a function param.\r\n  if (match(TokenType.braceL) || match(TokenType.bracketL)) {\r\n    let depth = 1;\r\n    next();\r\n    while (depth > 0 && !state.error) {\r\n      if (match(TokenType.braceL) || match(TokenType.bracketL)) {\r\n        depth++;\r\n      } else if (match(TokenType.braceR) || match(TokenType.bracketR)) {\r\n        depth--;\r\n      }\r\n      next();\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction tsLookaheadIsUnambiguouslyStartOfFunctionType() {\r\n  const snapshot = state.snapshot();\r\n  const isUnambiguouslyStartOfFunctionType = tsIsUnambiguouslyStartOfFunctionType();\r\n  state.restoreFromSnapshot(snapshot);\r\n  return isUnambiguouslyStartOfFunctionType;\r\n}\r\n\r\nfunction tsIsUnambiguouslyStartOfFunctionType() {\r\n  next();\r\n  if (match(TokenType.parenR) || match(TokenType.ellipsis)) {\r\n    // ( )\r\n    // ( ...\r\n    return true;\r\n  }\r\n  if (tsSkipParameterStart()) {\r\n    if (match(TokenType.colon) || match(TokenType.comma) || match(TokenType.question) || match(TokenType.eq)) {\r\n      // ( xxx :\r\n      // ( xxx ,\r\n      // ( xxx ?\r\n      // ( xxx =\r\n      return true;\r\n    }\r\n    if (match(TokenType.parenR)) {\r\n      next();\r\n      if (match(TokenType.arrow)) {\r\n        // ( xxx ) =>\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction tsParseTypeOrTypePredicateAnnotation(returnToken) {\r\n  const oldIsType = pushTypeContext(0);\r\n  expect(returnToken);\r\n  const finishedReturn = tsParseTypePredicateOrAssertsPrefix();\r\n  if (!finishedReturn) {\r\n    tsParseType();\r\n  }\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\nfunction tsTryParseTypeOrTypePredicateAnnotation() {\r\n  if (match(TokenType.colon)) {\r\n    tsParseTypeOrTypePredicateAnnotation(TokenType.colon);\r\n  }\r\n}\r\n\r\nfunction tsTryParseTypeAnnotation() {\r\n  if (match(TokenType.colon)) {\r\n    tsParseTypeAnnotation();\r\n  }\r\n}\r\n\r\nfunction tsTryParseType() {\r\n  if (eat(TokenType.colon)) {\r\n    tsParseType();\r\n  }\r\n}\r\n\r\n/**\r\n * Detect a few special return syntax cases: `x is T`, `asserts x`, `asserts x is T`,\r\n * `asserts this is T`.\r\n *\r\n * Returns true if we parsed the return type, false if there's still a type to be parsed.\r\n */\r\nfunction tsParseTypePredicateOrAssertsPrefix() {\r\n  const snapshot = state.snapshot();\r\n  if (isContextual(ContextualKeyword._asserts)) {\r\n    // Normally this is `asserts x is T`, but at this point, it might be `asserts is T` (a user-\r\n    // defined type guard on the `asserts` variable) or just a type called `asserts`.\r\n    next();\r\n    if (eatContextual(ContextualKeyword._is)) {\r\n      // If we see `asserts is`, then this must be of the form `asserts is T`, since\r\n      // `asserts is is T` isn't valid.\r\n      tsParseType();\r\n      return true;\r\n    } else if (tsIsIdentifier() || match(TokenType._this)) {\r\n      next();\r\n      if (eatContextual(ContextualKeyword._is)) {\r\n        // If we see `is`, then this is `asserts x is T`. Otherwise, it's `asserts x`.\r\n        tsParseType();\r\n      }\r\n      return true;\r\n    } else {\r\n      // Regular type, so bail out and start type parsing from scratch.\r\n      state.restoreFromSnapshot(snapshot);\r\n      return false;\r\n    }\r\n  } else if (tsIsIdentifier() || match(TokenType._this)) {\r\n    // This is a regular identifier, which may or may not have \"is\" after it.\r\n    next();\r\n    if (isContextual(ContextualKeyword._is) && !hasPrecedingLineBreak()) {\r\n      next();\r\n      tsParseType();\r\n      return true;\r\n    } else {\r\n      // Regular type, so bail out and start type parsing from scratch.\r\n      state.restoreFromSnapshot(snapshot);\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction tsParseTypeAnnotation() {\r\n  const oldIsType = pushTypeContext(0);\r\n  expect(TokenType.colon);\r\n  tsParseType();\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\nfunction tsParseType() {\r\n  tsParseNonConditionalType();\r\n  if (state.inDisallowConditionalTypesContext || hasPrecedingLineBreak() || !eat(TokenType._extends)) {\r\n    return;\r\n  }\r\n  // extends type\r\n  const oldInDisallowConditionalTypesContext = state.inDisallowConditionalTypesContext;\r\n  state.inDisallowConditionalTypesContext = true;\r\n  tsParseNonConditionalType();\r\n  state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\r\n\r\n  expect(TokenType.question);\r\n  // true type\r\n  tsParseType();\r\n  expect(TokenType.colon);\r\n  // false type\r\n  tsParseType();\r\n}\r\n\r\nfunction isAbstractConstructorSignature() {\r\n  return isContextual(ContextualKeyword._abstract) && lookaheadType() === TokenType._new;\r\n}\r\n\r\nfunction tsParseNonConditionalType() {\r\n  if (tsIsStartOfFunctionType()) {\r\n    tsParseFunctionOrConstructorType(FunctionType.TSFunctionType);\r\n    return;\r\n  }\r\n  if (match(TokenType._new)) {\r\n    // As in `new () => Date`\r\n    tsParseFunctionOrConstructorType(FunctionType.TSConstructorType);\r\n    return;\r\n  } else if (isAbstractConstructorSignature()) {\r\n    // As in `abstract new () => Date`\r\n    tsParseFunctionOrConstructorType(FunctionType.TSAbstractConstructorType);\r\n    return;\r\n  }\r\n  tsParseUnionTypeOrHigher();\r\n}\r\n\r\nfunction tsParseTypeAssertion() {\r\n  const oldIsType = pushTypeContext(1);\r\n  tsParseType();\r\n  expect(TokenType.greaterThan);\r\n  popTypeContext(oldIsType);\r\n  parseMaybeUnary();\r\n}\r\n\r\nfunction tsTryParseJSXTypeArgument() {\r\n  if (eat(TokenType.jsxTagStart)) {\r\n    state.tokens[state.tokens.length - 1].type = TokenType.typeParameterStart;\r\n    const oldIsType = pushTypeContext(1);\r\n    while (!match(TokenType.greaterThan) && !state.error) {\r\n      tsParseType();\r\n      eat(TokenType.comma);\r\n    }\r\n    // Process >, but the one after needs to be parsed JSX-style.\r\n    nextJSXTagToken();\r\n    popTypeContext(oldIsType);\r\n  }\r\n}\r\n\r\nfunction tsParseHeritageClause() {\r\n  while (!match(TokenType.braceL) && !state.error) {\r\n    tsParseExpressionWithTypeArguments();\r\n    eat(TokenType.comma);\r\n  }\r\n}\r\n\r\nfunction tsParseExpressionWithTypeArguments() {\r\n  // Note: TS uses parseLeftHandSideExpressionOrHigher,\r\n  // then has grammar errors later if it's not an EntityName.\r\n  tsParseEntityName();\r\n  if (match(TokenType.lessThan)) {\r\n    tsParseTypeArguments();\r\n  }\r\n}\r\n\r\nfunction tsParseInterfaceDeclaration() {\r\n  parseBindingIdentifier(false);\r\n  tsTryParseTypeParameters();\r\n  if (eat(TokenType._extends)) {\r\n    tsParseHeritageClause();\r\n  }\r\n  tsParseObjectTypeMembers();\r\n}\r\n\r\nfunction tsParseTypeAliasDeclaration() {\r\n  parseBindingIdentifier(false);\r\n  tsTryParseTypeParameters();\r\n  expect(TokenType.eq);\r\n  tsParseType();\r\n  semicolon();\r\n}\r\n\r\nfunction tsParseEnumMember() {\r\n  // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\r\n  if (match(TokenType.string)) {\r\n    parseLiteral();\r\n  } else {\r\n    parseIdentifier();\r\n  }\r\n  if (eat(TokenType.eq)) {\r\n    const eqIndex = state.tokens.length - 1;\r\n    parseMaybeAssign();\r\n    state.tokens[eqIndex].rhsEndIndex = state.tokens.length;\r\n  }\r\n}\r\n\r\nfunction tsParseEnumDeclaration() {\r\n  parseBindingIdentifier(false);\r\n  expect(TokenType.braceL);\r\n  while (!eat(TokenType.braceR) && !state.error) {\r\n    tsParseEnumMember();\r\n    eat(TokenType.comma);\r\n  }\r\n}\r\n\r\nfunction tsParseModuleBlock() {\r\n  expect(TokenType.braceL);\r\n  parseBlockBody(/* end */ TokenType.braceR);\r\n}\r\n\r\nfunction tsParseModuleOrNamespaceDeclaration() {\r\n  parseBindingIdentifier(false);\r\n  if (eat(TokenType.dot)) {\r\n    tsParseModuleOrNamespaceDeclaration();\r\n  } else {\r\n    tsParseModuleBlock();\r\n  }\r\n}\r\n\r\nfunction tsParseAmbientExternalModuleDeclaration() {\r\n  if (isContextual(ContextualKeyword._global)) {\r\n    parseIdentifier();\r\n  } else if (match(TokenType.string)) {\r\n    parseExprAtom();\r\n  } else {\r\n    unexpected();\r\n  }\r\n\r\n  if (match(TokenType.braceL)) {\r\n    tsParseModuleBlock();\r\n  } else {\r\n    semicolon();\r\n  }\r\n}\r\n\r\nfunction tsParseImportEqualsDeclaration() {\r\n  parseImportedIdentifier();\r\n  expect(TokenType.eq);\r\n  tsParseModuleReference();\r\n  semicolon();\r\n}\r\n\r\nfunction tsIsExternalModuleReference() {\r\n  return isContextual(ContextualKeyword._require) && lookaheadType() === TokenType.parenL;\r\n}\r\n\r\nfunction tsParseModuleReference() {\r\n  if (tsIsExternalModuleReference()) {\r\n    tsParseExternalModuleReference();\r\n  } else {\r\n    tsParseEntityName();\r\n  }\r\n}\r\n\r\nfunction tsParseExternalModuleReference() {\r\n  expectContextual(ContextualKeyword._require);\r\n  expect(TokenType.parenL);\r\n  if (!match(TokenType.string)) {\r\n    unexpected();\r\n  }\r\n  parseLiteral();\r\n  expect(TokenType.parenR);\r\n}\r\n\r\n// Utilities\r\n\r\n// Returns true if a statement matched.\r\nfunction tsTryParseDeclare() {\r\n  if (isLineTerminator()) {\r\n    return false;\r\n  }\r\n  switch (state.type) {\r\n    case TokenType._function: {\r\n      const oldIsType = pushTypeContext(1);\r\n      next();\r\n      // We don't need to precisely get the function start here, since it's only used to mark\r\n      // the function as a type if it's bodiless, and it's already a type here.\r\n      const functionStart = state.start;\r\n      parseFunction(functionStart, /* isStatement */ true);\r\n      popTypeContext(oldIsType);\r\n      return true;\r\n    }\r\n    case TokenType._class: {\r\n      const oldIsType = pushTypeContext(1);\r\n      parseClass(/* isStatement */ true, /* optionalId */ false);\r\n      popTypeContext(oldIsType);\r\n      return true;\r\n    }\r\n    case TokenType._const: {\r\n      if (match(TokenType._const) && isLookaheadContextual(ContextualKeyword._enum)) {\r\n        const oldIsType = pushTypeContext(1);\r\n        // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\r\n        expect(TokenType._const);\r\n        expectContextual(ContextualKeyword._enum);\r\n        state.tokens[state.tokens.length - 1].type = TokenType._enum;\r\n        tsParseEnumDeclaration();\r\n        popTypeContext(oldIsType);\r\n        return true;\r\n      }\r\n    }\r\n    // falls through\r\n    case TokenType._var:\r\n    case TokenType._let: {\r\n      const oldIsType = pushTypeContext(1);\r\n      parseVarStatement(state.type !== TokenType._var);\r\n      popTypeContext(oldIsType);\r\n      return true;\r\n    }\r\n    case TokenType.name: {\r\n      const oldIsType = pushTypeContext(1);\r\n      const contextualKeyword = state.contextualKeyword;\r\n      let matched = false;\r\n      if (contextualKeyword === ContextualKeyword._global) {\r\n        tsParseAmbientExternalModuleDeclaration();\r\n        matched = true;\r\n      } else {\r\n        matched = tsParseDeclaration(contextualKeyword, /* isBeforeToken */ true);\r\n      }\r\n      popTypeContext(oldIsType);\r\n      return matched;\r\n    }\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\n// Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\r\n// Returns true if it matched a declaration.\r\nfunction tsTryParseExportDeclaration() {\r\n  return tsParseDeclaration(state.contextualKeyword, /* isBeforeToken */ true);\r\n}\r\n\r\n// Returns true if it matched a statement.\r\nfunction tsParseExpressionStatement(contextualKeyword) {\r\n  switch (contextualKeyword) {\r\n    case ContextualKeyword._declare: {\r\n      const declareTokenIndex = state.tokens.length - 1;\r\n      const matched = tsTryParseDeclare();\r\n      if (matched) {\r\n        state.tokens[declareTokenIndex].type = TokenType._declare;\r\n        return true;\r\n      }\r\n      break;\r\n    }\r\n    case ContextualKeyword._global:\r\n      // `global { }` (with no `declare`) may appear inside an ambient module declaration.\r\n      // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\r\n      if (match(TokenType.braceL)) {\r\n        tsParseModuleBlock();\r\n        return true;\r\n      }\r\n      break;\r\n\r\n    default:\r\n      return tsParseDeclaration(contextualKeyword, /* isBeforeToken */ false);\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Common code for parsing a declaration.\r\n *\r\n * isBeforeToken indicates that the current parser state is at the contextual\r\n * keyword (and that it is not yet emitted) rather than reading the token after\r\n * it. When isBeforeToken is true, we may be preceded by an `export` token and\r\n * should include that token in a type context we create, e.g. to handle\r\n * `export interface` or `export type`. (This is a bit of a hack and should be\r\n * cleaned up at some point.)\r\n *\r\n * Returns true if it matched a declaration.\r\n */\r\nfunction tsParseDeclaration(contextualKeyword, isBeforeToken) {\r\n  switch (contextualKeyword) {\r\n    case ContextualKeyword._abstract:\r\n      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType._class)) {\r\n        state.tokens[state.tokens.length - 1].type = TokenType._abstract;\r\n        parseClass(/* isStatement */ true, /* optionalId */ false);\r\n        return true;\r\n      }\r\n      break;\r\n\r\n    case ContextualKeyword._enum:\r\n      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType.name)) {\r\n        state.tokens[state.tokens.length - 1].type = TokenType._enum;\r\n        tsParseEnumDeclaration();\r\n        return true;\r\n      }\r\n      break;\r\n\r\n    case ContextualKeyword._interface:\r\n      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType.name)) {\r\n        // `next` is true in \"export\" and \"declare\" contexts, so we want to remove that token\r\n        // as well.\r\n        const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);\r\n        tsParseInterfaceDeclaration();\r\n        popTypeContext(oldIsType);\r\n        return true;\r\n      }\r\n      break;\r\n\r\n    case ContextualKeyword._module:\r\n      if (tsCheckLineTerminator(isBeforeToken)) {\r\n        if (match(TokenType.string)) {\r\n          const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);\r\n          tsParseAmbientExternalModuleDeclaration();\r\n          popTypeContext(oldIsType);\r\n          return true;\r\n        } else if (match(TokenType.name)) {\r\n          const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);\r\n          tsParseModuleOrNamespaceDeclaration();\r\n          popTypeContext(oldIsType);\r\n          return true;\r\n        }\r\n      }\r\n      break;\r\n\r\n    case ContextualKeyword._namespace:\r\n      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType.name)) {\r\n        const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);\r\n        tsParseModuleOrNamespaceDeclaration();\r\n        popTypeContext(oldIsType);\r\n        return true;\r\n      }\r\n      break;\r\n\r\n    case ContextualKeyword._type:\r\n      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType.name)) {\r\n        const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);\r\n        tsParseTypeAliasDeclaration();\r\n        popTypeContext(oldIsType);\r\n        return true;\r\n      }\r\n      break;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction tsCheckLineTerminator(isBeforeToken) {\r\n  if (isBeforeToken) {\r\n    // Babel checks hasFollowingLineBreak here and returns false, but this\r\n    // doesn't actually come up, e.g. `export interface` can never be on its own\r\n    // line in valid code.\r\n    next();\r\n    return true;\r\n  } else {\r\n    return !isLineTerminator();\r\n  }\r\n}\r\n\r\n// Returns true if there was a generic async arrow function.\r\nfunction tsTryParseGenericAsyncArrowFunction() {\r\n  const snapshot = state.snapshot();\r\n\r\n  tsParseTypeParameters();\r\n  parseFunctionParams();\r\n  tsTryParseTypeOrTypePredicateAnnotation();\r\n  expect(TokenType.arrow);\r\n\r\n  if (state.error) {\r\n    state.restoreFromSnapshot(snapshot);\r\n    return false;\r\n  }\r\n\r\n  parseFunctionBody(true);\r\n  return true;\r\n}\r\n\r\n/**\r\n * If necessary, hack the tokenizer state so that this bitshift was actually a\r\n * less-than token, then keep parsing. This should only be used in situations\r\n * where we restore from snapshot on error (which reverts this change) or\r\n * where bitshift would be illegal anyway (e.g. in a class \"extends\" clause).\r\n *\r\n * This hack is useful to handle situations like foo<<T>() => void>() where\r\n * there can legitimately be two open-angle-brackets in a row in TS.\r\n */\r\nfunction tsParseTypeArgumentsWithPossibleBitshift() {\r\n  if (state.type === TokenType.bitShiftL) {\r\n    state.pos -= 1;\r\n    finishToken(TokenType.lessThan);\r\n  }\r\n  tsParseTypeArguments();\r\n}\r\n\r\nfunction tsParseTypeArguments() {\r\n  const oldIsType = pushTypeContext(0);\r\n  expect(TokenType.lessThan);\r\n  while (!eat(TokenType.greaterThan) && !state.error) {\r\n    tsParseType();\r\n    eat(TokenType.comma);\r\n  }\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\nfunction tsIsDeclarationStart() {\r\n  if (match(TokenType.name)) {\r\n    switch (state.contextualKeyword) {\r\n      case ContextualKeyword._abstract:\r\n      case ContextualKeyword._declare:\r\n      case ContextualKeyword._enum:\r\n      case ContextualKeyword._interface:\r\n      case ContextualKeyword._module:\r\n      case ContextualKeyword._namespace:\r\n      case ContextualKeyword._type:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// ======================================================\r\n// OVERRIDES\r\n// ======================================================\r\n\r\nfunction tsParseFunctionBodyAndFinish(functionStart, funcContextId) {\r\n  // For arrow functions, `parseArrow` handles the return type itself.\r\n  if (match(TokenType.colon)) {\r\n    tsParseTypeOrTypePredicateAnnotation(TokenType.colon);\r\n  }\r\n\r\n  // The original code checked the node type to make sure this function type allows a missing\r\n  // body, but we skip that to avoid sending around the node type. We instead just use the\r\n  // allowExpressionBody boolean to make sure it's not an arrow function.\r\n  if (!match(TokenType.braceL) && isLineTerminator()) {\r\n    // Retroactively mark the function declaration as a type.\r\n    let i = state.tokens.length - 1;\r\n    while (\r\n      i >= 0 &&\r\n      (state.tokens[i].start >= functionStart ||\r\n        state.tokens[i].type === TokenType._default ||\r\n        state.tokens[i].type === TokenType._export)\r\n    ) {\r\n      state.tokens[i].isType = true;\r\n      i--;\r\n    }\r\n    return;\r\n  }\r\n\r\n  parseFunctionBody(false, funcContextId);\r\n}\r\n\r\nfunction tsParseSubscript(\r\n  startTokenIndex,\r\n  noCalls,\r\n  stopState,\r\n) {\r\n  if (!hasPrecedingLineBreak() && eat(TokenType.bang)) {\r\n    state.tokens[state.tokens.length - 1].type = TokenType.nonNullAssertion;\r\n    return;\r\n  }\r\n\r\n  if (match(TokenType.lessThan) || match(TokenType.bitShiftL)) {\r\n    // There are number of things we are going to \"maybe\" parse, like type arguments on\r\n    // tagged template expressions. If any of them fail, walk it back and continue.\r\n    const snapshot = state.snapshot();\r\n\r\n    if (!noCalls && atPossibleAsync()) {\r\n      // Almost certainly this is a generic async function `async <T>() => ...\r\n      // But it might be a call with a type argument `async<T>();`\r\n      const asyncArrowFn = tsTryParseGenericAsyncArrowFunction();\r\n      if (asyncArrowFn) {\r\n        return;\r\n      }\r\n    }\r\n    tsParseTypeArgumentsWithPossibleBitshift();\r\n    if (!noCalls && eat(TokenType.parenL)) {\r\n      // With f<T>(), the subscriptStartIndex marker is on the ( token.\r\n      state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\r\n      parseCallExpressionArguments();\r\n    } else if (match(TokenType.backQuote)) {\r\n      // Tagged template with a type argument.\r\n      parseTemplate();\r\n    } else if (\r\n      // The remaining possible case is an instantiation expression, e.g.\r\n      // Array<number> . Check for a few cases that would disqualify it and\r\n      // cause us to bail out.\r\n      // a<b>>c is not (a<b>)>c, but a<(b>>c)\r\n      state.type === TokenType.greaterThan ||\r\n      // a<b>c is (a<b)>c\r\n      (state.type !== TokenType.parenL &&\r\n        Boolean(state.type & TokenType.IS_EXPRESSION_START) &&\r\n        !hasPrecedingLineBreak())\r\n    ) {\r\n      // Bail out. We have something like a<b>c, which is not an expression with\r\n      // type arguments but an (a < b) > c comparison.\r\n      unexpected();\r\n    }\r\n\r\n    if (state.error) {\r\n      state.restoreFromSnapshot(snapshot);\r\n    } else {\r\n      return;\r\n    }\r\n  } else if (!noCalls && match(TokenType.questionDot) && lookaheadType() === TokenType.lessThan) {\r\n    // If we see f?.<, then this must be an optional call with a type argument.\r\n    next();\r\n    state.tokens[startTokenIndex].isOptionalChainStart = true;\r\n    // With f?.<T>(), the subscriptStartIndex marker is on the ?. token.\r\n    state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\r\n\r\n    tsParseTypeArguments();\r\n    expect(TokenType.parenL);\r\n    parseCallExpressionArguments();\r\n  }\r\n  baseParseSubscript(startTokenIndex, noCalls, stopState);\r\n}\r\n\r\nfunction tsTryParseExport() {\r\n  if (eat(TokenType._import)) {\r\n    // One of these cases:\r\n    // export import A = B;\r\n    // export import type A = require(\"A\");\r\n    if (isContextual(ContextualKeyword._type) && lookaheadType() !== TokenType.eq) {\r\n      // Eat a `type` token, unless it's actually an identifier name.\r\n      expectContextual(ContextualKeyword._type);\r\n    }\r\n    tsParseImportEqualsDeclaration();\r\n    return true;\r\n  } else if (eat(TokenType.eq)) {\r\n    // `export = x;`\r\n    parseExpression();\r\n    semicolon();\r\n    return true;\r\n  } else if (eatContextual(ContextualKeyword._as)) {\r\n    // `export as namespace A;`\r\n    // See `parseNamespaceExportDeclaration` in TypeScript's own parser\r\n    expectContextual(ContextualKeyword._namespace);\r\n    parseIdentifier();\r\n    semicolon();\r\n    return true;\r\n  } else {\r\n    if (isContextual(ContextualKeyword._type)) {\r\n      const nextType = lookaheadType();\r\n      // export type {foo} from 'a';\r\n      // export type * from 'a';'\r\n      // export type * as ns from 'a';'\r\n      if (nextType === TokenType.braceL || nextType === TokenType.star) {\r\n        next();\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a TS import specifier, which may be prefixed with \"type\" and may be of\r\n * the form `foo as bar`.\r\n *\r\n * The number of identifier-like tokens we see happens to be enough to uniquely\r\n * identify the form, so simply count the number of identifiers rather than\r\n * matching the words `type` or `as`. This is particularly important because\r\n * `type` and `as` could each actually be plain identifiers rather than\r\n * keywords.\r\n */\r\nfunction tsParseImportSpecifier() {\r\n  parseIdentifier();\r\n  if (match(TokenType.comma) || match(TokenType.braceR)) {\r\n    // import {foo}\r\n    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;\r\n    return;\r\n  }\r\n  parseIdentifier();\r\n  if (match(TokenType.comma) || match(TokenType.braceR)) {\r\n    // import {type foo}\r\n    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;\r\n    state.tokens[state.tokens.length - 2].isType = true;\r\n    state.tokens[state.tokens.length - 1].isType = true;\r\n    return;\r\n  }\r\n  parseIdentifier();\r\n  if (match(TokenType.comma) || match(TokenType.braceR)) {\r\n    // import {foo as bar}\r\n    state.tokens[state.tokens.length - 3].identifierRole = IdentifierRole.ImportAccess;\r\n    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;\r\n    return;\r\n  }\r\n  parseIdentifier();\r\n  // import {type foo as bar}\r\n  state.tokens[state.tokens.length - 3].identifierRole = IdentifierRole.ImportAccess;\r\n  state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;\r\n  state.tokens[state.tokens.length - 4].isType = true;\r\n  state.tokens[state.tokens.length - 3].isType = true;\r\n  state.tokens[state.tokens.length - 2].isType = true;\r\n  state.tokens[state.tokens.length - 1].isType = true;\r\n}\r\n\r\n/**\r\n * Just like named import specifiers, export specifiers can have from 1 to 4\r\n * tokens, inclusive, and the number of tokens determines the role of each token.\r\n */\r\nfunction tsParseExportSpecifier() {\r\n  parseIdentifier();\r\n  if (match(TokenType.comma) || match(TokenType.braceR)) {\r\n    // export {foo}\r\n    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ExportAccess;\r\n    return;\r\n  }\r\n  parseIdentifier();\r\n  if (match(TokenType.comma) || match(TokenType.braceR)) {\r\n    // export {type foo}\r\n    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ExportAccess;\r\n    state.tokens[state.tokens.length - 2].isType = true;\r\n    state.tokens[state.tokens.length - 1].isType = true;\r\n    return;\r\n  }\r\n  parseIdentifier();\r\n  if (match(TokenType.comma) || match(TokenType.braceR)) {\r\n    // export {foo as bar}\r\n    state.tokens[state.tokens.length - 3].identifierRole = IdentifierRole.ExportAccess;\r\n    return;\r\n  }\r\n  parseIdentifier();\r\n  // export {type foo as bar}\r\n  state.tokens[state.tokens.length - 3].identifierRole = IdentifierRole.ExportAccess;\r\n  state.tokens[state.tokens.length - 4].isType = true;\r\n  state.tokens[state.tokens.length - 3].isType = true;\r\n  state.tokens[state.tokens.length - 2].isType = true;\r\n  state.tokens[state.tokens.length - 1].isType = true;\r\n}\r\n\r\nfunction tsTryParseExportDefaultExpression() {\r\n  if (isContextual(ContextualKeyword._abstract) && lookaheadType() === TokenType._class) {\r\n    state.type = TokenType._abstract;\r\n    next(); // Skip \"abstract\"\r\n    parseClass(true, true);\r\n    return true;\r\n  }\r\n  if (isContextual(ContextualKeyword._interface)) {\r\n    // Make sure \"export default\" are considered type tokens so the whole thing is removed.\r\n    const oldIsType = pushTypeContext(2);\r\n    tsParseDeclaration(ContextualKeyword._interface, true);\r\n    popTypeContext(oldIsType);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction tsTryParseStatementContent() {\r\n  if (state.type === TokenType._const) {\r\n    const ahead = lookaheadTypeAndKeyword();\r\n    if (ahead.type === TokenType.name && ahead.contextualKeyword === ContextualKeyword._enum) {\r\n      expect(TokenType._const);\r\n      expectContextual(ContextualKeyword._enum);\r\n      state.tokens[state.tokens.length - 1].type = TokenType._enum;\r\n      tsParseEnumDeclaration();\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction tsTryParseClassMemberWithIsStatic(isStatic) {\r\n  const memberStartIndexAfterStatic = state.tokens.length;\r\n  tsParseModifiers([\r\n    ContextualKeyword._abstract,\r\n    ContextualKeyword._readonly,\r\n    ContextualKeyword._declare,\r\n    ContextualKeyword._static,\r\n    ContextualKeyword._override,\r\n  ]);\r\n\r\n  const modifiersEndIndex = state.tokens.length;\r\n  const found = tsTryParseIndexSignature();\r\n  if (found) {\r\n    // Index signatures are type declarations, so set the modifier tokens as\r\n    // type tokens. Most tokens could be assumed to be type tokens, but `static`\r\n    // is ambiguous unless we set it explicitly here.\r\n    const memberStartIndex = isStatic\r\n      ? memberStartIndexAfterStatic - 1\r\n      : memberStartIndexAfterStatic;\r\n    for (let i = memberStartIndex; i < modifiersEndIndex; i++) {\r\n      state.tokens[i].isType = true;\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// Note: The reason we do this in `parseIdentifierStatement` and not `parseStatement`\r\n// is that e.g. `type()` is valid JS, so we must try parsing that first.\r\n// If it's really a type, we will parse `type` as the statement, and can correct it here\r\n// by parsing the rest.\r\nfunction tsParseIdentifierStatement(contextualKeyword) {\r\n  const matched = tsParseExpressionStatement(contextualKeyword);\r\n  if (!matched) {\r\n    semicolon();\r\n  }\r\n}\r\n\r\nfunction tsParseExportDeclaration() {\r\n  // \"export declare\" is equivalent to just \"export\".\r\n  const isDeclare = eatContextual(ContextualKeyword._declare);\r\n  if (isDeclare) {\r\n    state.tokens[state.tokens.length - 1].type = TokenType._declare;\r\n  }\r\n\r\n  let matchedDeclaration = false;\r\n  if (match(TokenType.name)) {\r\n    if (isDeclare) {\r\n      const oldIsType = pushTypeContext(2);\r\n      matchedDeclaration = tsTryParseExportDeclaration();\r\n      popTypeContext(oldIsType);\r\n    } else {\r\n      matchedDeclaration = tsTryParseExportDeclaration();\r\n    }\r\n  }\r\n  if (!matchedDeclaration) {\r\n    if (isDeclare) {\r\n      const oldIsType = pushTypeContext(2);\r\n      parseStatement(true);\r\n      popTypeContext(oldIsType);\r\n    } else {\r\n      parseStatement(true);\r\n    }\r\n  }\r\n}\r\n\r\nfunction tsAfterParseClassSuper(hasSuper) {\r\n  if (hasSuper && (match(TokenType.lessThan) || match(TokenType.bitShiftL))) {\r\n    tsParseTypeArgumentsWithPossibleBitshift();\r\n  }\r\n  if (eatContextual(ContextualKeyword._implements)) {\r\n    state.tokens[state.tokens.length - 1].type = TokenType._implements;\r\n    const oldIsType = pushTypeContext(1);\r\n    tsParseHeritageClause();\r\n    popTypeContext(oldIsType);\r\n  }\r\n}\r\n\r\nfunction tsStartParseObjPropValue() {\r\n  tsTryParseTypeParameters();\r\n}\r\n\r\nfunction tsStartParseFunctionParams() {\r\n  tsTryParseTypeParameters();\r\n}\r\n\r\n// `let x: number;`\r\nfunction tsAfterParseVarHead() {\r\n  const oldIsType = pushTypeContext(0);\r\n  if (!hasPrecedingLineBreak()) {\r\n    eat(TokenType.bang);\r\n  }\r\n  tsTryParseTypeAnnotation();\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\n// parse the return type of an async arrow function - let foo = (async (): number => {});\r\nfunction tsStartParseAsyncArrowFromCallExpression() {\r\n  if (match(TokenType.colon)) {\r\n    tsParseTypeAnnotation();\r\n  }\r\n}\r\n\r\n// Returns true if the expression was an arrow function.\r\nfunction tsParseMaybeAssign(noIn, isWithinParens) {\r\n  // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\r\n  if (isJSXEnabled) {\r\n    return tsParseMaybeAssignWithJSX(noIn, isWithinParens);\r\n  } else {\r\n    return tsParseMaybeAssignWithoutJSX(noIn, isWithinParens);\r\n  }\r\n}\r\n\r\nfunction tsParseMaybeAssignWithJSX(noIn, isWithinParens) {\r\n  if (!match(TokenType.lessThan)) {\r\n    return baseParseMaybeAssign(noIn, isWithinParens);\r\n  }\r\n\r\n  // Prefer to parse JSX if possible. But may be an arrow fn.\r\n  const snapshot = state.snapshot();\r\n  let wasArrow = baseParseMaybeAssign(noIn, isWithinParens);\r\n  if (state.error) {\r\n    state.restoreFromSnapshot(snapshot);\r\n  } else {\r\n    return wasArrow;\r\n  }\r\n\r\n  // Otherwise, try as type-parameterized arrow function.\r\n  state.type = TokenType.typeParameterStart;\r\n  // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\r\n  tsParseTypeParameters();\r\n  wasArrow = baseParseMaybeAssign(noIn, isWithinParens);\r\n  if (!wasArrow) {\r\n    unexpected();\r\n  }\r\n\r\n  return wasArrow;\r\n}\r\n\r\nfunction tsParseMaybeAssignWithoutJSX(noIn, isWithinParens) {\r\n  if (!match(TokenType.lessThan)) {\r\n    return baseParseMaybeAssign(noIn, isWithinParens);\r\n  }\r\n\r\n  const snapshot = state.snapshot();\r\n  // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\r\n  tsParseTypeParameters();\r\n  const wasArrow = baseParseMaybeAssign(noIn, isWithinParens);\r\n  if (!wasArrow) {\r\n    unexpected();\r\n  }\r\n  if (state.error) {\r\n    state.restoreFromSnapshot(snapshot);\r\n  } else {\r\n    return wasArrow;\r\n  }\r\n\r\n  // Try parsing a type cast instead of an arrow function.\r\n  // This will start with a type assertion (via parseMaybeUnary).\r\n  // But don't directly call `tsParseTypeAssertion` because we want to handle any binary after it.\r\n  return baseParseMaybeAssign(noIn, isWithinParens);\r\n}\r\n\r\nfunction tsParseArrow() {\r\n  if (match(TokenType.colon)) {\r\n    // This is different from how the TS parser does it.\r\n    // TS uses lookahead. Babylon parses it as a parenthesized expression and converts.\r\n    const snapshot = state.snapshot();\r\n\r\n    tsParseTypeOrTypePredicateAnnotation(TokenType.colon);\r\n    if (canInsertSemicolon()) unexpected();\r\n    if (!match(TokenType.arrow)) unexpected();\r\n\r\n    if (state.error) {\r\n      state.restoreFromSnapshot(snapshot);\r\n    }\r\n  }\r\n  return eat(TokenType.arrow);\r\n}\r\n\r\n// Allow type annotations inside of a parameter list.\r\nfunction tsParseAssignableListItemTypes() {\r\n  const oldIsType = pushTypeContext(0);\r\n  eat(TokenType.question);\r\n  tsTryParseTypeAnnotation();\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\nfunction tsParseMaybeDecoratorArguments() {\r\n  if (match(TokenType.lessThan) || match(TokenType.bitShiftL)) {\r\n    tsParseTypeArgumentsWithPossibleBitshift();\r\n  }\r\n  baseParseMaybeDecoratorArguments();\r\n}\r\n\r\n/**\r\n * Read token with JSX contents.\r\n *\r\n * In addition to detecting jsxTagStart and also regular tokens that might be\r\n * part of an expression, this code detects the start and end of text ranges\r\n * within JSX children. In order to properly count the number of children, we\r\n * distinguish jsxText from jsxEmptyText, which is a text range that simplifies\r\n * to the empty string after JSX whitespace trimming.\r\n *\r\n * It turns out that a JSX text range will simplify to the empty string if and\r\n * only if both of these conditions hold:\r\n * - The range consists entirely of whitespace characters (only counting space,\r\n *   tab, \\r, and \\n).\r\n * - The range has at least one newline.\r\n * This can be proven by analyzing any implementation of whitespace trimming,\r\n * e.g. formatJSXTextLiteral in Sucrase or cleanJSXElementLiteralChild in Babel.\r\n */\r\nfunction jsxReadToken() {\r\n  let sawNewline = false;\r\n  let sawNonWhitespace = false;\r\n  while (true) {\r\n    if (state.pos >= input.length) {\r\n      unexpected(\"Unterminated JSX contents\");\r\n      return;\r\n    }\r\n\r\n    const ch = input.charCodeAt(state.pos);\r\n    if (ch === charCodes.lessThan || ch === charCodes.leftCurlyBrace) {\r\n      if (state.pos === state.start) {\r\n        if (ch === charCodes.lessThan) {\r\n          state.pos++;\r\n          finishToken(TokenType.jsxTagStart);\r\n          return;\r\n        }\r\n        getTokenFromCode(ch);\r\n        return;\r\n      }\r\n      if (sawNewline && !sawNonWhitespace) {\r\n        finishToken(TokenType.jsxEmptyText);\r\n      } else {\r\n        finishToken(TokenType.jsxText);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // This is part of JSX text.\r\n    if (ch === charCodes.lineFeed) {\r\n      sawNewline = true;\r\n    } else if (ch !== charCodes.space && ch !== charCodes.carriageReturn && ch !== charCodes.tab) {\r\n      sawNonWhitespace = true;\r\n    }\r\n    state.pos++;\r\n  }\r\n}\r\n\r\nfunction jsxReadString(quote) {\r\n  state.pos++;\r\n  for (;;) {\r\n    if (state.pos >= input.length) {\r\n      unexpected(\"Unterminated string constant\");\r\n      return;\r\n    }\r\n\r\n    const ch = input.charCodeAt(state.pos);\r\n    if (ch === quote) {\r\n      state.pos++;\r\n      break;\r\n    }\r\n    state.pos++;\r\n  }\r\n  finishToken(TokenType.string);\r\n}\r\n\r\n// Read a JSX identifier (valid tag or attribute name).\r\n//\r\n// Optimized version since JSX identifiers can't contain\r\n// escape characters and so can be read as single slice.\r\n// Also assumes that first character was already checked\r\n// by isIdentifierStart in readToken.\r\n\r\nfunction jsxReadWord() {\r\n  let ch;\r\n  do {\r\n    if (state.pos > input.length) {\r\n      unexpected(\"Unexpectedly reached the end of input.\");\r\n      return;\r\n    }\r\n    ch = input.charCodeAt(++state.pos);\r\n  } while (IS_IDENTIFIER_CHAR[ch] || ch === charCodes.dash);\r\n  finishToken(TokenType.jsxName);\r\n}\r\n\r\n// Parse next token as JSX identifier\r\nfunction jsxParseIdentifier() {\r\n  nextJSXTagToken();\r\n}\r\n\r\n// Parse namespaced identifier.\r\nfunction jsxParseNamespacedName(identifierRole) {\r\n  jsxParseIdentifier();\r\n  if (!eat(TokenType.colon)) {\r\n    // Plain identifier, so this is an access.\r\n    state.tokens[state.tokens.length - 1].identifierRole = identifierRole;\r\n    return;\r\n  }\r\n  // Process the second half of the namespaced name.\r\n  jsxParseIdentifier();\r\n}\r\n\r\n// Parses element name in any form - namespaced, member\r\n// or single identifier.\r\nfunction jsxParseElementName() {\r\n  const firstTokenIndex = state.tokens.length;\r\n  jsxParseNamespacedName(IdentifierRole.Access);\r\n  let hadDot = false;\r\n  while (match(TokenType.dot)) {\r\n    hadDot = true;\r\n    nextJSXTagToken();\r\n    jsxParseIdentifier();\r\n  }\r\n  // For tags like <div> with a lowercase letter and no dots, the name is\r\n  // actually *not* an identifier access, since it's referring to a built-in\r\n  // tag name. Remove the identifier role in this case so that it's not\r\n  // accidentally transformed by the imports transform when preserving JSX.\r\n  if (!hadDot) {\r\n    const firstToken = state.tokens[firstTokenIndex];\r\n    const firstChar = input.charCodeAt(firstToken.start);\r\n    if (firstChar >= charCodes.lowercaseA && firstChar <= charCodes.lowercaseZ) {\r\n      firstToken.identifierRole = null;\r\n    }\r\n  }\r\n}\r\n\r\n// Parses any type of JSX attribute value.\r\nfunction jsxParseAttributeValue() {\r\n  switch (state.type) {\r\n    case TokenType.braceL:\r\n      next();\r\n      parseExpression();\r\n      nextJSXTagToken();\r\n      return;\r\n\r\n    case TokenType.jsxTagStart:\r\n      jsxParseElement();\r\n      nextJSXTagToken();\r\n      return;\r\n\r\n    case TokenType.string:\r\n      nextJSXTagToken();\r\n      return;\r\n\r\n    default:\r\n      unexpected(\"JSX value should be either an expression or a quoted JSX text\");\r\n  }\r\n}\r\n\r\n// Parse JSX spread child, after already processing the {\r\n// Does not parse the closing }\r\nfunction jsxParseSpreadChild() {\r\n  expect(TokenType.ellipsis);\r\n  parseExpression();\r\n}\r\n\r\n// Parses JSX opening tag starting after \"<\".\r\n// Returns true if the tag was self-closing.\r\n// Does not parse the last token.\r\nfunction jsxParseOpeningElement(initialTokenIndex) {\r\n  if (match(TokenType.jsxTagEnd)) {\r\n    // This is an open-fragment.\r\n    return false;\r\n  }\r\n  jsxParseElementName();\r\n  if (isTypeScriptEnabled) {\r\n    tsTryParseJSXTypeArgument();\r\n  }\r\n  let hasSeenPropSpread = false;\r\n  while (!match(TokenType.slash) && !match(TokenType.jsxTagEnd) && !state.error) {\r\n    if (eat(TokenType.braceL)) {\r\n      hasSeenPropSpread = true;\r\n      expect(TokenType.ellipsis);\r\n      parseMaybeAssign();\r\n      // }\r\n      nextJSXTagToken();\r\n      continue;\r\n    }\r\n    if (\r\n      hasSeenPropSpread &&\r\n      state.end - state.start === 3 &&\r\n      input.charCodeAt(state.start) === charCodes.lowercaseK &&\r\n      input.charCodeAt(state.start + 1) === charCodes.lowercaseE &&\r\n      input.charCodeAt(state.start + 2) === charCodes.lowercaseY\r\n    ) {\r\n      state.tokens[initialTokenIndex].jsxRole = JSXRole.KeyAfterPropSpread;\r\n    }\r\n    jsxParseNamespacedName(IdentifierRole.ObjectKey);\r\n    if (match(TokenType.eq)) {\r\n      nextJSXTagToken();\r\n      jsxParseAttributeValue();\r\n    }\r\n  }\r\n  const isSelfClosing = match(TokenType.slash);\r\n  if (isSelfClosing) {\r\n    // /\r\n    nextJSXTagToken();\r\n  }\r\n  return isSelfClosing;\r\n}\r\n\r\n// Parses JSX closing tag starting after \"</\".\r\n// Does not parse the last token.\r\nfunction jsxParseClosingElement() {\r\n  if (match(TokenType.jsxTagEnd)) {\r\n    // Fragment syntax, so we immediately have a tag end.\r\n    return;\r\n  }\r\n  jsxParseElementName();\r\n}\r\n\r\n// Parses entire JSX element, including its opening tag\r\n// (starting after \"<\"), attributes, contents and closing tag.\r\n// Does not parse the last token.\r\nfunction jsxParseElementAt() {\r\n  const initialTokenIndex = state.tokens.length - 1;\r\n  state.tokens[initialTokenIndex].jsxRole = JSXRole.NoChildren;\r\n  let numExplicitChildren = 0;\r\n  const isSelfClosing = jsxParseOpeningElement(initialTokenIndex);\r\n  if (!isSelfClosing) {\r\n    nextJSXExprToken();\r\n    while (true) {\r\n      switch (state.type) {\r\n        case TokenType.jsxTagStart:\r\n          nextJSXTagToken();\r\n          if (match(TokenType.slash)) {\r\n            nextJSXTagToken();\r\n            jsxParseClosingElement();\r\n            // Key after prop spread takes precedence over number of children,\r\n            // since it means we switch to createElement, which doesn't care\r\n            // about number of children.\r\n            if (state.tokens[initialTokenIndex].jsxRole !== JSXRole.KeyAfterPropSpread) {\r\n              if (numExplicitChildren === 1) {\r\n                state.tokens[initialTokenIndex].jsxRole = JSXRole.OneChild;\r\n              } else if (numExplicitChildren > 1) {\r\n                state.tokens[initialTokenIndex].jsxRole = JSXRole.StaticChildren;\r\n              }\r\n            }\r\n            return;\r\n          }\r\n          numExplicitChildren++;\r\n          jsxParseElementAt();\r\n          nextJSXExprToken();\r\n          break;\r\n\r\n        case TokenType.jsxText:\r\n          numExplicitChildren++;\r\n          nextJSXExprToken();\r\n          break;\r\n\r\n        case TokenType.jsxEmptyText:\r\n          nextJSXExprToken();\r\n          break;\r\n\r\n        case TokenType.braceL:\r\n          next();\r\n          if (match(TokenType.ellipsis)) {\r\n            jsxParseSpreadChild();\r\n            nextJSXExprToken();\r\n            // Spread children are a mechanism to explicitly mark children as\r\n            // static, so count it as 2 children to satisfy the \"more than one\r\n            // child\" condition.\r\n            numExplicitChildren += 2;\r\n          } else {\r\n            // If we see {}, this is an empty pseudo-expression that doesn't\r\n            // count as a child.\r\n            if (!match(TokenType.braceR)) {\r\n              numExplicitChildren++;\r\n              parseExpression();\r\n            }\r\n            nextJSXExprToken();\r\n          }\r\n\r\n          break;\r\n\r\n        // istanbul ignore next - should never happen\r\n        default:\r\n          unexpected();\r\n          return;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Parses entire JSX element from current position.\r\n// Does not parse the last token.\r\nfunction jsxParseElement() {\r\n  nextJSXTagToken();\r\n  jsxParseElementAt();\r\n}\r\n\r\n// ==================================\r\n// Overrides\r\n// ==================================\r\n\r\nfunction nextJSXTagToken() {\r\n  state.tokens.push(new Token());\r\n  skipSpace();\r\n  state.start = state.pos;\r\n  const code = input.charCodeAt(state.pos);\r\n\r\n  if (IS_IDENTIFIER_START[code]) {\r\n    jsxReadWord();\r\n  } else if (code === charCodes.quotationMark || code === charCodes.apostrophe) {\r\n    jsxReadString(code);\r\n  } else {\r\n    // The following tokens are just one character each.\r\n    ++state.pos;\r\n    switch (code) {\r\n      case charCodes.greaterThan:\r\n        finishToken(TokenType.jsxTagEnd);\r\n        break;\r\n      case charCodes.lessThan:\r\n        finishToken(TokenType.jsxTagStart);\r\n        break;\r\n      case charCodes.slash:\r\n        finishToken(TokenType.slash);\r\n        break;\r\n      case charCodes.equalsTo:\r\n        finishToken(TokenType.eq);\r\n        break;\r\n      case charCodes.leftCurlyBrace:\r\n        finishToken(TokenType.braceL);\r\n        break;\r\n      case charCodes.dot:\r\n        finishToken(TokenType.dot);\r\n        break;\r\n      case charCodes.colon:\r\n        finishToken(TokenType.colon);\r\n        break;\r\n      default:\r\n        unexpected();\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextJSXExprToken() {\r\n  state.tokens.push(new Token());\r\n  state.start = state.pos;\r\n  jsxReadToken();\r\n}\r\n\r\n/**\r\n * Common parser code for TypeScript and Flow.\r\n */\r\n\r\n// An apparent conditional expression could actually be an optional parameter in an arrow function.\r\nfunction typedParseConditional(noIn) {\r\n  // If we see ?:, this can't possibly be a valid conditional. typedParseParenItem will be called\r\n  // later to finish off the arrow parameter. We also need to handle bare ? tokens for optional\r\n  // parameters without type annotations, i.e. ?, and ?) .\r\n  if (match(TokenType.question)) {\r\n    const nextType = lookaheadType();\r\n    if (nextType === TokenType.colon || nextType === TokenType.comma || nextType === TokenType.parenR) {\r\n      return;\r\n    }\r\n  }\r\n  baseParseConditional(noIn);\r\n}\r\n\r\n// Note: These \"type casts\" are *not* valid TS expressions.\r\n// But we parse them here and change them when completing the arrow function.\r\nfunction typedParseParenItem() {\r\n  eatTypeToken(TokenType.question);\r\n  if (match(TokenType.colon)) {\r\n    if (isTypeScriptEnabled) {\r\n      tsParseTypeAnnotation();\r\n    } else if (isFlowEnabled) {\r\n      flowParseTypeAnnotation();\r\n    }\r\n  }\r\n}\r\n\r\n/* eslint max-len: 0 */\r\n\r\n\r\nclass StopState {\r\n  \r\n  constructor(stop) {\r\n    this.stop = stop;\r\n  }\r\n}\r\n\r\n// ### Expression parsing\r\n\r\n// These nest, from the most general expression type at the top to\r\n// 'atomic', nondivisible expression types at the bottom. Most of\r\n// the functions will simply let the function (s) below them parse,\r\n// and, *if* the syntactic construct they handle is present, wrap\r\n// the AST node that the inner parser gave them in another node.\r\nfunction parseExpression(noIn = false) {\r\n  parseMaybeAssign(noIn);\r\n  if (match(TokenType.comma)) {\r\n    while (eat(TokenType.comma)) {\r\n      parseMaybeAssign(noIn);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * noIn is used when parsing a for loop so that we don't interpret a following \"in\" as the binary\r\n * operatior.\r\n * isWithinParens is used to indicate that we're parsing something that might be a comma expression\r\n * or might be an arrow function or might be a Flow type assertion (which requires explicit parens).\r\n * In these cases, we should allow : and ?: after the initial \"left\" part.\r\n */\r\nfunction parseMaybeAssign(noIn = false, isWithinParens = false) {\r\n  if (isTypeScriptEnabled) {\r\n    return tsParseMaybeAssign(noIn, isWithinParens);\r\n  } else if (isFlowEnabled) {\r\n    return flowParseMaybeAssign(noIn, isWithinParens);\r\n  } else {\r\n    return baseParseMaybeAssign(noIn, isWithinParens);\r\n  }\r\n}\r\n\r\n// Parse an assignment expression. This includes applications of\r\n// operators like `+=`.\r\n// Returns true if the expression was an arrow function.\r\nfunction baseParseMaybeAssign(noIn, isWithinParens) {\r\n  if (match(TokenType._yield)) {\r\n    parseYield();\r\n    return false;\r\n  }\r\n\r\n  if (match(TokenType.parenL) || match(TokenType.name) || match(TokenType._yield)) {\r\n    state.potentialArrowAt = state.start;\r\n  }\r\n\r\n  const wasArrow = parseMaybeConditional(noIn);\r\n  if (isWithinParens) {\r\n    parseParenItem();\r\n  }\r\n  if (state.type & TokenType.IS_ASSIGN) {\r\n    next();\r\n    parseMaybeAssign(noIn);\r\n    return false;\r\n  }\r\n  return wasArrow;\r\n}\r\n\r\n// Parse a ternary conditional (`?:`) operator.\r\n// Returns true if the expression was an arrow function.\r\nfunction parseMaybeConditional(noIn) {\r\n  const wasArrow = parseExprOps(noIn);\r\n  if (wasArrow) {\r\n    return true;\r\n  }\r\n  parseConditional(noIn);\r\n  return false;\r\n}\r\n\r\nfunction parseConditional(noIn) {\r\n  if (isTypeScriptEnabled || isFlowEnabled) {\r\n    typedParseConditional(noIn);\r\n  } else {\r\n    baseParseConditional(noIn);\r\n  }\r\n}\r\n\r\nfunction baseParseConditional(noIn) {\r\n  if (eat(TokenType.question)) {\r\n    parseMaybeAssign();\r\n    expect(TokenType.colon);\r\n    parseMaybeAssign(noIn);\r\n  }\r\n}\r\n\r\n// Start the precedence parser.\r\n// Returns true if this was an arrow function\r\nfunction parseExprOps(noIn) {\r\n  const startTokenIndex = state.tokens.length;\r\n  const wasArrow = parseMaybeUnary();\r\n  if (wasArrow) {\r\n    return true;\r\n  }\r\n  parseExprOp(startTokenIndex, -1, noIn);\r\n  return false;\r\n}\r\n\r\n// Parse binary operators with the operator precedence parsing\r\n// algorithm. `left` is the left-hand side of the operator.\r\n// `minPrec` provides context that allows the function to stop and\r\n// defer further parser to one of its callers when it encounters an\r\n// operator that has a lower precedence than the set it is parsing.\r\nfunction parseExprOp(startTokenIndex, minPrec, noIn) {\r\n  if (\r\n    isTypeScriptEnabled &&\r\n    (TokenType._in & TokenType.PRECEDENCE_MASK) > minPrec &&\r\n    !hasPrecedingLineBreak() &&\r\n    (eatContextual(ContextualKeyword._as) || eatContextual(ContextualKeyword._satisfies))\r\n  ) {\r\n    const oldIsType = pushTypeContext(1);\r\n    tsParseType();\r\n    popTypeContext(oldIsType);\r\n    rescan_gt();\r\n    parseExprOp(startTokenIndex, minPrec, noIn);\r\n    return;\r\n  }\r\n\r\n  const prec = state.type & TokenType.PRECEDENCE_MASK;\r\n  if (prec > 0 && (!noIn || !match(TokenType._in))) {\r\n    if (prec > minPrec) {\r\n      const op = state.type;\r\n      next();\r\n      if (op === TokenType.nullishCoalescing) {\r\n        state.tokens[state.tokens.length - 1].nullishStartIndex = startTokenIndex;\r\n      }\r\n\r\n      const rhsStartTokenIndex = state.tokens.length;\r\n      parseMaybeUnary();\r\n      // Extend the right operand of this operator if possible.\r\n      parseExprOp(rhsStartTokenIndex, op & TokenType.IS_RIGHT_ASSOCIATIVE ? prec - 1 : prec, noIn);\r\n      if (op === TokenType.nullishCoalescing) {\r\n        state.tokens[startTokenIndex].numNullishCoalesceStarts++;\r\n        state.tokens[state.tokens.length - 1].numNullishCoalesceEnds++;\r\n      }\r\n      // Continue with any future operator holding this expression as the left operand.\r\n      parseExprOp(startTokenIndex, minPrec, noIn);\r\n    }\r\n  }\r\n}\r\n\r\n// Parse unary operators, both prefix and postfix.\r\n// Returns true if this was an arrow function.\r\nfunction parseMaybeUnary() {\r\n  if (isTypeScriptEnabled && !isJSXEnabled && eat(TokenType.lessThan)) {\r\n    tsParseTypeAssertion();\r\n    return false;\r\n  }\r\n  if (\r\n    isContextual(ContextualKeyword._module) &&\r\n    lookaheadCharCode() === charCodes.leftCurlyBrace &&\r\n    !hasFollowingLineBreak()\r\n  ) {\r\n    parseModuleExpression();\r\n    return false;\r\n  }\r\n  if (state.type & TokenType.IS_PREFIX) {\r\n    next();\r\n    parseMaybeUnary();\r\n    return false;\r\n  }\r\n\r\n  const wasArrow = parseExprSubscripts();\r\n  if (wasArrow) {\r\n    return true;\r\n  }\r\n  while (state.type & TokenType.IS_POSTFIX && !canInsertSemicolon()) {\r\n    // The tokenizer calls everything a preincrement, so make it a postincrement when\r\n    // we see it in that context.\r\n    if (state.type === TokenType.preIncDec) {\r\n      state.type = TokenType.postIncDec;\r\n    }\r\n    next();\r\n  }\r\n  return false;\r\n}\r\n\r\n// Parse call, dot, and `[]`-subscript expressions.\r\n// Returns true if this was an arrow function.\r\nfunction parseExprSubscripts() {\r\n  const startTokenIndex = state.tokens.length;\r\n  const wasArrow = parseExprAtom();\r\n  if (wasArrow) {\r\n    return true;\r\n  }\r\n  parseSubscripts(startTokenIndex);\r\n  // If there was any optional chain operation, the start token would be marked\r\n  // as such, so also mark the end now.\r\n  if (state.tokens.length > startTokenIndex && state.tokens[startTokenIndex].isOptionalChainStart) {\r\n    state.tokens[state.tokens.length - 1].isOptionalChainEnd = true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction parseSubscripts(startTokenIndex, noCalls = false) {\r\n  if (isFlowEnabled) {\r\n    flowParseSubscripts(startTokenIndex, noCalls);\r\n  } else {\r\n    baseParseSubscripts(startTokenIndex, noCalls);\r\n  }\r\n}\r\n\r\nfunction baseParseSubscripts(startTokenIndex, noCalls = false) {\r\n  const stopState = new StopState(false);\r\n  do {\r\n    parseSubscript(startTokenIndex, noCalls, stopState);\r\n  } while (!stopState.stop && !state.error);\r\n}\r\n\r\nfunction parseSubscript(startTokenIndex, noCalls, stopState) {\r\n  if (isTypeScriptEnabled) {\r\n    tsParseSubscript(startTokenIndex, noCalls, stopState);\r\n  } else if (isFlowEnabled) {\r\n    flowParseSubscript(startTokenIndex, noCalls, stopState);\r\n  } else {\r\n    baseParseSubscript(startTokenIndex, noCalls, stopState);\r\n  }\r\n}\r\n\r\n/** Set 'state.stop = true' to indicate that we should stop parsing subscripts. */\r\nfunction baseParseSubscript(\r\n  startTokenIndex,\r\n  noCalls,\r\n  stopState,\r\n) {\r\n  if (!noCalls && eat(TokenType.doubleColon)) {\r\n    parseNoCallExpr();\r\n    stopState.stop = true;\r\n    // Propagate startTokenIndex so that `a::b?.()` will keep `a` as the first token. We may want\r\n    // to revisit this in the future when fully supporting bind syntax.\r\n    parseSubscripts(startTokenIndex, noCalls);\r\n  } else if (match(TokenType.questionDot)) {\r\n    state.tokens[startTokenIndex].isOptionalChainStart = true;\r\n    if (noCalls && lookaheadType() === TokenType.parenL) {\r\n      stopState.stop = true;\r\n      return;\r\n    }\r\n    next();\r\n    state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\r\n\r\n    if (eat(TokenType.bracketL)) {\r\n      parseExpression();\r\n      expect(TokenType.bracketR);\r\n    } else if (eat(TokenType.parenL)) {\r\n      parseCallExpressionArguments();\r\n    } else {\r\n      parseMaybePrivateName();\r\n    }\r\n  } else if (eat(TokenType.dot)) {\r\n    state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\r\n    parseMaybePrivateName();\r\n  } else if (eat(TokenType.bracketL)) {\r\n    state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\r\n    parseExpression();\r\n    expect(TokenType.bracketR);\r\n  } else if (!noCalls && match(TokenType.parenL)) {\r\n    if (atPossibleAsync()) {\r\n      // We see \"async\", but it's possible it's a usage of the name \"async\". Parse as if it's a\r\n      // function call, and if we see an arrow later, backtrack and re-parse as a parameter list.\r\n      const snapshot = state.snapshot();\r\n      const asyncStartTokenIndex = state.tokens.length;\r\n      next();\r\n      state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\r\n\r\n      const callContextId = getNextContextId();\r\n\r\n      state.tokens[state.tokens.length - 1].contextId = callContextId;\r\n      parseCallExpressionArguments();\r\n      state.tokens[state.tokens.length - 1].contextId = callContextId;\r\n\r\n      if (shouldParseAsyncArrow()) {\r\n        // We hit an arrow, so backtrack and start again parsing function parameters.\r\n        state.restoreFromSnapshot(snapshot);\r\n        stopState.stop = true;\r\n        state.scopeDepth++;\r\n\r\n        parseFunctionParams();\r\n        parseAsyncArrowFromCallExpression(asyncStartTokenIndex);\r\n      }\r\n    } else {\r\n      next();\r\n      state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\r\n      const callContextId = getNextContextId();\r\n      state.tokens[state.tokens.length - 1].contextId = callContextId;\r\n      parseCallExpressionArguments();\r\n      state.tokens[state.tokens.length - 1].contextId = callContextId;\r\n    }\r\n  } else if (match(TokenType.backQuote)) {\r\n    // Tagged template expression.\r\n    parseTemplate();\r\n  } else {\r\n    stopState.stop = true;\r\n  }\r\n}\r\n\r\nfunction atPossibleAsync() {\r\n  // This was made less strict than the original version to avoid passing around nodes, but it\r\n  // should be safe to have rare false positives here.\r\n  return (\r\n    state.tokens[state.tokens.length - 1].contextualKeyword === ContextualKeyword._async &&\r\n    !canInsertSemicolon()\r\n  );\r\n}\r\n\r\nfunction parseCallExpressionArguments() {\r\n  let first = true;\r\n  while (!eat(TokenType.parenR) && !state.error) {\r\n    if (first) {\r\n      first = false;\r\n    } else {\r\n      expect(TokenType.comma);\r\n      if (eat(TokenType.parenR)) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    parseExprListItem(false);\r\n  }\r\n}\r\n\r\nfunction shouldParseAsyncArrow() {\r\n  return match(TokenType.colon) || match(TokenType.arrow);\r\n}\r\n\r\nfunction parseAsyncArrowFromCallExpression(startTokenIndex) {\r\n  if (isTypeScriptEnabled) {\r\n    tsStartParseAsyncArrowFromCallExpression();\r\n  } else if (isFlowEnabled) {\r\n    flowStartParseAsyncArrowFromCallExpression();\r\n  }\r\n  expect(TokenType.arrow);\r\n  parseArrowExpression(startTokenIndex);\r\n}\r\n\r\n// Parse a no-call expression (like argument of `new` or `::` operators).\r\n\r\nfunction parseNoCallExpr() {\r\n  const startTokenIndex = state.tokens.length;\r\n  parseExprAtom();\r\n  parseSubscripts(startTokenIndex, true);\r\n}\r\n\r\n// Parse an atomic expression — either a single token that is an\r\n// expression, an expression started by a keyword like `function` or\r\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\r\n// or `{}`.\r\n// Returns true if the parsed expression was an arrow function.\r\nfunction parseExprAtom() {\r\n  if (eat(TokenType.modulo)) {\r\n    // V8 intrinsic expression. Just parse the identifier, and the function invocation is parsed\r\n    // naturally.\r\n    parseIdentifier();\r\n    return false;\r\n  }\r\n\r\n  if (match(TokenType.jsxText) || match(TokenType.jsxEmptyText)) {\r\n    parseLiteral();\r\n    return false;\r\n  } else if (match(TokenType.lessThan) && isJSXEnabled) {\r\n    state.type = TokenType.jsxTagStart;\r\n    jsxParseElement();\r\n    next();\r\n    return false;\r\n  }\r\n\r\n  const canBeArrow = state.potentialArrowAt === state.start;\r\n  switch (state.type) {\r\n    case TokenType.slash:\r\n    case TokenType.assign:\r\n      retokenizeSlashAsRegex();\r\n    // Fall through.\r\n\r\n    case TokenType._super:\r\n    case TokenType._this:\r\n    case TokenType.regexp:\r\n    case TokenType.num:\r\n    case TokenType.bigint:\r\n    case TokenType.decimal:\r\n    case TokenType.string:\r\n    case TokenType._null:\r\n    case TokenType._true:\r\n    case TokenType._false:\r\n      next();\r\n      return false;\r\n\r\n    case TokenType._import:\r\n      next();\r\n      if (match(TokenType.dot)) {\r\n        // import.meta\r\n        state.tokens[state.tokens.length - 1].type = TokenType.name;\r\n        next();\r\n        parseIdentifier();\r\n      }\r\n      return false;\r\n\r\n    case TokenType.name: {\r\n      const startTokenIndex = state.tokens.length;\r\n      const functionStart = state.start;\r\n      const contextualKeyword = state.contextualKeyword;\r\n      parseIdentifier();\r\n      if (contextualKeyword === ContextualKeyword._await) {\r\n        parseAwait();\r\n        return false;\r\n      } else if (\r\n        contextualKeyword === ContextualKeyword._async &&\r\n        match(TokenType._function) &&\r\n        !canInsertSemicolon()\r\n      ) {\r\n        next();\r\n        parseFunction(functionStart, false);\r\n        return false;\r\n      } else if (\r\n        canBeArrow &&\r\n        contextualKeyword === ContextualKeyword._async &&\r\n        !canInsertSemicolon() &&\r\n        match(TokenType.name)\r\n      ) {\r\n        state.scopeDepth++;\r\n        parseBindingIdentifier(false);\r\n        expect(TokenType.arrow);\r\n        // let foo = async bar => {};\r\n        parseArrowExpression(startTokenIndex);\r\n        return true;\r\n      } else if (match(TokenType._do) && !canInsertSemicolon()) {\r\n        next();\r\n        parseBlock();\r\n        return false;\r\n      }\r\n\r\n      if (canBeArrow && !canInsertSemicolon() && match(TokenType.arrow)) {\r\n        state.scopeDepth++;\r\n        markPriorBindingIdentifier(false);\r\n        expect(TokenType.arrow);\r\n        parseArrowExpression(startTokenIndex);\r\n        return true;\r\n      }\r\n\r\n      state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.Access;\r\n      return false;\r\n    }\r\n\r\n    case TokenType._do: {\r\n      next();\r\n      parseBlock();\r\n      return false;\r\n    }\r\n\r\n    case TokenType.parenL: {\r\n      const wasArrow = parseParenAndDistinguishExpression(canBeArrow);\r\n      return wasArrow;\r\n    }\r\n\r\n    case TokenType.bracketL:\r\n      next();\r\n      parseExprList(TokenType.bracketR, true);\r\n      return false;\r\n\r\n    case TokenType.braceL:\r\n      parseObj(false, false);\r\n      return false;\r\n\r\n    case TokenType._function:\r\n      parseFunctionExpression();\r\n      return false;\r\n\r\n    case TokenType.at:\r\n      parseDecorators();\r\n    // Fall through.\r\n\r\n    case TokenType._class:\r\n      parseClass(false);\r\n      return false;\r\n\r\n    case TokenType._new:\r\n      parseNew();\r\n      return false;\r\n\r\n    case TokenType.backQuote:\r\n      parseTemplate();\r\n      return false;\r\n\r\n    case TokenType.doubleColon: {\r\n      next();\r\n      parseNoCallExpr();\r\n      return false;\r\n    }\r\n\r\n    case TokenType.hash: {\r\n      const code = lookaheadCharCode();\r\n      if (IS_IDENTIFIER_START[code] || code === charCodes.backslash) {\r\n        parseMaybePrivateName();\r\n      } else {\r\n        next();\r\n      }\r\n      // Smart pipeline topic reference.\r\n      return false;\r\n    }\r\n\r\n    default:\r\n      unexpected();\r\n      return false;\r\n  }\r\n}\r\n\r\nfunction parseMaybePrivateName() {\r\n  eat(TokenType.hash);\r\n  parseIdentifier();\r\n}\r\n\r\nfunction parseFunctionExpression() {\r\n  const functionStart = state.start;\r\n  parseIdentifier();\r\n  if (eat(TokenType.dot)) {\r\n    // function.sent\r\n    parseIdentifier();\r\n  }\r\n  parseFunction(functionStart, false);\r\n}\r\n\r\nfunction parseLiteral() {\r\n  next();\r\n}\r\n\r\nfunction parseParenExpression() {\r\n  expect(TokenType.parenL);\r\n  parseExpression();\r\n  expect(TokenType.parenR);\r\n}\r\n\r\n// Returns true if this was an arrow expression.\r\nfunction parseParenAndDistinguishExpression(canBeArrow) {\r\n  // Assume this is a normal parenthesized expression, but if we see an arrow, we'll bail and\r\n  // start over as a parameter list.\r\n  const snapshot = state.snapshot();\r\n\r\n  const startTokenIndex = state.tokens.length;\r\n  expect(TokenType.parenL);\r\n\r\n  let first = true;\r\n\r\n  while (!match(TokenType.parenR) && !state.error) {\r\n    if (first) {\r\n      first = false;\r\n    } else {\r\n      expect(TokenType.comma);\r\n      if (match(TokenType.parenR)) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (match(TokenType.ellipsis)) {\r\n      parseRest(false /* isBlockScope */);\r\n      parseParenItem();\r\n      break;\r\n    } else {\r\n      parseMaybeAssign(false, true);\r\n    }\r\n  }\r\n\r\n  expect(TokenType.parenR);\r\n\r\n  if (canBeArrow && shouldParseArrow()) {\r\n    const wasArrow = parseArrow();\r\n    if (wasArrow) {\r\n      // It was an arrow function this whole time, so start over and parse it as params so that we\r\n      // get proper token annotations.\r\n      state.restoreFromSnapshot(snapshot);\r\n      state.scopeDepth++;\r\n      // Don't specify a context ID because arrow functions don't need a context ID.\r\n      parseFunctionParams();\r\n      parseArrow();\r\n      parseArrowExpression(startTokenIndex);\r\n      if (state.error) {\r\n        // Nevermind! This must have been something that looks very much like an\r\n        // arrow function but where its \"parameter list\" isn't actually a valid\r\n        // parameter list. Force non-arrow parsing.\r\n        // See https://github.com/alangpierce/sucrase/issues/666 for an example.\r\n        state.restoreFromSnapshot(snapshot);\r\n        parseParenAndDistinguishExpression(false);\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction shouldParseArrow() {\r\n  return match(TokenType.colon) || !canInsertSemicolon();\r\n}\r\n\r\n// Returns whether there was an arrow token.\r\nfunction parseArrow() {\r\n  if (isTypeScriptEnabled) {\r\n    return tsParseArrow();\r\n  } else if (isFlowEnabled) {\r\n    return flowParseArrow();\r\n  } else {\r\n    return eat(TokenType.arrow);\r\n  }\r\n}\r\n\r\nfunction parseParenItem() {\r\n  if (isTypeScriptEnabled || isFlowEnabled) {\r\n    typedParseParenItem();\r\n  }\r\n}\r\n\r\n// New's precedence is slightly tricky. It must allow its argument to\r\n// be a `[]` or dot subscript expression, but not a call — at least,\r\n// not without wrapping it in parentheses. Thus, it uses the noCalls\r\n// argument to parseSubscripts to prevent it from consuming the\r\n// argument list.\r\nfunction parseNew() {\r\n  expect(TokenType._new);\r\n  if (eat(TokenType.dot)) {\r\n    // new.target\r\n    parseIdentifier();\r\n    return;\r\n  }\r\n  parseNewCallee();\r\n  if (isFlowEnabled) {\r\n    flowStartParseNewArguments();\r\n  }\r\n  if (eat(TokenType.parenL)) {\r\n    parseExprList(TokenType.parenR);\r\n  }\r\n}\r\n\r\nfunction parseNewCallee() {\r\n  parseNoCallExpr();\r\n  eat(TokenType.questionDot);\r\n}\r\n\r\nfunction parseTemplate() {\r\n  // Finish `, read quasi\r\n  nextTemplateToken();\r\n  // Finish quasi, read ${\r\n  nextTemplateToken();\r\n  while (!match(TokenType.backQuote) && !state.error) {\r\n    expect(TokenType.dollarBraceL);\r\n    parseExpression();\r\n    // Finish }, read quasi\r\n    nextTemplateToken();\r\n    // Finish quasi, read either ${ or `\r\n    nextTemplateToken();\r\n  }\r\n  next();\r\n}\r\n\r\n// Parse an object literal or binding pattern.\r\nfunction parseObj(isPattern, isBlockScope) {\r\n  // Attach a context ID to the object open and close brace and each object key.\r\n  const contextId = getNextContextId();\r\n  let first = true;\r\n\r\n  next();\r\n  state.tokens[state.tokens.length - 1].contextId = contextId;\r\n\r\n  while (!eat(TokenType.braceR) && !state.error) {\r\n    if (first) {\r\n      first = false;\r\n    } else {\r\n      expect(TokenType.comma);\r\n      if (eat(TokenType.braceR)) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    let isGenerator = false;\r\n    if (match(TokenType.ellipsis)) {\r\n      const previousIndex = state.tokens.length;\r\n      parseSpread();\r\n      if (isPattern) {\r\n        // Mark role when the only thing being spread over is an identifier.\r\n        if (state.tokens.length === previousIndex + 2) {\r\n          markPriorBindingIdentifier(isBlockScope);\r\n        }\r\n        if (eat(TokenType.braceR)) {\r\n          break;\r\n        }\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (!isPattern) {\r\n      isGenerator = eat(TokenType.star);\r\n    }\r\n\r\n    if (!isPattern && isContextual(ContextualKeyword._async)) {\r\n      if (isGenerator) unexpected();\r\n\r\n      parseIdentifier();\r\n      if (\r\n        match(TokenType.colon) ||\r\n        match(TokenType.parenL) ||\r\n        match(TokenType.braceR) ||\r\n        match(TokenType.eq) ||\r\n        match(TokenType.comma)\r\n      ) ; else {\r\n        if (match(TokenType.star)) {\r\n          next();\r\n          isGenerator = true;\r\n        }\r\n        parsePropertyName(contextId);\r\n      }\r\n    } else {\r\n      parsePropertyName(contextId);\r\n    }\r\n\r\n    parseObjPropValue(isPattern, isBlockScope, contextId);\r\n  }\r\n\r\n  state.tokens[state.tokens.length - 1].contextId = contextId;\r\n}\r\n\r\nfunction isGetterOrSetterMethod(isPattern) {\r\n  // We go off of the next and don't bother checking if the node key is actually \"get\" or \"set\".\r\n  // This lets us avoid generating a node, and should only make the validation worse.\r\n  return (\r\n    !isPattern &&\r\n    (match(TokenType.string) || // get \"string\"() {}\r\n      match(TokenType.num) || // get 1() {}\r\n      match(TokenType.bracketL) || // get [\"string\"]() {}\r\n      match(TokenType.name) || // get foo() {}\r\n      !!(state.type & TokenType.IS_KEYWORD)) // get debugger() {}\r\n  );\r\n}\r\n\r\n// Returns true if this was a method.\r\nfunction parseObjectMethod(isPattern, objectContextId) {\r\n  // We don't need to worry about modifiers because object methods can't have optional bodies, so\r\n  // the start will never be used.\r\n  const functionStart = state.start;\r\n  if (match(TokenType.parenL)) {\r\n    if (isPattern) unexpected();\r\n    parseMethod(functionStart, /* isConstructor */ false);\r\n    return true;\r\n  }\r\n\r\n  if (isGetterOrSetterMethod(isPattern)) {\r\n    parsePropertyName(objectContextId);\r\n    parseMethod(functionStart, /* isConstructor */ false);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction parseObjectProperty(isPattern, isBlockScope) {\r\n  if (eat(TokenType.colon)) {\r\n    if (isPattern) {\r\n      parseMaybeDefault(isBlockScope);\r\n    } else {\r\n      parseMaybeAssign(false);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // Since there's no colon, we assume this is an object shorthand.\r\n\r\n  // If we're in a destructuring, we've now discovered that the key was actually an assignee, so\r\n  // we need to tag it as a declaration with the appropriate scope. Otherwise, we might need to\r\n  // transform it on access, so mark it as a normal object shorthand.\r\n  let identifierRole;\r\n  if (isPattern) {\r\n    if (state.scopeDepth === 0) {\r\n      identifierRole = IdentifierRole.ObjectShorthandTopLevelDeclaration;\r\n    } else if (isBlockScope) {\r\n      identifierRole = IdentifierRole.ObjectShorthandBlockScopedDeclaration;\r\n    } else {\r\n      identifierRole = IdentifierRole.ObjectShorthandFunctionScopedDeclaration;\r\n    }\r\n  } else {\r\n    identifierRole = IdentifierRole.ObjectShorthand;\r\n  }\r\n  state.tokens[state.tokens.length - 1].identifierRole = identifierRole;\r\n\r\n  // Regardless of whether we know this to be a pattern or if we're in an ambiguous context, allow\r\n  // parsing as if there's a default value.\r\n  parseMaybeDefault(isBlockScope, true);\r\n}\r\n\r\nfunction parseObjPropValue(\r\n  isPattern,\r\n  isBlockScope,\r\n  objectContextId,\r\n) {\r\n  if (isTypeScriptEnabled) {\r\n    tsStartParseObjPropValue();\r\n  } else if (isFlowEnabled) {\r\n    flowStartParseObjPropValue();\r\n  }\r\n  const wasMethod = parseObjectMethod(isPattern, objectContextId);\r\n  if (!wasMethod) {\r\n    parseObjectProperty(isPattern, isBlockScope);\r\n  }\r\n}\r\n\r\nfunction parsePropertyName(objectContextId) {\r\n  if (isFlowEnabled) {\r\n    flowParseVariance();\r\n  }\r\n  if (eat(TokenType.bracketL)) {\r\n    state.tokens[state.tokens.length - 1].contextId = objectContextId;\r\n    parseMaybeAssign();\r\n    expect(TokenType.bracketR);\r\n    state.tokens[state.tokens.length - 1].contextId = objectContextId;\r\n  } else {\r\n    if (match(TokenType.num) || match(TokenType.string) || match(TokenType.bigint) || match(TokenType.decimal)) {\r\n      parseExprAtom();\r\n    } else {\r\n      parseMaybePrivateName();\r\n    }\r\n\r\n    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ObjectKey;\r\n    state.tokens[state.tokens.length - 1].contextId = objectContextId;\r\n  }\r\n}\r\n\r\n// Parse object or class method.\r\nfunction parseMethod(functionStart, isConstructor) {\r\n  const funcContextId = getNextContextId();\r\n\r\n  state.scopeDepth++;\r\n  const startTokenIndex = state.tokens.length;\r\n  const allowModifiers = isConstructor; // For TypeScript parameter properties\r\n  parseFunctionParams(allowModifiers, funcContextId);\r\n  parseFunctionBodyAndFinish(functionStart, funcContextId);\r\n  const endTokenIndex = state.tokens.length;\r\n  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, true));\r\n  state.scopeDepth--;\r\n}\r\n\r\n// Parse arrow function expression.\r\n// If the parameters are provided, they will be converted to an\r\n// assignable list.\r\nfunction parseArrowExpression(startTokenIndex) {\r\n  parseFunctionBody(true);\r\n  const endTokenIndex = state.tokens.length;\r\n  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, true));\r\n  state.scopeDepth--;\r\n}\r\n\r\nfunction parseFunctionBodyAndFinish(functionStart, funcContextId = 0) {\r\n  if (isTypeScriptEnabled) {\r\n    tsParseFunctionBodyAndFinish(functionStart, funcContextId);\r\n  } else if (isFlowEnabled) {\r\n    flowParseFunctionBodyAndFinish(funcContextId);\r\n  } else {\r\n    parseFunctionBody(false, funcContextId);\r\n  }\r\n}\r\n\r\nfunction parseFunctionBody(allowExpression, funcContextId = 0) {\r\n  const isExpression = allowExpression && !match(TokenType.braceL);\r\n\r\n  if (isExpression) {\r\n    parseMaybeAssign();\r\n  } else {\r\n    parseBlock(true /* isFunctionScope */, funcContextId);\r\n  }\r\n}\r\n\r\n// Parses a comma-separated list of expressions, and returns them as\r\n// an array. `close` is the token type that ends the list, and\r\n// `allowEmpty` can be turned on to allow subsequent commas with\r\n// nothing in between them to be parsed as `null` (which is needed\r\n// for array literals).\r\n\r\nfunction parseExprList(close, allowEmpty = false) {\r\n  let first = true;\r\n  while (!eat(close) && !state.error) {\r\n    if (first) {\r\n      first = false;\r\n    } else {\r\n      expect(TokenType.comma);\r\n      if (eat(close)) break;\r\n    }\r\n    parseExprListItem(allowEmpty);\r\n  }\r\n}\r\n\r\nfunction parseExprListItem(allowEmpty) {\r\n  if (allowEmpty && match(TokenType.comma)) ; else if (match(TokenType.ellipsis)) {\r\n    parseSpread();\r\n    parseParenItem();\r\n  } else if (match(TokenType.question)) {\r\n    // Partial function application proposal.\r\n    next();\r\n  } else {\r\n    parseMaybeAssign(false, true);\r\n  }\r\n}\r\n\r\n// Parse the next token as an identifier.\r\nfunction parseIdentifier() {\r\n  next();\r\n  state.tokens[state.tokens.length - 1].type = TokenType.name;\r\n}\r\n\r\n// Parses await expression inside async function.\r\nfunction parseAwait() {\r\n  parseMaybeUnary();\r\n}\r\n\r\n// Parses yield expression inside generator.\r\nfunction parseYield() {\r\n  next();\r\n  if (!match(TokenType.semi) && !canInsertSemicolon()) {\r\n    eat(TokenType.star);\r\n    parseMaybeAssign();\r\n  }\r\n}\r\n\r\n// https://github.com/tc39/proposal-js-module-blocks\r\nfunction parseModuleExpression() {\r\n  expectContextual(ContextualKeyword._module);\r\n  expect(TokenType.braceL);\r\n  // For now, just call parseBlockBody to parse the block. In the future when we\r\n  // implement full support, we'll want to emit scopes and possibly other\r\n  // information.\r\n  parseBlockBody(TokenType.braceR);\r\n}\r\n\r\n/* eslint max-len: 0 */\r\n\r\n\r\nfunction isMaybeDefaultImport(lookahead) {\r\n  return (\r\n    (lookahead.type === TokenType.name || !!(lookahead.type & TokenType.IS_KEYWORD)) &&\r\n    lookahead.contextualKeyword !== ContextualKeyword._from\r\n  );\r\n}\r\n\r\nfunction flowParseTypeInitialiser(tok) {\r\n  const oldIsType = pushTypeContext(0);\r\n  expect(tok || TokenType.colon);\r\n  flowParseType();\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\nfunction flowParsePredicate() {\r\n  expect(TokenType.modulo);\r\n  expectContextual(ContextualKeyword._checks);\r\n  if (eat(TokenType.parenL)) {\r\n    parseExpression();\r\n    expect(TokenType.parenR);\r\n  }\r\n}\r\n\r\nfunction flowParseTypeAndPredicateInitialiser() {\r\n  const oldIsType = pushTypeContext(0);\r\n  expect(TokenType.colon);\r\n  if (match(TokenType.modulo)) {\r\n    flowParsePredicate();\r\n  } else {\r\n    flowParseType();\r\n    if (match(TokenType.modulo)) {\r\n      flowParsePredicate();\r\n    }\r\n  }\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\nfunction flowParseDeclareClass() {\r\n  next();\r\n  flowParseInterfaceish(/* isClass */ true);\r\n}\r\n\r\nfunction flowParseDeclareFunction() {\r\n  next();\r\n  parseIdentifier();\r\n\r\n  if (match(TokenType.lessThan)) {\r\n    flowParseTypeParameterDeclaration();\r\n  }\r\n\r\n  expect(TokenType.parenL);\r\n  flowParseFunctionTypeParams();\r\n  expect(TokenType.parenR);\r\n\r\n  flowParseTypeAndPredicateInitialiser();\r\n\r\n  semicolon();\r\n}\r\n\r\nfunction flowParseDeclare() {\r\n  if (match(TokenType._class)) {\r\n    flowParseDeclareClass();\r\n  } else if (match(TokenType._function)) {\r\n    flowParseDeclareFunction();\r\n  } else if (match(TokenType._var)) {\r\n    flowParseDeclareVariable();\r\n  } else if (eatContextual(ContextualKeyword._module)) {\r\n    if (eat(TokenType.dot)) {\r\n      flowParseDeclareModuleExports();\r\n    } else {\r\n      flowParseDeclareModule();\r\n    }\r\n  } else if (isContextual(ContextualKeyword._type)) {\r\n    flowParseDeclareTypeAlias();\r\n  } else if (isContextual(ContextualKeyword._opaque)) {\r\n    flowParseDeclareOpaqueType();\r\n  } else if (isContextual(ContextualKeyword._interface)) {\r\n    flowParseDeclareInterface();\r\n  } else if (match(TokenType._export)) {\r\n    flowParseDeclareExportDeclaration();\r\n  } else {\r\n    unexpected();\r\n  }\r\n}\r\n\r\nfunction flowParseDeclareVariable() {\r\n  next();\r\n  flowParseTypeAnnotatableIdentifier();\r\n  semicolon();\r\n}\r\n\r\nfunction flowParseDeclareModule() {\r\n  if (match(TokenType.string)) {\r\n    parseExprAtom();\r\n  } else {\r\n    parseIdentifier();\r\n  }\r\n\r\n  expect(TokenType.braceL);\r\n  while (!match(TokenType.braceR) && !state.error) {\r\n    if (match(TokenType._import)) {\r\n      next();\r\n      parseImport();\r\n    } else {\r\n      unexpected();\r\n    }\r\n  }\r\n  expect(TokenType.braceR);\r\n}\r\n\r\nfunction flowParseDeclareExportDeclaration() {\r\n  expect(TokenType._export);\r\n\r\n  if (eat(TokenType._default)) {\r\n    if (match(TokenType._function) || match(TokenType._class)) {\r\n      // declare export default class ...\r\n      // declare export default function ...\r\n      flowParseDeclare();\r\n    } else {\r\n      // declare export default [type];\r\n      flowParseType();\r\n      semicolon();\r\n    }\r\n  } else if (\r\n    match(TokenType._var) || // declare export var ...\r\n    match(TokenType._function) || // declare export function ...\r\n    match(TokenType._class) || // declare export class ...\r\n    isContextual(ContextualKeyword._opaque) // declare export opaque ..\r\n  ) {\r\n    flowParseDeclare();\r\n  } else if (\r\n    match(TokenType.star) || // declare export * from ''\r\n    match(TokenType.braceL) || // declare export {} ...\r\n    isContextual(ContextualKeyword._interface) || // declare export interface ...\r\n    isContextual(ContextualKeyword._type) || // declare export type ...\r\n    isContextual(ContextualKeyword._opaque) // declare export opaque type ...\r\n  ) {\r\n    parseExport();\r\n  } else {\r\n    unexpected();\r\n  }\r\n}\r\n\r\nfunction flowParseDeclareModuleExports() {\r\n  expectContextual(ContextualKeyword._exports);\r\n  flowParseTypeAnnotation();\r\n  semicolon();\r\n}\r\n\r\nfunction flowParseDeclareTypeAlias() {\r\n  next();\r\n  flowParseTypeAlias();\r\n}\r\n\r\nfunction flowParseDeclareOpaqueType() {\r\n  next();\r\n  flowParseOpaqueType(true);\r\n}\r\n\r\nfunction flowParseDeclareInterface() {\r\n  next();\r\n  flowParseInterfaceish();\r\n}\r\n\r\n// Interfaces\r\n\r\nfunction flowParseInterfaceish(isClass = false) {\r\n  flowParseRestrictedIdentifier();\r\n\r\n  if (match(TokenType.lessThan)) {\r\n    flowParseTypeParameterDeclaration();\r\n  }\r\n\r\n  if (eat(TokenType._extends)) {\r\n    do {\r\n      flowParseInterfaceExtends();\r\n    } while (!isClass && eat(TokenType.comma));\r\n  }\r\n\r\n  if (isContextual(ContextualKeyword._mixins)) {\r\n    next();\r\n    do {\r\n      flowParseInterfaceExtends();\r\n    } while (eat(TokenType.comma));\r\n  }\r\n\r\n  if (isContextual(ContextualKeyword._implements)) {\r\n    next();\r\n    do {\r\n      flowParseInterfaceExtends();\r\n    } while (eat(TokenType.comma));\r\n  }\r\n\r\n  flowParseObjectType(isClass, false, isClass);\r\n}\r\n\r\nfunction flowParseInterfaceExtends() {\r\n  flowParseQualifiedTypeIdentifier(false);\r\n  if (match(TokenType.lessThan)) {\r\n    flowParseTypeParameterInstantiation();\r\n  }\r\n}\r\n\r\nfunction flowParseInterface() {\r\n  flowParseInterfaceish();\r\n}\r\n\r\nfunction flowParseRestrictedIdentifier() {\r\n  parseIdentifier();\r\n}\r\n\r\nfunction flowParseTypeAlias() {\r\n  flowParseRestrictedIdentifier();\r\n\r\n  if (match(TokenType.lessThan)) {\r\n    flowParseTypeParameterDeclaration();\r\n  }\r\n\r\n  flowParseTypeInitialiser(TokenType.eq);\r\n  semicolon();\r\n}\r\n\r\nfunction flowParseOpaqueType(declare) {\r\n  expectContextual(ContextualKeyword._type);\r\n  flowParseRestrictedIdentifier();\r\n\r\n  if (match(TokenType.lessThan)) {\r\n    flowParseTypeParameterDeclaration();\r\n  }\r\n\r\n  // Parse the supertype\r\n  if (match(TokenType.colon)) {\r\n    flowParseTypeInitialiser(TokenType.colon);\r\n  }\r\n\r\n  if (!declare) {\r\n    flowParseTypeInitialiser(TokenType.eq);\r\n  }\r\n  semicolon();\r\n}\r\n\r\nfunction flowParseTypeParameter() {\r\n  flowParseVariance();\r\n  flowParseTypeAnnotatableIdentifier();\r\n\r\n  if (eat(TokenType.eq)) {\r\n    flowParseType();\r\n  }\r\n}\r\n\r\nfunction flowParseTypeParameterDeclaration() {\r\n  const oldIsType = pushTypeContext(0);\r\n  // istanbul ignore else: this condition is already checked at all call sites\r\n  if (match(TokenType.lessThan) || match(TokenType.typeParameterStart)) {\r\n    next();\r\n  } else {\r\n    unexpected();\r\n  }\r\n\r\n  do {\r\n    flowParseTypeParameter();\r\n    if (!match(TokenType.greaterThan)) {\r\n      expect(TokenType.comma);\r\n    }\r\n  } while (!match(TokenType.greaterThan) && !state.error);\r\n  expect(TokenType.greaterThan);\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\nfunction flowParseTypeParameterInstantiation() {\r\n  const oldIsType = pushTypeContext(0);\r\n  expect(TokenType.lessThan);\r\n  while (!match(TokenType.greaterThan) && !state.error) {\r\n    flowParseType();\r\n    if (!match(TokenType.greaterThan)) {\r\n      expect(TokenType.comma);\r\n    }\r\n  }\r\n  expect(TokenType.greaterThan);\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\nfunction flowParseInterfaceType() {\r\n  expectContextual(ContextualKeyword._interface);\r\n  if (eat(TokenType._extends)) {\r\n    do {\r\n      flowParseInterfaceExtends();\r\n    } while (eat(TokenType.comma));\r\n  }\r\n  flowParseObjectType(false, false, false);\r\n}\r\n\r\nfunction flowParseObjectPropertyKey() {\r\n  if (match(TokenType.num) || match(TokenType.string)) {\r\n    parseExprAtom();\r\n  } else {\r\n    parseIdentifier();\r\n  }\r\n}\r\n\r\nfunction flowParseObjectTypeIndexer() {\r\n  // Note: bracketL has already been consumed\r\n  if (lookaheadType() === TokenType.colon) {\r\n    flowParseObjectPropertyKey();\r\n    flowParseTypeInitialiser();\r\n  } else {\r\n    flowParseType();\r\n  }\r\n  expect(TokenType.bracketR);\r\n  flowParseTypeInitialiser();\r\n}\r\n\r\nfunction flowParseObjectTypeInternalSlot() {\r\n  // Note: both bracketL have already been consumed\r\n  flowParseObjectPropertyKey();\r\n  expect(TokenType.bracketR);\r\n  expect(TokenType.bracketR);\r\n  if (match(TokenType.lessThan) || match(TokenType.parenL)) {\r\n    flowParseObjectTypeMethodish();\r\n  } else {\r\n    eat(TokenType.question);\r\n    flowParseTypeInitialiser();\r\n  }\r\n}\r\n\r\nfunction flowParseObjectTypeMethodish() {\r\n  if (match(TokenType.lessThan)) {\r\n    flowParseTypeParameterDeclaration();\r\n  }\r\n\r\n  expect(TokenType.parenL);\r\n  while (!match(TokenType.parenR) && !match(TokenType.ellipsis) && !state.error) {\r\n    flowParseFunctionTypeParam();\r\n    if (!match(TokenType.parenR)) {\r\n      expect(TokenType.comma);\r\n    }\r\n  }\r\n\r\n  if (eat(TokenType.ellipsis)) {\r\n    flowParseFunctionTypeParam();\r\n  }\r\n  expect(TokenType.parenR);\r\n  flowParseTypeInitialiser();\r\n}\r\n\r\nfunction flowParseObjectTypeCallProperty() {\r\n  flowParseObjectTypeMethodish();\r\n}\r\n\r\nfunction flowParseObjectType(allowStatic, allowExact, allowProto) {\r\n  let endDelim;\r\n  if (allowExact && match(TokenType.braceBarL)) {\r\n    expect(TokenType.braceBarL);\r\n    endDelim = TokenType.braceBarR;\r\n  } else {\r\n    expect(TokenType.braceL);\r\n    endDelim = TokenType.braceR;\r\n  }\r\n\r\n  while (!match(endDelim) && !state.error) {\r\n    if (allowProto && isContextual(ContextualKeyword._proto)) {\r\n      const lookahead = lookaheadType();\r\n      if (lookahead !== TokenType.colon && lookahead !== TokenType.question) {\r\n        next();\r\n        allowStatic = false;\r\n      }\r\n    }\r\n    if (allowStatic && isContextual(ContextualKeyword._static)) {\r\n      const lookahead = lookaheadType();\r\n      if (lookahead !== TokenType.colon && lookahead !== TokenType.question) {\r\n        next();\r\n      }\r\n    }\r\n\r\n    flowParseVariance();\r\n\r\n    if (eat(TokenType.bracketL)) {\r\n      if (eat(TokenType.bracketL)) {\r\n        flowParseObjectTypeInternalSlot();\r\n      } else {\r\n        flowParseObjectTypeIndexer();\r\n      }\r\n    } else if (match(TokenType.parenL) || match(TokenType.lessThan)) {\r\n      flowParseObjectTypeCallProperty();\r\n    } else {\r\n      if (isContextual(ContextualKeyword._get) || isContextual(ContextualKeyword._set)) {\r\n        const lookahead = lookaheadType();\r\n        if (lookahead === TokenType.name || lookahead === TokenType.string || lookahead === TokenType.num) {\r\n          next();\r\n        }\r\n      }\r\n\r\n      flowParseObjectTypeProperty();\r\n    }\r\n\r\n    flowObjectTypeSemicolon();\r\n  }\r\n\r\n  expect(endDelim);\r\n}\r\n\r\nfunction flowParseObjectTypeProperty() {\r\n  if (match(TokenType.ellipsis)) {\r\n    expect(TokenType.ellipsis);\r\n    if (!eat(TokenType.comma)) {\r\n      eat(TokenType.semi);\r\n    }\r\n    // Explicit inexact object syntax.\r\n    if (match(TokenType.braceR)) {\r\n      return;\r\n    }\r\n    flowParseType();\r\n  } else {\r\n    flowParseObjectPropertyKey();\r\n    if (match(TokenType.lessThan) || match(TokenType.parenL)) {\r\n      // This is a method property\r\n      flowParseObjectTypeMethodish();\r\n    } else {\r\n      eat(TokenType.question);\r\n      flowParseTypeInitialiser();\r\n    }\r\n  }\r\n}\r\n\r\nfunction flowObjectTypeSemicolon() {\r\n  if (!eat(TokenType.semi) && !eat(TokenType.comma) && !match(TokenType.braceR) && !match(TokenType.braceBarR)) {\r\n    unexpected();\r\n  }\r\n}\r\n\r\nfunction flowParseQualifiedTypeIdentifier(initialIdAlreadyParsed) {\r\n  if (!initialIdAlreadyParsed) {\r\n    parseIdentifier();\r\n  }\r\n  while (eat(TokenType.dot)) {\r\n    parseIdentifier();\r\n  }\r\n}\r\n\r\nfunction flowParseGenericType() {\r\n  flowParseQualifiedTypeIdentifier(true);\r\n  if (match(TokenType.lessThan)) {\r\n    flowParseTypeParameterInstantiation();\r\n  }\r\n}\r\n\r\nfunction flowParseTypeofType() {\r\n  expect(TokenType._typeof);\r\n  flowParsePrimaryType();\r\n}\r\n\r\nfunction flowParseTupleType() {\r\n  expect(TokenType.bracketL);\r\n  // We allow trailing commas\r\n  while (state.pos < input.length && !match(TokenType.bracketR)) {\r\n    flowParseType();\r\n    if (match(TokenType.bracketR)) {\r\n      break;\r\n    }\r\n    expect(TokenType.comma);\r\n  }\r\n  expect(TokenType.bracketR);\r\n}\r\n\r\nfunction flowParseFunctionTypeParam() {\r\n  const lookahead = lookaheadType();\r\n  if (lookahead === TokenType.colon || lookahead === TokenType.question) {\r\n    parseIdentifier();\r\n    eat(TokenType.question);\r\n    flowParseTypeInitialiser();\r\n  } else {\r\n    flowParseType();\r\n  }\r\n}\r\n\r\nfunction flowParseFunctionTypeParams() {\r\n  while (!match(TokenType.parenR) && !match(TokenType.ellipsis) && !state.error) {\r\n    flowParseFunctionTypeParam();\r\n    if (!match(TokenType.parenR)) {\r\n      expect(TokenType.comma);\r\n    }\r\n  }\r\n  if (eat(TokenType.ellipsis)) {\r\n    flowParseFunctionTypeParam();\r\n  }\r\n}\r\n\r\n// The parsing of types roughly parallels the parsing of expressions, and\r\n// primary types are kind of like primary expressions...they're the\r\n// primitives with which other types are constructed.\r\nfunction flowParsePrimaryType() {\r\n  let isGroupedType = false;\r\n  const oldNoAnonFunctionType = state.noAnonFunctionType;\r\n\r\n  switch (state.type) {\r\n    case TokenType.name: {\r\n      if (isContextual(ContextualKeyword._interface)) {\r\n        flowParseInterfaceType();\r\n        return;\r\n      }\r\n      parseIdentifier();\r\n      flowParseGenericType();\r\n      return;\r\n    }\r\n\r\n    case TokenType.braceL:\r\n      flowParseObjectType(false, false, false);\r\n      return;\r\n\r\n    case TokenType.braceBarL:\r\n      flowParseObjectType(false, true, false);\r\n      return;\r\n\r\n    case TokenType.bracketL:\r\n      flowParseTupleType();\r\n      return;\r\n\r\n    case TokenType.lessThan:\r\n      flowParseTypeParameterDeclaration();\r\n      expect(TokenType.parenL);\r\n      flowParseFunctionTypeParams();\r\n      expect(TokenType.parenR);\r\n      expect(TokenType.arrow);\r\n      flowParseType();\r\n      return;\r\n\r\n    case TokenType.parenL:\r\n      next();\r\n\r\n      // Check to see if this is actually a grouped type\r\n      if (!match(TokenType.parenR) && !match(TokenType.ellipsis)) {\r\n        if (match(TokenType.name)) {\r\n          const token = lookaheadType();\r\n          isGroupedType = token !== TokenType.question && token !== TokenType.colon;\r\n        } else {\r\n          isGroupedType = true;\r\n        }\r\n      }\r\n\r\n      if (isGroupedType) {\r\n        state.noAnonFunctionType = false;\r\n        flowParseType();\r\n        state.noAnonFunctionType = oldNoAnonFunctionType;\r\n\r\n        // A `,` or a `) =>` means this is an anonymous function type\r\n        if (\r\n          state.noAnonFunctionType ||\r\n          !(match(TokenType.comma) || (match(TokenType.parenR) && lookaheadType() === TokenType.arrow))\r\n        ) {\r\n          expect(TokenType.parenR);\r\n          return;\r\n        } else {\r\n          // Eat a comma if there is one\r\n          eat(TokenType.comma);\r\n        }\r\n      }\r\n\r\n      flowParseFunctionTypeParams();\r\n\r\n      expect(TokenType.parenR);\r\n      expect(TokenType.arrow);\r\n      flowParseType();\r\n      return;\r\n\r\n    case TokenType.minus:\r\n      next();\r\n      parseLiteral();\r\n      return;\r\n\r\n    case TokenType.string:\r\n    case TokenType.num:\r\n    case TokenType._true:\r\n    case TokenType._false:\r\n    case TokenType._null:\r\n    case TokenType._this:\r\n    case TokenType._void:\r\n    case TokenType.star:\r\n      next();\r\n      return;\r\n\r\n    default:\r\n      if (state.type === TokenType._typeof) {\r\n        flowParseTypeofType();\r\n        return;\r\n      } else if (state.type & TokenType.IS_KEYWORD) {\r\n        next();\r\n        state.tokens[state.tokens.length - 1].type = TokenType.name;\r\n        return;\r\n      }\r\n  }\r\n\r\n  unexpected();\r\n}\r\n\r\nfunction flowParsePostfixType() {\r\n  flowParsePrimaryType();\r\n  while (!canInsertSemicolon() && (match(TokenType.bracketL) || match(TokenType.questionDot))) {\r\n    eat(TokenType.questionDot);\r\n    expect(TokenType.bracketL);\r\n    if (eat(TokenType.bracketR)) ; else {\r\n      // Indexed access type\r\n      flowParseType();\r\n      expect(TokenType.bracketR);\r\n    }\r\n  }\r\n}\r\n\r\nfunction flowParsePrefixType() {\r\n  if (eat(TokenType.question)) {\r\n    flowParsePrefixType();\r\n  } else {\r\n    flowParsePostfixType();\r\n  }\r\n}\r\n\r\nfunction flowParseAnonFunctionWithoutParens() {\r\n  flowParsePrefixType();\r\n  if (!state.noAnonFunctionType && eat(TokenType.arrow)) {\r\n    flowParseType();\r\n  }\r\n}\r\n\r\nfunction flowParseIntersectionType() {\r\n  eat(TokenType.bitwiseAND);\r\n  flowParseAnonFunctionWithoutParens();\r\n  while (eat(TokenType.bitwiseAND)) {\r\n    flowParseAnonFunctionWithoutParens();\r\n  }\r\n}\r\n\r\nfunction flowParseUnionType() {\r\n  eat(TokenType.bitwiseOR);\r\n  flowParseIntersectionType();\r\n  while (eat(TokenType.bitwiseOR)) {\r\n    flowParseIntersectionType();\r\n  }\r\n}\r\n\r\nfunction flowParseType() {\r\n  flowParseUnionType();\r\n}\r\n\r\nfunction flowParseTypeAnnotation() {\r\n  flowParseTypeInitialiser();\r\n}\r\n\r\nfunction flowParseTypeAnnotatableIdentifier() {\r\n  parseIdentifier();\r\n  if (match(TokenType.colon)) {\r\n    flowParseTypeAnnotation();\r\n  }\r\n}\r\n\r\nfunction flowParseVariance() {\r\n  if (match(TokenType.plus) || match(TokenType.minus)) {\r\n    next();\r\n    state.tokens[state.tokens.length - 1].isType = true;\r\n  }\r\n}\r\n\r\n// ==================================\r\n// Overrides\r\n// ==================================\r\n\r\nfunction flowParseFunctionBodyAndFinish(funcContextId) {\r\n  // For arrow functions, `parseArrow` handles the return type itself.\r\n  if (match(TokenType.colon)) {\r\n    flowParseTypeAndPredicateInitialiser();\r\n  }\r\n\r\n  parseFunctionBody(false, funcContextId);\r\n}\r\n\r\nfunction flowParseSubscript(\r\n  startTokenIndex,\r\n  noCalls,\r\n  stopState,\r\n) {\r\n  if (match(TokenType.questionDot) && lookaheadType() === TokenType.lessThan) {\r\n    if (noCalls) {\r\n      stopState.stop = true;\r\n      return;\r\n    }\r\n    next();\r\n    flowParseTypeParameterInstantiation();\r\n    expect(TokenType.parenL);\r\n    parseCallExpressionArguments();\r\n    return;\r\n  } else if (!noCalls && match(TokenType.lessThan)) {\r\n    const snapshot = state.snapshot();\r\n    flowParseTypeParameterInstantiation();\r\n    expect(TokenType.parenL);\r\n    parseCallExpressionArguments();\r\n    if (state.error) {\r\n      state.restoreFromSnapshot(snapshot);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  baseParseSubscript(startTokenIndex, noCalls, stopState);\r\n}\r\n\r\nfunction flowStartParseNewArguments() {\r\n  if (match(TokenType.lessThan)) {\r\n    const snapshot = state.snapshot();\r\n    flowParseTypeParameterInstantiation();\r\n    if (state.error) {\r\n      state.restoreFromSnapshot(snapshot);\r\n    }\r\n  }\r\n}\r\n\r\n// interfaces\r\nfunction flowTryParseStatement() {\r\n  if (match(TokenType.name) && state.contextualKeyword === ContextualKeyword._interface) {\r\n    const oldIsType = pushTypeContext(0);\r\n    next();\r\n    flowParseInterface();\r\n    popTypeContext(oldIsType);\r\n    return true;\r\n  } else if (isContextual(ContextualKeyword._enum)) {\r\n    flowParseEnumDeclaration();\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction flowTryParseExportDefaultExpression() {\r\n  if (isContextual(ContextualKeyword._enum)) {\r\n    flowParseEnumDeclaration();\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// declares, interfaces and type aliases\r\nfunction flowParseIdentifierStatement(contextualKeyword) {\r\n  if (contextualKeyword === ContextualKeyword._declare) {\r\n    if (\r\n      match(TokenType._class) ||\r\n      match(TokenType.name) ||\r\n      match(TokenType._function) ||\r\n      match(TokenType._var) ||\r\n      match(TokenType._export)\r\n    ) {\r\n      const oldIsType = pushTypeContext(1);\r\n      flowParseDeclare();\r\n      popTypeContext(oldIsType);\r\n    }\r\n  } else if (match(TokenType.name)) {\r\n    if (contextualKeyword === ContextualKeyword._interface) {\r\n      const oldIsType = pushTypeContext(1);\r\n      flowParseInterface();\r\n      popTypeContext(oldIsType);\r\n    } else if (contextualKeyword === ContextualKeyword._type) {\r\n      const oldIsType = pushTypeContext(1);\r\n      flowParseTypeAlias();\r\n      popTypeContext(oldIsType);\r\n    } else if (contextualKeyword === ContextualKeyword._opaque) {\r\n      const oldIsType = pushTypeContext(1);\r\n      flowParseOpaqueType(false);\r\n      popTypeContext(oldIsType);\r\n    }\r\n  }\r\n  semicolon();\r\n}\r\n\r\n// export type\r\nfunction flowShouldParseExportDeclaration() {\r\n  return (\r\n    isContextual(ContextualKeyword._type) ||\r\n    isContextual(ContextualKeyword._interface) ||\r\n    isContextual(ContextualKeyword._opaque) ||\r\n    isContextual(ContextualKeyword._enum)\r\n  );\r\n}\r\n\r\nfunction flowShouldDisallowExportDefaultSpecifier() {\r\n  return (\r\n    match(TokenType.name) &&\r\n    (state.contextualKeyword === ContextualKeyword._type ||\r\n      state.contextualKeyword === ContextualKeyword._interface ||\r\n      state.contextualKeyword === ContextualKeyword._opaque ||\r\n      state.contextualKeyword === ContextualKeyword._enum)\r\n  );\r\n}\r\n\r\nfunction flowParseExportDeclaration() {\r\n  if (isContextual(ContextualKeyword._type)) {\r\n    const oldIsType = pushTypeContext(1);\r\n    next();\r\n\r\n    if (match(TokenType.braceL)) {\r\n      // export type { foo, bar };\r\n      parseExportSpecifiers();\r\n      parseExportFrom();\r\n    } else {\r\n      // export type Foo = Bar;\r\n      flowParseTypeAlias();\r\n    }\r\n    popTypeContext(oldIsType);\r\n  } else if (isContextual(ContextualKeyword._opaque)) {\r\n    const oldIsType = pushTypeContext(1);\r\n    next();\r\n    // export opaque type Foo = Bar;\r\n    flowParseOpaqueType(false);\r\n    popTypeContext(oldIsType);\r\n  } else if (isContextual(ContextualKeyword._interface)) {\r\n    const oldIsType = pushTypeContext(1);\r\n    next();\r\n    flowParseInterface();\r\n    popTypeContext(oldIsType);\r\n  } else {\r\n    parseStatement(true);\r\n  }\r\n}\r\n\r\nfunction flowShouldParseExportStar() {\r\n  return match(TokenType.star) || (isContextual(ContextualKeyword._type) && lookaheadType() === TokenType.star);\r\n}\r\n\r\nfunction flowParseExportStar() {\r\n  if (eatContextual(ContextualKeyword._type)) {\r\n    const oldIsType = pushTypeContext(2);\r\n    baseParseExportStar();\r\n    popTypeContext(oldIsType);\r\n  } else {\r\n    baseParseExportStar();\r\n  }\r\n}\r\n\r\n// parse a the super class type parameters and implements\r\nfunction flowAfterParseClassSuper(hasSuper) {\r\n  if (hasSuper && match(TokenType.lessThan)) {\r\n    flowParseTypeParameterInstantiation();\r\n  }\r\n  if (isContextual(ContextualKeyword._implements)) {\r\n    const oldIsType = pushTypeContext(0);\r\n    next();\r\n    state.tokens[state.tokens.length - 1].type = TokenType._implements;\r\n    do {\r\n      flowParseRestrictedIdentifier();\r\n      if (match(TokenType.lessThan)) {\r\n        flowParseTypeParameterInstantiation();\r\n      }\r\n    } while (eat(TokenType.comma));\r\n    popTypeContext(oldIsType);\r\n  }\r\n}\r\n\r\n// parse type parameters for object method shorthand\r\nfunction flowStartParseObjPropValue() {\r\n  // method shorthand\r\n  if (match(TokenType.lessThan)) {\r\n    flowParseTypeParameterDeclaration();\r\n    if (!match(TokenType.parenL)) unexpected();\r\n  }\r\n}\r\n\r\nfunction flowParseAssignableListItemTypes() {\r\n  const oldIsType = pushTypeContext(0);\r\n  eat(TokenType.question);\r\n  if (match(TokenType.colon)) {\r\n    flowParseTypeAnnotation();\r\n  }\r\n  popTypeContext(oldIsType);\r\n}\r\n\r\n// parse typeof and type imports\r\nfunction flowStartParseImportSpecifiers() {\r\n  if (match(TokenType._typeof) || isContextual(ContextualKeyword._type)) {\r\n    const lh = lookaheadTypeAndKeyword();\r\n    if (isMaybeDefaultImport(lh) || lh.type === TokenType.braceL || lh.type === TokenType.star) {\r\n      next();\r\n    }\r\n  }\r\n}\r\n\r\n// parse import-type/typeof shorthand\r\nfunction flowParseImportSpecifier() {\r\n  const isTypeKeyword =\r\n    state.contextualKeyword === ContextualKeyword._type || state.type === TokenType._typeof;\r\n  if (isTypeKeyword) {\r\n    next();\r\n  } else {\r\n    parseIdentifier();\r\n  }\r\n\r\n  if (isContextual(ContextualKeyword._as) && !isLookaheadContextual(ContextualKeyword._as)) {\r\n    parseIdentifier();\r\n    if (isTypeKeyword && !match(TokenType.name) && !(state.type & TokenType.IS_KEYWORD)) ; else {\r\n      // `import {type as foo`\r\n      parseIdentifier();\r\n    }\r\n  } else {\r\n    if (isTypeKeyword && (match(TokenType.name) || !!(state.type & TokenType.IS_KEYWORD))) {\r\n      // `import {type foo`\r\n      parseIdentifier();\r\n    }\r\n    if (eatContextual(ContextualKeyword._as)) {\r\n      parseIdentifier();\r\n    }\r\n  }\r\n}\r\n\r\n// parse function type parameters - function foo<T>() {}\r\nfunction flowStartParseFunctionParams() {\r\n  // Originally this checked if the method is a getter/setter, but if it was, we'd crash soon\r\n  // anyway, so don't try to propagate that information.\r\n  if (match(TokenType.lessThan)) {\r\n    const oldIsType = pushTypeContext(0);\r\n    flowParseTypeParameterDeclaration();\r\n    popTypeContext(oldIsType);\r\n  }\r\n}\r\n\r\n// parse flow type annotations on variable declarator heads - let foo: string = bar\r\nfunction flowAfterParseVarHead() {\r\n  if (match(TokenType.colon)) {\r\n    flowParseTypeAnnotation();\r\n  }\r\n}\r\n\r\n// parse the return type of an async arrow function - let foo = (async (): number => {});\r\nfunction flowStartParseAsyncArrowFromCallExpression() {\r\n  if (match(TokenType.colon)) {\r\n    const oldNoAnonFunctionType = state.noAnonFunctionType;\r\n    state.noAnonFunctionType = true;\r\n    flowParseTypeAnnotation();\r\n    state.noAnonFunctionType = oldNoAnonFunctionType;\r\n  }\r\n}\r\n\r\n// We need to support type parameter declarations for arrow functions. This\r\n// is tricky. There are three situations we need to handle\r\n//\r\n// 1. This is either JSX or an arrow function. We'll try JSX first. If that\r\n//    fails, we'll try an arrow function. If that fails, we'll throw the JSX\r\n//    error.\r\n// 2. This is an arrow function. We'll parse the type parameter declaration,\r\n//    parse the rest, make sure the rest is an arrow function, and go from\r\n//    there\r\n// 3. This is neither. Just call the super method\r\nfunction flowParseMaybeAssign(noIn, isWithinParens) {\r\n  if (match(TokenType.lessThan)) {\r\n    const snapshot = state.snapshot();\r\n    let wasArrow = baseParseMaybeAssign(noIn, isWithinParens);\r\n    if (state.error) {\r\n      state.restoreFromSnapshot(snapshot);\r\n      state.type = TokenType.typeParameterStart;\r\n    } else {\r\n      return wasArrow;\r\n    }\r\n\r\n    const oldIsType = pushTypeContext(0);\r\n    flowParseTypeParameterDeclaration();\r\n    popTypeContext(oldIsType);\r\n    wasArrow = baseParseMaybeAssign(noIn, isWithinParens);\r\n    if (wasArrow) {\r\n      return true;\r\n    }\r\n    unexpected();\r\n  }\r\n\r\n  return baseParseMaybeAssign(noIn, isWithinParens);\r\n}\r\n\r\n// handle return types for arrow functions\r\nfunction flowParseArrow() {\r\n  if (match(TokenType.colon)) {\r\n    const oldIsType = pushTypeContext(0);\r\n    const snapshot = state.snapshot();\r\n\r\n    const oldNoAnonFunctionType = state.noAnonFunctionType;\r\n    state.noAnonFunctionType = true;\r\n    flowParseTypeAndPredicateInitialiser();\r\n    state.noAnonFunctionType = oldNoAnonFunctionType;\r\n\r\n    if (canInsertSemicolon()) unexpected();\r\n    if (!match(TokenType.arrow)) unexpected();\r\n\r\n    if (state.error) {\r\n      state.restoreFromSnapshot(snapshot);\r\n    }\r\n    popTypeContext(oldIsType);\r\n  }\r\n  return eat(TokenType.arrow);\r\n}\r\n\r\nfunction flowParseSubscripts(startTokenIndex, noCalls = false) {\r\n  if (\r\n    state.tokens[state.tokens.length - 1].contextualKeyword === ContextualKeyword._async &&\r\n    match(TokenType.lessThan)\r\n  ) {\r\n    const snapshot = state.snapshot();\r\n    const wasArrow = parseAsyncArrowWithTypeParameters();\r\n    if (wasArrow && !state.error) {\r\n      return;\r\n    }\r\n    state.restoreFromSnapshot(snapshot);\r\n  }\r\n\r\n  baseParseSubscripts(startTokenIndex, noCalls);\r\n}\r\n\r\n// Returns true if there was an arrow function here.\r\nfunction parseAsyncArrowWithTypeParameters() {\r\n  state.scopeDepth++;\r\n  const startTokenIndex = state.tokens.length;\r\n  parseFunctionParams();\r\n  if (!parseArrow()) {\r\n    return false;\r\n  }\r\n  parseArrowExpression(startTokenIndex);\r\n  return true;\r\n}\r\n\r\nfunction flowParseEnumDeclaration() {\r\n  expectContextual(ContextualKeyword._enum);\r\n  state.tokens[state.tokens.length - 1].type = TokenType._enum;\r\n  parseIdentifier();\r\n  flowParseEnumBody();\r\n}\r\n\r\nfunction flowParseEnumBody() {\r\n  if (eatContextual(ContextualKeyword._of)) {\r\n    next();\r\n  }\r\n  expect(TokenType.braceL);\r\n  flowParseEnumMembers();\r\n  expect(TokenType.braceR);\r\n}\r\n\r\nfunction flowParseEnumMembers() {\r\n  while (!match(TokenType.braceR) && !state.error) {\r\n    if (eat(TokenType.ellipsis)) {\r\n      break;\r\n    }\r\n    flowParseEnumMember();\r\n    if (!match(TokenType.braceR)) {\r\n      expect(TokenType.comma);\r\n    }\r\n  }\r\n}\r\n\r\nfunction flowParseEnumMember() {\r\n  parseIdentifier();\r\n  if (eat(TokenType.eq)) {\r\n    // Flow enum values are always just one token (a string, number, or boolean literal).\r\n    next();\r\n  }\r\n}\r\n\r\n/* eslint max-len: 0 */\r\n\r\n\r\nfunction parseTopLevel() {\r\n  parseBlockBody(TokenType.eof);\r\n  state.scopes.push(new Scope(0, state.tokens.length, true));\r\n  if (state.scopeDepth !== 0) {\r\n    throw new Error(`Invalid scope depth at end of file: ${state.scopeDepth}`);\r\n  }\r\n  return new File$1(state.tokens, state.scopes);\r\n}\r\n\r\n// Parse a single statement.\r\n//\r\n// If expecting a statement and finding a slash operator, parse a\r\n// regular expression literal. This is to handle cases like\r\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\r\n// does not help.\r\n\r\nfunction parseStatement(declaration) {\r\n  if (isFlowEnabled) {\r\n    if (flowTryParseStatement()) {\r\n      return;\r\n    }\r\n  }\r\n  if (match(TokenType.at)) {\r\n    parseDecorators();\r\n  }\r\n  parseStatementContent(declaration);\r\n}\r\n\r\nfunction parseStatementContent(declaration) {\r\n  if (isTypeScriptEnabled) {\r\n    if (tsTryParseStatementContent()) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  const starttype = state.type;\r\n\r\n  // Most types of statements are recognized by the keyword they\r\n  // start with. Many are trivial to parse, some require a bit of\r\n  // complexity.\r\n\r\n  switch (starttype) {\r\n    case TokenType._break:\r\n    case TokenType._continue:\r\n      parseBreakContinueStatement();\r\n      return;\r\n    case TokenType._debugger:\r\n      parseDebuggerStatement();\r\n      return;\r\n    case TokenType._do:\r\n      parseDoStatement();\r\n      return;\r\n    case TokenType._for:\r\n      parseForStatement();\r\n      return;\r\n    case TokenType._function:\r\n      if (lookaheadType() === TokenType.dot) break;\r\n      if (!declaration) unexpected();\r\n      parseFunctionStatement();\r\n      return;\r\n\r\n    case TokenType._class:\r\n      if (!declaration) unexpected();\r\n      parseClass(true);\r\n      return;\r\n\r\n    case TokenType._if:\r\n      parseIfStatement();\r\n      return;\r\n    case TokenType._return:\r\n      parseReturnStatement();\r\n      return;\r\n    case TokenType._switch:\r\n      parseSwitchStatement();\r\n      return;\r\n    case TokenType._throw:\r\n      parseThrowStatement();\r\n      return;\r\n    case TokenType._try:\r\n      parseTryStatement();\r\n      return;\r\n\r\n    case TokenType._let:\r\n    case TokenType._const:\r\n      if (!declaration) unexpected(); // NOTE: falls through to _var\r\n\r\n    case TokenType._var:\r\n      parseVarStatement(starttype !== TokenType._var);\r\n      return;\r\n\r\n    case TokenType._while:\r\n      parseWhileStatement();\r\n      return;\r\n    case TokenType.braceL:\r\n      parseBlock();\r\n      return;\r\n    case TokenType.semi:\r\n      parseEmptyStatement();\r\n      return;\r\n    case TokenType._export:\r\n    case TokenType._import: {\r\n      const nextType = lookaheadType();\r\n      if (nextType === TokenType.parenL || nextType === TokenType.dot) {\r\n        break;\r\n      }\r\n      next();\r\n      if (starttype === TokenType._import) {\r\n        parseImport();\r\n      } else {\r\n        parseExport();\r\n      }\r\n      return;\r\n    }\r\n    case TokenType.name:\r\n      if (state.contextualKeyword === ContextualKeyword._async) {\r\n        const functionStart = state.start;\r\n        // peek ahead and see if next token is a function\r\n        const snapshot = state.snapshot();\r\n        next();\r\n        if (match(TokenType._function) && !canInsertSemicolon()) {\r\n          expect(TokenType._function);\r\n          parseFunction(functionStart, true);\r\n          return;\r\n        } else {\r\n          state.restoreFromSnapshot(snapshot);\r\n        }\r\n      } else if (\r\n        state.contextualKeyword === ContextualKeyword._using &&\r\n        !hasFollowingLineBreak() &&\r\n        // Statements like `using[0]` and `using in foo` aren't actual using\r\n        // declarations.\r\n        lookaheadType() === TokenType.name\r\n      ) {\r\n        parseVarStatement(true);\r\n        return;\r\n      }\r\n  }\r\n\r\n  // If the statement does not start with a statement keyword or a\r\n  // brace, it's an ExpressionStatement or LabeledStatement. We\r\n  // simply start parsing an expression, and afterwards, if the\r\n  // next token is a colon and the expression was a simple\r\n  // Identifier node, we switch to interpreting it as a label.\r\n  const initialTokensLength = state.tokens.length;\r\n  parseExpression();\r\n  let simpleName = null;\r\n  if (state.tokens.length === initialTokensLength + 1) {\r\n    const token = state.tokens[state.tokens.length - 1];\r\n    if (token.type === TokenType.name) {\r\n      simpleName = token.contextualKeyword;\r\n    }\r\n  }\r\n  if (simpleName == null) {\r\n    semicolon();\r\n    return;\r\n  }\r\n  if (eat(TokenType.colon)) {\r\n    parseLabeledStatement();\r\n  } else {\r\n    // This was an identifier, so we might want to handle flow/typescript-specific cases.\r\n    parseIdentifierStatement(simpleName);\r\n  }\r\n}\r\n\r\nfunction parseDecorators() {\r\n  while (match(TokenType.at)) {\r\n    parseDecorator();\r\n  }\r\n}\r\n\r\nfunction parseDecorator() {\r\n  next();\r\n  if (eat(TokenType.parenL)) {\r\n    parseExpression();\r\n    expect(TokenType.parenR);\r\n  } else {\r\n    parseIdentifier();\r\n    while (eat(TokenType.dot)) {\r\n      parseIdentifier();\r\n    }\r\n    parseMaybeDecoratorArguments();\r\n  }\r\n}\r\n\r\nfunction parseMaybeDecoratorArguments() {\r\n  if (isTypeScriptEnabled) {\r\n    tsParseMaybeDecoratorArguments();\r\n  } else {\r\n    baseParseMaybeDecoratorArguments();\r\n  }\r\n}\r\n\r\nfunction baseParseMaybeDecoratorArguments() {\r\n  if (eat(TokenType.parenL)) {\r\n    parseCallExpressionArguments();\r\n  }\r\n}\r\n\r\nfunction parseBreakContinueStatement() {\r\n  next();\r\n  if (!isLineTerminator()) {\r\n    parseIdentifier();\r\n    semicolon();\r\n  }\r\n}\r\n\r\nfunction parseDebuggerStatement() {\r\n  next();\r\n  semicolon();\r\n}\r\n\r\nfunction parseDoStatement() {\r\n  next();\r\n  parseStatement(false);\r\n  expect(TokenType._while);\r\n  parseParenExpression();\r\n  eat(TokenType.semi);\r\n}\r\n\r\nfunction parseForStatement() {\r\n  state.scopeDepth++;\r\n  const startTokenIndex = state.tokens.length;\r\n  parseAmbiguousForStatement();\r\n  const endTokenIndex = state.tokens.length;\r\n  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, false));\r\n  state.scopeDepth--;\r\n}\r\n\r\n/**\r\n * Determine if this token is a `using` declaration (explicit resource\r\n * management) as part of a loop.\r\n * https://github.com/tc39/proposal-explicit-resource-management\r\n */\r\nfunction isUsingInLoop() {\r\n  if (!isContextual(ContextualKeyword._using)) {\r\n    return false;\r\n  }\r\n  // This must be `for (using of`, where `using` is the name of the loop\r\n  // variable.\r\n  if (isLookaheadContextual(ContextualKeyword._of)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\r\n// loop is non-trivial. Basically, we have to parse the init `var`\r\n// statement or expression, disallowing the `in` operator (see\r\n// the second parameter to `parseExpression`), and then check\r\n// whether the next token is `in` or `of`. When there is no init\r\n// part (semicolon immediately after the opening parenthesis), it\r\n// is a regular `for` loop.\r\nfunction parseAmbiguousForStatement() {\r\n  next();\r\n\r\n  let forAwait = false;\r\n  if (isContextual(ContextualKeyword._await)) {\r\n    forAwait = true;\r\n    next();\r\n  }\r\n  expect(TokenType.parenL);\r\n\r\n  if (match(TokenType.semi)) {\r\n    if (forAwait) {\r\n      unexpected();\r\n    }\r\n    parseFor();\r\n    return;\r\n  }\r\n\r\n  if (match(TokenType._var) || match(TokenType._let) || match(TokenType._const) || isUsingInLoop()) {\r\n    next();\r\n    parseVar(true, state.type !== TokenType._var);\r\n    if (match(TokenType._in) || isContextual(ContextualKeyword._of)) {\r\n      parseForIn(forAwait);\r\n      return;\r\n    }\r\n    parseFor();\r\n    return;\r\n  }\r\n\r\n  parseExpression(true);\r\n  if (match(TokenType._in) || isContextual(ContextualKeyword._of)) {\r\n    parseForIn(forAwait);\r\n    return;\r\n  }\r\n  if (forAwait) {\r\n    unexpected();\r\n  }\r\n  parseFor();\r\n}\r\n\r\nfunction parseFunctionStatement() {\r\n  const functionStart = state.start;\r\n  next();\r\n  parseFunction(functionStart, true);\r\n}\r\n\r\nfunction parseIfStatement() {\r\n  next();\r\n  parseParenExpression();\r\n  parseStatement(false);\r\n  if (eat(TokenType._else)) {\r\n    parseStatement(false);\r\n  }\r\n}\r\n\r\nfunction parseReturnStatement() {\r\n  next();\r\n\r\n  // In `return` (and `break`/`continue`), the keywords with\r\n  // optional arguments, we eagerly look for a semicolon or the\r\n  // possibility to insert one.\r\n\r\n  if (!isLineTerminator()) {\r\n    parseExpression();\r\n    semicolon();\r\n  }\r\n}\r\n\r\nfunction parseSwitchStatement() {\r\n  next();\r\n  parseParenExpression();\r\n  state.scopeDepth++;\r\n  const startTokenIndex = state.tokens.length;\r\n  expect(TokenType.braceL);\r\n\r\n  // Don't bother validation; just go through any sequence of cases, defaults, and statements.\r\n  while (!match(TokenType.braceR) && !state.error) {\r\n    if (match(TokenType._case) || match(TokenType._default)) {\r\n      const isCase = match(TokenType._case);\r\n      next();\r\n      if (isCase) {\r\n        parseExpression();\r\n      }\r\n      expect(TokenType.colon);\r\n    } else {\r\n      parseStatement(true);\r\n    }\r\n  }\r\n  next(); // Closing brace\r\n  const endTokenIndex = state.tokens.length;\r\n  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, false));\r\n  state.scopeDepth--;\r\n}\r\n\r\nfunction parseThrowStatement() {\r\n  next();\r\n  parseExpression();\r\n  semicolon();\r\n}\r\n\r\nfunction parseCatchClauseParam() {\r\n  parseBindingAtom(true /* isBlockScope */);\r\n\r\n  if (isTypeScriptEnabled) {\r\n    tsTryParseTypeAnnotation();\r\n  }\r\n}\r\n\r\nfunction parseTryStatement() {\r\n  next();\r\n\r\n  parseBlock();\r\n\r\n  if (match(TokenType._catch)) {\r\n    next();\r\n    let catchBindingStartTokenIndex = null;\r\n    if (match(TokenType.parenL)) {\r\n      state.scopeDepth++;\r\n      catchBindingStartTokenIndex = state.tokens.length;\r\n      expect(TokenType.parenL);\r\n      parseCatchClauseParam();\r\n      expect(TokenType.parenR);\r\n    }\r\n    parseBlock();\r\n    if (catchBindingStartTokenIndex != null) {\r\n      // We need a special scope for the catch binding which includes the binding itself and the\r\n      // catch block.\r\n      const endTokenIndex = state.tokens.length;\r\n      state.scopes.push(new Scope(catchBindingStartTokenIndex, endTokenIndex, false));\r\n      state.scopeDepth--;\r\n    }\r\n  }\r\n  if (eat(TokenType._finally)) {\r\n    parseBlock();\r\n  }\r\n}\r\n\r\nfunction parseVarStatement(isBlockScope) {\r\n  next();\r\n  parseVar(false, isBlockScope);\r\n  semicolon();\r\n}\r\n\r\nfunction parseWhileStatement() {\r\n  next();\r\n  parseParenExpression();\r\n  parseStatement(false);\r\n}\r\n\r\nfunction parseEmptyStatement() {\r\n  next();\r\n}\r\n\r\nfunction parseLabeledStatement() {\r\n  parseStatement(true);\r\n}\r\n\r\n/**\r\n * Parse a statement starting with an identifier of the given name. Subclasses match on the name\r\n * to handle statements like \"declare\".\r\n */\r\nfunction parseIdentifierStatement(contextualKeyword) {\r\n  if (isTypeScriptEnabled) {\r\n    tsParseIdentifierStatement(contextualKeyword);\r\n  } else if (isFlowEnabled) {\r\n    flowParseIdentifierStatement(contextualKeyword);\r\n  } else {\r\n    semicolon();\r\n  }\r\n}\r\n\r\n// Parse a semicolon-enclosed block of statements.\r\nfunction parseBlock(isFunctionScope = false, contextId = 0) {\r\n  const startTokenIndex = state.tokens.length;\r\n  state.scopeDepth++;\r\n  expect(TokenType.braceL);\r\n  if (contextId) {\r\n    state.tokens[state.tokens.length - 1].contextId = contextId;\r\n  }\r\n  parseBlockBody(TokenType.braceR);\r\n  if (contextId) {\r\n    state.tokens[state.tokens.length - 1].contextId = contextId;\r\n  }\r\n  const endTokenIndex = state.tokens.length;\r\n  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, isFunctionScope));\r\n  state.scopeDepth--;\r\n}\r\n\r\nfunction parseBlockBody(end) {\r\n  while (!eat(end) && !state.error) {\r\n    parseStatement(true);\r\n  }\r\n}\r\n\r\n// Parse a regular `for` loop. The disambiguation code in\r\n// `parseStatement` will already have parsed the init statement or\r\n// expression.\r\n\r\nfunction parseFor() {\r\n  expect(TokenType.semi);\r\n  if (!match(TokenType.semi)) {\r\n    parseExpression();\r\n  }\r\n  expect(TokenType.semi);\r\n  if (!match(TokenType.parenR)) {\r\n    parseExpression();\r\n  }\r\n  expect(TokenType.parenR);\r\n  parseStatement(false);\r\n}\r\n\r\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\r\n// same from parser's perspective.\r\n\r\nfunction parseForIn(forAwait) {\r\n  if (forAwait) {\r\n    eatContextual(ContextualKeyword._of);\r\n  } else {\r\n    next();\r\n  }\r\n  parseExpression();\r\n  expect(TokenType.parenR);\r\n  parseStatement(false);\r\n}\r\n\r\n// Parse a list of variable declarations.\r\n\r\nfunction parseVar(isFor, isBlockScope) {\r\n  while (true) {\r\n    parseVarHead(isBlockScope);\r\n    if (eat(TokenType.eq)) {\r\n      const eqIndex = state.tokens.length - 1;\r\n      parseMaybeAssign(isFor);\r\n      state.tokens[eqIndex].rhsEndIndex = state.tokens.length;\r\n    }\r\n    if (!eat(TokenType.comma)) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseVarHead(isBlockScope) {\r\n  parseBindingAtom(isBlockScope);\r\n  if (isTypeScriptEnabled) {\r\n    tsAfterParseVarHead();\r\n  } else if (isFlowEnabled) {\r\n    flowAfterParseVarHead();\r\n  }\r\n}\r\n\r\n// Parse a function declaration or literal (depending on the\r\n// `isStatement` parameter).\r\n\r\nfunction parseFunction(\r\n  functionStart,\r\n  isStatement,\r\n  optionalId = false,\r\n) {\r\n  if (match(TokenType.star)) {\r\n    next();\r\n  }\r\n\r\n  if (isStatement && !optionalId && !match(TokenType.name) && !match(TokenType._yield)) {\r\n    unexpected();\r\n  }\r\n\r\n  let nameScopeStartTokenIndex = null;\r\n\r\n  if (match(TokenType.name)) {\r\n    // Expression-style functions should limit their name's scope to the function body, so we make\r\n    // a new function scope to enforce that.\r\n    if (!isStatement) {\r\n      nameScopeStartTokenIndex = state.tokens.length;\r\n      state.scopeDepth++;\r\n    }\r\n    parseBindingIdentifier(false);\r\n  }\r\n\r\n  const startTokenIndex = state.tokens.length;\r\n  state.scopeDepth++;\r\n  parseFunctionParams();\r\n  parseFunctionBodyAndFinish(functionStart);\r\n  const endTokenIndex = state.tokens.length;\r\n  // In addition to the block scope of the function body, we need a separate function-style scope\r\n  // that includes the params.\r\n  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, true));\r\n  state.scopeDepth--;\r\n  if (nameScopeStartTokenIndex !== null) {\r\n    state.scopes.push(new Scope(nameScopeStartTokenIndex, endTokenIndex, true));\r\n    state.scopeDepth--;\r\n  }\r\n}\r\n\r\nfunction parseFunctionParams(\r\n  allowModifiers = false,\r\n  funcContextId = 0,\r\n) {\r\n  if (isTypeScriptEnabled) {\r\n    tsStartParseFunctionParams();\r\n  } else if (isFlowEnabled) {\r\n    flowStartParseFunctionParams();\r\n  }\r\n\r\n  expect(TokenType.parenL);\r\n  if (funcContextId) {\r\n    state.tokens[state.tokens.length - 1].contextId = funcContextId;\r\n  }\r\n  parseBindingList(\r\n    TokenType.parenR,\r\n    false /* isBlockScope */,\r\n    false /* allowEmpty */,\r\n    allowModifiers,\r\n    funcContextId,\r\n  );\r\n  if (funcContextId) {\r\n    state.tokens[state.tokens.length - 1].contextId = funcContextId;\r\n  }\r\n}\r\n\r\n// Parse a class declaration or literal (depending on the\r\n// `isStatement` parameter).\r\n\r\nfunction parseClass(isStatement, optionalId = false) {\r\n  // Put a context ID on the class keyword, the open-brace, and the close-brace, so that later\r\n  // code can easily navigate to meaningful points on the class.\r\n  const contextId = getNextContextId();\r\n\r\n  next();\r\n  state.tokens[state.tokens.length - 1].contextId = contextId;\r\n  state.tokens[state.tokens.length - 1].isExpression = !isStatement;\r\n  // Like with functions, we declare a special \"name scope\" from the start of the name to the end\r\n  // of the class, but only with expression-style classes, to represent the fact that the name is\r\n  // available to the body of the class but not an outer declaration.\r\n  let nameScopeStartTokenIndex = null;\r\n  if (!isStatement) {\r\n    nameScopeStartTokenIndex = state.tokens.length;\r\n    state.scopeDepth++;\r\n  }\r\n  parseClassId(isStatement, optionalId);\r\n  parseClassSuper();\r\n  const openBraceIndex = state.tokens.length;\r\n  parseClassBody(contextId);\r\n  if (state.error) {\r\n    return;\r\n  }\r\n  state.tokens[openBraceIndex].contextId = contextId;\r\n  state.tokens[state.tokens.length - 1].contextId = contextId;\r\n  if (nameScopeStartTokenIndex !== null) {\r\n    const endTokenIndex = state.tokens.length;\r\n    state.scopes.push(new Scope(nameScopeStartTokenIndex, endTokenIndex, false));\r\n    state.scopeDepth--;\r\n  }\r\n}\r\n\r\nfunction isClassProperty() {\r\n  return match(TokenType.eq) || match(TokenType.semi) || match(TokenType.braceR) || match(TokenType.bang) || match(TokenType.colon);\r\n}\r\n\r\nfunction isClassMethod() {\r\n  return match(TokenType.parenL) || match(TokenType.lessThan);\r\n}\r\n\r\nfunction parseClassBody(classContextId) {\r\n  expect(TokenType.braceL);\r\n\r\n  while (!eat(TokenType.braceR) && !state.error) {\r\n    if (eat(TokenType.semi)) {\r\n      continue;\r\n    }\r\n\r\n    if (match(TokenType.at)) {\r\n      parseDecorator();\r\n      continue;\r\n    }\r\n    const memberStart = state.start;\r\n    parseClassMember(memberStart, classContextId);\r\n  }\r\n}\r\n\r\nfunction parseClassMember(memberStart, classContextId) {\r\n  if (isTypeScriptEnabled) {\r\n    tsParseModifiers([\r\n      ContextualKeyword._declare,\r\n      ContextualKeyword._public,\r\n      ContextualKeyword._protected,\r\n      ContextualKeyword._private,\r\n      ContextualKeyword._override,\r\n    ]);\r\n  }\r\n  let isStatic = false;\r\n  if (match(TokenType.name) && state.contextualKeyword === ContextualKeyword._static) {\r\n    parseIdentifier(); // eats 'static'\r\n    if (isClassMethod()) {\r\n      parseClassMethod(memberStart, /* isConstructor */ false);\r\n      return;\r\n    } else if (isClassProperty()) {\r\n      parseClassProperty();\r\n      return;\r\n    }\r\n    // otherwise something static\r\n    state.tokens[state.tokens.length - 1].type = TokenType._static;\r\n    isStatic = true;\r\n\r\n    if (match(TokenType.braceL)) {\r\n      // This is a static block. Mark the word \"static\" with the class context ID for class element\r\n      // detection and parse as a regular block.\r\n      state.tokens[state.tokens.length - 1].contextId = classContextId;\r\n      parseBlock();\r\n      return;\r\n    }\r\n  }\r\n\r\n  parseClassMemberWithIsStatic(memberStart, isStatic, classContextId);\r\n}\r\n\r\nfunction parseClassMemberWithIsStatic(\r\n  memberStart,\r\n  isStatic,\r\n  classContextId,\r\n) {\r\n  if (isTypeScriptEnabled) {\r\n    if (tsTryParseClassMemberWithIsStatic(isStatic)) {\r\n      return;\r\n    }\r\n  }\r\n  if (eat(TokenType.star)) {\r\n    // a generator\r\n    parseClassPropertyName(classContextId);\r\n    parseClassMethod(memberStart, /* isConstructor */ false);\r\n    return;\r\n  }\r\n\r\n  // Get the identifier name so we can tell if it's actually a keyword like \"async\", \"get\", or\r\n  // \"set\".\r\n  parseClassPropertyName(classContextId);\r\n  let isConstructor = false;\r\n  const token = state.tokens[state.tokens.length - 1];\r\n  // We allow \"constructor\" as either an identifier or a string.\r\n  if (token.contextualKeyword === ContextualKeyword._constructor) {\r\n    isConstructor = true;\r\n  }\r\n  parsePostMemberNameModifiers();\r\n\r\n  if (isClassMethod()) {\r\n    parseClassMethod(memberStart, isConstructor);\r\n  } else if (isClassProperty()) {\r\n    parseClassProperty();\r\n  } else if (token.contextualKeyword === ContextualKeyword._async && !isLineTerminator()) {\r\n    state.tokens[state.tokens.length - 1].type = TokenType._async;\r\n    // an async method\r\n    const isGenerator = match(TokenType.star);\r\n    if (isGenerator) {\r\n      next();\r\n    }\r\n\r\n    // The so-called parsed name would have been \"async\": get the real name.\r\n    parseClassPropertyName(classContextId);\r\n    parsePostMemberNameModifiers();\r\n    parseClassMethod(memberStart, false /* isConstructor */);\r\n  } else if (\r\n    (token.contextualKeyword === ContextualKeyword._get ||\r\n      token.contextualKeyword === ContextualKeyword._set) &&\r\n    !(isLineTerminator() && match(TokenType.star))\r\n  ) {\r\n    if (token.contextualKeyword === ContextualKeyword._get) {\r\n      state.tokens[state.tokens.length - 1].type = TokenType._get;\r\n    } else {\r\n      state.tokens[state.tokens.length - 1].type = TokenType._set;\r\n    }\r\n    // `get\\n*` is an uninitialized property named 'get' followed by a generator.\r\n    // a getter or setter\r\n    // The so-called parsed name would have been \"get/set\": get the real name.\r\n    parseClassPropertyName(classContextId);\r\n    parseClassMethod(memberStart, /* isConstructor */ false);\r\n  } else if (token.contextualKeyword === ContextualKeyword._accessor && !isLineTerminator()) {\r\n    parseClassPropertyName(classContextId);\r\n    parseClassProperty();\r\n  } else if (isLineTerminator()) {\r\n    // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\r\n    parseClassProperty();\r\n  } else {\r\n    unexpected();\r\n  }\r\n}\r\n\r\nfunction parseClassMethod(functionStart, isConstructor) {\r\n  if (isTypeScriptEnabled) {\r\n    tsTryParseTypeParameters();\r\n  } else if (isFlowEnabled) {\r\n    if (match(TokenType.lessThan)) {\r\n      flowParseTypeParameterDeclaration();\r\n    }\r\n  }\r\n  parseMethod(functionStart, isConstructor);\r\n}\r\n\r\n// Return the name of the class property, if it is a simple identifier.\r\nfunction parseClassPropertyName(classContextId) {\r\n  parsePropertyName(classContextId);\r\n}\r\n\r\nfunction parsePostMemberNameModifiers() {\r\n  if (isTypeScriptEnabled) {\r\n    const oldIsType = pushTypeContext(0);\r\n    eat(TokenType.question);\r\n    popTypeContext(oldIsType);\r\n  }\r\n}\r\n\r\nfunction parseClassProperty() {\r\n  if (isTypeScriptEnabled) {\r\n    eatTypeToken(TokenType.bang);\r\n    tsTryParseTypeAnnotation();\r\n  } else if (isFlowEnabled) {\r\n    if (match(TokenType.colon)) {\r\n      flowParseTypeAnnotation();\r\n    }\r\n  }\r\n\r\n  if (match(TokenType.eq)) {\r\n    const equalsTokenIndex = state.tokens.length;\r\n    next();\r\n    parseMaybeAssign();\r\n    state.tokens[equalsTokenIndex].rhsEndIndex = state.tokens.length;\r\n  }\r\n  semicolon();\r\n}\r\n\r\nfunction parseClassId(isStatement, optionalId = false) {\r\n  if (\r\n    isTypeScriptEnabled &&\r\n    (!isStatement || optionalId) &&\r\n    isContextual(ContextualKeyword._implements)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  if (match(TokenType.name)) {\r\n    parseBindingIdentifier(true);\r\n  }\r\n\r\n  if (isTypeScriptEnabled) {\r\n    tsTryParseTypeParameters();\r\n  } else if (isFlowEnabled) {\r\n    if (match(TokenType.lessThan)) {\r\n      flowParseTypeParameterDeclaration();\r\n    }\r\n  }\r\n}\r\n\r\n// Returns true if there was a superclass.\r\nfunction parseClassSuper() {\r\n  let hasSuper = false;\r\n  if (eat(TokenType._extends)) {\r\n    parseExprSubscripts();\r\n    hasSuper = true;\r\n  } else {\r\n    hasSuper = false;\r\n  }\r\n  if (isTypeScriptEnabled) {\r\n    tsAfterParseClassSuper(hasSuper);\r\n  } else if (isFlowEnabled) {\r\n    flowAfterParseClassSuper(hasSuper);\r\n  }\r\n}\r\n\r\n// Parses module export declaration.\r\n\r\nfunction parseExport() {\r\n  const exportIndex = state.tokens.length - 1;\r\n  if (isTypeScriptEnabled) {\r\n    if (tsTryParseExport()) {\r\n      return;\r\n    }\r\n  }\r\n  // export * from '...'\r\n  if (shouldParseExportStar()) {\r\n    parseExportStar();\r\n  } else if (isExportDefaultSpecifier()) {\r\n    // export default from\r\n    parseIdentifier();\r\n    if (match(TokenType.comma) && lookaheadType() === TokenType.star) {\r\n      expect(TokenType.comma);\r\n      expect(TokenType.star);\r\n      expectContextual(ContextualKeyword._as);\r\n      parseIdentifier();\r\n    } else {\r\n      parseExportSpecifiersMaybe();\r\n    }\r\n    parseExportFrom();\r\n  } else if (eat(TokenType._default)) {\r\n    // export default ...\r\n    parseExportDefaultExpression();\r\n  } else if (shouldParseExportDeclaration()) {\r\n    parseExportDeclaration();\r\n  } else {\r\n    // export { x, y as z } [from '...']\r\n    parseExportSpecifiers();\r\n    parseExportFrom();\r\n  }\r\n  state.tokens[exportIndex].rhsEndIndex = state.tokens.length;\r\n}\r\n\r\nfunction parseExportDefaultExpression() {\r\n  if (isTypeScriptEnabled) {\r\n    if (tsTryParseExportDefaultExpression()) {\r\n      return;\r\n    }\r\n  }\r\n  if (isFlowEnabled) {\r\n    if (flowTryParseExportDefaultExpression()) {\r\n      return;\r\n    }\r\n  }\r\n  const functionStart = state.start;\r\n  if (eat(TokenType._function)) {\r\n    parseFunction(functionStart, true, true);\r\n  } else if (isContextual(ContextualKeyword._async) && lookaheadType() === TokenType._function) {\r\n    // async function declaration\r\n    eatContextual(ContextualKeyword._async);\r\n    eat(TokenType._function);\r\n    parseFunction(functionStart, true, true);\r\n  } else if (match(TokenType._class)) {\r\n    parseClass(true, true);\r\n  } else if (match(TokenType.at)) {\r\n    parseDecorators();\r\n    parseClass(true, true);\r\n  } else {\r\n    parseMaybeAssign();\r\n    semicolon();\r\n  }\r\n}\r\n\r\nfunction parseExportDeclaration() {\r\n  if (isTypeScriptEnabled) {\r\n    tsParseExportDeclaration();\r\n  } else if (isFlowEnabled) {\r\n    flowParseExportDeclaration();\r\n  } else {\r\n    parseStatement(true);\r\n  }\r\n}\r\n\r\nfunction isExportDefaultSpecifier() {\r\n  if (isTypeScriptEnabled && tsIsDeclarationStart()) {\r\n    return false;\r\n  } else if (isFlowEnabled && flowShouldDisallowExportDefaultSpecifier()) {\r\n    return false;\r\n  }\r\n  if (match(TokenType.name)) {\r\n    return state.contextualKeyword !== ContextualKeyword._async;\r\n  }\r\n\r\n  if (!match(TokenType._default)) {\r\n    return false;\r\n  }\r\n\r\n  const _next = nextTokenStart();\r\n  const lookahead = lookaheadTypeAndKeyword();\r\n  const hasFrom =\r\n    lookahead.type === TokenType.name && lookahead.contextualKeyword === ContextualKeyword._from;\r\n  if (lookahead.type === TokenType.comma) {\r\n    return true;\r\n  }\r\n  // lookahead again when `export default from` is seen\r\n  if (hasFrom) {\r\n    const nextAfterFrom = input.charCodeAt(nextTokenStartSince(_next + 4));\r\n    return nextAfterFrom === charCodes.quotationMark || nextAfterFrom === charCodes.apostrophe;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction parseExportSpecifiersMaybe() {\r\n  if (eat(TokenType.comma)) {\r\n    parseExportSpecifiers();\r\n  }\r\n}\r\n\r\nfunction parseExportFrom() {\r\n  if (eatContextual(ContextualKeyword._from)) {\r\n    parseExprAtom();\r\n    maybeParseImportAssertions();\r\n  }\r\n  semicolon();\r\n}\r\n\r\nfunction shouldParseExportStar() {\r\n  if (isFlowEnabled) {\r\n    return flowShouldParseExportStar();\r\n  } else {\r\n    return match(TokenType.star);\r\n  }\r\n}\r\n\r\nfunction parseExportStar() {\r\n  if (isFlowEnabled) {\r\n    flowParseExportStar();\r\n  } else {\r\n    baseParseExportStar();\r\n  }\r\n}\r\n\r\nfunction baseParseExportStar() {\r\n  expect(TokenType.star);\r\n\r\n  if (isContextual(ContextualKeyword._as)) {\r\n    parseExportNamespace();\r\n  } else {\r\n    parseExportFrom();\r\n  }\r\n}\r\n\r\nfunction parseExportNamespace() {\r\n  next();\r\n  state.tokens[state.tokens.length - 1].type = TokenType._as;\r\n  parseIdentifier();\r\n  parseExportSpecifiersMaybe();\r\n  parseExportFrom();\r\n}\r\n\r\nfunction shouldParseExportDeclaration() {\r\n  return (\r\n    (isTypeScriptEnabled && tsIsDeclarationStart()) ||\r\n    (isFlowEnabled && flowShouldParseExportDeclaration()) ||\r\n    state.type === TokenType._var ||\r\n    state.type === TokenType._const ||\r\n    state.type === TokenType._let ||\r\n    state.type === TokenType._function ||\r\n    state.type === TokenType._class ||\r\n    isContextual(ContextualKeyword._async) ||\r\n    match(TokenType.at)\r\n  );\r\n}\r\n\r\n// Parses a comma-separated list of module exports.\r\nfunction parseExportSpecifiers() {\r\n  let first = true;\r\n\r\n  // export { x, y as z } [from '...']\r\n  expect(TokenType.braceL);\r\n\r\n  while (!eat(TokenType.braceR) && !state.error) {\r\n    if (first) {\r\n      first = false;\r\n    } else {\r\n      expect(TokenType.comma);\r\n      if (eat(TokenType.braceR)) {\r\n        break;\r\n      }\r\n    }\r\n    parseExportSpecifier();\r\n  }\r\n}\r\n\r\nfunction parseExportSpecifier() {\r\n  if (isTypeScriptEnabled) {\r\n    tsParseExportSpecifier();\r\n    return;\r\n  }\r\n  parseIdentifier();\r\n  state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ExportAccess;\r\n  if (eatContextual(ContextualKeyword._as)) {\r\n    parseIdentifier();\r\n  }\r\n}\r\n\r\n/**\r\n * Starting at the `module` token in an import, determine if it was truly an\r\n * import reflection token or just looks like one.\r\n *\r\n * Returns true for:\r\n * import module foo from \"foo\";\r\n * import module from from \"foo\";\r\n *\r\n * Returns false for:\r\n * import module from \"foo\";\r\n * import module, {bar} from \"foo\";\r\n */\r\nfunction isImportReflection() {\r\n  const snapshot = state.snapshot();\r\n  expectContextual(ContextualKeyword._module);\r\n  if (eatContextual(ContextualKeyword._from)) {\r\n    if (isContextual(ContextualKeyword._from)) {\r\n      state.restoreFromSnapshot(snapshot);\r\n      return true;\r\n    } else {\r\n      state.restoreFromSnapshot(snapshot);\r\n      return false;\r\n    }\r\n  } else if (match(TokenType.comma)) {\r\n    state.restoreFromSnapshot(snapshot);\r\n    return false;\r\n  } else {\r\n    state.restoreFromSnapshot(snapshot);\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Eat the \"module\" token from the import reflection proposal.\r\n * https://github.com/tc39/proposal-import-reflection\r\n */\r\nfunction parseMaybeImportReflection() {\r\n  // isImportReflection does snapshot/restore, so only run it if we see the word\r\n  // \"module\".\r\n  if (isContextual(ContextualKeyword._module) && isImportReflection()) {\r\n    next();\r\n  }\r\n}\r\n\r\n// Parses import declaration.\r\n\r\nfunction parseImport() {\r\n  if (isTypeScriptEnabled && match(TokenType.name) && lookaheadType() === TokenType.eq) {\r\n    tsParseImportEqualsDeclaration();\r\n    return;\r\n  }\r\n  if (isTypeScriptEnabled && isContextual(ContextualKeyword._type)) {\r\n    const lookahead = lookaheadTypeAndKeyword();\r\n    if (lookahead.type === TokenType.name && lookahead.contextualKeyword !== ContextualKeyword._from) {\r\n      // One of these `import type` cases:\r\n      // import type T = require('T');\r\n      // import type A from 'A';\r\n      expectContextual(ContextualKeyword._type);\r\n      if (lookaheadType() === TokenType.eq) {\r\n        tsParseImportEqualsDeclaration();\r\n        return;\r\n      }\r\n      // If this is an `import type...from` statement, then we already ate the\r\n      // type token, so proceed to the regular import parser.\r\n    } else if (lookahead.type === TokenType.star || lookahead.type === TokenType.braceL) {\r\n      // One of these `import type` cases, in which case we can eat the type token\r\n      // and proceed as normal:\r\n      // import type * as A from 'A';\r\n      // import type {a} from 'A';\r\n      expectContextual(ContextualKeyword._type);\r\n    }\r\n    // Otherwise, we are importing the name \"type\".\r\n  }\r\n\r\n  // import '...'\r\n  if (match(TokenType.string)) {\r\n    parseExprAtom();\r\n  } else {\r\n    parseMaybeImportReflection();\r\n    parseImportSpecifiers();\r\n    expectContextual(ContextualKeyword._from);\r\n    parseExprAtom();\r\n  }\r\n  maybeParseImportAssertions();\r\n  semicolon();\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction shouldParseDefaultImport() {\r\n  return match(TokenType.name);\r\n}\r\n\r\nfunction parseImportSpecifierLocal() {\r\n  parseImportedIdentifier();\r\n}\r\n\r\n// Parses a comma-separated list of module imports.\r\nfunction parseImportSpecifiers() {\r\n  if (isFlowEnabled) {\r\n    flowStartParseImportSpecifiers();\r\n  }\r\n\r\n  let first = true;\r\n  if (shouldParseDefaultImport()) {\r\n    // import defaultObj, { x, y as z } from '...'\r\n    parseImportSpecifierLocal();\r\n\r\n    if (!eat(TokenType.comma)) return;\r\n  }\r\n\r\n  if (match(TokenType.star)) {\r\n    next();\r\n    expectContextual(ContextualKeyword._as);\r\n\r\n    parseImportSpecifierLocal();\r\n\r\n    return;\r\n  }\r\n\r\n  expect(TokenType.braceL);\r\n  while (!eat(TokenType.braceR) && !state.error) {\r\n    if (first) {\r\n      first = false;\r\n    } else {\r\n      // Detect an attempt to deep destructure\r\n      if (eat(TokenType.colon)) {\r\n        unexpected(\r\n          \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\r\n        );\r\n      }\r\n\r\n      expect(TokenType.comma);\r\n      if (eat(TokenType.braceR)) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    parseImportSpecifier();\r\n  }\r\n}\r\n\r\nfunction parseImportSpecifier() {\r\n  if (isTypeScriptEnabled) {\r\n    tsParseImportSpecifier();\r\n    return;\r\n  }\r\n  if (isFlowEnabled) {\r\n    flowParseImportSpecifier();\r\n    return;\r\n  }\r\n  parseImportedIdentifier();\r\n  if (isContextual(ContextualKeyword._as)) {\r\n    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportAccess;\r\n    next();\r\n    parseImportedIdentifier();\r\n  }\r\n}\r\n\r\n/**\r\n * Parse import assertions like `assert {type: \"json\"}`.\r\n *\r\n * Import assertions technically have their own syntax, but are always parseable\r\n * as a plain JS object, so just do that for simplicity.\r\n */\r\nfunction maybeParseImportAssertions() {\r\n  if (isContextual(ContextualKeyword._assert) && !hasPrecedingLineBreak()) {\r\n    next();\r\n    parseObj(false, false);\r\n  }\r\n}\r\n\r\nfunction parseFile() {\r\n  // If enabled, skip leading hashbang line.\r\n  if (\r\n    state.pos === 0 &&\r\n    input.charCodeAt(0) === charCodes.numberSign &&\r\n    input.charCodeAt(1) === charCodes.exclamationMark\r\n  ) {\r\n    skipLineComment(2);\r\n  }\r\n  nextToken();\r\n  return parseTopLevel();\r\n}\r\n\r\nlet File$1 = class File {\r\n  \r\n  \r\n\r\n  constructor(tokens, scopes) {\r\n    this.tokens = tokens;\r\n    this.scopes = scopes;\r\n  }\r\n};\r\n\r\nfunction parse(\r\n  input,\r\n  isJSXEnabled,\r\n  isTypeScriptEnabled,\r\n  isFlowEnabled,\r\n) {\r\n  if (isFlowEnabled && isTypeScriptEnabled) {\r\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\r\n  }\r\n  initParser(input, isJSXEnabled, isTypeScriptEnabled, isFlowEnabled);\r\n  const result = parseFile();\r\n  if (state.error) {\r\n    throw augmentError(state.error);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine whether this optional chain or nullish coalescing operation has any await statements in\r\n * it. If so, we'll need to transpile to an async operation.\r\n *\r\n * We compute this by walking the length of the operation and returning true if we see an await\r\n * keyword used as a real await (rather than an object key or property access). Nested optional\r\n * chain/nullish operations need to be tracked but don't silence await, but a nested async function\r\n * (or any other nested scope) will make the await not count.\r\n */\r\nfunction isAsyncOperation(tokens) {\r\n  let index = tokens.currentIndex();\r\n  let depth = 0;\r\n  const startToken = tokens.currentToken();\r\n  do {\r\n    const token = tokens.tokens[index];\r\n    if (token.isOptionalChainStart) {\r\n      depth++;\r\n    }\r\n    if (token.isOptionalChainEnd) {\r\n      depth--;\r\n    }\r\n    depth += token.numNullishCoalesceStarts;\r\n    depth -= token.numNullishCoalesceEnds;\r\n\r\n    if (\r\n      token.contextualKeyword === ContextualKeyword._await &&\r\n      token.identifierRole == null &&\r\n      token.scopeDepth === startToken.scopeDepth\r\n    ) {\r\n      return true;\r\n    }\r\n    index += 1;\r\n  } while (depth > 0 && index < tokens.tokens.length);\r\n  return false;\r\n}\r\n\r\nclass TokenProcessor {\r\n   __init() {this.resultCode = \"\";}\r\n  // Array mapping input token index to optional string index position in the\r\n  // output code.\r\n   __init2() {this.resultMappings = new Array(this.tokens.length);}\r\n   __init3() {this.tokenIndex = 0;}\r\n\r\n  constructor(\r\n     code,\r\n     tokens,\r\n     isFlowEnabled,\r\n     disableESTransforms,\r\n     helperManager,\r\n  ) {this.code = code;this.tokens = tokens;this.isFlowEnabled = isFlowEnabled;this.disableESTransforms = disableESTransforms;this.helperManager = helperManager;TokenProcessor.prototype.__init.call(this);TokenProcessor.prototype.__init2.call(this);TokenProcessor.prototype.__init3.call(this);}\r\n\r\n  /**\r\n   * Snapshot the token state in a way that can be restored later, useful for\r\n   * things like lookahead.\r\n   *\r\n   * resultMappings do not need to be copied since in all use cases, they will\r\n   * be overwritten anyway after restore.\r\n   */\r\n  snapshot() {\r\n    return {\r\n      resultCode: this.resultCode,\r\n      tokenIndex: this.tokenIndex,\r\n    };\r\n  }\r\n\r\n  restoreToSnapshot(snapshot) {\r\n    this.resultCode = snapshot.resultCode;\r\n    this.tokenIndex = snapshot.tokenIndex;\r\n  }\r\n\r\n  /**\r\n   * Remove and return the code generated since the snapshot, leaving the\r\n   * current token position in-place. Unlike most TokenProcessor operations,\r\n   * this operation can result in input/output line number mismatches because\r\n   * the removed code may contain newlines, so this operation should be used\r\n   * sparingly.\r\n   */\r\n  dangerouslyGetAndRemoveCodeSinceSnapshot(snapshot) {\r\n    const result = this.resultCode.slice(snapshot.resultCode.length);\r\n    this.resultCode = snapshot.resultCode;\r\n    return result;\r\n  }\r\n\r\n  reset() {\r\n    this.resultCode = \"\";\r\n    this.resultMappings = new Array(this.tokens.length);\r\n    this.tokenIndex = 0;\r\n  }\r\n\r\n  matchesContextualAtIndex(index, contextualKeyword) {\r\n    return (\r\n      this.matches1AtIndex(index, TokenType.name) &&\r\n      this.tokens[index].contextualKeyword === contextualKeyword\r\n    );\r\n  }\r\n\r\n  identifierNameAtIndex(index) {\r\n    // TODO: We need to process escapes since technically you can have unicode escapes in variable\r\n    // names.\r\n    return this.identifierNameForToken(this.tokens[index]);\r\n  }\r\n\r\n  identifierNameAtRelativeIndex(relativeIndex) {\r\n    return this.identifierNameForToken(this.tokenAtRelativeIndex(relativeIndex));\r\n  }\r\n\r\n  identifierName() {\r\n    return this.identifierNameForToken(this.currentToken());\r\n  }\r\n\r\n  identifierNameForToken(token) {\r\n    return this.code.slice(token.start, token.end);\r\n  }\r\n\r\n  rawCodeForToken(token) {\r\n    return this.code.slice(token.start, token.end);\r\n  }\r\n\r\n  stringValueAtIndex(index) {\r\n    return this.stringValueForToken(this.tokens[index]);\r\n  }\r\n\r\n  stringValue() {\r\n    return this.stringValueForToken(this.currentToken());\r\n  }\r\n\r\n  stringValueForToken(token) {\r\n    // This is used to identify when two imports are the same and to resolve TypeScript enum keys.\r\n    // Ideally we'd process escapes within the strings, but for now we pretty much take the raw\r\n    // code.\r\n    return this.code.slice(token.start + 1, token.end - 1);\r\n  }\r\n\r\n  matches1AtIndex(index, t1) {\r\n    return this.tokens[index].type === t1;\r\n  }\r\n\r\n  matches2AtIndex(index, t1, t2) {\r\n    return this.tokens[index].type === t1 && this.tokens[index + 1].type === t2;\r\n  }\r\n\r\n  matches3AtIndex(index, t1, t2, t3) {\r\n    return (\r\n      this.tokens[index].type === t1 &&\r\n      this.tokens[index + 1].type === t2 &&\r\n      this.tokens[index + 2].type === t3\r\n    );\r\n  }\r\n\r\n  matches1(t1) {\r\n    return this.tokens[this.tokenIndex].type === t1;\r\n  }\r\n\r\n  matches2(t1, t2) {\r\n    return this.tokens[this.tokenIndex].type === t1 && this.tokens[this.tokenIndex + 1].type === t2;\r\n  }\r\n\r\n  matches3(t1, t2, t3) {\r\n    return (\r\n      this.tokens[this.tokenIndex].type === t1 &&\r\n      this.tokens[this.tokenIndex + 1].type === t2 &&\r\n      this.tokens[this.tokenIndex + 2].type === t3\r\n    );\r\n  }\r\n\r\n  matches4(t1, t2, t3, t4) {\r\n    return (\r\n      this.tokens[this.tokenIndex].type === t1 &&\r\n      this.tokens[this.tokenIndex + 1].type === t2 &&\r\n      this.tokens[this.tokenIndex + 2].type === t3 &&\r\n      this.tokens[this.tokenIndex + 3].type === t4\r\n    );\r\n  }\r\n\r\n  matches5(t1, t2, t3, t4, t5) {\r\n    return (\r\n      this.tokens[this.tokenIndex].type === t1 &&\r\n      this.tokens[this.tokenIndex + 1].type === t2 &&\r\n      this.tokens[this.tokenIndex + 2].type === t3 &&\r\n      this.tokens[this.tokenIndex + 3].type === t4 &&\r\n      this.tokens[this.tokenIndex + 4].type === t5\r\n    );\r\n  }\r\n\r\n  matchesContextual(contextualKeyword) {\r\n    return this.matchesContextualAtIndex(this.tokenIndex, contextualKeyword);\r\n  }\r\n\r\n  matchesContextIdAndLabel(type, contextId) {\r\n    return this.matches1(type) && this.currentToken().contextId === contextId;\r\n  }\r\n\r\n  previousWhitespaceAndComments() {\r\n    let whitespaceAndComments = this.code.slice(\r\n      this.tokenIndex > 0 ? this.tokens[this.tokenIndex - 1].end : 0,\r\n      this.tokenIndex < this.tokens.length ? this.tokens[this.tokenIndex].start : this.code.length,\r\n    );\r\n    if (this.isFlowEnabled) {\r\n      whitespaceAndComments = whitespaceAndComments.replace(/@flow/g, \"\");\r\n    }\r\n    return whitespaceAndComments;\r\n  }\r\n\r\n  replaceToken(newCode) {\r\n    this.resultCode += this.previousWhitespaceAndComments();\r\n    this.appendTokenPrefix();\r\n    this.resultMappings[this.tokenIndex] = this.resultCode.length;\r\n    this.resultCode += newCode;\r\n    this.appendTokenSuffix();\r\n    this.tokenIndex++;\r\n  }\r\n\r\n  replaceTokenTrimmingLeftWhitespace(newCode) {\r\n    this.resultCode += this.previousWhitespaceAndComments().replace(/[^\\r\\n]/g, \"\");\r\n    this.appendTokenPrefix();\r\n    this.resultMappings[this.tokenIndex] = this.resultCode.length;\r\n    this.resultCode += newCode;\r\n    this.appendTokenSuffix();\r\n    this.tokenIndex++;\r\n  }\r\n\r\n  removeInitialToken() {\r\n    this.replaceToken(\"\");\r\n  }\r\n\r\n  removeToken() {\r\n    this.replaceTokenTrimmingLeftWhitespace(\"\");\r\n  }\r\n\r\n  /**\r\n   * Remove all code until the next }, accounting for balanced braces.\r\n   */\r\n  removeBalancedCode() {\r\n    let braceDepth = 0;\r\n    while (!this.isAtEnd()) {\r\n      if (this.matches1(TokenType.braceL)) {\r\n        braceDepth++;\r\n      } else if (this.matches1(TokenType.braceR)) {\r\n        if (braceDepth === 0) {\r\n          return;\r\n        }\r\n        braceDepth--;\r\n      }\r\n      this.removeToken();\r\n    }\r\n  }\r\n\r\n  copyExpectedToken(tokenType) {\r\n    if (this.tokens[this.tokenIndex].type !== tokenType) {\r\n      throw new Error(`Expected token ${tokenType}`);\r\n    }\r\n    this.copyToken();\r\n  }\r\n\r\n  copyToken() {\r\n    this.resultCode += this.previousWhitespaceAndComments();\r\n    this.appendTokenPrefix();\r\n    this.resultMappings[this.tokenIndex] = this.resultCode.length;\r\n    this.resultCode += this.code.slice(\r\n      this.tokens[this.tokenIndex].start,\r\n      this.tokens[this.tokenIndex].end,\r\n    );\r\n    this.appendTokenSuffix();\r\n    this.tokenIndex++;\r\n  }\r\n\r\n  copyTokenWithPrefix(prefix) {\r\n    this.resultCode += this.previousWhitespaceAndComments();\r\n    this.appendTokenPrefix();\r\n    this.resultCode += prefix;\r\n    this.resultMappings[this.tokenIndex] = this.resultCode.length;\r\n    this.resultCode += this.code.slice(\r\n      this.tokens[this.tokenIndex].start,\r\n      this.tokens[this.tokenIndex].end,\r\n    );\r\n    this.appendTokenSuffix();\r\n    this.tokenIndex++;\r\n  }\r\n\r\n   appendTokenPrefix() {\r\n    const token = this.currentToken();\r\n    if (token.numNullishCoalesceStarts || token.isOptionalChainStart) {\r\n      token.isAsyncOperation = isAsyncOperation(this);\r\n    }\r\n    if (this.disableESTransforms) {\r\n      return;\r\n    }\r\n    if (token.numNullishCoalesceStarts) {\r\n      for (let i = 0; i < token.numNullishCoalesceStarts; i++) {\r\n        if (token.isAsyncOperation) {\r\n          this.resultCode += \"await \";\r\n          this.resultCode += this.helperManager.getHelperName(\"asyncNullishCoalesce\");\r\n        } else {\r\n          this.resultCode += this.helperManager.getHelperName(\"nullishCoalesce\");\r\n        }\r\n        this.resultCode += \"(\";\r\n      }\r\n    }\r\n    if (token.isOptionalChainStart) {\r\n      if (token.isAsyncOperation) {\r\n        this.resultCode += \"await \";\r\n      }\r\n      if (this.tokenIndex > 0 && this.tokenAtRelativeIndex(-1).type === TokenType._delete) {\r\n        if (token.isAsyncOperation) {\r\n          this.resultCode += this.helperManager.getHelperName(\"asyncOptionalChainDelete\");\r\n        } else {\r\n          this.resultCode += this.helperManager.getHelperName(\"optionalChainDelete\");\r\n        }\r\n      } else if (token.isAsyncOperation) {\r\n        this.resultCode += this.helperManager.getHelperName(\"asyncOptionalChain\");\r\n      } else {\r\n        this.resultCode += this.helperManager.getHelperName(\"optionalChain\");\r\n      }\r\n      this.resultCode += \"([\";\r\n    }\r\n  }\r\n\r\n   appendTokenSuffix() {\r\n    const token = this.currentToken();\r\n    if (token.isOptionalChainEnd && !this.disableESTransforms) {\r\n      this.resultCode += \"])\";\r\n    }\r\n    if (token.numNullishCoalesceEnds && !this.disableESTransforms) {\r\n      for (let i = 0; i < token.numNullishCoalesceEnds; i++) {\r\n        this.resultCode += \"))\";\r\n      }\r\n    }\r\n  }\r\n\r\n  appendCode(code) {\r\n    this.resultCode += code;\r\n  }\r\n\r\n  currentToken() {\r\n    return this.tokens[this.tokenIndex];\r\n  }\r\n\r\n  currentTokenCode() {\r\n    const token = this.currentToken();\r\n    return this.code.slice(token.start, token.end);\r\n  }\r\n\r\n  tokenAtRelativeIndex(relativeIndex) {\r\n    return this.tokens[this.tokenIndex + relativeIndex];\r\n  }\r\n\r\n  currentIndex() {\r\n    return this.tokenIndex;\r\n  }\r\n\r\n  /**\r\n   * Move to the next token. Only suitable in preprocessing steps. When\r\n   * generating new code, you should use copyToken or removeToken.\r\n   */\r\n  nextToken() {\r\n    if (this.tokenIndex === this.tokens.length) {\r\n      throw new Error(\"Unexpectedly reached end of input.\");\r\n    }\r\n    this.tokenIndex++;\r\n  }\r\n\r\n  previousToken() {\r\n    this.tokenIndex--;\r\n  }\r\n\r\n  finish() {\r\n    if (this.tokenIndex !== this.tokens.length) {\r\n      throw new Error(\"Tried to finish processing tokens before reaching the end.\");\r\n    }\r\n    this.resultCode += this.previousWhitespaceAndComments();\r\n    return {code: this.resultCode, mappings: this.resultMappings};\r\n  }\r\n\r\n  isAtEnd() {\r\n    return this.tokenIndex === this.tokens.length;\r\n  }\r\n}\r\n\r\n/**\r\n * Get information about the class fields for this class, given a token processor pointing to the\r\n * open-brace at the start of the class.\r\n */\r\nfunction getClassInfo(\r\n  rootTransformer,\r\n  tokens,\r\n  nameManager,\r\n  disableESTransforms,\r\n) {\r\n  const snapshot = tokens.snapshot();\r\n\r\n  const headerInfo = processClassHeader(tokens);\r\n\r\n  let constructorInitializerStatements = [];\r\n  const instanceInitializerNames = [];\r\n  const staticInitializerNames = [];\r\n  let constructorInsertPos = null;\r\n  const fields = [];\r\n  const rangesToRemove = [];\r\n\r\n  const classContextId = tokens.currentToken().contextId;\r\n  if (classContextId == null) {\r\n    throw new Error(\"Expected non-null class context ID on class open-brace.\");\r\n  }\r\n\r\n  tokens.nextToken();\r\n  while (!tokens.matchesContextIdAndLabel(TokenType.braceR, classContextId)) {\r\n    if (tokens.matchesContextual(ContextualKeyword._constructor) && !tokens.currentToken().isType) {\r\n      ({constructorInitializerStatements, constructorInsertPos} = processConstructor(tokens));\r\n    } else if (tokens.matches1(TokenType.semi)) {\r\n      if (!disableESTransforms) {\r\n        rangesToRemove.push({start: tokens.currentIndex(), end: tokens.currentIndex() + 1});\r\n      }\r\n      tokens.nextToken();\r\n    } else if (tokens.currentToken().isType) {\r\n      tokens.nextToken();\r\n    } else {\r\n      // Either a method or a field. Skip to the identifier part.\r\n      const statementStartIndex = tokens.currentIndex();\r\n      let isStatic = false;\r\n      let isESPrivate = false;\r\n      let isDeclareOrAbstract = false;\r\n      while (isAccessModifier(tokens.currentToken())) {\r\n        if (tokens.matches1(TokenType._static)) {\r\n          isStatic = true;\r\n        }\r\n        if (tokens.matches1(TokenType.hash)) {\r\n          isESPrivate = true;\r\n        }\r\n        if (tokens.matches1(TokenType._declare) || tokens.matches1(TokenType._abstract)) {\r\n          isDeclareOrAbstract = true;\r\n        }\r\n        tokens.nextToken();\r\n      }\r\n      if (isStatic && tokens.matches1(TokenType.braceL)) {\r\n        // This is a static block, so don't process it in any special way.\r\n        skipToNextClassElement(tokens, classContextId);\r\n        continue;\r\n      }\r\n      if (isESPrivate) {\r\n        // Sucrase doesn't attempt to transpile private fields; just leave them as-is.\r\n        skipToNextClassElement(tokens, classContextId);\r\n        continue;\r\n      }\r\n      if (\r\n        tokens.matchesContextual(ContextualKeyword._constructor) &&\r\n        !tokens.currentToken().isType\r\n      ) {\r\n        ({constructorInitializerStatements, constructorInsertPos} = processConstructor(tokens));\r\n        continue;\r\n      }\r\n\r\n      const nameStartIndex = tokens.currentIndex();\r\n      skipFieldName(tokens);\r\n      if (tokens.matches1(TokenType.lessThan) || tokens.matches1(TokenType.parenL)) {\r\n        // This is a method, so nothing to process.\r\n        skipToNextClassElement(tokens, classContextId);\r\n        continue;\r\n      }\r\n      // There might be a type annotation that we need to skip.\r\n      while (tokens.currentToken().isType) {\r\n        tokens.nextToken();\r\n      }\r\n      if (tokens.matches1(TokenType.eq)) {\r\n        const equalsIndex = tokens.currentIndex();\r\n        // This is an initializer, so we need to wrap in an initializer method.\r\n        const valueEnd = tokens.currentToken().rhsEndIndex;\r\n        if (valueEnd == null) {\r\n          throw new Error(\"Expected rhsEndIndex on class field assignment.\");\r\n        }\r\n        tokens.nextToken();\r\n        while (tokens.currentIndex() < valueEnd) {\r\n          rootTransformer.processToken();\r\n        }\r\n        let initializerName;\r\n        if (isStatic) {\r\n          initializerName = nameManager.claimFreeName(\"__initStatic\");\r\n          staticInitializerNames.push(initializerName);\r\n        } else {\r\n          initializerName = nameManager.claimFreeName(\"__init\");\r\n          instanceInitializerNames.push(initializerName);\r\n        }\r\n        // Fields start at the name, so `static x = 1;` has a field range of `x = 1;`.\r\n        fields.push({\r\n          initializerName,\r\n          equalsIndex,\r\n          start: nameStartIndex,\r\n          end: tokens.currentIndex(),\r\n        });\r\n      } else if (!disableESTransforms || isDeclareOrAbstract) {\r\n        // This is a regular field declaration, like `x;`. With the class transform enabled, we just\r\n        // remove the line so that no output is produced. With the class transform disabled, we\r\n        // usually want to preserve the declaration (but still strip types), but if the `declare`\r\n        // or `abstract` keyword is specified, we should remove the line to avoid initializing the\r\n        // value to undefined.\r\n        rangesToRemove.push({start: statementStartIndex, end: tokens.currentIndex()});\r\n      }\r\n    }\r\n  }\r\n\r\n  tokens.restoreToSnapshot(snapshot);\r\n  if (disableESTransforms) {\r\n    // With ES transforms disabled, we don't want to transform regular class\r\n    // field declarations, and we don't need to do any additional tricks to\r\n    // reference the constructor for static init, but we still need to transform\r\n    // TypeScript field initializers defined as constructor parameters and we\r\n    // still need to remove `declare` fields. For now, we run the same code\r\n    // path but omit any field information, as if the class had no field\r\n    // declarations. In the future, when we fully drop the class fields\r\n    // transform, we can simplify this code significantly.\r\n    return {\r\n      headerInfo,\r\n      constructorInitializerStatements,\r\n      instanceInitializerNames: [],\r\n      staticInitializerNames: [],\r\n      constructorInsertPos,\r\n      fields: [],\r\n      rangesToRemove,\r\n    };\r\n  } else {\r\n    return {\r\n      headerInfo,\r\n      constructorInitializerStatements,\r\n      instanceInitializerNames,\r\n      staticInitializerNames,\r\n      constructorInsertPos,\r\n      fields,\r\n      rangesToRemove,\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Move the token processor to the next method/field in the class.\r\n *\r\n * To do that, we seek forward to the next start of a class name (either an open\r\n * bracket or an identifier, or the closing curly brace), then seek backward to\r\n * include any access modifiers.\r\n */\r\nfunction skipToNextClassElement(tokens, classContextId) {\r\n  tokens.nextToken();\r\n  while (tokens.currentToken().contextId !== classContextId) {\r\n    tokens.nextToken();\r\n  }\r\n  while (isAccessModifier(tokens.tokenAtRelativeIndex(-1))) {\r\n    tokens.previousToken();\r\n  }\r\n}\r\n\r\nfunction processClassHeader(tokens) {\r\n  const classToken = tokens.currentToken();\r\n  const contextId = classToken.contextId;\r\n  if (contextId == null) {\r\n    throw new Error(\"Expected context ID on class token.\");\r\n  }\r\n  const isExpression = classToken.isExpression;\r\n  if (isExpression == null) {\r\n    throw new Error(\"Expected isExpression on class token.\");\r\n  }\r\n  let className = null;\r\n  let hasSuperclass = false;\r\n  tokens.nextToken();\r\n  if (tokens.matches1(TokenType.name)) {\r\n    className = tokens.identifierName();\r\n  }\r\n  while (!tokens.matchesContextIdAndLabel(TokenType.braceL, contextId)) {\r\n    // If this has a superclass, there will always be an `extends` token. If it doesn't have a\r\n    // superclass, only type parameters and `implements` clauses can show up here, all of which\r\n    // consist only of type tokens. A declaration like `class A<B extends C> {` should *not* count\r\n    // as having a superclass.\r\n    if (tokens.matches1(TokenType._extends) && !tokens.currentToken().isType) {\r\n      hasSuperclass = true;\r\n    }\r\n    tokens.nextToken();\r\n  }\r\n  return {isExpression, className, hasSuperclass};\r\n}\r\n\r\n/**\r\n * Extract useful information out of a constructor, starting at the \"constructor\" name.\r\n */\r\nfunction processConstructor(tokens)\r\n\r\n\r\n {\r\n  const constructorInitializerStatements = [];\r\n\r\n  tokens.nextToken();\r\n  const constructorContextId = tokens.currentToken().contextId;\r\n  if (constructorContextId == null) {\r\n    throw new Error(\"Expected context ID on open-paren starting constructor params.\");\r\n  }\r\n  // Advance through parameters looking for access modifiers.\r\n  while (!tokens.matchesContextIdAndLabel(TokenType.parenR, constructorContextId)) {\r\n    if (tokens.currentToken().contextId === constructorContextId) {\r\n      // Current token is an open paren or comma just before a param, so check\r\n      // that param for access modifiers.\r\n      tokens.nextToken();\r\n      if (isAccessModifier(tokens.currentToken())) {\r\n        tokens.nextToken();\r\n        while (isAccessModifier(tokens.currentToken())) {\r\n          tokens.nextToken();\r\n        }\r\n        const token = tokens.currentToken();\r\n        if (token.type !== TokenType.name) {\r\n          throw new Error(\"Expected identifier after access modifiers in constructor arg.\");\r\n        }\r\n        const name = tokens.identifierNameForToken(token);\r\n        constructorInitializerStatements.push(`this.${name} = ${name}`);\r\n      }\r\n    } else {\r\n      tokens.nextToken();\r\n    }\r\n  }\r\n  // )\r\n  tokens.nextToken();\r\n  let constructorInsertPos = tokens.currentIndex();\r\n\r\n  // Advance through body looking for a super call.\r\n  let foundSuperCall = false;\r\n  while (!tokens.matchesContextIdAndLabel(TokenType.braceR, constructorContextId)) {\r\n    if (!foundSuperCall && tokens.matches2(TokenType._super, TokenType.parenL)) {\r\n      tokens.nextToken();\r\n      const superCallContextId = tokens.currentToken().contextId;\r\n      if (superCallContextId == null) {\r\n        throw new Error(\"Expected a context ID on the super call\");\r\n      }\r\n      while (!tokens.matchesContextIdAndLabel(TokenType.parenR, superCallContextId)) {\r\n        tokens.nextToken();\r\n      }\r\n      constructorInsertPos = tokens.currentIndex();\r\n      foundSuperCall = true;\r\n    }\r\n    tokens.nextToken();\r\n  }\r\n  // }\r\n  tokens.nextToken();\r\n\r\n  return {constructorInitializerStatements, constructorInsertPos};\r\n}\r\n\r\n/**\r\n * Determine if this is any token that can go before the name in a method/field.\r\n */\r\nfunction isAccessModifier(token) {\r\n  return [\r\n    TokenType._async,\r\n    TokenType._get,\r\n    TokenType._set,\r\n    TokenType.plus,\r\n    TokenType.minus,\r\n    TokenType._readonly,\r\n    TokenType._static,\r\n    TokenType._public,\r\n    TokenType._private,\r\n    TokenType._protected,\r\n    TokenType._override,\r\n    TokenType._abstract,\r\n    TokenType.star,\r\n    TokenType._declare,\r\n    TokenType.hash,\r\n  ].includes(token.type);\r\n}\r\n\r\n/**\r\n * The next token or set of tokens is either an identifier or an expression in square brackets, for\r\n * a method or field name.\r\n */\r\nfunction skipFieldName(tokens) {\r\n  if (tokens.matches1(TokenType.bracketL)) {\r\n    const startToken = tokens.currentToken();\r\n    const classContextId = startToken.contextId;\r\n    if (classContextId == null) {\r\n      throw new Error(\"Expected class context ID on computed name open bracket.\");\r\n    }\r\n    while (!tokens.matchesContextIdAndLabel(TokenType.bracketR, classContextId)) {\r\n      tokens.nextToken();\r\n    }\r\n    tokens.nextToken();\r\n  } else {\r\n    tokens.nextToken();\r\n  }\r\n}\r\n\r\nfunction elideImportEquals(tokens) {\r\n  // import\r\n  tokens.removeInitialToken();\r\n  // name\r\n  tokens.removeToken();\r\n  // =\r\n  tokens.removeToken();\r\n  // name or require\r\n  tokens.removeToken();\r\n  // Handle either `import A = require('A')` or `import A = B.C.D`.\r\n  if (tokens.matches1(TokenType.parenL)) {\r\n    // (\r\n    tokens.removeToken();\r\n    // path string\r\n    tokens.removeToken();\r\n    // )\r\n    tokens.removeToken();\r\n  } else {\r\n    while (tokens.matches1(TokenType.dot)) {\r\n      // .\r\n      tokens.removeToken();\r\n      // name\r\n      tokens.removeToken();\r\n    }\r\n  }\r\n}\r\n\r\nconst EMPTY_DECLARATION_INFO = {\r\n  typeDeclarations: new Set(),\r\n  valueDeclarations: new Set(),\r\n};\r\n\r\n/**\r\n * Get all top-level identifiers that should be preserved when exported in TypeScript.\r\n *\r\n * Examples:\r\n * - If an identifier is declared as `const x`, then `export {x}` should be preserved.\r\n * - If it's declared as `type x`, then `export {x}` should be removed.\r\n * - If it's declared as both `const x` and `type x`, then the export should be preserved.\r\n * - Classes and enums should be preserved (even though they also introduce types).\r\n * - Imported identifiers should be preserved since we don't have enough information to\r\n *   rule them out. --isolatedModules disallows re-exports, which catches errors here.\r\n */\r\nfunction getDeclarationInfo(tokens) {\r\n  const typeDeclarations = new Set();\r\n  const valueDeclarations = new Set();\r\n  for (let i = 0; i < tokens.tokens.length; i++) {\r\n    const token = tokens.tokens[i];\r\n    if (token.type === TokenType.name && isTopLevelDeclaration(token)) {\r\n      if (token.isType) {\r\n        typeDeclarations.add(tokens.identifierNameForToken(token));\r\n      } else {\r\n        valueDeclarations.add(tokens.identifierNameForToken(token));\r\n      }\r\n    }\r\n  }\r\n  return {typeDeclarations, valueDeclarations};\r\n}\r\n\r\n/**\r\n * Starting at a potential `assert` token remove the import assertion if there\r\n * is one.\r\n */\r\nfunction removeMaybeImportAssertion(tokens) {\r\n  if (tokens.matches2(TokenType.name, TokenType.braceL) && tokens.matchesContextual(ContextualKeyword._assert)) {\r\n    // assert\r\n    tokens.removeToken();\r\n    // {\r\n    tokens.removeToken();\r\n    tokens.removeBalancedCode();\r\n    // }\r\n    tokens.removeToken();\r\n  }\r\n}\r\n\r\n/**\r\n * Common method sharing code between CJS and ESM cases, since they're the same here.\r\n */\r\nfunction shouldElideDefaultExport(\r\n  isTypeScriptTransformEnabled,\r\n  tokens,\r\n  declarationInfo,\r\n) {\r\n  if (!isTypeScriptTransformEnabled) {\r\n    return false;\r\n  }\r\n  const exportToken = tokens.currentToken();\r\n  if (exportToken.rhsEndIndex == null) {\r\n    throw new Error(\"Expected non-null rhsEndIndex on export token.\");\r\n  }\r\n  // The export must be of the form `export default a` or `export default a;`.\r\n  const numTokens = exportToken.rhsEndIndex - tokens.currentIndex();\r\n  if (\r\n    numTokens !== 3 &&\r\n    !(numTokens === 4 && tokens.matches1AtIndex(exportToken.rhsEndIndex - 1, TokenType.semi))\r\n  ) {\r\n    return false;\r\n  }\r\n  const identifierToken = tokens.tokenAtRelativeIndex(2);\r\n  if (identifierToken.type !== TokenType.name) {\r\n    return false;\r\n  }\r\n  const exportedName = tokens.identifierNameForToken(identifierToken);\r\n  return (\r\n    declarationInfo.typeDeclarations.has(exportedName) &&\r\n    !declarationInfo.valueDeclarations.has(exportedName)\r\n  );\r\n}\r\n\r\n/**\r\n * Class for editing import statements when we are transforming to commonjs.\r\n */\r\nclass CJSImportTransformer extends Transformer {\r\n   __init() {this.hadExport = false;}\r\n   __init2() {this.hadNamedExport = false;}\r\n   __init3() {this.hadDefaultExport = false;}\r\n  \r\n\r\n  constructor(\r\n     rootTransformer,\r\n     tokens,\r\n     importProcessor,\r\n     nameManager,\r\n     helperManager,\r\n     reactHotLoaderTransformer,\r\n     enableLegacyBabel5ModuleInterop,\r\n     enableLegacyTypeScriptModuleInterop,\r\n     isTypeScriptTransformEnabled,\r\n     preserveDynamicImport,\r\n  ) {\r\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.importProcessor = importProcessor;this.nameManager = nameManager;this.helperManager = helperManager;this.reactHotLoaderTransformer = reactHotLoaderTransformer;this.enableLegacyBabel5ModuleInterop = enableLegacyBabel5ModuleInterop;this.enableLegacyTypeScriptModuleInterop = enableLegacyTypeScriptModuleInterop;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;this.preserveDynamicImport = preserveDynamicImport;CJSImportTransformer.prototype.__init.call(this);CJSImportTransformer.prototype.__init2.call(this);CJSImportTransformer.prototype.__init3.call(this);    this.declarationInfo = isTypeScriptTransformEnabled\r\n      ? getDeclarationInfo(tokens)\r\n      : EMPTY_DECLARATION_INFO;\r\n  }\r\n\r\n  getPrefixCode() {\r\n    let prefix = \"\";\r\n    if (this.hadExport) {\r\n      prefix += 'Object.defineProperty(exports, \"__esModule\", {value: true});';\r\n    }\r\n    return prefix;\r\n  }\r\n\r\n  getSuffixCode() {\r\n    if (this.enableLegacyBabel5ModuleInterop && this.hadDefaultExport && !this.hadNamedExport) {\r\n      return \"\\nmodule.exports = exports.default;\\n\";\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  process() {\r\n    // TypeScript `import foo = require('foo');` should always just be translated to plain require.\r\n    if (this.tokens.matches3(TokenType._import, TokenType.name, TokenType.eq)) {\r\n      return this.processImportEquals();\r\n    }\r\n    if (this.tokens.matches1(TokenType._import)) {\r\n      this.processImport();\r\n      return true;\r\n    }\r\n    if (this.tokens.matches2(TokenType._export, TokenType.eq)) {\r\n      this.tokens.replaceToken(\"module.exports\");\r\n      return true;\r\n    }\r\n    if (this.tokens.matches1(TokenType._export) && !this.tokens.currentToken().isType) {\r\n      this.hadExport = true;\r\n      return this.processExport();\r\n    }\r\n    if (this.tokens.matches2(TokenType.name, TokenType.postIncDec)) {\r\n      // Fall through to normal identifier matching if this doesn't apply.\r\n      if (this.processPostIncDec()) {\r\n        return true;\r\n      }\r\n    }\r\n    if (this.tokens.matches1(TokenType.name) || this.tokens.matches1(TokenType.jsxName)) {\r\n      return this.processIdentifier();\r\n    }\r\n    if (this.tokens.matches1(TokenType.eq)) {\r\n      return this.processAssignment();\r\n    }\r\n    if (this.tokens.matches1(TokenType.assign)) {\r\n      return this.processComplexAssignment();\r\n    }\r\n    if (this.tokens.matches1(TokenType.preIncDec)) {\r\n      return this.processPreIncDec();\r\n    }\r\n    return false;\r\n  }\r\n\r\n   processImportEquals() {\r\n    const importName = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);\r\n    if (this.importProcessor.isTypeName(importName)) {\r\n      // If this name is only used as a type, elide the whole import.\r\n      elideImportEquals(this.tokens);\r\n    } else {\r\n      // Otherwise, switch `import` to `const`.\r\n      this.tokens.replaceToken(\"const\");\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Transform this:\r\n   * import foo, {bar} from 'baz';\r\n   * into\r\n   * var _baz = require('baz'); var _baz2 = _interopRequireDefault(_baz);\r\n   *\r\n   * The import code was already generated in the import preprocessing step, so\r\n   * we just need to look it up.\r\n   */\r\n   processImport() {\r\n    if (this.tokens.matches2(TokenType._import, TokenType.parenL)) {\r\n      if (this.preserveDynamicImport) {\r\n        // Bail out, only making progress for this one token.\r\n        this.tokens.copyToken();\r\n        return;\r\n      }\r\n      const requireWrapper = this.enableLegacyTypeScriptModuleInterop\r\n        ? \"\"\r\n        : `${this.helperManager.getHelperName(\"interopRequireWildcard\")}(`;\r\n      this.tokens.replaceToken(`Promise.resolve().then(() => ${requireWrapper}require`);\r\n      const contextId = this.tokens.currentToken().contextId;\r\n      if (contextId == null) {\r\n        throw new Error(\"Expected context ID on dynamic import invocation.\");\r\n      }\r\n      this.tokens.copyToken();\r\n      while (!this.tokens.matchesContextIdAndLabel(TokenType.parenR, contextId)) {\r\n        this.rootTransformer.processToken();\r\n      }\r\n      this.tokens.replaceToken(requireWrapper ? \")))\" : \"))\");\r\n      return;\r\n    }\r\n\r\n    const wasOnlyTypes = this.removeImportAndDetectIfType();\r\n\r\n    if (wasOnlyTypes) {\r\n      this.tokens.removeToken();\r\n    } else {\r\n      const path = this.tokens.stringValue();\r\n      this.tokens.replaceTokenTrimmingLeftWhitespace(this.importProcessor.claimImportCode(path));\r\n      this.tokens.appendCode(this.importProcessor.claimImportCode(path));\r\n    }\r\n    removeMaybeImportAssertion(this.tokens);\r\n    if (this.tokens.matches1(TokenType.semi)) {\r\n      this.tokens.removeToken();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Erase this import, and return true if it was either of the form \"import type\" or contained only\r\n   * \"type\" named imports. Such imports should not even do a side-effect import.\r\n   *\r\n   * The position should end at the import string.\r\n   */\r\n   removeImportAndDetectIfType() {\r\n    this.tokens.removeInitialToken();\r\n    if (\r\n      this.tokens.matchesContextual(ContextualKeyword._type) &&\r\n      !this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, TokenType.comma) &&\r\n      !this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._from)\r\n    ) {\r\n      // This is an \"import type\" statement, so exit early.\r\n      this.removeRemainingImport();\r\n      return true;\r\n    }\r\n\r\n    if (this.tokens.matches1(TokenType.name) || this.tokens.matches1(TokenType.star)) {\r\n      // We have a default import or namespace import, so there must be some\r\n      // non-type import.\r\n      this.removeRemainingImport();\r\n      return false;\r\n    }\r\n\r\n    if (this.tokens.matches1(TokenType.string)) {\r\n      // This is a bare import, so we should proceed with the import.\r\n      return false;\r\n    }\r\n\r\n    let foundNonType = false;\r\n    while (!this.tokens.matches1(TokenType.string)) {\r\n      // Check if any named imports are of the form \"foo\" or \"foo as bar\", with\r\n      // no leading \"type\".\r\n      if ((!foundNonType && this.tokens.matches1(TokenType.braceL)) || this.tokens.matches1(TokenType.comma)) {\r\n        this.tokens.removeToken();\r\n        if (\r\n          this.tokens.matches2(TokenType.name, TokenType.comma) ||\r\n          this.tokens.matches2(TokenType.name, TokenType.braceR) ||\r\n          this.tokens.matches4(TokenType.name, TokenType.name, TokenType.name, TokenType.comma) ||\r\n          this.tokens.matches4(TokenType.name, TokenType.name, TokenType.name, TokenType.braceR)\r\n        ) {\r\n          foundNonType = true;\r\n        }\r\n      }\r\n      this.tokens.removeToken();\r\n    }\r\n    return !foundNonType;\r\n  }\r\n\r\n   removeRemainingImport() {\r\n    while (!this.tokens.matches1(TokenType.string)) {\r\n      this.tokens.removeToken();\r\n    }\r\n  }\r\n\r\n   processIdentifier() {\r\n    const token = this.tokens.currentToken();\r\n    if (token.shadowsGlobal) {\r\n      return false;\r\n    }\r\n\r\n    if (token.identifierRole === IdentifierRole.ObjectShorthand) {\r\n      return this.processObjectShorthand();\r\n    }\r\n\r\n    if (token.identifierRole !== IdentifierRole.Access) {\r\n      return false;\r\n    }\r\n    const replacement = this.importProcessor.getIdentifierReplacement(\r\n      this.tokens.identifierNameForToken(token),\r\n    );\r\n    if (!replacement) {\r\n      return false;\r\n    }\r\n    // Tolerate any number of closing parens while looking for an opening paren\r\n    // that indicates a function call.\r\n    let possibleOpenParenIndex = this.tokens.currentIndex() + 1;\r\n    while (\r\n      possibleOpenParenIndex < this.tokens.tokens.length &&\r\n      this.tokens.tokens[possibleOpenParenIndex].type === TokenType.parenR\r\n    ) {\r\n      possibleOpenParenIndex++;\r\n    }\r\n    // Avoid treating imported functions as methods of their `exports` object\r\n    // by using `(0, f)` when the identifier is in a paren expression. Else\r\n    // use `Function.prototype.call` when the identifier is a guaranteed\r\n    // function call. When using `call`, pass undefined as the context.\r\n    if (this.tokens.tokens[possibleOpenParenIndex].type === TokenType.parenL) {\r\n      if (\r\n        this.tokens.tokenAtRelativeIndex(1).type === TokenType.parenL &&\r\n        this.tokens.tokenAtRelativeIndex(-1).type !== TokenType._new\r\n      ) {\r\n        this.tokens.replaceToken(`${replacement}.call(void 0, `);\r\n        // Remove the old paren.\r\n        this.tokens.removeToken();\r\n        // Balance out the new paren.\r\n        this.rootTransformer.processBalancedCode();\r\n        this.tokens.copyExpectedToken(TokenType.parenR);\r\n      } else {\r\n        // See here: http://2ality.com/2015/12/references.html\r\n        this.tokens.replaceToken(`(0, ${replacement})`);\r\n      }\r\n    } else {\r\n      this.tokens.replaceToken(replacement);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  processObjectShorthand() {\r\n    const identifier = this.tokens.identifierName();\r\n    const replacement = this.importProcessor.getIdentifierReplacement(identifier);\r\n    if (!replacement) {\r\n      return false;\r\n    }\r\n    this.tokens.replaceToken(`${identifier}: ${replacement}`);\r\n    return true;\r\n  }\r\n\r\n  processExport() {\r\n    if (\r\n      this.tokens.matches2(TokenType._export, TokenType._enum) ||\r\n      this.tokens.matches3(TokenType._export, TokenType._const, TokenType._enum)\r\n    ) {\r\n      // Let the TypeScript transform handle it.\r\n      return false;\r\n    }\r\n    if (this.tokens.matches2(TokenType._export, TokenType._default)) {\r\n      this.hadDefaultExport = true;\r\n      if (this.tokens.matches3(TokenType._export, TokenType._default, TokenType._enum)) {\r\n        // Flow export default enums need some special handling, so handle them\r\n        // in that tranform rather than this one.\r\n        return false;\r\n      }\r\n      this.processExportDefault();\r\n      return true;\r\n    }\r\n    this.hadNamedExport = true;\r\n    if (\r\n      this.tokens.matches2(TokenType._export, TokenType._var) ||\r\n      this.tokens.matches2(TokenType._export, TokenType._let) ||\r\n      this.tokens.matches2(TokenType._export, TokenType._const)\r\n    ) {\r\n      this.processExportVar();\r\n      return true;\r\n    } else if (\r\n      this.tokens.matches2(TokenType._export, TokenType._function) ||\r\n      // export async function\r\n      this.tokens.matches3(TokenType._export, TokenType.name, TokenType._function)\r\n    ) {\r\n      this.processExportFunction();\r\n      return true;\r\n    } else if (\r\n      this.tokens.matches2(TokenType._export, TokenType._class) ||\r\n      this.tokens.matches3(TokenType._export, TokenType._abstract, TokenType._class) ||\r\n      this.tokens.matches2(TokenType._export, TokenType.at)\r\n    ) {\r\n      this.processExportClass();\r\n      return true;\r\n    } else if (this.tokens.matches2(TokenType._export, TokenType.braceL)) {\r\n      this.processExportBindings();\r\n      return true;\r\n    } else if (this.tokens.matches2(TokenType._export, TokenType.star)) {\r\n      this.processExportStar();\r\n      return true;\r\n    } else if (\r\n      this.tokens.matches2(TokenType._export, TokenType.name) &&\r\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._type)\r\n    ) {\r\n      // export type {a};\r\n      // export type {a as b};\r\n      // export type {a} from './b';\r\n      // export type * from './b';\r\n      // export type * as ns from './b';\r\n      this.tokens.removeInitialToken();\r\n      this.tokens.removeToken();\r\n      if (this.tokens.matches1(TokenType.braceL)) {\r\n        while (!this.tokens.matches1(TokenType.braceR)) {\r\n          this.tokens.removeToken();\r\n        }\r\n        this.tokens.removeToken();\r\n      } else {\r\n        // *\r\n        this.tokens.removeToken();\r\n        if (this.tokens.matches1(TokenType._as)) {\r\n          // as\r\n          this.tokens.removeToken();\r\n          // ns\r\n          this.tokens.removeToken();\r\n        }\r\n      }\r\n      // Remove type re-export `... } from './T'`\r\n      if (\r\n        this.tokens.matchesContextual(ContextualKeyword._from) &&\r\n        this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, TokenType.string)\r\n      ) {\r\n        this.tokens.removeToken();\r\n        this.tokens.removeToken();\r\n        removeMaybeImportAssertion(this.tokens);\r\n      }\r\n      return true;\r\n    } else {\r\n      throw new Error(\"Unrecognized export syntax.\");\r\n    }\r\n  }\r\n\r\n   processAssignment() {\r\n    const index = this.tokens.currentIndex();\r\n    const identifierToken = this.tokens.tokens[index - 1];\r\n    // If the LHS is a type identifier, this must be a declaration like `let a: b = c;`,\r\n    // with `b` as the identifier, so nothing needs to be done in that case.\r\n    if (identifierToken.isType || identifierToken.type !== TokenType.name) {\r\n      return false;\r\n    }\r\n    if (identifierToken.shadowsGlobal) {\r\n      return false;\r\n    }\r\n    if (index >= 2 && this.tokens.matches1AtIndex(index - 2, TokenType.dot)) {\r\n      return false;\r\n    }\r\n    if (index >= 2 && [TokenType._var, TokenType._let, TokenType._const].includes(this.tokens.tokens[index - 2].type)) {\r\n      // Declarations don't need an extra assignment. This doesn't avoid the\r\n      // assignment for comma-separated declarations, but it's still correct\r\n      // since the assignment is just redundant.\r\n      return false;\r\n    }\r\n    const assignmentSnippet = this.importProcessor.resolveExportBinding(\r\n      this.tokens.identifierNameForToken(identifierToken),\r\n    );\r\n    if (!assignmentSnippet) {\r\n      return false;\r\n    }\r\n    this.tokens.copyToken();\r\n    this.tokens.appendCode(` ${assignmentSnippet} =`);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Process something like `a += 3`, where `a` might be an exported value.\r\n   */\r\n   processComplexAssignment() {\r\n    const index = this.tokens.currentIndex();\r\n    const identifierToken = this.tokens.tokens[index - 1];\r\n    if (identifierToken.type !== TokenType.name) {\r\n      return false;\r\n    }\r\n    if (identifierToken.shadowsGlobal) {\r\n      return false;\r\n    }\r\n    if (index >= 2 && this.tokens.matches1AtIndex(index - 2, TokenType.dot)) {\r\n      return false;\r\n    }\r\n    const assignmentSnippet = this.importProcessor.resolveExportBinding(\r\n      this.tokens.identifierNameForToken(identifierToken),\r\n    );\r\n    if (!assignmentSnippet) {\r\n      return false;\r\n    }\r\n    this.tokens.appendCode(` = ${assignmentSnippet}`);\r\n    this.tokens.copyToken();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Process something like `++a`, where `a` might be an exported value.\r\n   */\r\n   processPreIncDec() {\r\n    const index = this.tokens.currentIndex();\r\n    const identifierToken = this.tokens.tokens[index + 1];\r\n    if (identifierToken.type !== TokenType.name) {\r\n      return false;\r\n    }\r\n    if (identifierToken.shadowsGlobal) {\r\n      return false;\r\n    }\r\n    // Ignore things like ++a.b and ++a[b] and ++a().b.\r\n    if (\r\n      index + 2 < this.tokens.tokens.length &&\r\n      (this.tokens.matches1AtIndex(index + 2, TokenType.dot) ||\r\n        this.tokens.matches1AtIndex(index + 2, TokenType.bracketL) ||\r\n        this.tokens.matches1AtIndex(index + 2, TokenType.parenL))\r\n    ) {\r\n      return false;\r\n    }\r\n    const identifierName = this.tokens.identifierNameForToken(identifierToken);\r\n    const assignmentSnippet = this.importProcessor.resolveExportBinding(identifierName);\r\n    if (!assignmentSnippet) {\r\n      return false;\r\n    }\r\n    this.tokens.appendCode(`${assignmentSnippet} = `);\r\n    this.tokens.copyToken();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Process something like `a++`, where `a` might be an exported value.\r\n   * This starts at the `a`, not at the `++`.\r\n   */\r\n   processPostIncDec() {\r\n    const index = this.tokens.currentIndex();\r\n    const identifierToken = this.tokens.tokens[index];\r\n    const operatorToken = this.tokens.tokens[index + 1];\r\n    if (identifierToken.type !== TokenType.name) {\r\n      return false;\r\n    }\r\n    if (identifierToken.shadowsGlobal) {\r\n      return false;\r\n    }\r\n    if (index >= 1 && this.tokens.matches1AtIndex(index - 1, TokenType.dot)) {\r\n      return false;\r\n    }\r\n    const identifierName = this.tokens.identifierNameForToken(identifierToken);\r\n    const assignmentSnippet = this.importProcessor.resolveExportBinding(identifierName);\r\n    if (!assignmentSnippet) {\r\n      return false;\r\n    }\r\n    const operatorCode = this.tokens.rawCodeForToken(operatorToken);\r\n    // We might also replace the identifier with something like exports.x, so\r\n    // do that replacement here as well.\r\n    const base = this.importProcessor.getIdentifierReplacement(identifierName) || identifierName;\r\n    if (operatorCode === \"++\") {\r\n      this.tokens.replaceToken(`(${base} = ${assignmentSnippet} = ${base} + 1, ${base} - 1)`);\r\n    } else if (operatorCode === \"--\") {\r\n      this.tokens.replaceToken(`(${base} = ${assignmentSnippet} = ${base} - 1, ${base} + 1)`);\r\n    } else {\r\n      throw new Error(`Unexpected operator: ${operatorCode}`);\r\n    }\r\n    this.tokens.removeToken();\r\n    return true;\r\n  }\r\n\r\n   processExportDefault() {\r\n    if (\r\n      this.tokens.matches4(TokenType._export, TokenType._default, TokenType._function, TokenType.name) ||\r\n      // export default async function\r\n      (this.tokens.matches5(TokenType._export, TokenType._default, TokenType.name, TokenType._function, TokenType.name) &&\r\n        this.tokens.matchesContextualAtIndex(\r\n          this.tokens.currentIndex() + 2,\r\n          ContextualKeyword._async,\r\n        ))\r\n    ) {\r\n      this.tokens.removeInitialToken();\r\n      this.tokens.removeToken();\r\n      // Named function export case: change it to a top-level function\r\n      // declaration followed by exports statement.\r\n      const name = this.processNamedFunction();\r\n      this.tokens.appendCode(` exports.default = ${name};`);\r\n    } else if (\r\n      this.tokens.matches4(TokenType._export, TokenType._default, TokenType._class, TokenType.name) ||\r\n      this.tokens.matches5(TokenType._export, TokenType._default, TokenType._abstract, TokenType._class, TokenType.name) ||\r\n      this.tokens.matches3(TokenType._export, TokenType._default, TokenType.at)\r\n    ) {\r\n      this.tokens.removeInitialToken();\r\n      this.tokens.removeToken();\r\n      this.copyDecorators();\r\n      if (this.tokens.matches1(TokenType._abstract)) {\r\n        this.tokens.removeToken();\r\n      }\r\n      const name = this.rootTransformer.processNamedClass();\r\n      this.tokens.appendCode(` exports.default = ${name};`);\r\n      // After this point, this is a plain \"export default E\" statement.\r\n    } else if (\r\n      shouldElideDefaultExport(this.isTypeScriptTransformEnabled, this.tokens, this.declarationInfo)\r\n    ) {\r\n      // If the exported value is just an identifier and should be elided by TypeScript\r\n      // rules, then remove it entirely. It will always have the form `export default e`,\r\n      // where `e` is an identifier.\r\n      this.tokens.removeInitialToken();\r\n      this.tokens.removeToken();\r\n      this.tokens.removeToken();\r\n    } else if (this.reactHotLoaderTransformer) {\r\n      // We need to assign E to a variable. Change \"export default E\" to\r\n      // \"let _default; exports.default = _default = E\"\r\n      const defaultVarName = this.nameManager.claimFreeName(\"_default\");\r\n      this.tokens.replaceToken(`let ${defaultVarName}; exports.`);\r\n      this.tokens.copyToken();\r\n      this.tokens.appendCode(` = ${defaultVarName} =`);\r\n      this.reactHotLoaderTransformer.setExtractedDefaultExportName(defaultVarName);\r\n    } else {\r\n      // Change \"export default E\" to \"exports.default = E\"\r\n      this.tokens.replaceToken(\"exports.\");\r\n      this.tokens.copyToken();\r\n      this.tokens.appendCode(\" =\");\r\n    }\r\n  }\r\n\r\n   copyDecorators() {\r\n    while (this.tokens.matches1(TokenType.at)) {\r\n      this.tokens.copyToken();\r\n      if (this.tokens.matches1(TokenType.parenL)) {\r\n        this.tokens.copyExpectedToken(TokenType.parenL);\r\n        this.rootTransformer.processBalancedCode();\r\n        this.tokens.copyExpectedToken(TokenType.parenR);\r\n      } else {\r\n        this.tokens.copyExpectedToken(TokenType.name);\r\n        while (this.tokens.matches1(TokenType.dot)) {\r\n          this.tokens.copyExpectedToken(TokenType.dot);\r\n          this.tokens.copyExpectedToken(TokenType.name);\r\n        }\r\n        if (this.tokens.matches1(TokenType.parenL)) {\r\n          this.tokens.copyExpectedToken(TokenType.parenL);\r\n          this.rootTransformer.processBalancedCode();\r\n          this.tokens.copyExpectedToken(TokenType.parenR);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform a declaration like `export var`, `export let`, or `export const`.\r\n   */\r\n   processExportVar() {\r\n    if (this.isSimpleExportVar()) {\r\n      this.processSimpleExportVar();\r\n    } else {\r\n      this.processComplexExportVar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine if the export is of the form:\r\n   * export var/let/const [varName] = [expr];\r\n   * In other words, determine if function name inference might apply.\r\n   */\r\n   isSimpleExportVar() {\r\n    let tokenIndex = this.tokens.currentIndex();\r\n    // export\r\n    tokenIndex++;\r\n    // var/let/const\r\n    tokenIndex++;\r\n    if (!this.tokens.matches1AtIndex(tokenIndex, TokenType.name)) {\r\n      return false;\r\n    }\r\n    tokenIndex++;\r\n    while (tokenIndex < this.tokens.tokens.length && this.tokens.tokens[tokenIndex].isType) {\r\n      tokenIndex++;\r\n    }\r\n    if (!this.tokens.matches1AtIndex(tokenIndex, TokenType.eq)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Transform an `export var` declaration initializing a single variable.\r\n   *\r\n   * For example, this:\r\n   * export const f = () => {};\r\n   * becomes this:\r\n   * const f = () => {}; exports.f = f;\r\n   *\r\n   * The variable is unused (e.g. exports.f has the true value of the export).\r\n   * We need to produce an assignment of this form so that the function will\r\n   * have an inferred name of \"f\", which wouldn't happen in the more general\r\n   * case below.\r\n   */\r\n   processSimpleExportVar() {\r\n    // export\r\n    this.tokens.removeInitialToken();\r\n    // var/let/const\r\n    this.tokens.copyToken();\r\n    const varName = this.tokens.identifierName();\r\n    // x: number  ->  x\r\n    while (!this.tokens.matches1(TokenType.eq)) {\r\n      this.rootTransformer.processToken();\r\n    }\r\n    const endIndex = this.tokens.currentToken().rhsEndIndex;\r\n    if (endIndex == null) {\r\n      throw new Error(\"Expected = token with an end index.\");\r\n    }\r\n    while (this.tokens.currentIndex() < endIndex) {\r\n      this.rootTransformer.processToken();\r\n    }\r\n    this.tokens.appendCode(`; exports.${varName} = ${varName}`);\r\n  }\r\n\r\n  /**\r\n   * Transform normal declaration exports, including handling destructuring.\r\n   * For example, this:\r\n   * export const {x: [a = 2, b], c} = d;\r\n   * becomes this:\r\n   * ({x: [exports.a = 2, exports.b], c: exports.c} = d;)\r\n   */\r\n   processComplexExportVar() {\r\n    this.tokens.removeInitialToken();\r\n    this.tokens.removeToken();\r\n    const needsParens = this.tokens.matches1(TokenType.braceL);\r\n    if (needsParens) {\r\n      this.tokens.appendCode(\"(\");\r\n    }\r\n\r\n    let depth = 0;\r\n    while (true) {\r\n      if (\r\n        this.tokens.matches1(TokenType.braceL) ||\r\n        this.tokens.matches1(TokenType.dollarBraceL) ||\r\n        this.tokens.matches1(TokenType.bracketL)\r\n      ) {\r\n        depth++;\r\n        this.tokens.copyToken();\r\n      } else if (this.tokens.matches1(TokenType.braceR) || this.tokens.matches1(TokenType.bracketR)) {\r\n        depth--;\r\n        this.tokens.copyToken();\r\n      } else if (\r\n        depth === 0 &&\r\n        !this.tokens.matches1(TokenType.name) &&\r\n        !this.tokens.currentToken().isType\r\n      ) {\r\n        break;\r\n      } else if (this.tokens.matches1(TokenType.eq)) {\r\n        // Default values might have assignments in the RHS that we want to ignore, so skip past\r\n        // them.\r\n        const endIndex = this.tokens.currentToken().rhsEndIndex;\r\n        if (endIndex == null) {\r\n          throw new Error(\"Expected = token with an end index.\");\r\n        }\r\n        while (this.tokens.currentIndex() < endIndex) {\r\n          this.rootTransformer.processToken();\r\n        }\r\n      } else {\r\n        const token = this.tokens.currentToken();\r\n        if (isDeclaration(token)) {\r\n          const name = this.tokens.identifierName();\r\n          let replacement = this.importProcessor.getIdentifierReplacement(name);\r\n          if (replacement === null) {\r\n            throw new Error(`Expected a replacement for ${name} in \\`export var\\` syntax.`);\r\n          }\r\n          if (isObjectShorthandDeclaration(token)) {\r\n            replacement = `${name}: ${replacement}`;\r\n          }\r\n          this.tokens.replaceToken(replacement);\r\n        } else {\r\n          this.rootTransformer.processToken();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (needsParens) {\r\n      // Seek to the end of the RHS.\r\n      const endIndex = this.tokens.currentToken().rhsEndIndex;\r\n      if (endIndex == null) {\r\n        throw new Error(\"Expected = token with an end index.\");\r\n      }\r\n      while (this.tokens.currentIndex() < endIndex) {\r\n        this.rootTransformer.processToken();\r\n      }\r\n      this.tokens.appendCode(\")\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform this:\r\n   * export function foo() {}\r\n   * into this:\r\n   * function foo() {} exports.foo = foo;\r\n   */\r\n   processExportFunction() {\r\n    this.tokens.replaceToken(\"\");\r\n    const name = this.processNamedFunction();\r\n    this.tokens.appendCode(` exports.${name} = ${name};`);\r\n  }\r\n\r\n  /**\r\n   * Skip past a function with a name and return that name.\r\n   */\r\n   processNamedFunction() {\r\n    if (this.tokens.matches1(TokenType._function)) {\r\n      this.tokens.copyToken();\r\n    } else if (this.tokens.matches2(TokenType.name, TokenType._function)) {\r\n      if (!this.tokens.matchesContextual(ContextualKeyword._async)) {\r\n        throw new Error(\"Expected async keyword in function export.\");\r\n      }\r\n      this.tokens.copyToken();\r\n      this.tokens.copyToken();\r\n    }\r\n    if (this.tokens.matches1(TokenType.star)) {\r\n      this.tokens.copyToken();\r\n    }\r\n    if (!this.tokens.matches1(TokenType.name)) {\r\n      throw new Error(\"Expected identifier for exported function name.\");\r\n    }\r\n    const name = this.tokens.identifierName();\r\n    this.tokens.copyToken();\r\n    if (this.tokens.currentToken().isType) {\r\n      this.tokens.removeInitialToken();\r\n      while (this.tokens.currentToken().isType) {\r\n        this.tokens.removeToken();\r\n      }\r\n    }\r\n    this.tokens.copyExpectedToken(TokenType.parenL);\r\n    this.rootTransformer.processBalancedCode();\r\n    this.tokens.copyExpectedToken(TokenType.parenR);\r\n    this.rootTransformer.processPossibleTypeRange();\r\n    this.tokens.copyExpectedToken(TokenType.braceL);\r\n    this.rootTransformer.processBalancedCode();\r\n    this.tokens.copyExpectedToken(TokenType.braceR);\r\n    return name;\r\n  }\r\n\r\n  /**\r\n   * Transform this:\r\n   * export class A {}\r\n   * into this:\r\n   * class A {} exports.A = A;\r\n   */\r\n   processExportClass() {\r\n    this.tokens.removeInitialToken();\r\n    this.copyDecorators();\r\n    if (this.tokens.matches1(TokenType._abstract)) {\r\n      this.tokens.removeToken();\r\n    }\r\n    const name = this.rootTransformer.processNamedClass();\r\n    this.tokens.appendCode(` exports.${name} = ${name};`);\r\n  }\r\n\r\n  /**\r\n   * Transform this:\r\n   * export {a, b as c};\r\n   * into this:\r\n   * exports.a = a; exports.c = b;\r\n   *\r\n   * OR\r\n   *\r\n   * Transform this:\r\n   * export {a, b as c} from './foo';\r\n   * into the pre-generated Object.defineProperty code from the ImportProcessor.\r\n   *\r\n   * For the first case, if the TypeScript transform is enabled, we need to skip\r\n   * exports that are only defined as types.\r\n   */\r\n   processExportBindings() {\r\n    this.tokens.removeInitialToken();\r\n    this.tokens.removeToken();\r\n\r\n    const exportStatements = [];\r\n    while (true) {\r\n      if (this.tokens.matches1(TokenType.braceR)) {\r\n        this.tokens.removeToken();\r\n        break;\r\n      }\r\n\r\n      const specifierInfo = getImportExportSpecifierInfo(this.tokens);\r\n      while (this.tokens.currentIndex() < specifierInfo.endIndex) {\r\n        this.tokens.removeToken();\r\n      }\r\n      if (!specifierInfo.isType && !this.shouldElideExportedIdentifier(specifierInfo.leftName)) {\r\n        const localName = specifierInfo.leftName;\r\n        const exportedName = specifierInfo.rightName;\r\n        const newLocalName = this.importProcessor.getIdentifierReplacement(localName);\r\n        exportStatements.push(`exports.${exportedName} = ${newLocalName || localName};`);\r\n      }\r\n\r\n      if (this.tokens.matches1(TokenType.braceR)) {\r\n        this.tokens.removeToken();\r\n        break;\r\n      }\r\n      if (this.tokens.matches2(TokenType.comma, TokenType.braceR)) {\r\n        this.tokens.removeToken();\r\n        this.tokens.removeToken();\r\n        break;\r\n      } else if (this.tokens.matches1(TokenType.comma)) {\r\n        this.tokens.removeToken();\r\n      } else {\r\n        throw new Error(`Unexpected token: ${JSON.stringify(this.tokens.currentToken())}`);\r\n      }\r\n    }\r\n\r\n    if (this.tokens.matchesContextual(ContextualKeyword._from)) {\r\n      // This is an export...from, so throw away the normal named export code\r\n      // and use the Object.defineProperty code from ImportProcessor.\r\n      this.tokens.removeToken();\r\n      const path = this.tokens.stringValue();\r\n      this.tokens.replaceTokenTrimmingLeftWhitespace(this.importProcessor.claimImportCode(path));\r\n      removeMaybeImportAssertion(this.tokens);\r\n    } else {\r\n      // This is a normal named export, so use that.\r\n      this.tokens.appendCode(exportStatements.join(\" \"));\r\n    }\r\n\r\n    if (this.tokens.matches1(TokenType.semi)) {\r\n      this.tokens.removeToken();\r\n    }\r\n  }\r\n\r\n   processExportStar() {\r\n    this.tokens.removeInitialToken();\r\n    while (!this.tokens.matches1(TokenType.string)) {\r\n      this.tokens.removeToken();\r\n    }\r\n    const path = this.tokens.stringValue();\r\n    this.tokens.replaceTokenTrimmingLeftWhitespace(this.importProcessor.claimImportCode(path));\r\n    removeMaybeImportAssertion(this.tokens);\r\n    if (this.tokens.matches1(TokenType.semi)) {\r\n      this.tokens.removeToken();\r\n    }\r\n  }\r\n\r\n   shouldElideExportedIdentifier(name) {\r\n    return this.isTypeScriptTransformEnabled && !this.declarationInfo.valueDeclarations.has(name);\r\n  }\r\n}\r\n\r\n/**\r\n * Class for editing import statements when we are keeping the code as ESM. We still need to remove\r\n * type-only imports in TypeScript and Flow.\r\n */\r\nclass ESMImportTransformer extends Transformer {\r\n  \r\n  \r\n  \r\n\r\n  constructor(\r\n     tokens,\r\n     nameManager,\r\n     helperManager,\r\n     reactHotLoaderTransformer,\r\n     isTypeScriptTransformEnabled,\r\n    options,\r\n  ) {\r\n    super();this.tokens = tokens;this.nameManager = nameManager;this.helperManager = helperManager;this.reactHotLoaderTransformer = reactHotLoaderTransformer;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;    this.nonTypeIdentifiers = isTypeScriptTransformEnabled\r\n      ? getNonTypeIdentifiers(tokens, options)\r\n      : new Set();\r\n    this.declarationInfo = isTypeScriptTransformEnabled\r\n      ? getDeclarationInfo(tokens)\r\n      : EMPTY_DECLARATION_INFO;\r\n    this.injectCreateRequireForImportRequire = Boolean(options.injectCreateRequireForImportRequire);\r\n  }\r\n\r\n  process() {\r\n    // TypeScript `import foo = require('foo');` should always just be translated to plain require.\r\n    if (this.tokens.matches3(TokenType._import, TokenType.name, TokenType.eq)) {\r\n      return this.processImportEquals();\r\n    }\r\n    if (\r\n      this.tokens.matches4(TokenType._import, TokenType.name, TokenType.name, TokenType.eq) &&\r\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._type)\r\n    ) {\r\n      // import type T = require('T')\r\n      this.tokens.removeInitialToken();\r\n      // This construct is always exactly 8 tokens long, so remove the 7 remaining tokens.\r\n      for (let i = 0; i < 7; i++) {\r\n        this.tokens.removeToken();\r\n      }\r\n      return true;\r\n    }\r\n    if (this.tokens.matches2(TokenType._export, TokenType.eq)) {\r\n      this.tokens.replaceToken(\"module.exports\");\r\n      return true;\r\n    }\r\n    if (\r\n      this.tokens.matches5(TokenType._export, TokenType._import, TokenType.name, TokenType.name, TokenType.eq) &&\r\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 2, ContextualKeyword._type)\r\n    ) {\r\n      // export import type T = require('T')\r\n      this.tokens.removeInitialToken();\r\n      // This construct is always exactly 9 tokens long, so remove the 8 remaining tokens.\r\n      for (let i = 0; i < 8; i++) {\r\n        this.tokens.removeToken();\r\n      }\r\n      return true;\r\n    }\r\n    if (this.tokens.matches1(TokenType._import)) {\r\n      return this.processImport();\r\n    }\r\n    if (this.tokens.matches2(TokenType._export, TokenType._default)) {\r\n      return this.processExportDefault();\r\n    }\r\n    if (this.tokens.matches2(TokenType._export, TokenType.braceL)) {\r\n      return this.processNamedExports();\r\n    }\r\n    if (\r\n      this.tokens.matches2(TokenType._export, TokenType.name) &&\r\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._type)\r\n    ) {\r\n      // export type {a};\r\n      // export type {a as b};\r\n      // export type {a} from './b';\r\n      // export type * from './b';\r\n      // export type * as ns from './b';\r\n      this.tokens.removeInitialToken();\r\n      this.tokens.removeToken();\r\n      if (this.tokens.matches1(TokenType.braceL)) {\r\n        while (!this.tokens.matches1(TokenType.braceR)) {\r\n          this.tokens.removeToken();\r\n        }\r\n        this.tokens.removeToken();\r\n      } else {\r\n        // *\r\n        this.tokens.removeToken();\r\n        if (this.tokens.matches1(TokenType._as)) {\r\n          // as\r\n          this.tokens.removeToken();\r\n          // ns\r\n          this.tokens.removeToken();\r\n        }\r\n      }\r\n      // Remove type re-export `... } from './T'`\r\n      if (\r\n        this.tokens.matchesContextual(ContextualKeyword._from) &&\r\n        this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, TokenType.string)\r\n      ) {\r\n        this.tokens.removeToken();\r\n        this.tokens.removeToken();\r\n        removeMaybeImportAssertion(this.tokens);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n   processImportEquals() {\r\n    const importName = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);\r\n    if (this.isTypeName(importName)) {\r\n      // If this name is only used as a type, elide the whole import.\r\n      elideImportEquals(this.tokens);\r\n    } else if (this.injectCreateRequireForImportRequire) {\r\n      // We're using require in an environment (Node ESM) that doesn't provide\r\n      // it as a global, so generate a helper to import it.\r\n      // import -> const\r\n      this.tokens.replaceToken(\"const\");\r\n      // Foo\r\n      this.tokens.copyToken();\r\n      // =\r\n      this.tokens.copyToken();\r\n      // require\r\n      this.tokens.replaceToken(this.helperManager.getHelperName(\"require\"));\r\n    } else {\r\n      // Otherwise, just switch `import` to `const`.\r\n      this.tokens.replaceToken(\"const\");\r\n    }\r\n    return true;\r\n  }\r\n\r\n   processImport() {\r\n    if (this.tokens.matches2(TokenType._import, TokenType.parenL)) {\r\n      // Dynamic imports don't need to be transformed.\r\n      return false;\r\n    }\r\n\r\n    const snapshot = this.tokens.snapshot();\r\n    const allImportsRemoved = this.removeImportTypeBindings();\r\n    if (allImportsRemoved) {\r\n      this.tokens.restoreToSnapshot(snapshot);\r\n      while (!this.tokens.matches1(TokenType.string)) {\r\n        this.tokens.removeToken();\r\n      }\r\n      this.tokens.removeToken();\r\n      removeMaybeImportAssertion(this.tokens);\r\n      if (this.tokens.matches1(TokenType.semi)) {\r\n        this.tokens.removeToken();\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Remove type bindings from this import, leaving the rest of the import intact.\r\n   *\r\n   * Return true if this import was ONLY types, and thus is eligible for removal. This will bail out\r\n   * of the replacement operation, so we can return early here.\r\n   */\r\n   removeImportTypeBindings() {\r\n    this.tokens.copyExpectedToken(TokenType._import);\r\n    if (\r\n      this.tokens.matchesContextual(ContextualKeyword._type) &&\r\n      !this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, TokenType.comma) &&\r\n      !this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._from)\r\n    ) {\r\n      // This is an \"import type\" statement, so exit early.\r\n      return true;\r\n    }\r\n\r\n    if (this.tokens.matches1(TokenType.string)) {\r\n      // This is a bare import, so we should proceed with the import.\r\n      this.tokens.copyToken();\r\n      return false;\r\n    }\r\n\r\n    // Skip the \"module\" token in import reflection.\r\n    if (\r\n      this.tokens.matchesContextual(ContextualKeyword._module) &&\r\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 2, ContextualKeyword._from)\r\n    ) {\r\n      this.tokens.copyToken();\r\n    }\r\n\r\n    let foundNonTypeImport = false;\r\n    let needsComma = false;\r\n\r\n    if (this.tokens.matches1(TokenType.name)) {\r\n      if (this.isTypeName(this.tokens.identifierName())) {\r\n        this.tokens.removeToken();\r\n        if (this.tokens.matches1(TokenType.comma)) {\r\n          this.tokens.removeToken();\r\n        }\r\n      } else {\r\n        foundNonTypeImport = true;\r\n        this.tokens.copyToken();\r\n        if (this.tokens.matches1(TokenType.comma)) {\r\n          // We're in a statement like:\r\n          // import A, * as B from './A';\r\n          // or\r\n          // import A, {foo} from './A';\r\n          // where the `A` is being kept. The comma should be removed if an only\r\n          // if the next part of the import statement is elided, but that's hard\r\n          // to determine at this point in the code. Instead, always remove it\r\n          // and set a flag to add it back if necessary.\r\n          needsComma = true;\r\n          this.tokens.removeToken();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.tokens.matches1(TokenType.star)) {\r\n      if (this.isTypeName(this.tokens.identifierNameAtRelativeIndex(2))) {\r\n        this.tokens.removeToken();\r\n        this.tokens.removeToken();\r\n        this.tokens.removeToken();\r\n      } else {\r\n        if (needsComma) {\r\n          this.tokens.appendCode(\",\");\r\n        }\r\n        foundNonTypeImport = true;\r\n        this.tokens.copyExpectedToken(TokenType.star);\r\n        this.tokens.copyExpectedToken(TokenType.name);\r\n        this.tokens.copyExpectedToken(TokenType.name);\r\n      }\r\n    } else if (this.tokens.matches1(TokenType.braceL)) {\r\n      if (needsComma) {\r\n        this.tokens.appendCode(\",\");\r\n      }\r\n      this.tokens.copyToken();\r\n      while (!this.tokens.matches1(TokenType.braceR)) {\r\n        const specifierInfo = getImportExportSpecifierInfo(this.tokens);\r\n        if (specifierInfo.isType || this.isTypeName(specifierInfo.rightName)) {\r\n          while (this.tokens.currentIndex() < specifierInfo.endIndex) {\r\n            this.tokens.removeToken();\r\n          }\r\n          if (this.tokens.matches1(TokenType.comma)) {\r\n            this.tokens.removeToken();\r\n          }\r\n        } else {\r\n          foundNonTypeImport = true;\r\n          while (this.tokens.currentIndex() < specifierInfo.endIndex) {\r\n            this.tokens.copyToken();\r\n          }\r\n          if (this.tokens.matches1(TokenType.comma)) {\r\n            this.tokens.copyToken();\r\n          }\r\n        }\r\n      }\r\n      this.tokens.copyExpectedToken(TokenType.braceR);\r\n    }\r\n\r\n    return !foundNonTypeImport;\r\n  }\r\n\r\n   isTypeName(name) {\r\n    return this.isTypeScriptTransformEnabled && !this.nonTypeIdentifiers.has(name);\r\n  }\r\n\r\n   processExportDefault() {\r\n    if (\r\n      shouldElideDefaultExport(this.isTypeScriptTransformEnabled, this.tokens, this.declarationInfo)\r\n    ) {\r\n      // If the exported value is just an identifier and should be elided by TypeScript\r\n      // rules, then remove it entirely. It will always have the form `export default e`,\r\n      // where `e` is an identifier.\r\n      this.tokens.removeInitialToken();\r\n      this.tokens.removeToken();\r\n      this.tokens.removeToken();\r\n      return true;\r\n    }\r\n\r\n    const alreadyHasName =\r\n      this.tokens.matches4(TokenType._export, TokenType._default, TokenType._function, TokenType.name) ||\r\n      // export default async function\r\n      (this.tokens.matches5(TokenType._export, TokenType._default, TokenType.name, TokenType._function, TokenType.name) &&\r\n        this.tokens.matchesContextualAtIndex(\r\n          this.tokens.currentIndex() + 2,\r\n          ContextualKeyword._async,\r\n        )) ||\r\n      this.tokens.matches4(TokenType._export, TokenType._default, TokenType._class, TokenType.name) ||\r\n      this.tokens.matches5(TokenType._export, TokenType._default, TokenType._abstract, TokenType._class, TokenType.name);\r\n\r\n    if (!alreadyHasName && this.reactHotLoaderTransformer) {\r\n      // This is a plain \"export default E\" statement and we need to assign E to a variable.\r\n      // Change \"export default E\" to \"let _default; export default _default = E\"\r\n      const defaultVarName = this.nameManager.claimFreeName(\"_default\");\r\n      this.tokens.replaceToken(`let ${defaultVarName}; export`);\r\n      this.tokens.copyToken();\r\n      this.tokens.appendCode(` ${defaultVarName} =`);\r\n      this.reactHotLoaderTransformer.setExtractedDefaultExportName(defaultVarName);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * In TypeScript, we need to remove named exports that were never declared or only declared as a\r\n   * type.\r\n   */\r\n   processNamedExports() {\r\n    if (!this.isTypeScriptTransformEnabled) {\r\n      return false;\r\n    }\r\n    this.tokens.copyExpectedToken(TokenType._export);\r\n    this.tokens.copyExpectedToken(TokenType.braceL);\r\n\r\n    while (!this.tokens.matches1(TokenType.braceR)) {\r\n      const specifierInfo = getImportExportSpecifierInfo(this.tokens);\r\n      if (specifierInfo.isType || this.shouldElideExportedName(specifierInfo.leftName)) {\r\n        // Type export, so remove all tokens, including any comma.\r\n        while (this.tokens.currentIndex() < specifierInfo.endIndex) {\r\n          this.tokens.removeToken();\r\n        }\r\n        if (this.tokens.matches1(TokenType.comma)) {\r\n          this.tokens.removeToken();\r\n        }\r\n      } else {\r\n        // Non-type export, so copy all tokens, including any comma.\r\n        while (this.tokens.currentIndex() < specifierInfo.endIndex) {\r\n          this.tokens.copyToken();\r\n        }\r\n        if (this.tokens.matches1(TokenType.comma)) {\r\n          this.tokens.copyToken();\r\n        }\r\n      }\r\n    }\r\n    this.tokens.copyExpectedToken(TokenType.braceR);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * ESM elides all imports with the rule that we only elide if we see that it's\r\n   * a type and never see it as a value. This is in contrast to CJS, which\r\n   * elides imports that are completely unknown.\r\n   */\r\n   shouldElideExportedName(name) {\r\n    return (\r\n      this.isTypeScriptTransformEnabled &&\r\n      this.declarationInfo.typeDeclarations.has(name) &&\r\n      !this.declarationInfo.valueDeclarations.has(name)\r\n    );\r\n  }\r\n}\r\n\r\nclass FlowTransformer extends Transformer {\r\n  constructor(\r\n     rootTransformer,\r\n     tokens,\r\n     isImportsTransformEnabled,\r\n  ) {\r\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.isImportsTransformEnabled = isImportsTransformEnabled;  }\r\n\r\n  process() {\r\n    if (\r\n      this.rootTransformer.processPossibleArrowParamEnd() ||\r\n      this.rootTransformer.processPossibleAsyncArrowWithTypeParams() ||\r\n      this.rootTransformer.processPossibleTypeRange()\r\n    ) {\r\n      return true;\r\n    }\r\n    if (this.tokens.matches1(TokenType._enum)) {\r\n      this.processEnum();\r\n      return true;\r\n    }\r\n    if (this.tokens.matches2(TokenType._export, TokenType._enum)) {\r\n      this.processNamedExportEnum();\r\n      return true;\r\n    }\r\n    if (this.tokens.matches3(TokenType._export, TokenType._default, TokenType._enum)) {\r\n      this.processDefaultExportEnum();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle a declaration like:\r\n   * export enum E ...\r\n   *\r\n   * With this imports transform, this becomes:\r\n   * const E = [[enum]]; exports.E = E;\r\n   *\r\n   * otherwise, it becomes:\r\n   * export const E = [[enum]];\r\n   */\r\n  processNamedExportEnum() {\r\n    if (this.isImportsTransformEnabled) {\r\n      // export\r\n      this.tokens.removeInitialToken();\r\n      const enumName = this.tokens.identifierNameAtRelativeIndex(1);\r\n      this.processEnum();\r\n      this.tokens.appendCode(` exports.${enumName} = ${enumName};`);\r\n    } else {\r\n      this.tokens.copyToken();\r\n      this.processEnum();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a declaration like:\r\n   * export default enum E\r\n   *\r\n   * With the imports transform, this becomes:\r\n   * const E = [[enum]]; exports.default = E;\r\n   *\r\n   * otherwise, it becomes:\r\n   * const E = [[enum]]; export default E;\r\n   */\r\n  processDefaultExportEnum() {\r\n    // export\r\n    this.tokens.removeInitialToken();\r\n    // default\r\n    this.tokens.removeToken();\r\n    const enumName = this.tokens.identifierNameAtRelativeIndex(1);\r\n    this.processEnum();\r\n    if (this.isImportsTransformEnabled) {\r\n      this.tokens.appendCode(` exports.default = ${enumName};`);\r\n    } else {\r\n      this.tokens.appendCode(` export default ${enumName};`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transpile flow enums to invoke the \"flow-enums-runtime\" library.\r\n   *\r\n   * Currently, the transpiled code always uses `require(\"flow-enums-runtime\")`,\r\n   * but if future flexibility is needed, we could expose a config option for\r\n   * this string (similar to configurable JSX). Even when targeting ESM, the\r\n   * default behavior of babel-plugin-transform-flow-enums is to use require\r\n   * rather than injecting an import.\r\n   *\r\n   * Flow enums are quite a bit simpler than TS enums and have some convenient\r\n   * constraints:\r\n   * - Element initializers must be either always present or always absent. That\r\n   *   means that we can use fixed lookahead on the first element (if any) and\r\n   *   assume that all elements are like that.\r\n   * - The right-hand side of an element initializer must be a literal value,\r\n   *   not a complex expression and not referencing other elements. That means\r\n   *   we can simply copy a single token.\r\n   *\r\n   * Enums can be broken up into three basic cases:\r\n   *\r\n   * Mirrored enums:\r\n   * enum E {A, B}\r\n   *   ->\r\n   * const E = require(\"flow-enums-runtime\").Mirrored([\"A\", \"B\"]);\r\n   *\r\n   * Initializer enums:\r\n   * enum E {A = 1, B = 2}\r\n   *   ->\r\n   * const E = require(\"flow-enums-runtime\")({A: 1, B: 2});\r\n   *\r\n   * Symbol enums:\r\n   * enum E of symbol {A, B}\r\n   *   ->\r\n   * const E = require(\"flow-enums-runtime\")({A: Symbol(\"A\"), B: Symbol(\"B\")});\r\n   *\r\n   * We can statically detect which of the three cases this is by looking at the\r\n   * \"of\" declaration (if any) and seeing if the first element has an initializer.\r\n   * Since the other transform details are so similar between the three cases, we\r\n   * use a single implementation and vary the transform within processEnumElement\r\n   * based on case.\r\n   */\r\n  processEnum() {\r\n    // enum E -> const E\r\n    this.tokens.replaceToken(\"const\");\r\n    this.tokens.copyExpectedToken(TokenType.name);\r\n\r\n    let isSymbolEnum = false;\r\n    if (this.tokens.matchesContextual(ContextualKeyword._of)) {\r\n      this.tokens.removeToken();\r\n      isSymbolEnum = this.tokens.matchesContextual(ContextualKeyword._symbol);\r\n      this.tokens.removeToken();\r\n    }\r\n    const hasInitializers = this.tokens.matches3(TokenType.braceL, TokenType.name, TokenType.eq);\r\n    this.tokens.appendCode(' = require(\"flow-enums-runtime\")');\r\n\r\n    const isMirrored = !isSymbolEnum && !hasInitializers;\r\n    this.tokens.replaceTokenTrimmingLeftWhitespace(isMirrored ? \".Mirrored([\" : \"({\");\r\n\r\n    while (!this.tokens.matches1(TokenType.braceR)) {\r\n      // ... is allowed at the end and has no runtime behavior.\r\n      if (this.tokens.matches1(TokenType.ellipsis)) {\r\n        this.tokens.removeToken();\r\n        break;\r\n      }\r\n      this.processEnumElement(isSymbolEnum, hasInitializers);\r\n      if (this.tokens.matches1(TokenType.comma)) {\r\n        this.tokens.copyToken();\r\n      }\r\n    }\r\n\r\n    this.tokens.replaceToken(isMirrored ? \"]);\" : \"});\");\r\n  }\r\n\r\n  /**\r\n   * Process an individual enum element, producing either an array element or an\r\n   * object element based on what type of enum this is.\r\n   */\r\n  processEnumElement(isSymbolEnum, hasInitializers) {\r\n    if (isSymbolEnum) {\r\n      // Symbol enums never have initializers and are expanded to object elements.\r\n      // A, -> A: Symbol(\"A\"),\r\n      const elementName = this.tokens.identifierName();\r\n      this.tokens.copyToken();\r\n      this.tokens.appendCode(`: Symbol(\"${elementName}\")`);\r\n    } else if (hasInitializers) {\r\n      // Initializers are expanded to object elements.\r\n      // A = 1, -> A: 1,\r\n      this.tokens.copyToken();\r\n      this.tokens.replaceTokenTrimmingLeftWhitespace(\":\");\r\n      this.tokens.copyToken();\r\n    } else {\r\n      // Enum elements without initializers become string literal array elements.\r\n      // A, -> \"A\",\r\n      this.tokens.replaceToken(`\"${this.tokens.identifierName()}\"`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\r\n\r\nconst JEST_GLOBAL_NAME = \"jest\";\r\nconst HOISTED_METHODS = [\"mock\", \"unmock\", \"enableAutomock\", \"disableAutomock\"];\r\n\r\n/**\r\n * Implementation of babel-plugin-jest-hoist, which hoists up some jest method\r\n * calls above the imports to allow them to override other imports.\r\n *\r\n * To preserve line numbers, rather than directly moving the jest.mock code, we\r\n * wrap each invocation in a function statement and then call the function from\r\n * the top of the file.\r\n */\r\nclass JestHoistTransformer extends Transformer {\r\n    __init() {this.hoistedFunctionNames = [];}\r\n\r\n  constructor(\r\n     rootTransformer,\r\n     tokens,\r\n     nameManager,\r\n     importProcessor,\r\n  ) {\r\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.nameManager = nameManager;this.importProcessor = importProcessor;JestHoistTransformer.prototype.__init.call(this);  }\r\n\r\n  process() {\r\n    if (\r\n      this.tokens.currentToken().scopeDepth === 0 &&\r\n      this.tokens.matches4(TokenType.name, TokenType.dot, TokenType.name, TokenType.parenL) &&\r\n      this.tokens.identifierName() === JEST_GLOBAL_NAME\r\n    ) {\r\n      // TODO: This only works if imports transform is active, which it will be for jest.\r\n      //       But if jest adds module support and we no longer need the import transform, this needs fixing.\r\n      if (_optionalChain([this, 'access', _ => _.importProcessor, 'optionalAccess', _2 => _2.getGlobalNames, 'call', _3 => _3(), 'optionalAccess', _4 => _4.has, 'call', _5 => _5(JEST_GLOBAL_NAME)])) {\r\n        return false;\r\n      }\r\n      return this.extractHoistedCalls();\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getHoistedCode() {\r\n    if (this.hoistedFunctionNames.length > 0) {\r\n      // This will be placed before module interop code, but that's fine since\r\n      // imports aren't allowed in module mock factories.\r\n      return this.hoistedFunctionNames.map((name) => `${name}();`).join(\"\");\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  /**\r\n   * Extracts any methods calls on the jest-object that should be hoisted.\r\n   *\r\n   * According to the jest docs, https://jestjs.io/docs/en/jest-object#jestmockmodulename-factory-options,\r\n   * mock, unmock, enableAutomock, disableAutomock, are the methods that should be hoisted.\r\n   *\r\n   * We do not apply the same checks of the arguments as babel-plugin-jest-hoist does.\r\n   */\r\n   extractHoistedCalls() {\r\n    // We're handling a chain of calls where `jest` may or may not need to be inserted for each call\r\n    // in the chain, so remove the initial `jest` to make the loop implementation cleaner.\r\n    this.tokens.removeToken();\r\n    // Track some state so that multiple non-hoisted chained calls in a row keep their chaining\r\n    // syntax.\r\n    let followsNonHoistedJestCall = false;\r\n\r\n    // Iterate through all chained calls on the jest object.\r\n    while (this.tokens.matches3(TokenType.dot, TokenType.name, TokenType.parenL)) {\r\n      const methodName = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);\r\n      const shouldHoist = HOISTED_METHODS.includes(methodName);\r\n      if (shouldHoist) {\r\n        // We've matched e.g. `.mock(...)` or similar call.\r\n        // Replace the initial `.` with `function __jestHoist(){jest.`\r\n        const hoistedFunctionName = this.nameManager.claimFreeName(\"__jestHoist\");\r\n        this.hoistedFunctionNames.push(hoistedFunctionName);\r\n        this.tokens.replaceToken(`function ${hoistedFunctionName}(){${JEST_GLOBAL_NAME}.`);\r\n        this.tokens.copyToken();\r\n        this.tokens.copyToken();\r\n        this.rootTransformer.processBalancedCode();\r\n        this.tokens.copyExpectedToken(TokenType.parenR);\r\n        this.tokens.appendCode(\";}\");\r\n        followsNonHoistedJestCall = false;\r\n      } else {\r\n        // This is a non-hoisted method, so just transform the code as usual.\r\n        if (followsNonHoistedJestCall) {\r\n          // If we didn't hoist the previous call, we can leave the code as-is to chain off of the\r\n          // previous method call. It's important to preserve the code here because we don't know\r\n          // for sure that the method actually returned the jest object for chaining.\r\n          this.tokens.copyToken();\r\n        } else {\r\n          // If we hoisted the previous call, we know it returns the jest object back, so we insert\r\n          // the identifier `jest` to continue the chain.\r\n          this.tokens.replaceToken(`${JEST_GLOBAL_NAME}.`);\r\n        }\r\n        this.tokens.copyToken();\r\n        this.tokens.copyToken();\r\n        this.rootTransformer.processBalancedCode();\r\n        this.tokens.copyExpectedToken(TokenType.parenR);\r\n        followsNonHoistedJestCall = true;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nclass NumericSeparatorTransformer extends Transformer {\r\n  constructor( tokens) {\r\n    super();this.tokens = tokens;  }\r\n\r\n  process() {\r\n    if (this.tokens.matches1(TokenType.num)) {\r\n      const code = this.tokens.currentTokenCode();\r\n      if (code.includes(\"_\")) {\r\n        this.tokens.replaceToken(code.replace(/_/g, \"\"));\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nclass OptionalCatchBindingTransformer extends Transformer {\r\n  constructor( tokens,  nameManager) {\r\n    super();this.tokens = tokens;this.nameManager = nameManager;  }\r\n\r\n  process() {\r\n    if (this.tokens.matches2(TokenType._catch, TokenType.braceL)) {\r\n      this.tokens.copyToken();\r\n      this.tokens.appendCode(` (${this.nameManager.claimFreeName(\"e\")})`);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Transformer supporting the optional chaining and nullish coalescing operators.\r\n *\r\n * Tech plan here:\r\n * https://github.com/alangpierce/sucrase/wiki/Sucrase-Optional-Chaining-and-Nullish-Coalescing-Technical-Plan\r\n *\r\n * The prefix and suffix code snippets are handled by TokenProcessor, and this transformer handles\r\n * the operators themselves.\r\n */\r\nclass OptionalChainingNullishTransformer extends Transformer {\r\n  constructor( tokens,  nameManager) {\r\n    super();this.tokens = tokens;this.nameManager = nameManager;  }\r\n\r\n  process() {\r\n    if (this.tokens.matches1(TokenType.nullishCoalescing)) {\r\n      const token = this.tokens.currentToken();\r\n      if (this.tokens.tokens[token.nullishStartIndex].isAsyncOperation) {\r\n        this.tokens.replaceTokenTrimmingLeftWhitespace(\", async () => (\");\r\n      } else {\r\n        this.tokens.replaceTokenTrimmingLeftWhitespace(\", () => (\");\r\n      }\r\n      return true;\r\n    }\r\n    if (this.tokens.matches1(TokenType._delete)) {\r\n      const nextToken = this.tokens.tokenAtRelativeIndex(1);\r\n      if (nextToken.isOptionalChainStart) {\r\n        this.tokens.removeInitialToken();\r\n        return true;\r\n      }\r\n    }\r\n    const token = this.tokens.currentToken();\r\n    const chainStart = token.subscriptStartIndex;\r\n    if (\r\n      chainStart != null &&\r\n      this.tokens.tokens[chainStart].isOptionalChainStart &&\r\n      // Super subscripts can't be optional (since super is never null/undefined), and the syntax\r\n      // relies on the subscript being intact, so leave this token alone.\r\n      this.tokens.tokenAtRelativeIndex(-1).type !== TokenType._super\r\n    ) {\r\n      const param = this.nameManager.claimFreeName(\"_\");\r\n      let arrowStartSnippet;\r\n      if (\r\n        chainStart > 0 &&\r\n        this.tokens.matches1AtIndex(chainStart - 1, TokenType._delete) &&\r\n        this.isLastSubscriptInChain()\r\n      ) {\r\n        // Delete operations are special: we already removed the delete keyword, and to still\r\n        // perform a delete, we need to insert a delete in the very last part of the chain, which\r\n        // in correct code will always be a property access.\r\n        arrowStartSnippet = `${param} => delete ${param}`;\r\n      } else {\r\n        arrowStartSnippet = `${param} => ${param}`;\r\n      }\r\n      if (this.tokens.tokens[chainStart].isAsyncOperation) {\r\n        arrowStartSnippet = `async ${arrowStartSnippet}`;\r\n      }\r\n      if (\r\n        this.tokens.matches2(TokenType.questionDot, TokenType.parenL) ||\r\n        this.tokens.matches2(TokenType.questionDot, TokenType.lessThan)\r\n      ) {\r\n        if (this.justSkippedSuper()) {\r\n          this.tokens.appendCode(\".bind(this)\");\r\n        }\r\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'optionalCall', ${arrowStartSnippet}`);\r\n      } else if (this.tokens.matches2(TokenType.questionDot, TokenType.bracketL)) {\r\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'optionalAccess', ${arrowStartSnippet}`);\r\n      } else if (this.tokens.matches1(TokenType.questionDot)) {\r\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'optionalAccess', ${arrowStartSnippet}.`);\r\n      } else if (this.tokens.matches1(TokenType.dot)) {\r\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'access', ${arrowStartSnippet}.`);\r\n      } else if (this.tokens.matches1(TokenType.bracketL)) {\r\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'access', ${arrowStartSnippet}[`);\r\n      } else if (this.tokens.matches1(TokenType.parenL)) {\r\n        if (this.justSkippedSuper()) {\r\n          this.tokens.appendCode(\".bind(this)\");\r\n        }\r\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'call', ${arrowStartSnippet}(`);\r\n      } else {\r\n        throw new Error(\"Unexpected subscript operator in optional chain.\");\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Determine if the current token is the last of its chain, so that we know whether it's eligible\r\n   * to have a delete op inserted.\r\n   *\r\n   * We can do this by walking forward until we determine one way or another. Each\r\n   * isOptionalChainStart token must be paired with exactly one isOptionalChainEnd token after it in\r\n   * a nesting way, so we can track depth and walk to the end of the chain (the point where the\r\n   * depth goes negative) and see if any other subscript token is after us in the chain.\r\n   */\r\n  isLastSubscriptInChain() {\r\n    let depth = 0;\r\n    for (let i = this.tokens.currentIndex() + 1; ; i++) {\r\n      if (i >= this.tokens.tokens.length) {\r\n        throw new Error(\"Reached the end of the code while finding the end of the access chain.\");\r\n      }\r\n      if (this.tokens.tokens[i].isOptionalChainStart) {\r\n        depth++;\r\n      } else if (this.tokens.tokens[i].isOptionalChainEnd) {\r\n        depth--;\r\n      }\r\n      if (depth < 0) {\r\n        return true;\r\n      }\r\n\r\n      // This subscript token is a later one in the same chain.\r\n      if (depth === 0 && this.tokens.tokens[i].subscriptStartIndex != null) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine if we are the open-paren in an expression like super.a()?.b.\r\n   *\r\n   * We can do this by walking backward to find the previous subscript. If that subscript was\r\n   * preceded by a super, then we must be the subscript after it, so if this is a call expression,\r\n   * we'll need to attach the right context.\r\n   */\r\n  justSkippedSuper() {\r\n    let depth = 0;\r\n    let index = this.tokens.currentIndex() - 1;\r\n    while (true) {\r\n      if (index < 0) {\r\n        throw new Error(\r\n          \"Reached the start of the code while finding the start of the access chain.\",\r\n        );\r\n      }\r\n      if (this.tokens.tokens[index].isOptionalChainStart) {\r\n        depth--;\r\n      } else if (this.tokens.tokens[index].isOptionalChainEnd) {\r\n        depth++;\r\n      }\r\n      if (depth < 0) {\r\n        return false;\r\n      }\r\n\r\n      // This subscript token is a later one in the same chain.\r\n      if (depth === 0 && this.tokens.tokens[index].subscriptStartIndex != null) {\r\n        return this.tokens.tokens[index - 1].type === TokenType._super;\r\n      }\r\n      index--;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Implementation of babel-plugin-transform-react-display-name, which adds a\r\n * display name to usages of React.createClass and createReactClass.\r\n */\r\nclass ReactDisplayNameTransformer extends Transformer {\r\n  constructor(\r\n     rootTransformer,\r\n     tokens,\r\n     importProcessor,\r\n     options,\r\n  ) {\r\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.importProcessor = importProcessor;this.options = options;  }\r\n\r\n  process() {\r\n    const startIndex = this.tokens.currentIndex();\r\n    if (this.tokens.identifierName() === \"createReactClass\") {\r\n      const newName =\r\n        this.importProcessor && this.importProcessor.getIdentifierReplacement(\"createReactClass\");\r\n      if (newName) {\r\n        this.tokens.replaceToken(`(0, ${newName})`);\r\n      } else {\r\n        this.tokens.copyToken();\r\n      }\r\n      this.tryProcessCreateClassCall(startIndex);\r\n      return true;\r\n    }\r\n    if (\r\n      this.tokens.matches3(TokenType.name, TokenType.dot, TokenType.name) &&\r\n      this.tokens.identifierName() === \"React\" &&\r\n      this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 2) === \"createClass\"\r\n    ) {\r\n      const newName = this.importProcessor\r\n        ? this.importProcessor.getIdentifierReplacement(\"React\") || \"React\"\r\n        : \"React\";\r\n      if (newName) {\r\n        this.tokens.replaceToken(newName);\r\n        this.tokens.copyToken();\r\n        this.tokens.copyToken();\r\n      } else {\r\n        this.tokens.copyToken();\r\n        this.tokens.copyToken();\r\n        this.tokens.copyToken();\r\n      }\r\n      this.tryProcessCreateClassCall(startIndex);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * This is called with the token position at the open-paren.\r\n   */\r\n   tryProcessCreateClassCall(startIndex) {\r\n    const displayName = this.findDisplayName(startIndex);\r\n    if (!displayName) {\r\n      return;\r\n    }\r\n\r\n    if (this.classNeedsDisplayName()) {\r\n      this.tokens.copyExpectedToken(TokenType.parenL);\r\n      this.tokens.copyExpectedToken(TokenType.braceL);\r\n      this.tokens.appendCode(`displayName: '${displayName}',`);\r\n      this.rootTransformer.processBalancedCode();\r\n      this.tokens.copyExpectedToken(TokenType.braceR);\r\n      this.tokens.copyExpectedToken(TokenType.parenR);\r\n    }\r\n  }\r\n\r\n   findDisplayName(startIndex) {\r\n    if (startIndex < 2) {\r\n      return null;\r\n    }\r\n    if (this.tokens.matches2AtIndex(startIndex - 2, TokenType.name, TokenType.eq)) {\r\n      // This is an assignment (or declaration) and the LHS is either an identifier or a member\r\n      // expression ending in an identifier, so use that identifier name.\r\n      return this.tokens.identifierNameAtIndex(startIndex - 2);\r\n    }\r\n    if (\r\n      startIndex >= 2 &&\r\n      this.tokens.tokens[startIndex - 2].identifierRole === IdentifierRole.ObjectKey\r\n    ) {\r\n      // This is an object literal value.\r\n      return this.tokens.identifierNameAtIndex(startIndex - 2);\r\n    }\r\n    if (this.tokens.matches2AtIndex(startIndex - 2, TokenType._export, TokenType._default)) {\r\n      return this.getDisplayNameFromFilename();\r\n    }\r\n    return null;\r\n  }\r\n\r\n   getDisplayNameFromFilename() {\r\n    const filePath = this.options.filePath || \"unknown\";\r\n    const pathSegments = filePath.split(\"/\");\r\n    const filename = pathSegments[pathSegments.length - 1];\r\n    const dotIndex = filename.lastIndexOf(\".\");\r\n    const baseFilename = dotIndex === -1 ? filename : filename.slice(0, dotIndex);\r\n    if (baseFilename === \"index\" && pathSegments[pathSegments.length - 2]) {\r\n      return pathSegments[pathSegments.length - 2];\r\n    } else {\r\n      return baseFilename;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We only want to add a display name when this is a function call containing\r\n   * one argument, which is an object literal without `displayName` as an\r\n   * existing key.\r\n   */\r\n   classNeedsDisplayName() {\r\n    let index = this.tokens.currentIndex();\r\n    if (!this.tokens.matches2(TokenType.parenL, TokenType.braceL)) {\r\n      return false;\r\n    }\r\n    // The block starts on the {, and we expect any displayName key to be in\r\n    // that context. We need to ignore other other contexts to avoid matching\r\n    // nested displayName keys.\r\n    const objectStartIndex = index + 1;\r\n    const objectContextId = this.tokens.tokens[objectStartIndex].contextId;\r\n    if (objectContextId == null) {\r\n      throw new Error(\"Expected non-null context ID on object open-brace.\");\r\n    }\r\n\r\n    for (; index < this.tokens.tokens.length; index++) {\r\n      const token = this.tokens.tokens[index];\r\n      if (token.type === TokenType.braceR && token.contextId === objectContextId) {\r\n        index++;\r\n        break;\r\n      }\r\n\r\n      if (\r\n        this.tokens.identifierNameAtIndex(index) === \"displayName\" &&\r\n        this.tokens.tokens[index].identifierRole === IdentifierRole.ObjectKey &&\r\n        token.contextId === objectContextId\r\n      ) {\r\n        // We found a displayName key, so bail out.\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (index === this.tokens.tokens.length) {\r\n      throw new Error(\"Unexpected end of input when processing React class.\");\r\n    }\r\n\r\n    // If we got this far, we know we have createClass with an object with no\r\n    // display name, so we want to proceed as long as that was the only argument.\r\n    return (\r\n      this.tokens.matches1AtIndex(index, TokenType.parenR) ||\r\n      this.tokens.matches2AtIndex(index, TokenType.comma, TokenType.parenR)\r\n    );\r\n  }\r\n}\r\n\r\nclass ReactHotLoaderTransformer extends Transformer {\r\n   __init() {this.extractedDefaultExportName = null;}\r\n\r\n  constructor( tokens,  filePath) {\r\n    super();this.tokens = tokens;this.filePath = filePath;ReactHotLoaderTransformer.prototype.__init.call(this);  }\r\n\r\n  setExtractedDefaultExportName(extractedDefaultExportName) {\r\n    this.extractedDefaultExportName = extractedDefaultExportName;\r\n  }\r\n\r\n  getPrefixCode() {\r\n    return `\r\n      (function () {\r\n        var enterModule = require('react-hot-loader').enterModule;\r\n        enterModule && enterModule(module);\r\n      })();`\r\n      .replace(/\\s+/g, \" \")\r\n      .trim();\r\n  }\r\n\r\n  getSuffixCode() {\r\n    const topLevelNames = new Set();\r\n    for (const token of this.tokens.tokens) {\r\n      if (\r\n        !token.isType &&\r\n        isTopLevelDeclaration(token) &&\r\n        token.identifierRole !== IdentifierRole.ImportDeclaration\r\n      ) {\r\n        topLevelNames.add(this.tokens.identifierNameForToken(token));\r\n      }\r\n    }\r\n    const namesToRegister = Array.from(topLevelNames).map((name) => ({\r\n      variableName: name,\r\n      uniqueLocalName: name,\r\n    }));\r\n    if (this.extractedDefaultExportName) {\r\n      namesToRegister.push({\r\n        variableName: this.extractedDefaultExportName,\r\n        uniqueLocalName: \"default\",\r\n      });\r\n    }\r\n    return `\r\n;(function () {\r\n  var reactHotLoader = require('react-hot-loader').default;\r\n  var leaveModule = require('react-hot-loader').leaveModule;\r\n  if (!reactHotLoader) {\r\n    return;\r\n  }\r\n${namesToRegister\r\n  .map(\r\n    ({variableName, uniqueLocalName}) =>\r\n      `  reactHotLoader.register(${variableName}, \"${uniqueLocalName}\", ${JSON.stringify(\r\n        this.filePath || \"\",\r\n      )});`,\r\n  )\r\n  .join(\"\\n\")}\r\n  leaveModule(module);\r\n})();`;\r\n  }\r\n\r\n  process() {\r\n    return false;\r\n  }\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar\r\n// Hard-code a list of reserved words rather than trying to use keywords or contextual keywords\r\n// from the parser, since currently there are various exceptions, like `package` being reserved\r\n// but unused and various contextual keywords being reserved. Note that we assume that all code\r\n// compiled by Sucrase is in a module, so strict mode words and await are all considered reserved\r\n// here.\r\nconst RESERVED_WORDS = new Set([\r\n  // Reserved keywords as of ECMAScript 2015\r\n  \"break\",\r\n  \"case\",\r\n  \"catch\",\r\n  \"class\",\r\n  \"const\",\r\n  \"continue\",\r\n  \"debugger\",\r\n  \"default\",\r\n  \"delete\",\r\n  \"do\",\r\n  \"else\",\r\n  \"export\",\r\n  \"extends\",\r\n  \"finally\",\r\n  \"for\",\r\n  \"function\",\r\n  \"if\",\r\n  \"import\",\r\n  \"in\",\r\n  \"instanceof\",\r\n  \"new\",\r\n  \"return\",\r\n  \"super\",\r\n  \"switch\",\r\n  \"this\",\r\n  \"throw\",\r\n  \"try\",\r\n  \"typeof\",\r\n  \"var\",\r\n  \"void\",\r\n  \"while\",\r\n  \"with\",\r\n  \"yield\",\r\n  // Future reserved keywords\r\n  \"enum\",\r\n  \"implements\",\r\n  \"interface\",\r\n  \"let\",\r\n  \"package\",\r\n  \"private\",\r\n  \"protected\",\r\n  \"public\",\r\n  \"static\",\r\n  \"await\",\r\n  // Literals that cannot be used as identifiers\r\n  \"false\",\r\n  \"null\",\r\n  \"true\",\r\n]);\r\n\r\n/**\r\n * Determine if the given name is a legal variable name.\r\n *\r\n * This is needed when transforming TypeScript enums; if an enum key is a valid\r\n * variable name, it might be referenced later in the enum, so we need to\r\n * declare a variable.\r\n */\r\nfunction isIdentifier(name) {\r\n  if (name.length === 0) {\r\n    return false;\r\n  }\r\n  if (!IS_IDENTIFIER_START[name.charCodeAt(0)]) {\r\n    return false;\r\n  }\r\n  for (let i = 1; i < name.length; i++) {\r\n    if (!IS_IDENTIFIER_CHAR[name.charCodeAt(i)]) {\r\n      return false;\r\n    }\r\n  }\r\n  return !RESERVED_WORDS.has(name);\r\n}\r\n\r\nclass TypeScriptTransformer extends Transformer {\r\n  constructor(\r\n     rootTransformer,\r\n     tokens,\r\n     isImportsTransformEnabled,\r\n  ) {\r\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.isImportsTransformEnabled = isImportsTransformEnabled;  }\r\n\r\n  process() {\r\n    if (\r\n      this.rootTransformer.processPossibleArrowParamEnd() ||\r\n      this.rootTransformer.processPossibleAsyncArrowWithTypeParams() ||\r\n      this.rootTransformer.processPossibleTypeRange()\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      this.tokens.matches1(TokenType._public) ||\r\n      this.tokens.matches1(TokenType._protected) ||\r\n      this.tokens.matches1(TokenType._private) ||\r\n      this.tokens.matches1(TokenType._abstract) ||\r\n      this.tokens.matches1(TokenType._readonly) ||\r\n      this.tokens.matches1(TokenType._override) ||\r\n      this.tokens.matches1(TokenType.nonNullAssertion)\r\n    ) {\r\n      this.tokens.removeInitialToken();\r\n      return true;\r\n    }\r\n    if (this.tokens.matches1(TokenType._enum) || this.tokens.matches2(TokenType._const, TokenType._enum)) {\r\n      this.processEnum();\r\n      return true;\r\n    }\r\n    if (\r\n      this.tokens.matches2(TokenType._export, TokenType._enum) ||\r\n      this.tokens.matches3(TokenType._export, TokenType._const, TokenType._enum)\r\n    ) {\r\n      this.processEnum(true);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  processEnum(isExport = false) {\r\n    // We might have \"export const enum\", so just remove all relevant tokens.\r\n    this.tokens.removeInitialToken();\r\n    while (this.tokens.matches1(TokenType._const) || this.tokens.matches1(TokenType._enum)) {\r\n      this.tokens.removeToken();\r\n    }\r\n    const enumName = this.tokens.identifierName();\r\n    this.tokens.removeToken();\r\n    if (isExport && !this.isImportsTransformEnabled) {\r\n      this.tokens.appendCode(\"export \");\r\n    }\r\n    this.tokens.appendCode(`var ${enumName}; (function (${enumName})`);\r\n    this.tokens.copyExpectedToken(TokenType.braceL);\r\n    this.processEnumBody(enumName);\r\n    this.tokens.copyExpectedToken(TokenType.braceR);\r\n    if (isExport && this.isImportsTransformEnabled) {\r\n      this.tokens.appendCode(`)(${enumName} || (exports.${enumName} = ${enumName} = {}));`);\r\n    } else {\r\n      this.tokens.appendCode(`)(${enumName} || (${enumName} = {}));`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform an enum into equivalent JS. This has complexity in a few places:\r\n   * - TS allows string enums, numeric enums, and a mix of the two styles within an enum.\r\n   * - Enum keys are allowed to be referenced in later enum values.\r\n   * - Enum keys are allowed to be strings.\r\n   * - When enum values are omitted, they should follow an auto-increment behavior.\r\n   */\r\n  processEnumBody(enumName) {\r\n    // Code that can be used to reference the previous enum member, or null if this is the first\r\n    // enum member.\r\n    let previousValueCode = null;\r\n    while (true) {\r\n      if (this.tokens.matches1(TokenType.braceR)) {\r\n        break;\r\n      }\r\n      const {nameStringCode, variableName} = this.extractEnumKeyInfo(this.tokens.currentToken());\r\n      this.tokens.removeInitialToken();\r\n\r\n      if (\r\n        this.tokens.matches3(TokenType.eq, TokenType.string, TokenType.comma) ||\r\n        this.tokens.matches3(TokenType.eq, TokenType.string, TokenType.braceR)\r\n      ) {\r\n        this.processStringLiteralEnumMember(enumName, nameStringCode, variableName);\r\n      } else if (this.tokens.matches1(TokenType.eq)) {\r\n        this.processExplicitValueEnumMember(enumName, nameStringCode, variableName);\r\n      } else {\r\n        this.processImplicitValueEnumMember(\r\n          enumName,\r\n          nameStringCode,\r\n          variableName,\r\n          previousValueCode,\r\n        );\r\n      }\r\n      if (this.tokens.matches1(TokenType.comma)) {\r\n        this.tokens.removeToken();\r\n      }\r\n\r\n      if (variableName != null) {\r\n        previousValueCode = variableName;\r\n      } else {\r\n        previousValueCode = `${enumName}[${nameStringCode}]`;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Detect name information about this enum key, which will be used to determine which code to emit\r\n   * and whether we should declare a variable as part of this declaration.\r\n   *\r\n   * Some cases to keep in mind:\r\n   * - Enum keys can be implicitly referenced later, e.g. `X = 1, Y = X`. In Sucrase, we implement\r\n   *   this by declaring a variable `X` so that later expressions can use it.\r\n   * - In addition to the usual identifier key syntax, enum keys are allowed to be string literals,\r\n   *   e.g. `\"hello world\" = 3,`. Template literal syntax is NOT allowed.\r\n   * - Even if the enum key is defined as a string literal, it may still be referenced by identifier\r\n   *   later, e.g. `\"X\" = 1, Y = X`. That means that we need to detect whether or not a string\r\n   *   literal is identifier-like and emit a variable if so, even if the declaration did not use an\r\n   *   identifier.\r\n   * - Reserved keywords like `break` are valid enum keys, but are not valid to be referenced later\r\n   *   and would be a syntax error if we emitted a variable, so we need to skip the variable\r\n   *   declaration in those cases.\r\n   *\r\n   * The variableName return value captures these nuances: if non-null, we can and must emit a\r\n   * variable declaration, and if null, we can't and shouldn't.\r\n   */\r\n  extractEnumKeyInfo(nameToken) {\r\n    if (nameToken.type === TokenType.name) {\r\n      const name = this.tokens.identifierNameForToken(nameToken);\r\n      return {\r\n        nameStringCode: `\"${name}\"`,\r\n        variableName: isIdentifier(name) ? name : null,\r\n      };\r\n    } else if (nameToken.type === TokenType.string) {\r\n      const name = this.tokens.stringValueForToken(nameToken);\r\n      return {\r\n        nameStringCode: this.tokens.code.slice(nameToken.start, nameToken.end),\r\n        variableName: isIdentifier(name) ? name : null,\r\n      };\r\n    } else {\r\n      throw new Error(\"Expected name or string at beginning of enum element.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle an enum member where the RHS is just a string literal (not omitted, not a number, and\r\n   * not a complex expression). This is the typical form for TS string enums, and in this case, we\r\n   * do *not* create a reverse mapping.\r\n   *\r\n   * This is called after deleting the key token, when the token processor is at the equals sign.\r\n   *\r\n   * Example 1:\r\n   * someKey = \"some value\"\r\n   * ->\r\n   * const someKey = \"some value\"; MyEnum[\"someKey\"] = someKey;\r\n   *\r\n   * Example 2:\r\n   * \"some key\" = \"some value\"\r\n   * ->\r\n   * MyEnum[\"some key\"] = \"some value\";\r\n   */\r\n  processStringLiteralEnumMember(\r\n    enumName,\r\n    nameStringCode,\r\n    variableName,\r\n  ) {\r\n    if (variableName != null) {\r\n      this.tokens.appendCode(`const ${variableName}`);\r\n      // =\r\n      this.tokens.copyToken();\r\n      // value string\r\n      this.tokens.copyToken();\r\n      this.tokens.appendCode(`; ${enumName}[${nameStringCode}] = ${variableName};`);\r\n    } else {\r\n      this.tokens.appendCode(`${enumName}[${nameStringCode}]`);\r\n      // =\r\n      this.tokens.copyToken();\r\n      // value string\r\n      this.tokens.copyToken();\r\n      this.tokens.appendCode(\";\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle an enum member initialized with an expression on the right-hand side (other than a\r\n   * string literal). In these cases, we should transform the expression and emit code that sets up\r\n   * a reverse mapping.\r\n   *\r\n   * The TypeScript implementation of this operation distinguishes between expressions that can be\r\n   * \"constant folded\" at compile time (i.e. consist of number literals and simple math operations\r\n   * on those numbers) and ones that are dynamic. For constant expressions, it emits the resolved\r\n   * numeric value, and auto-incrementing is only allowed in that case. Evaluating expressions at\r\n   * compile time would add significant complexity to Sucrase, so Sucrase instead leaves the\r\n   * expression as-is, and will later emit something like `MyEnum[\"previousKey\"] + 1` to implement\r\n   * auto-incrementing.\r\n   *\r\n   * This is called after deleting the key token, when the token processor is at the equals sign.\r\n   *\r\n   * Example 1:\r\n   * someKey = 1 + 1\r\n   * ->\r\n   * const someKey = 1 + 1; MyEnum[MyEnum[\"someKey\"] = someKey] = \"someKey\";\r\n   *\r\n   * Example 2:\r\n   * \"some key\" = 1 + 1\r\n   * ->\r\n   * MyEnum[MyEnum[\"some key\"] = 1 + 1] = \"some key\";\r\n   */\r\n  processExplicitValueEnumMember(\r\n    enumName,\r\n    nameStringCode,\r\n    variableName,\r\n  ) {\r\n    const rhsEndIndex = this.tokens.currentToken().rhsEndIndex;\r\n    if (rhsEndIndex == null) {\r\n      throw new Error(\"Expected rhsEndIndex on enum assign.\");\r\n    }\r\n\r\n    if (variableName != null) {\r\n      this.tokens.appendCode(`const ${variableName}`);\r\n      this.tokens.copyToken();\r\n      while (this.tokens.currentIndex() < rhsEndIndex) {\r\n        this.rootTransformer.processToken();\r\n      }\r\n      this.tokens.appendCode(\r\n        `; ${enumName}[${enumName}[${nameStringCode}] = ${variableName}] = ${nameStringCode};`,\r\n      );\r\n    } else {\r\n      this.tokens.appendCode(`${enumName}[${enumName}[${nameStringCode}]`);\r\n      this.tokens.copyToken();\r\n      while (this.tokens.currentIndex() < rhsEndIndex) {\r\n        this.rootTransformer.processToken();\r\n      }\r\n      this.tokens.appendCode(`] = ${nameStringCode};`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle an enum member with no right-hand side expression. In this case, the value is the\r\n   * previous value plus 1, or 0 if there was no previous value. We should also always emit a\r\n   * reverse mapping.\r\n   *\r\n   * Example 1:\r\n   * someKey2\r\n   * ->\r\n   * const someKey2 = someKey1 + 1; MyEnum[MyEnum[\"someKey2\"] = someKey2] = \"someKey2\";\r\n   *\r\n   * Example 2:\r\n   * \"some key 2\"\r\n   * ->\r\n   * MyEnum[MyEnum[\"some key 2\"] = someKey1 + 1] = \"some key 2\";\r\n   */\r\n  processImplicitValueEnumMember(\r\n    enumName,\r\n    nameStringCode,\r\n    variableName,\r\n    previousValueCode,\r\n  ) {\r\n    let valueCode = previousValueCode != null ? `${previousValueCode} + 1` : \"0\";\r\n    if (variableName != null) {\r\n      this.tokens.appendCode(`const ${variableName} = ${valueCode}; `);\r\n      valueCode = variableName;\r\n    }\r\n    this.tokens.appendCode(\r\n      `${enumName}[${enumName}[${nameStringCode}] = ${valueCode}] = ${nameStringCode};`,\r\n    );\r\n  }\r\n}\r\n\r\nclass RootTransformer {\r\n   __init() {this.transformers = [];}\r\n  \r\n  \r\n   __init2() {this.generatedVariables = [];}\r\n  \r\n  \r\n  \r\n  \r\n\r\n  constructor(\r\n    sucraseContext,\r\n    transforms,\r\n    enableLegacyBabel5ModuleInterop,\r\n    options,\r\n  ) {RootTransformer.prototype.__init.call(this);RootTransformer.prototype.__init2.call(this);\r\n    this.nameManager = sucraseContext.nameManager;\r\n    this.helperManager = sucraseContext.helperManager;\r\n    const {tokenProcessor, importProcessor} = sucraseContext;\r\n    this.tokens = tokenProcessor;\r\n    this.isImportsTransformEnabled = transforms.includes(\"imports\");\r\n    this.isReactHotLoaderTransformEnabled = transforms.includes(\"react-hot-loader\");\r\n    this.disableESTransforms = Boolean(options.disableESTransforms);\r\n\r\n    if (!options.disableESTransforms) {\r\n      this.transformers.push(\r\n        new OptionalChainingNullishTransformer(tokenProcessor, this.nameManager),\r\n      );\r\n      this.transformers.push(new NumericSeparatorTransformer(tokenProcessor));\r\n      this.transformers.push(new OptionalCatchBindingTransformer(tokenProcessor, this.nameManager));\r\n    }\r\n\r\n    if (transforms.includes(\"jsx\")) {\r\n      if (options.jsxRuntime !== \"preserve\") {\r\n        this.transformers.push(\r\n          new JSXTransformer(this, tokenProcessor, importProcessor, this.nameManager, options),\r\n        );\r\n      }\r\n      this.transformers.push(\r\n        new ReactDisplayNameTransformer(this, tokenProcessor, importProcessor, options),\r\n      );\r\n    }\r\n\r\n    let reactHotLoaderTransformer = null;\r\n    if (transforms.includes(\"react-hot-loader\")) {\r\n      if (!options.filePath) {\r\n        throw new Error(\"filePath is required when using the react-hot-loader transform.\");\r\n      }\r\n      reactHotLoaderTransformer = new ReactHotLoaderTransformer(tokenProcessor, options.filePath);\r\n      this.transformers.push(reactHotLoaderTransformer);\r\n    }\r\n\r\n    // Note that we always want to enable the imports transformer, even when the import transform\r\n    // itself isn't enabled, since we need to do type-only import pruning for both Flow and\r\n    // TypeScript.\r\n    if (transforms.includes(\"imports\")) {\r\n      if (importProcessor === null) {\r\n        throw new Error(\"Expected non-null importProcessor with imports transform enabled.\");\r\n      }\r\n      this.transformers.push(\r\n        new CJSImportTransformer(\r\n          this,\r\n          tokenProcessor,\r\n          importProcessor,\r\n          this.nameManager,\r\n          this.helperManager,\r\n          reactHotLoaderTransformer,\r\n          enableLegacyBabel5ModuleInterop,\r\n          Boolean(options.enableLegacyTypeScriptModuleInterop),\r\n          transforms.includes(\"typescript\"),\r\n          Boolean(options.preserveDynamicImport),\r\n        ),\r\n      );\r\n    } else {\r\n      this.transformers.push(\r\n        new ESMImportTransformer(\r\n          tokenProcessor,\r\n          this.nameManager,\r\n          this.helperManager,\r\n          reactHotLoaderTransformer,\r\n          transforms.includes(\"typescript\"),\r\n          options,\r\n        ),\r\n      );\r\n    }\r\n\r\n    if (transforms.includes(\"flow\")) {\r\n      this.transformers.push(\r\n        new FlowTransformer(this, tokenProcessor, transforms.includes(\"imports\")),\r\n      );\r\n    }\r\n    if (transforms.includes(\"typescript\")) {\r\n      this.transformers.push(\r\n        new TypeScriptTransformer(this, tokenProcessor, transforms.includes(\"imports\")),\r\n      );\r\n    }\r\n    if (transforms.includes(\"jest\")) {\r\n      this.transformers.push(\r\n        new JestHoistTransformer(this, tokenProcessor, this.nameManager, importProcessor),\r\n      );\r\n    }\r\n  }\r\n\r\n  transform() {\r\n    this.tokens.reset();\r\n    this.processBalancedCode();\r\n    const shouldAddUseStrict = this.isImportsTransformEnabled;\r\n    // \"use strict\" always needs to be first, so override the normal transformer order.\r\n    let prefix = shouldAddUseStrict ? '\"use strict\";' : \"\";\r\n    for (const transformer of this.transformers) {\r\n      prefix += transformer.getPrefixCode();\r\n    }\r\n    prefix += this.helperManager.emitHelpers();\r\n    prefix += this.generatedVariables.map((v) => ` var ${v};`).join(\"\");\r\n    for (const transformer of this.transformers) {\r\n      prefix += transformer.getHoistedCode();\r\n    }\r\n    let suffix = \"\";\r\n    for (const transformer of this.transformers) {\r\n      suffix += transformer.getSuffixCode();\r\n    }\r\n    const result = this.tokens.finish();\r\n    let {code} = result;\r\n    if (code.startsWith(\"#!\")) {\r\n      let newlineIndex = code.indexOf(\"\\n\");\r\n      if (newlineIndex === -1) {\r\n        newlineIndex = code.length;\r\n        code += \"\\n\";\r\n      }\r\n      return {\r\n        code: code.slice(0, newlineIndex + 1) + prefix + code.slice(newlineIndex + 1) + suffix,\r\n        // The hashbang line has no tokens, so shifting the tokens to account\r\n        // for prefix can happen normally.\r\n        mappings: this.shiftMappings(result.mappings, prefix.length),\r\n      };\r\n    } else {\r\n      return {\r\n        code: prefix + code + suffix,\r\n        mappings: this.shiftMappings(result.mappings, prefix.length),\r\n      };\r\n    }\r\n  }\r\n\r\n  processBalancedCode() {\r\n    let braceDepth = 0;\r\n    let parenDepth = 0;\r\n    while (!this.tokens.isAtEnd()) {\r\n      if (this.tokens.matches1(TokenType.braceL) || this.tokens.matches1(TokenType.dollarBraceL)) {\r\n        braceDepth++;\r\n      } else if (this.tokens.matches1(TokenType.braceR)) {\r\n        if (braceDepth === 0) {\r\n          return;\r\n        }\r\n        braceDepth--;\r\n      }\r\n      if (this.tokens.matches1(TokenType.parenL)) {\r\n        parenDepth++;\r\n      } else if (this.tokens.matches1(TokenType.parenR)) {\r\n        if (parenDepth === 0) {\r\n          return;\r\n        }\r\n        parenDepth--;\r\n      }\r\n      this.processToken();\r\n    }\r\n  }\r\n\r\n  processToken() {\r\n    if (this.tokens.matches1(TokenType._class)) {\r\n      this.processClass();\r\n      return;\r\n    }\r\n    for (const transformer of this.transformers) {\r\n      const wasProcessed = transformer.process();\r\n      if (wasProcessed) {\r\n        return;\r\n      }\r\n    }\r\n    this.tokens.copyToken();\r\n  }\r\n\r\n  /**\r\n   * Skip past a class with a name and return that name.\r\n   */\r\n  processNamedClass() {\r\n    if (!this.tokens.matches2(TokenType._class, TokenType.name)) {\r\n      throw new Error(\"Expected identifier for exported class name.\");\r\n    }\r\n    const name = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);\r\n    this.processClass();\r\n    return name;\r\n  }\r\n\r\n  processClass() {\r\n    const classInfo = getClassInfo(this, this.tokens, this.nameManager, this.disableESTransforms);\r\n\r\n    // Both static and instance initializers need a class name to use to invoke the initializer, so\r\n    // assign to one if necessary.\r\n    const needsCommaExpression =\r\n      (classInfo.headerInfo.isExpression || !classInfo.headerInfo.className) &&\r\n      classInfo.staticInitializerNames.length + classInfo.instanceInitializerNames.length > 0;\r\n\r\n    let className = classInfo.headerInfo.className;\r\n    if (needsCommaExpression) {\r\n      className = this.nameManager.claimFreeName(\"_class\");\r\n      this.generatedVariables.push(className);\r\n      this.tokens.appendCode(` (${className} =`);\r\n    }\r\n\r\n    const classToken = this.tokens.currentToken();\r\n    const contextId = classToken.contextId;\r\n    if (contextId == null) {\r\n      throw new Error(\"Expected class to have a context ID.\");\r\n    }\r\n    this.tokens.copyExpectedToken(TokenType._class);\r\n    while (!this.tokens.matchesContextIdAndLabel(TokenType.braceL, contextId)) {\r\n      this.processToken();\r\n    }\r\n\r\n    this.processClassBody(classInfo, className);\r\n\r\n    const staticInitializerStatements = classInfo.staticInitializerNames.map(\r\n      (name) => `${className}.${name}()`,\r\n    );\r\n    if (needsCommaExpression) {\r\n      this.tokens.appendCode(\r\n        `, ${staticInitializerStatements.map((s) => `${s}, `).join(\"\")}${className})`,\r\n      );\r\n    } else if (classInfo.staticInitializerNames.length > 0) {\r\n      this.tokens.appendCode(` ${staticInitializerStatements.map((s) => `${s};`).join(\" \")}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We want to just handle class fields in all contexts, since TypeScript supports them. Later,\r\n   * when some JS implementations support class fields, this should be made optional.\r\n   */\r\n  processClassBody(classInfo, className) {\r\n    const {\r\n      headerInfo,\r\n      constructorInsertPos,\r\n      constructorInitializerStatements,\r\n      fields,\r\n      instanceInitializerNames,\r\n      rangesToRemove,\r\n    } = classInfo;\r\n    let fieldIndex = 0;\r\n    let rangeToRemoveIndex = 0;\r\n    const classContextId = this.tokens.currentToken().contextId;\r\n    if (classContextId == null) {\r\n      throw new Error(\"Expected non-null context ID on class.\");\r\n    }\r\n    this.tokens.copyExpectedToken(TokenType.braceL);\r\n    if (this.isReactHotLoaderTransformEnabled) {\r\n      this.tokens.appendCode(\r\n        \"__reactstandin__regenerateByEval(key, code) {this[key] = eval(code);}\",\r\n      );\r\n    }\r\n\r\n    const needsConstructorInit =\r\n      constructorInitializerStatements.length + instanceInitializerNames.length > 0;\r\n\r\n    if (constructorInsertPos === null && needsConstructorInit) {\r\n      const constructorInitializersCode = this.makeConstructorInitCode(\r\n        constructorInitializerStatements,\r\n        instanceInitializerNames,\r\n        className,\r\n      );\r\n      if (headerInfo.hasSuperclass) {\r\n        const argsName = this.nameManager.claimFreeName(\"args\");\r\n        this.tokens.appendCode(\r\n          `constructor(...${argsName}) { super(...${argsName}); ${constructorInitializersCode}; }`,\r\n        );\r\n      } else {\r\n        this.tokens.appendCode(`constructor() { ${constructorInitializersCode}; }`);\r\n      }\r\n    }\r\n\r\n    while (!this.tokens.matchesContextIdAndLabel(TokenType.braceR, classContextId)) {\r\n      if (fieldIndex < fields.length && this.tokens.currentIndex() === fields[fieldIndex].start) {\r\n        let needsCloseBrace = false;\r\n        if (this.tokens.matches1(TokenType.bracketL)) {\r\n          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this`);\r\n        } else if (this.tokens.matches1(TokenType.string) || this.tokens.matches1(TokenType.num)) {\r\n          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this[`);\r\n          needsCloseBrace = true;\r\n        } else {\r\n          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this.`);\r\n        }\r\n        while (this.tokens.currentIndex() < fields[fieldIndex].end) {\r\n          if (needsCloseBrace && this.tokens.currentIndex() === fields[fieldIndex].equalsIndex) {\r\n            this.tokens.appendCode(\"]\");\r\n          }\r\n          this.processToken();\r\n        }\r\n        this.tokens.appendCode(\"}\");\r\n        fieldIndex++;\r\n      } else if (\r\n        rangeToRemoveIndex < rangesToRemove.length &&\r\n        this.tokens.currentIndex() >= rangesToRemove[rangeToRemoveIndex].start\r\n      ) {\r\n        if (this.tokens.currentIndex() < rangesToRemove[rangeToRemoveIndex].end) {\r\n          this.tokens.removeInitialToken();\r\n        }\r\n        while (this.tokens.currentIndex() < rangesToRemove[rangeToRemoveIndex].end) {\r\n          this.tokens.removeToken();\r\n        }\r\n        rangeToRemoveIndex++;\r\n      } else if (this.tokens.currentIndex() === constructorInsertPos) {\r\n        this.tokens.copyToken();\r\n        if (needsConstructorInit) {\r\n          this.tokens.appendCode(\r\n            `;${this.makeConstructorInitCode(\r\n              constructorInitializerStatements,\r\n              instanceInitializerNames,\r\n              className,\r\n            )};`,\r\n          );\r\n        }\r\n        this.processToken();\r\n      } else {\r\n        this.processToken();\r\n      }\r\n    }\r\n    this.tokens.copyExpectedToken(TokenType.braceR);\r\n  }\r\n\r\n  makeConstructorInitCode(\r\n    constructorInitializerStatements,\r\n    instanceInitializerNames,\r\n    className,\r\n  ) {\r\n    return [\r\n      ...constructorInitializerStatements,\r\n      ...instanceInitializerNames.map((name) => `${className}.prototype.${name}.call(this)`),\r\n    ].join(\";\");\r\n  }\r\n\r\n  /**\r\n   * Normally it's ok to simply remove type tokens, but we need to be more careful when dealing with\r\n   * arrow function return types since they can confuse the parser. In that case, we want to move\r\n   * the close-paren to the same line as the arrow.\r\n   *\r\n   * See https://github.com/alangpierce/sucrase/issues/391 for more details.\r\n   */\r\n  processPossibleArrowParamEnd() {\r\n    if (this.tokens.matches2(TokenType.parenR, TokenType.colon) && this.tokens.tokenAtRelativeIndex(1).isType) {\r\n      let nextNonTypeIndex = this.tokens.currentIndex() + 1;\r\n      // Look ahead to see if this is an arrow function or something else.\r\n      while (this.tokens.tokens[nextNonTypeIndex].isType) {\r\n        nextNonTypeIndex++;\r\n      }\r\n      if (this.tokens.matches1AtIndex(nextNonTypeIndex, TokenType.arrow)) {\r\n        this.tokens.removeInitialToken();\r\n        while (this.tokens.currentIndex() < nextNonTypeIndex) {\r\n          this.tokens.removeToken();\r\n        }\r\n        this.tokens.replaceTokenTrimmingLeftWhitespace(\") =>\");\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * An async arrow function might be of the form:\r\n   *\r\n   * async <\r\n   *   T\r\n   * >() => {}\r\n   *\r\n   * in which case, removing the type parameters will cause a syntax error. Detect this case and\r\n   * move the open-paren earlier.\r\n   */\r\n  processPossibleAsyncArrowWithTypeParams() {\r\n    if (\r\n      !this.tokens.matchesContextual(ContextualKeyword._async) &&\r\n      !this.tokens.matches1(TokenType._async)\r\n    ) {\r\n      return false;\r\n    }\r\n    const nextToken = this.tokens.tokenAtRelativeIndex(1);\r\n    if (nextToken.type !== TokenType.lessThan || !nextToken.isType) {\r\n      return false;\r\n    }\r\n\r\n    let nextNonTypeIndex = this.tokens.currentIndex() + 1;\r\n    // Look ahead to see if this is an arrow function or something else.\r\n    while (this.tokens.tokens[nextNonTypeIndex].isType) {\r\n      nextNonTypeIndex++;\r\n    }\r\n    if (this.tokens.matches1AtIndex(nextNonTypeIndex, TokenType.parenL)) {\r\n      this.tokens.replaceToken(\"async (\");\r\n      this.tokens.removeInitialToken();\r\n      while (this.tokens.currentIndex() < nextNonTypeIndex) {\r\n        this.tokens.removeToken();\r\n      }\r\n      this.tokens.removeToken();\r\n      // We ate a ( token, so we need to process the tokens in between and then the ) token so that\r\n      // we remain balanced.\r\n      this.processBalancedCode();\r\n      this.processToken();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  processPossibleTypeRange() {\r\n    if (this.tokens.currentToken().isType) {\r\n      this.tokens.removeInitialToken();\r\n      while (this.tokens.currentToken().isType) {\r\n        this.tokens.removeToken();\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  shiftMappings(\r\n    mappings,\r\n    prefixLength,\r\n  ) {\r\n    for (let i = 0; i < mappings.length; i++) {\r\n      const mapping = mappings[i];\r\n      if (mapping !== undefined) {\r\n        mappings[i] = mapping + prefixLength;\r\n      }\r\n    }\r\n    return mappings;\r\n  }\r\n}\r\n\r\nvar build = {};\r\n\r\n(function (exports) {\r\n\texports.__esModule = true;\r\n\texports.LinesAndColumns = void 0;\r\n\tvar LF = '\\n';\r\n\tvar CR = '\\r';\r\n\tvar LinesAndColumns = /** @class */ (function () {\r\n\t    function LinesAndColumns(string) {\r\n\t        this.string = string;\r\n\t        var offsets = [0];\r\n\t        for (var offset = 0; offset < string.length;) {\r\n\t            switch (string[offset]) {\r\n\t                case LF:\r\n\t                    offset += LF.length;\r\n\t                    offsets.push(offset);\r\n\t                    break;\r\n\t                case CR:\r\n\t                    offset += CR.length;\r\n\t                    if (string[offset] === LF) {\r\n\t                        offset += LF.length;\r\n\t                    }\r\n\t                    offsets.push(offset);\r\n\t                    break;\r\n\t                default:\r\n\t                    offset++;\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        this.offsets = offsets;\r\n\t    }\r\n\t    LinesAndColumns.prototype.locationForIndex = function (index) {\r\n\t        if (index < 0 || index > this.string.length) {\r\n\t            return null;\r\n\t        }\r\n\t        var line = 0;\r\n\t        var offsets = this.offsets;\r\n\t        while (offsets[line + 1] <= index) {\r\n\t            line++;\r\n\t        }\r\n\t        var column = index - offsets[line];\r\n\t        return { line: line, column: column };\r\n\t    };\r\n\t    LinesAndColumns.prototype.indexForLocation = function (location) {\r\n\t        var line = location.line, column = location.column;\r\n\t        if (line < 0 || line >= this.offsets.length) {\r\n\t            return null;\r\n\t        }\r\n\t        if (column < 0 || column > this.lengthOfLine(line)) {\r\n\t            return null;\r\n\t        }\r\n\t        return this.offsets[line] + column;\r\n\t    };\r\n\t    LinesAndColumns.prototype.lengthOfLine = function (line) {\r\n\t        var offset = this.offsets[line];\r\n\t        var nextOffset = line === this.offsets.length - 1\r\n\t            ? this.string.length\r\n\t            : this.offsets[line + 1];\r\n\t        return nextOffset - offset;\r\n\t    };\r\n\t    return LinesAndColumns;\r\n\t}());\r\n\texports.LinesAndColumns = LinesAndColumns;\r\n\texports[\"default\"] = LinesAndColumns; \r\n} (build));\r\n\r\n/**\r\n * Special case code to scan for imported names in ESM TypeScript. We need to do this so we can\r\n * properly get globals so we can compute shadowed globals.\r\n *\r\n * This is similar to logic in CJSImportProcessor, but trimmed down to avoid logic with CJS\r\n * replacement and flow type imports.\r\n */\r\nfunction getTSImportedNames(tokens) {\r\n  const importedNames = new Set();\r\n  for (let i = 0; i < tokens.tokens.length; i++) {\r\n    if (\r\n      tokens.matches1AtIndex(i, TokenType._import) &&\r\n      !tokens.matches3AtIndex(i, TokenType._import, TokenType.name, TokenType.eq)\r\n    ) {\r\n      collectNamesForImport(tokens, i, importedNames);\r\n    }\r\n  }\r\n  return importedNames;\r\n}\r\n\r\nfunction collectNamesForImport(\r\n  tokens,\r\n  index,\r\n  importedNames,\r\n) {\r\n  index++;\r\n\r\n  if (tokens.matches1AtIndex(index, TokenType.parenL)) {\r\n    // Dynamic import, so nothing to do\r\n    return;\r\n  }\r\n\r\n  if (tokens.matches1AtIndex(index, TokenType.name)) {\r\n    importedNames.add(tokens.identifierNameAtIndex(index));\r\n    index++;\r\n    if (tokens.matches1AtIndex(index, TokenType.comma)) {\r\n      index++;\r\n    }\r\n  }\r\n\r\n  if (tokens.matches1AtIndex(index, TokenType.star)) {\r\n    // * as\r\n    index += 2;\r\n    importedNames.add(tokens.identifierNameAtIndex(index));\r\n    index++;\r\n  }\r\n\r\n  if (tokens.matches1AtIndex(index, TokenType.braceL)) {\r\n    index++;\r\n    collectNamesForNamedImport(tokens, index, importedNames);\r\n  }\r\n}\r\n\r\nfunction collectNamesForNamedImport(\r\n  tokens,\r\n  index,\r\n  importedNames,\r\n) {\r\n  while (true) {\r\n    if (tokens.matches1AtIndex(index, TokenType.braceR)) {\r\n      return;\r\n    }\r\n\r\n    const specifierInfo = getImportExportSpecifierInfo(tokens, index);\r\n    index = specifierInfo.endIndex;\r\n    if (!specifierInfo.isType) {\r\n      importedNames.add(specifierInfo.rightName);\r\n    }\r\n\r\n    if (tokens.matches2AtIndex(index, TokenType.comma, TokenType.braceR)) {\r\n      return;\r\n    } else if (tokens.matches1AtIndex(index, TokenType.braceR)) {\r\n      return;\r\n    } else if (tokens.matches1AtIndex(index, TokenType.comma)) {\r\n      index++;\r\n    } else {\r\n      throw new Error(`Unexpected token: ${JSON.stringify(tokens.tokens[index])}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction transform(code, options) {\r\n  validateOptions(options);\r\n  try {\r\n    const sucraseContext = getSucraseContext(code, options);\r\n    const transformer = new RootTransformer(\r\n      sucraseContext,\r\n      options.transforms,\r\n      Boolean(options.enableLegacyBabel5ModuleInterop),\r\n      options,\r\n    );\r\n    const transformerResult = transformer.transform();\r\n    let result = {code: transformerResult.code};\r\n    if (options.sourceMapOptions) {\r\n      if (!options.filePath) {\r\n        throw new Error(\"filePath must be specified when generating a source map.\");\r\n      }\r\n      result = {\r\n        ...result,\r\n        sourceMap: computeSourceMap(\r\n          transformerResult,\r\n          options.filePath,\r\n          options.sourceMapOptions,\r\n          code,\r\n          sucraseContext.tokenProcessor.tokens,\r\n        ),\r\n      };\r\n    }\r\n    return result;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  } catch (e) {\r\n    if (options.filePath) {\r\n      e.message = `Error transforming ${options.filePath}: ${e.message}`;\r\n    }\r\n    throw e;\r\n  }\r\n}\r\n\r\n/**\r\n * Call into the parser/tokenizer and do some further preprocessing:\r\n * - Come up with a set of used names so that we can assign new names.\r\n * - Preprocess all import/export statements so we know which globals we are interested in.\r\n * - Compute situations where any of those globals are shadowed.\r\n *\r\n * In the future, some of these preprocessing steps can be skipped based on what actual work is\r\n * being done.\r\n */\r\nfunction getSucraseContext(code, options) {\r\n  const isJSXEnabled = options.transforms.includes(\"jsx\");\r\n  const isTypeScriptEnabled = options.transforms.includes(\"typescript\");\r\n  const isFlowEnabled = options.transforms.includes(\"flow\");\r\n  const disableESTransforms = options.disableESTransforms === true;\r\n  const file = parse(code, isJSXEnabled, isTypeScriptEnabled, isFlowEnabled);\r\n  const tokens = file.tokens;\r\n  const scopes = file.scopes;\r\n\r\n  const nameManager = new NameManager(code, tokens);\r\n  const helperManager = new HelperManager(nameManager);\r\n  const tokenProcessor = new TokenProcessor(\r\n    code,\r\n    tokens,\r\n    isFlowEnabled,\r\n    disableESTransforms,\r\n    helperManager,\r\n  );\r\n  const enableLegacyTypeScriptModuleInterop = Boolean(options.enableLegacyTypeScriptModuleInterop);\r\n\r\n  let importProcessor = null;\r\n  if (options.transforms.includes(\"imports\")) {\r\n    importProcessor = new CJSImportProcessor(\r\n      nameManager,\r\n      tokenProcessor,\r\n      enableLegacyTypeScriptModuleInterop,\r\n      options,\r\n      options.transforms.includes(\"typescript\"),\r\n      helperManager,\r\n    );\r\n    importProcessor.preprocessTokens();\r\n    // We need to mark shadowed globals after processing imports so we know that the globals are,\r\n    // but before type-only import pruning, since that relies on shadowing information.\r\n    identifyShadowedGlobals(tokenProcessor, scopes, importProcessor.getGlobalNames());\r\n    if (options.transforms.includes(\"typescript\")) {\r\n      importProcessor.pruneTypeOnlyImports();\r\n    }\r\n  } else if (options.transforms.includes(\"typescript\")) {\r\n    identifyShadowedGlobals(tokenProcessor, scopes, getTSImportedNames(tokenProcessor));\r\n  }\r\n  return {tokenProcessor, scopes, nameManager, importProcessor, helperManager};\r\n}\r\n\r\nfunction pad (hash, len) {\r\n  while (hash.length < len) {\r\n    hash = '0' + hash;\r\n  }\r\n  return hash;\r\n}\r\n\r\nfunction fold (hash, text) {\r\n  var i;\r\n  var chr;\r\n  var len;\r\n  if (text.length === 0) {\r\n    return hash;\r\n  }\r\n  for (i = 0, len = text.length; i < len; i++) {\r\n    chr = text.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + chr;\r\n    hash |= 0;\r\n  }\r\n  return hash < 0 ? hash * -2 : hash;\r\n}\r\n\r\nfunction foldObject (hash, o, seen) {\r\n  return Object.keys(o).sort().reduce(foldKey, hash);\r\n  function foldKey (hash, key) {\r\n    return foldValue(hash, o[key], key, seen);\r\n  }\r\n}\r\n\r\nfunction foldValue (input, value, key, seen) {\r\n  var hash = fold(fold(fold(input, key), toString(value)), typeof value);\r\n  if (value === null) {\r\n    return fold(hash, 'null');\r\n  }\r\n  if (value === undefined) {\r\n    return fold(hash, 'undefined');\r\n  }\r\n  if (typeof value === 'object' || typeof value === 'function') {\r\n    if (seen.indexOf(value) !== -1) {\r\n      return fold(hash, '[Circular]' + key);\r\n    }\r\n    seen.push(value);\r\n\r\n    var objHash = foldObject(hash, value, seen);\r\n\r\n    if (!('valueOf' in value) || typeof value.valueOf !== 'function') {\r\n      return objHash;\r\n    }\r\n\r\n    try {\r\n      return fold(objHash, String(value.valueOf()))\r\n    } catch (err) {\r\n      return fold(objHash, '[valueOf exception]' + (err.stack || err.message))\r\n    }\r\n  }\r\n  return fold(hash, value.toString());\r\n}\r\n\r\nfunction toString (o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n\r\nfunction sum (o) {\r\n  return pad(foldValue(0, o, '', []).toString(16), 8);\r\n}\r\n\r\nvar hashSum = sum;\r\n\r\nconst hashId = /*@__PURE__*/getDefaultExportFromCjs(hashSum);\r\n\r\nconst COMP_IDENTIFIER = `__sfc__`;\r\nasync function transformTS(src) {\r\n  return transform(src, {\r\n    transforms: [\"typescript\"]\r\n  }).code;\r\n}\r\nasync function compileFile(store, { filename, code, compiled }) {\r\n  if (!code.trim()) {\r\n    return [];\r\n  }\r\n  if (filename.endsWith(\".css\")) {\r\n    compiled.css = code;\r\n    return [];\r\n  }\r\n  if (filename.endsWith(\".js\") || filename.endsWith(\".ts\")) {\r\n    if (filename.endsWith(\".ts\")) {\r\n      code = await transformTS(code);\r\n    }\r\n    compiled.js = compiled.ssr = code;\r\n    return [];\r\n  }\r\n  if (filename.endsWith(\".json\")) {\r\n    let parsed;\r\n    try {\r\n      parsed = JSON.parse(code);\r\n    } catch (err) {\r\n      console.error(`Error parsing ${filename}`, err.message);\r\n      return [err.message];\r\n    }\r\n    compiled.js = compiled.ssr = `export default ${JSON.stringify(parsed)}`;\r\n    return [];\r\n  }\r\n  if (!filename.endsWith(\".vue\")) {\r\n    return [];\r\n  }\r\n  const id = hashId(filename);\r\n  const { errors, descriptor } = store.compiler.parse(code, {\r\n    filename,\r\n    sourceMap: true\r\n  });\r\n  if (errors.length) {\r\n    return errors;\r\n  }\r\n  if (descriptor.styles.some((s) => s.lang) || descriptor.template && descriptor.template.lang) {\r\n    return [\r\n      `lang=\"x\" pre-processors for <template> or <style> are currently not supported.`\r\n    ];\r\n  }\r\n  const scriptLang = descriptor.script && descriptor.script.lang || descriptor.scriptSetup && descriptor.scriptSetup.lang;\r\n  const isTS = scriptLang === \"ts\";\r\n  if (scriptLang && !isTS) {\r\n    return [`Only lang=\"ts\" is supported for <script> blocks.`];\r\n  }\r\n  const hasScoped = descriptor.styles.some((s) => s.scoped);\r\n  let clientCode = \"\";\r\n  let ssrCode = \"\";\r\n  const appendSharedCode = (code2) => {\r\n    clientCode += code2;\r\n    ssrCode += code2;\r\n  };\r\n  let clientScript;\r\n  let bindings;\r\n  try {\r\n    ;\r\n    [clientScript, bindings] = await doCompileScript(\r\n      store,\r\n      descriptor,\r\n      id,\r\n      false,\r\n      isTS\r\n    );\r\n  } catch (e) {\r\n    return [e.stack.split(\"\\n\").slice(0, 12).join(\"\\n\")];\r\n  }\r\n  clientCode += clientScript;\r\n  if (descriptor.scriptSetup || descriptor.cssVars.length > 0) {\r\n    try {\r\n      const ssrScriptResult = await doCompileScript(\r\n        store,\r\n        descriptor,\r\n        id,\r\n        true,\r\n        isTS\r\n      );\r\n      ssrCode += ssrScriptResult[0];\r\n    } catch (e) {\r\n      ssrCode = `/* SSR compile error: ${e} */`;\r\n    }\r\n  } else {\r\n    ssrCode += clientScript;\r\n  }\r\n  if (descriptor.template && (!descriptor.scriptSetup || store.options?.script?.inlineTemplate === false)) {\r\n    const clientTemplateResult = await doCompileTemplate(\r\n      store,\r\n      descriptor,\r\n      id,\r\n      bindings,\r\n      false,\r\n      isTS\r\n    );\r\n    if (Array.isArray(clientTemplateResult)) {\r\n      return clientTemplateResult;\r\n    }\r\n    clientCode += `;${clientTemplateResult}`;\r\n    const ssrTemplateResult = await doCompileTemplate(\r\n      store,\r\n      descriptor,\r\n      id,\r\n      bindings,\r\n      true,\r\n      isTS\r\n    );\r\n    if (typeof ssrTemplateResult === \"string\") {\r\n      ssrCode += `;${ssrTemplateResult}`;\r\n    } else {\r\n      ssrCode = `/* SSR compile error: ${ssrTemplateResult[0]} */`;\r\n    }\r\n  }\r\n  if (hasScoped) {\r\n    appendSharedCode(\r\n      `\r\n${COMP_IDENTIFIER}.__scopeId = ${JSON.stringify(`data-v-${id}`)}`\r\n    );\r\n  }\r\n  if (clientCode || ssrCode) {\r\n    appendSharedCode(\r\n      `\r\n${COMP_IDENTIFIER}.__file = ${JSON.stringify(filename)}\r\nexport default ${COMP_IDENTIFIER}`\r\n    );\r\n    compiled.js = clientCode.trimStart();\r\n    compiled.ssr = ssrCode.trimStart();\r\n  }\r\n  let css = \"\";\r\n  for (const style of descriptor.styles) {\r\n    if (style.module) {\r\n      return [`<style module> is not supported in the playground.`];\r\n    }\r\n    const styleResult = await store.compiler.compileStyleAsync({\r\n      ...store.options?.style,\r\n      source: style.content,\r\n      filename,\r\n      id,\r\n      scoped: style.scoped,\r\n      modules: !!style.module\r\n    });\r\n    if (styleResult.errors.length) {\r\n      if (!styleResult.errors[0].message.includes(\"pathToFileURL\")) {\r\n        store.state.errors = styleResult.errors;\r\n      }\r\n    } else {\r\n      css += styleResult.code + \"\\n\";\r\n    }\r\n  }\r\n  if (css) {\r\n    compiled.css = css.trim();\r\n  } else {\r\n    compiled.css = \"/* No <style> tags present */\";\r\n  }\r\n  return [];\r\n}\r\nasync function doCompileScript(store, descriptor, id, ssr, isTS) {\r\n  if (descriptor.script || descriptor.scriptSetup) {\r\n    const expressionPlugins = isTS ? [\"typescript\"] : void 0;\r\n    const compiledScript = store.compiler.compileScript(descriptor, {\r\n      inlineTemplate: true,\r\n      ...store.options?.script,\r\n      id,\r\n      templateOptions: {\r\n        ...store.options?.template,\r\n        ssr,\r\n        ssrCssVars: descriptor.cssVars,\r\n        compilerOptions: {\r\n          ...store.options?.template?.compilerOptions,\r\n          expressionPlugins\r\n        }\r\n      }\r\n    });\r\n    let code = \"\";\r\n    if (compiledScript.bindings) {\r\n      code += `\r\n/* Analyzed bindings: ${JSON.stringify(\r\n        compiledScript.bindings,\r\n        null,\r\n        2\r\n      )} */`;\r\n    }\r\n    code += `\r\n` + store.compiler.rewriteDefault(\r\n      compiledScript.content,\r\n      COMP_IDENTIFIER,\r\n      expressionPlugins\r\n    );\r\n    if ((descriptor.script || descriptor.scriptSetup).lang === \"ts\") {\r\n      code = await transformTS(code);\r\n    }\r\n    return [code, compiledScript.bindings];\r\n  } else {\r\n    return [`\r\nconst ${COMP_IDENTIFIER} = {}`, void 0];\r\n  }\r\n}\r\nasync function doCompileTemplate(store, descriptor, id, bindingMetadata, ssr, isTS) {\r\n  let { code, errors } = store.compiler.compileTemplate({\r\n    isProd: false,\r\n    ...store.options?.template,\r\n    source: descriptor.template.content,\r\n    filename: descriptor.filename,\r\n    id,\r\n    scoped: descriptor.styles.some((s) => s.scoped),\r\n    slotted: descriptor.slotted,\r\n    ssr,\r\n    ssrCssVars: descriptor.cssVars,\r\n    compilerOptions: {\r\n      ...store.options?.template?.compilerOptions,\r\n      bindingMetadata,\r\n      expressionPlugins: isTS ? [\"typescript\"] : void 0\r\n    }\r\n  });\r\n  if (errors.length) {\r\n    return errors;\r\n  }\r\n  const fnName = ssr ? `ssrRender` : `render`;\r\n  code = `\r\n${code.replace(\r\n    /\\nexport (function|const) (render|ssrRender)/,\r\n    `$1 ${fnName}`\r\n  )}\r\n${COMP_IDENTIFIER}.${fnName} = ${fnName}`;\r\n  if ((descriptor.script || descriptor.scriptSetup)?.lang === \"ts\") {\r\n    code = await transformTS(code);\r\n  }\r\n  return code;\r\n}\r\n\r\nconst defaultMainFile = \"src/App.vue\";\r\nconst importMapFile = \"import-map.json\";\r\nconst tsconfigFile = \"tsconfig.json\";\r\nconst welcomeCode = `\r\n<script setup>\r\nimport { ref } from 'vue'\r\n\r\nconst msg = ref('Hello World!')\r\n<\\/script>\r\n\r\n<template>\r\n  <h1>{{ msg }}</h1>\r\n  <input v-model=\"msg\">\r\n</template>\r\n`.trim();\r\nconst tsconfig = {\r\n  compilerOptions: {\r\n    allowJs: true,\r\n    checkJs: true,\r\n    jsx: \"Preserve\",\r\n    target: \"ESNext\",\r\n    module: \"ESNext\",\r\n    moduleResolution: \"Bundler\",\r\n    allowImportingTsExtensions: true\r\n  },\r\n  vueCompilerOptions: {\r\n    target: 3.3\r\n  }\r\n};\r\nclass File {\r\n  constructor(filename, code = \"\", hidden = false) {\r\n    this.compiled = {\r\n      js: \"\",\r\n      css: \"\",\r\n      ssr: \"\"\r\n    };\r\n    this.editorViewState = null;\r\n    this.filename = filename;\r\n    this.code = code;\r\n    this.hidden = hidden;\r\n  }\r\n  get language() {\r\n    if (this.filename.endsWith(\".vue\")) {\r\n      return \"vue\";\r\n    }\r\n    if (this.filename.endsWith(\".html\")) {\r\n      return \"html\";\r\n    }\r\n    if (this.filename.endsWith(\".css\")) {\r\n      return \"css\";\r\n    }\r\n    if (this.filename.endsWith(\".ts\")) {\r\n      return \"typescript\";\r\n    }\r\n    return \"javascript\";\r\n  }\r\n}\r\nclass ReplStore {\r\n  constructor({\r\n    serializedState = \"\",\r\n    defaultVueRuntimeURL = `https://cdn.jsdelivr.net/npm/@vue/runtime-dom@${version}/dist/runtime-dom.esm-browser.js`,\r\n    defaultVueServerRendererURL = `https://cdn.jsdelivr.net/npm/@vue/server-renderer@${version}/dist/server-renderer.esm-browser.js`,\r\n    showOutput = false,\r\n    outputMode = \"preview\"\r\n  } = {}) {\r\n    this.compiler = defaultCompiler;\r\n    this.pendingCompiler = null;\r\n    const files = {};\r\n    if (serializedState) {\r\n      const saved = JSON.parse(atou(serializedState));\r\n      for (const filename in saved) {\r\n        setFile(files, filename, saved[filename]);\r\n      }\r\n    } else {\r\n      setFile(files, defaultMainFile, welcomeCode);\r\n    }\r\n    this.defaultVueRuntimeURL = defaultVueRuntimeURL;\r\n    this.defaultVueServerRendererURL = defaultVueServerRendererURL;\r\n    this.initialShowOutput = showOutput;\r\n    this.initialOutputMode = outputMode;\r\n    let mainFile = defaultMainFile;\r\n    if (!files[mainFile]) {\r\n      mainFile = Object.keys(files)[0];\r\n    }\r\n    this.state = reactive({\r\n      mainFile,\r\n      files,\r\n      activeFile: files[mainFile],\r\n      errors: [],\r\n      vueRuntimeURL: this.defaultVueRuntimeURL,\r\n      vueServerRendererURL: this.defaultVueServerRendererURL,\r\n      typescriptVersion: \"latest\",\r\n      typescriptLocale: void 0,\r\n      resetFlip: true\r\n    });\r\n    this.initImportMap();\r\n    this.initTsConfig();\r\n  }\r\n  // don't start compiling until the options are set\r\n  init() {\r\n    watchEffect(\r\n      () => compileFile(this, this.state.activeFile).then(\r\n        (errs) => this.state.errors = errs\r\n      )\r\n    );\r\n    watch(\r\n      () => [\r\n        this.state.files[tsconfigFile]?.code,\r\n        this.state.typescriptVersion,\r\n        this.state.typescriptLocale,\r\n        this.state.locale,\r\n        this.state.dependencyVersion\r\n      ],\r\n      () => this.reloadLanguageTools?.(),\r\n      { deep: true }\r\n    );\r\n    this.state.errors = [];\r\n    for (const file in this.state.files) {\r\n      if (file !== defaultMainFile) {\r\n        compileFile(this, this.state.files[file]).then(\r\n          (errs) => this.state.errors.push(...errs)\r\n        );\r\n      }\r\n    }\r\n  }\r\n  initTsConfig() {\r\n    if (!this.state.files[tsconfigFile]) {\r\n      this.setTsConfig(tsconfig);\r\n    }\r\n  }\r\n  setTsConfig(config) {\r\n    this.state.files[tsconfigFile] = new File(\r\n      tsconfigFile,\r\n      JSON.stringify(config, void 0, 2)\r\n    );\r\n  }\r\n  getTsConfig() {\r\n    try {\r\n      return JSON.parse(this.state.files[tsconfigFile].code);\r\n    } catch {\r\n      return {};\r\n    }\r\n  }\r\n  setActive(filename) {\r\n    this.state.activeFile = this.state.files[filename];\r\n  }\r\n  addFile(fileOrFilename) {\r\n    const file = typeof fileOrFilename === \"string\" ? new File(fileOrFilename) : fileOrFilename;\r\n    this.state.files[file.filename] = file;\r\n    if (!file.hidden)\r\n      this.setActive(file.filename);\r\n  }\r\n  deleteFile(filename) {\r\n    if (confirm(`Are you sure you want to delete ${stripSrcPrefix(filename)}?`)) {\r\n      if (this.state.activeFile.filename === filename) {\r\n        this.state.activeFile = this.state.files[this.state.mainFile];\r\n      }\r\n      delete this.state.files[filename];\r\n    }\r\n  }\r\n  renameFile(oldFilename, newFilename) {\r\n    const { files } = this.state;\r\n    const file = files[oldFilename];\r\n    if (!file) {\r\n      this.state.errors = [`Could not rename \"${oldFilename}\", file not found`];\r\n      return;\r\n    }\r\n    if (!newFilename || oldFilename === newFilename) {\r\n      this.state.errors = [`Cannot rename \"${oldFilename}\" to \"${newFilename}\"`];\r\n      return;\r\n    }\r\n    file.filename = newFilename;\r\n    const newFiles = {};\r\n    for (const name in files) {\r\n      if (name === oldFilename) {\r\n        newFiles[newFilename] = file;\r\n      } else {\r\n        newFiles[name] = files[name];\r\n      }\r\n    }\r\n    this.state.files = newFiles;\r\n    if (this.state.mainFile === oldFilename) {\r\n      this.state.mainFile = newFilename;\r\n    }\r\n    compileFile(this, file).then((errs) => this.state.errors = errs);\r\n  }\r\n  serialize() {\r\n    const files = this.getFiles();\r\n    const importMap = files[importMapFile];\r\n    if (importMap) {\r\n      const { imports } = JSON.parse(importMap);\r\n      if (imports[\"vue\"] === this.defaultVueRuntimeURL) {\r\n        delete imports[\"vue\"];\r\n      }\r\n      if (imports[\"vue/server-renderer\"] === this.defaultVueServerRendererURL) {\r\n        delete imports[\"vue/server-renderer\"];\r\n      }\r\n      if (!Object.keys(imports).length) {\r\n        delete files[importMapFile];\r\n      } else {\r\n        files[importMapFile] = JSON.stringify({ imports }, null, 2);\r\n      }\r\n    }\r\n    return \"#\" + utoa(JSON.stringify(files));\r\n  }\r\n  getFiles() {\r\n    const exported = {};\r\n    for (const filename in this.state.files) {\r\n      const normalized = filename === importMapFile ? filename : stripSrcPrefix(filename);\r\n      exported[normalized] = this.state.files[filename].code;\r\n    }\r\n    return exported;\r\n  }\r\n  async setFiles(newFiles, mainFile = defaultMainFile) {\r\n    const files = {};\r\n    if (mainFile === defaultMainFile && !newFiles[mainFile]) {\r\n      setFile(files, mainFile, welcomeCode);\r\n    }\r\n    for (const filename in newFiles) {\r\n      setFile(files, filename, newFiles[filename]);\r\n    }\r\n    this.state.errors = [];\r\n    for (const file in files) {\r\n      this.state.errors.push(...await compileFile(this, files[file]));\r\n    }\r\n    this.state.mainFile = mainFile;\r\n    this.state.files = files;\r\n    this.initImportMap();\r\n    this.setActive(mainFile);\r\n    this.forceSandboxReset();\r\n  }\r\n  forceSandboxReset() {\r\n    this.state.resetFlip = !this.state.resetFlip;\r\n  }\r\n  initImportMap() {\r\n    const map = this.state.files[importMapFile];\r\n    if (!map) {\r\n      this.state.files[importMapFile] = new File(\r\n        importMapFile,\r\n        JSON.stringify(\r\n          {\r\n            imports: {\r\n              vue: this.defaultVueRuntimeURL,\r\n              \"vue/server-renderer\": this.defaultVueServerRendererURL\r\n            }\r\n          },\r\n          null,\r\n          2\r\n        )\r\n      );\r\n    } else {\r\n      try {\r\n        const json = JSON.parse(map.code);\r\n        if (!json.imports.vue) {\r\n          json.imports.vue = this.defaultVueRuntimeURL;\r\n        } else {\r\n          json.imports.vue = fixURL(json.imports.vue);\r\n        }\r\n        if (!json.imports[\"vue/server-renderer\"]) {\r\n          json.imports[\"vue/server-renderer\"] = this.defaultVueServerRendererURL;\r\n        } else {\r\n          json.imports[\"vue/server-renderer\"] = fixURL(\r\n            json.imports[\"vue/server-renderer\"]\r\n          );\r\n        }\r\n        map.code = JSON.stringify(json, null, 2);\r\n      } catch (e) {\r\n      }\r\n    }\r\n  }\r\n  getImportMap() {\r\n    try {\r\n      return JSON.parse(this.state.files[importMapFile].code);\r\n    } catch (e) {\r\n      this.state.errors = [\r\n        `Syntax error in import-map.json: ${e.message}`\r\n      ];\r\n      return {};\r\n    }\r\n  }\r\n  setImportMap(map) {\r\n    this.state.files[importMapFile].code = JSON.stringify(map, null, 2);\r\n  }\r\n  setTypeScriptVersion(version2) {\r\n    this.state.typescriptVersion = version2;\r\n    console.info(`[@vue/repl] Now using TypeScript version: ${version2}`);\r\n  }\r\n  async setVueVersion(version2) {\r\n    this.vueVersion = version2;\r\n    const compilerUrl = `https://cdn.jsdelivr.net/npm/@vue/compiler-sfc@${version2}/dist/compiler-sfc.esm-browser.js`;\r\n    const runtimeUrl = `https://cdn.jsdelivr.net/npm/@vue/runtime-dom@${version2}/dist/runtime-dom.esm-browser.js`;\r\n    const ssrUrl = `https://cdn.jsdelivr.net/npm/@vue/server-renderer@${version2}/dist/server-renderer.esm-browser.js`;\r\n    this.pendingCompiler = import(\r\n      /* @vite-ignore */\r\n      compilerUrl\r\n    );\r\n    this.compiler = await this.pendingCompiler;\r\n    this.pendingCompiler = null;\r\n    this.state.vueRuntimeURL = runtimeUrl;\r\n    this.state.vueServerRendererURL = ssrUrl;\r\n    const importMap = this.getImportMap();\r\n    const imports = importMap.imports || (importMap.imports = {});\r\n    imports.vue = runtimeUrl;\r\n    imports[\"vue/server-renderer\"] = ssrUrl;\r\n    this.setImportMap(importMap);\r\n    this.forceSandboxReset();\r\n    this.reloadLanguageTools?.();\r\n    console.info(`[@vue/repl] Now using Vue version: ${version2}`);\r\n  }\r\n  resetVueVersion() {\r\n    this.vueVersion = void 0;\r\n    this.compiler = defaultCompiler;\r\n    this.state.vueRuntimeURL = this.defaultVueRuntimeURL;\r\n    this.state.vueServerRendererURL = this.defaultVueServerRendererURL;\r\n    const importMap = this.getImportMap();\r\n    const imports = importMap.imports || (importMap.imports = {});\r\n    imports.vue = this.defaultVueRuntimeURL;\r\n    imports[\"vue/server-renderer\"] = this.defaultVueServerRendererURL;\r\n    this.setImportMap(importMap);\r\n    this.forceSandboxReset();\r\n    console.info(`[@vue/repl] Now using default Vue version`);\r\n  }\r\n}\r\nfunction setFile(files, filename, content) {\r\n  const normalized = filename !== importMapFile && filename !== tsconfigFile && !filename.startsWith(\"src/\") ? `src/${filename}` : filename;\r\n  files[normalized] = new File(normalized, content);\r\n}\r\nfunction fixURL(url) {\r\n  return url.replace(\"https://sfc.vuejs\", \"https://play.vuejs\");\r\n}\r\nfunction stripSrcPrefix(file) {\r\n  return file.replace(/^src\\//, \"\");\r\n}\r\n\r\nconst _withScopeId$1 = (n) => (pushScopeId(\"data-v-f661725b\"), n = n(), popScopeId(), n);\r\nconst _hoisted_1$3 = [\"onClick\", \"onDblclick\"];\r\nconst _hoisted_2$1 = { class: \"label\" };\r\nconst _hoisted_3$1 = [\"onClick\"];\r\nconst _hoisted_4 = /* @__PURE__ */ _withScopeId$1(() => /* @__PURE__ */ createElementVNode(\"svg\", {\r\n  class: \"icon\",\r\n  width: \"12\",\r\n  height: \"12\",\r\n  viewBox: \"0 0 24 24\"\r\n}, [\r\n  /* @__PURE__ */ createElementVNode(\"line\", {\r\n    stroke: \"#999\",\r\n    x1: \"18\",\r\n    y1: \"6\",\r\n    x2: \"6\",\r\n    y2: \"18\"\r\n  }),\r\n  /* @__PURE__ */ createElementVNode(\"line\", {\r\n    stroke: \"#999\",\r\n    x1: \"6\",\r\n    y1: \"6\",\r\n    x2: \"18\",\r\n    y2: \"18\"\r\n  })\r\n], -1));\r\nconst _hoisted_5 = [\r\n  _hoisted_4\r\n];\r\nconst _hoisted_6 = {\r\n  key: 1,\r\n  class: \"file pending\"\r\n};\r\nconst _hoisted_7 = [\"onKeyup\"];\r\nconst _hoisted_8 = { class: \"import-map-wrapper\" };\r\nconst _hoisted_9 = /* @__PURE__ */ _withScopeId$1(() => /* @__PURE__ */ createElementVNode(\"span\", { class: \"label\" }, \"tsconfig.json\", -1));\r\nconst _hoisted_10 = [\r\n  _hoisted_9\r\n];\r\nconst _hoisted_11 = /* @__PURE__ */ _withScopeId$1(() => /* @__PURE__ */ createElementVNode(\"span\", { class: \"label\" }, \"Import Map\", -1));\r\nconst _hoisted_12 = [\r\n  _hoisted_11\r\n];\r\nconst _sfc_main$3 = /* @__PURE__ */ defineComponent({\r\n  __name: \"FileSelector\",\r\n  setup(__props) {\r\n    const store = inject(\"store\");\r\n    const pending = ref(false);\r\n    const pendingFilename = ref(\"Comp.vue\");\r\n    const showTsConfig = inject(\"tsconfig\");\r\n    const showImportMap = inject(\"import-map\");\r\n    const files = computed(\r\n      () => Object.entries(store.state.files).filter(\r\n        ([name, file]) => name !== importMapFile && name !== tsconfigFile && !file.hidden\r\n      ).map(([name]) => name)\r\n    );\r\n    function startAddFile() {\r\n      let i = 0;\r\n      let name = `Comp.vue`;\r\n      while (true) {\r\n        let hasConflict = false;\r\n        for (const filename in store.state.files) {\r\n          if (stripSrcPrefix(filename) === name) {\r\n            hasConflict = true;\r\n            name = `Comp${++i}.vue`;\r\n            break;\r\n          }\r\n        }\r\n        if (!hasConflict) {\r\n          break;\r\n        }\r\n      }\r\n      pendingFilename.value = name;\r\n      pending.value = true;\r\n    }\r\n    function cancelNameFile() {\r\n      pending.value = false;\r\n    }\r\n    function focus({ el }) {\r\n      el.focus();\r\n    }\r\n    function doneNameFile() {\r\n      if (!pending.value)\r\n        return;\r\n      const filename = \"src/\" + pendingFilename.value;\r\n      const oldFilename = pending.value === true ? \"\" : pending.value;\r\n      if (!/\\.(vue|js|ts|css|json)$/.test(filename)) {\r\n        store.state.errors = [\r\n          `Playground only supports *.vue, *.js, *.ts, *.css, *.json files.`\r\n        ];\r\n        return;\r\n      }\r\n      if (filename !== oldFilename && filename in store.state.files) {\r\n        store.state.errors = [`File \"${filename}\" already exists.`];\r\n        return;\r\n      }\r\n      store.state.errors = [];\r\n      cancelNameFile();\r\n      if (filename === oldFilename) {\r\n        return;\r\n      }\r\n      if (oldFilename) {\r\n        store.renameFile(oldFilename, filename);\r\n      } else {\r\n        store.addFile(filename);\r\n      }\r\n    }\r\n    function editFileName(file) {\r\n      pendingFilename.value = stripSrcPrefix(file);\r\n      pending.value = file;\r\n    }\r\n    const fileSel = ref(null);\r\n    function horizontalScroll(e) {\r\n      e.preventDefault();\r\n      const el = fileSel.value;\r\n      const direction = Math.abs(e.deltaX) >= Math.abs(e.deltaY) ? e.deltaX : e.deltaY;\r\n      const distance = 30 * (direction > 0 ? 1 : -1);\r\n      el.scrollTo({\r\n        left: el.scrollLeft + distance\r\n      });\r\n    }\r\n    return (_ctx, _cache) => {\r\n      return openBlock(), createElementBlock(\"div\", {\r\n        class: normalizeClass([\"file-selector\", { \"has-import-map\": unref(showImportMap) }]),\r\n        onWheel: horizontalScroll,\r\n        ref_key: \"fileSel\",\r\n        ref: fileSel\r\n      }, [\r\n        (openBlock(true), createElementBlock(Fragment, null, renderList(files.value, (file, i) => {\r\n          return openBlock(), createElementBlock(Fragment, null, [\r\n            pending.value !== file ? (openBlock(), createElementBlock(\"div\", {\r\n              key: 0,\r\n              class: normalizeClass([\"file\", { active: unref(store).state.activeFile.filename === file }]),\r\n              onClick: ($event) => unref(store).setActive(file),\r\n              onDblclick: ($event) => i > 0 && editFileName(file)\r\n            }, [\r\n              createElementVNode(\"span\", _hoisted_2$1, toDisplayString(unref(stripSrcPrefix)(file)), 1),\r\n              i > 0 ? (openBlock(), createElementBlock(\"span\", {\r\n                key: 0,\r\n                class: \"remove\",\r\n                onClick: withModifiers(($event) => unref(store).deleteFile(file), [\"stop\"])\r\n              }, _hoisted_5, 8, _hoisted_3$1)) : createCommentVNode(\"\", true)\r\n            ], 42, _hoisted_1$3)) : createCommentVNode(\"\", true),\r\n            pending.value === true && i === files.value.length - 1 || pending.value === file ? (openBlock(), createElementBlock(\"div\", _hoisted_6, [\r\n              withDirectives(createElementVNode(\"input\", {\r\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event) => pendingFilename.value = $event),\r\n                spellcheck: \"false\",\r\n                onBlur: doneNameFile,\r\n                onKeyup: [\r\n                  withKeys(doneNameFile, [\"enter\"]),\r\n                  withKeys(cancelNameFile, [\"esc\"])\r\n                ],\r\n                onVnodeMounted: focus\r\n              }, null, 40, _hoisted_7), [\r\n                [vModelText, pendingFilename.value]\r\n              ])\r\n            ])) : createCommentVNode(\"\", true)\r\n          ], 64);\r\n        }), 256)),\r\n        createElementVNode(\"button\", {\r\n          class: \"add\",\r\n          onClick: startAddFile\r\n        }, \"+\"),\r\n        createElementVNode(\"div\", _hoisted_8, [\r\n          unref(showTsConfig) ? (openBlock(), createElementBlock(\"div\", {\r\n            key: 0,\r\n            class: normalizeClass([\"file\", { active: unref(store).state.activeFile.filename === unref(tsconfigFile) }]),\r\n            onClick: _cache[1] || (_cache[1] = ($event) => unref(store).setActive(unref(tsconfigFile)))\r\n          }, _hoisted_10, 2)) : createCommentVNode(\"\", true),\r\n          unref(showImportMap) ? (openBlock(), createElementBlock(\"div\", {\r\n            key: 1,\r\n            class: normalizeClass([\"file\", { active: unref(store).state.activeFile.filename === unref(importMapFile) }]),\r\n            onClick: _cache[2] || (_cache[2] = ($event) => unref(store).setActive(unref(importMapFile)))\r\n          }, _hoisted_12, 2)) : createCommentVNode(\"\", true)\r\n        ])\r\n      ], 34);\r\n    };\r\n  }\r\n});\r\n\r\nconst FileSelector_vue_vue_type_style_index_0_scoped_f661725b_lang = '';\r\n\r\nconst FileSelector = /* @__PURE__ */ _export_sfc(_sfc_main$3, [[\"__scopeId\", \"data-v-f661725b\"]]);\r\n\r\nconst _withScopeId = (n) => (pushScopeId(\"data-v-70b24951\"), n = n(), popScopeId(), n);\r\nconst _hoisted_1$2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode(\"span\", null, \"Show Error\", -1));\r\nconst _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode(\"div\", { class: \"indicator\" }, null, -1));\r\nconst _hoisted_3 = [\r\n  _hoisted_2\r\n];\r\nconst _sfc_main$2 = /* @__PURE__ */ defineComponent({\r\n  __name: \"MessageToggle\",\r\n  props: {\r\n    \"modelValue\": { type: Boolean }\r\n  },\r\n  emits: [\"update:modelValue\"],\r\n  setup(__props) {\r\n    const visible = useModel(__props, \"modelValue\");\r\n    return (_ctx, _cache) => {\r\n      return openBlock(), createElementBlock(\"div\", {\r\n        class: \"wrapper\",\r\n        onClick: _cache[0] || (_cache[0] = ($event) => visible.value = !visible.value)\r\n      }, [\r\n        _hoisted_1$2,\r\n        createElementVNode(\"div\", {\r\n          class: normalizeClass([\"toggle\", [{ active: __props.modelValue }]])\r\n        }, _hoisted_3, 2)\r\n      ]);\r\n    };\r\n  }\r\n});\r\n\r\nconst MessageToggle_vue_vue_type_style_index_0_scoped_70b24951_lang = '';\r\n\r\nconst MessageToggle = /* @__PURE__ */ _export_sfc(_sfc_main$2, [[\"__scopeId\", \"data-v-70b24951\"]]);\r\n\r\nconst _hoisted_1$1 = { class: \"editor-container\" };\r\nconst SHOW_ERROR_KEY = \"repl_show_error\";\r\nconst _sfc_main$1 = /* @__PURE__ */ defineComponent({\r\n  __name: \"EditorContainer\",\r\n  props: {\r\n    editorComponent: {}\r\n  },\r\n  setup(__props) {\r\n    const props = __props;\r\n    const store = inject(\"store\");\r\n    const showMessage = ref(getItem());\r\n    const onChange = debounce((code) => {\r\n      store.state.activeFile.code = code;\r\n    }, 250);\r\n    function setItem() {\r\n      localStorage.setItem(SHOW_ERROR_KEY, showMessage.value ? \"true\" : \"false\");\r\n    }\r\n    function getItem() {\r\n      const item = localStorage.getItem(SHOW_ERROR_KEY);\r\n      return !(item === \"false\");\r\n    }\r\n    watch(showMessage, () => {\r\n      setItem();\r\n    });\r\n    return (_ctx, _cache) => {\r\n      return openBlock(), createElementBlock(Fragment, null, [\r\n        createVNode(FileSelector),\r\n        createElementVNode(\"div\", _hoisted_1$1, [\r\n          createVNode(props.editorComponent, {\r\n            onChange: unref(onChange),\r\n            value: unref(store).state.activeFile.code,\r\n            filename: unref(store).state.activeFile.filename\r\n          }, null, 8, [\"onChange\", \"value\", \"filename\"]),\r\n          withDirectives(createVNode(Message, {\r\n            err: unref(store).state.errors[0]\r\n          }, null, 8, [\"err\"]), [\r\n            [vShow, showMessage.value]\r\n          ]),\r\n          createVNode(MessageToggle, {\r\n            modelValue: showMessage.value,\r\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event) => showMessage.value = $event)\r\n          }, null, 8, [\"modelValue\"])\r\n        ])\r\n      ], 64);\r\n    };\r\n  }\r\n});\r\n\r\nconst EditorContainer_vue_vue_type_style_index_0_scoped_3500c8e7_lang = '';\r\n\r\nconst EditorContainer = /* @__PURE__ */ _export_sfc(_sfc_main$1, [[\"__scopeId\", \"data-v-3500c8e7\"]]);\r\n\r\nconst _hoisted_1 = { class: \"vue-repl\" };\r\nconst _sfc_main = /* @__PURE__ */ defineComponent({\r\n  __name: \"Repl\",\r\n  props: {\r\n    theme: { default: \"light\" },\r\n    editor: {},\r\n    store: { default: () => new ReplStore() },\r\n    autoResize: { type: Boolean, default: true },\r\n    showCompileOutput: { type: Boolean, default: true },\r\n    showImportMap: { type: Boolean, default: true },\r\n    showTsConfig: { type: Boolean, default: true },\r\n    clearConsole: { type: Boolean, default: true },\r\n    sfcOptions: {},\r\n    layout: {},\r\n    ssr: { type: Boolean, default: false },\r\n    previewOptions: { default: () => ({\r\n      headHTML: \"\",\r\n      bodyHTML: \"\",\r\n      customCode: {\r\n        importCode: \"\",\r\n        useCode: \"\"\r\n      }\r\n    }) }\r\n  },\r\n  setup(__props, { expose: __expose }) {\r\n    const props = __props;\r\n    if (!props.editor) {\r\n      throw new Error('The \"editor\" prop is now required.');\r\n    }\r\n    const outputRef = ref();\r\n    const { store } = props;\r\n    const sfcOptions = store.options = props.sfcOptions || {};\r\n    if (!sfcOptions.script) {\r\n      sfcOptions.script = {};\r\n    }\r\n    sfcOptions.script.fs = {\r\n      fileExists(file) {\r\n        if (file.startsWith(\"/\"))\r\n          file = file.slice(1);\r\n        return !!store.state.files[file];\r\n      },\r\n      readFile(file) {\r\n        if (file.startsWith(\"/\"))\r\n          file = file.slice(1);\r\n        return store.state.files[file].code;\r\n      }\r\n    };\r\n    store.init();\r\n    provide(\"store\", store);\r\n    provide(\"autoresize\", props.autoResize);\r\n    provide(\"import-map\", toRef(props, \"showImportMap\"));\r\n    provide(\"tsconfig\", toRef(props, \"showTsConfig\"));\r\n    provide(\"clear-console\", toRef(props, \"clearConsole\"));\r\n    provide(\"preview-options\", props.previewOptions);\r\n    provide(\"theme\", toRef(props, \"theme\"));\r\n    function reload() {\r\n      outputRef.value?.reload();\r\n    }\r\n    __expose({ reload });\r\n    return (_ctx, _cache) => {\r\n      return openBlock(), createElementBlock(\"div\", _hoisted_1, [\r\n        createVNode(SplitPane, { layout: _ctx.layout }, {\r\n          left: withCtx(() => [\r\n            createVNode(EditorContainer, { editorComponent: _ctx.editor }, null, 8, [\"editorComponent\"])\r\n          ]),\r\n          right: withCtx(() => [\r\n            createVNode(Output, {\r\n              ref_key: \"outputRef\",\r\n              ref: outputRef,\r\n              editorComponent: _ctx.editor,\r\n              showCompileOutput: props.showCompileOutput,\r\n              ssr: !!props.ssr\r\n            }, null, 8, [\"editorComponent\", \"showCompileOutput\", \"ssr\"])\r\n          ]),\r\n          _: 1\r\n        }, 8, [\"layout\"])\r\n      ]);\r\n    };\r\n  }\r\n});\r\n\r\nconst Repl_vue_vue_type_style_index_0_scoped_f0baea56_lang = '';\r\n\r\nconst Repl = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-f0baea56\"]]);\r\n\r\nexport { File, Preview, Repl, ReplStore, compileFile };\r\n"],
  "mappings": "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A,qBAOA,YACA,UAGA,aACA,WAGA,cAGA,cAGA,SAKA,gBAiBA,eAMA,sBACA,uBAEA,OA2DA,iBACA,qBACA,gBA8CA,WACA,UACA,WACA,WACA,UACA,WAEA,qBACA,eAGA,kBACA,qBAWA,gBAMA,iBAGA,gBAIA,UAwCAuC,kBAGA,UAiCA,eAgEA,UACA,UACA,UACA,YACA,iBACA,YACA,cACA,sBACA,cACA,sBACA,gBACA,aACA,eACA,mBACA,2BAGA,mBACA,gBACA,iBACA,aACA,aACA,cACA,mBACA,aACA,iBACA,iBACA,iBACA,sBACA,aACA,UACA,YACA,gBACA,oBACA,eACA,cACA,UACA,OACA,QACA,WACA,cACA,eA+CA,SA4NF,KAKE,gBA8BA,YAQA,SASA,YACA,YACA,QACA,UACA,QACA,SACA,mBA2BA,YAaF,kBACE,cACA,aACA,aACA,kBACA,kBACA,eAwBA,IA+dA,UAUA,gBAkBF,gBAIE,SAQA,aAMF,cAUE,kBAyBA,mBAIF,gBAiNA,kBAaE,qCACF,wBAoBE,aACJ,cAwEI,QAEJ,gBAEI,gBASF,QA8TA,8BACA,yBACE,yBACA,oBAEA,4BACA,uBAiCA,eAKA,UACA,wBACA,4BAmBA,qBAIA,aACJ,eACA,gBACA,aACA,oBACA,aACA,oBACA,aACA,oBACA,iBACA,WACI,iBACJ,gBACA,gBACA,oBACA,qBACA,iBACA,kBACA,oBACA,0BACA,2BACA,4BACA,sBACA,8BACI,YACJ,cACA,kBACA,UACA,eACA,mBACA,cACA,cACA,iBACA,WACA,cACA,oBACA,mBACA,qBACA,sBACI,2BACJ,2BACA,2BACA,6BACI,6BACJ,6BACA,+BACA,+BACA,qBACI,OAQA,cA6IA,WAMA,kBA2BA,YA4DA,gBAoIA,WACA,YAYA,gBACA,sBACA,2BA6BA,OAsEF,UAGE,mCAIA,kCAsRA,WACJ,YAII,mBACA,OASA,WAojCA,YAOA,mBAyEA,aACJ,iCACA,sCACA,uBACI,iBAYA,uBAkBA,wBAmGA,OACJ,aACA,aACA,cACA,UACI,4BA6BA,YAmNA,kBAQF,QAUE,eAkEA,WAmCA,eACA,YAsGA,mBAcA,mBACF,MAszEE,UAgQA,WA8BF,KA6YE,iBAUA,wBAiGA,UACA,+BAGA,YA4YA,QAYA,UA8HF,YAw7EE,mBAIF,cAqLA,aAuDE,oBACA,cACA,+BAqEA,cAQA,kBACA,kBAswDA,WAGJ,aAGI,eACA,2BA4GA,iBA4wDF,UA4EE,UASA,kBAcF,WACA,mBAGE,aACA,eAYA,iBACA,oBACA,uBACA,kBACA,cACA,2BA8DA,wBAaA,oBAwFA,gBAqIA,iBAwEA,UACA,WAOA,sBAqQF,SAKE,4BAwlBA,uBAoXF,aAEA,sBAEA,aAEA,UAUA,gBAmGA,UAcA,kBAGA,YAGA,iBAGA,wBAiFA,QAwlBA,YAUA,QACA,OACA,gBAiHA,eAUA,QAiFA,aACA,QACA,YACA,eAgaA,qBAEA,gBAqHA,aA8HA,WAkBA,QACA,gBACA,YACA,aACA,aA8cE,kBAusBF,cAUA,sBACA,QAIA,iBAGA,gBAKA,gBAgZA,sBACA,qBAGE,iBACA,aA4uBA,YAkEA,YA6QA,gBAGA,kBACA,qBAwFA,eAaA,sBACA,gBACA,qBAoNA,aA8NA,cAmMA,cACA,eACA,eAkFA,iBACA,iBAkBA,qBAqBA,mBAgPA,oBACA,kBAikBA,qBAkFA,SACA,eAwGA,eAuCA,cAaA,eAyEA,QACA,eAsBA,kBAoFA,MACA,eA4FA,wBAEA,eACA,kBACA,cACA,gBACA,iBACA,qBACA,gBACA,QACA,YACA,kBAcF,0BA0rEA,iBACE,YA0EA,kBA8BA,oBAIA,eAyDA,gBAgBA,gBAiBA,kBAcA,gBAuBA,gBA2BA,gBAmFA,uBACA,kBAIA,kBACA,iBAIA,kBAmCA,gBAUA,aAoCA,eAaA,qBA6CA,cACA,iBAkDA,gBACA,YACA,qBAGA,cAIA,oBAuJA,sBAYA,mBAIA,wBAmCF,aAyMA,aAEA,WAkHA,OACA,aAiCA,MAsBA,QAQA,oBAeE,cAyCA,WACA,gBAIA,WACA,iBAuEF,SAEA,MAEE,iBAsBA,SAsDA,eAsEA,yBAyCA,YAmCF,aACA,uBACA,gBACA,gBACA,mBACA,kBAWE,kBACA,YAyNA,SACA,SACA,WAqEF,UAQA,QAGA,MACA,MACA,MACA,MACA,MACA,aACA,UACA,WACA,eACA,iBAGA,QAOA,eACA,OACA,oBAqQA,QACA,WACA,KACA,QAgMA,YAEA,WAWA,mBAy7BA,sBA2oBA,mBA4KA,kBACA,oBA4DA,OACA,UACA,cACA,YA4DA,OACA,UACA,SACA,KACA,MACA,WACA,UACA,SACA,QAIA,IACA,aACA,MACA,KACA,gBACA,oBACA,MAYA,aACA,gBAyBA,WAOA,WA0BA,UAuBA,YAEA,2BAUA,cAwEA,QACA,cAwaA,QAiCA,0BAyGA,oBA2BA,sBAyDA,SAqDA,YA4DE,OACA,iBACF,mBA+BA,iBACF,aAGA,mBAIA,QAGA,QAGA,YAKA,cACA,iBACA,gBACA,qBACA,mBAEA,gBAKA,kBAKA,iBAuqBE,qBAiBE,YAIA,WAgBF,aACA,cACA,qBACA,uBACA,gBACA,gBACA,mBACA,kBAWA,iBACE,wBAWA,kBAQA,oCAGA,mBAqFA,YACA,wBACA,kCAGA,iBAgHA,iBACA,kBACA,sBACA,iBACA,uBACA,kBACA,kBACA,kBACA,iBACA,yBACA,iBACA,0BACA,iBACA,mBACA,0BACA,6BACA,qBACA,qBACA,yBACA,YAuBA,gBAyCA,iBA4BA,wBA4CA,kBA2DA,UAgDA,gBACA,qBAgSA,UAoEF,aACA,cACA,qBACA,uBACA,gBACA,gBACA,mBACA,kBAWA,iBACE,QACA,UACA,kBACA,uBAsIA,eACC,oBAAoB,yBACrB,qBACA,0BA2NA,mBAgHA,kBA2BA,aACA,gBACA,2BAkDA,kBA0CF,aACA,cACA,qBACA,uBACA,gBACA,gBACA,mBACA,kBAWA,iBAiDA,aAKA,kBAEA,oBAKA,cAEA,cAEA,cAEE,aAeF,aACA,cACA,qBACA,uBACA,gBACA,gBACA,mBACA,kBAWA,iBA8LA,mBACA,YAoBA,mBAMA,qBAQA,YAEA,KAEA,kBAQA,WAUA,cAOA,cAgCE,cACA,cACA,WACA,OACA,SACA,OACA,MACA,KACA,IACA,aACA,cACA,kBACA,mBACA,YACA,aACA,WACA,UACA,OACA,IAEA,WACA,aACA,gBACA,eAEF,YAgPA,QAEA,aAEA,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I,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM,MAAM,GAAG,IAAI;AACjhE,IAAM,wBAAwB,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI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AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;A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,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA,IACT,KAAK,UAAU;AACb,aAAO;AAAA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EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG,kBAAkB,aAAa;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEtI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG,kBAAkB,aAAa;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEtI,kBAAkB,OAAO;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA;AAAA,EAElI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG,kBAAkB,WAAW;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAErI,kBAAkB,YAAY;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAErI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG,kBAAkB,UAAU;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEnI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG,kBAAkB,UAAU;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEnI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEzG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAK;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,GAExG,UAAU,UAAU,KAAK;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,E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,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAErI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;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AAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G,kBAAkB,SAAS;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAElI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,E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I;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE5G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G,kBAAkB,WAAW;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEpkBAAkB,WAAW;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEpI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE9G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAA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AAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEnkBAAkB,WAAW;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEpkBAAkB,aAAa;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEtkBAAkB,YAAY;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAErzG,UAAU,WAAW,KAAK;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAElI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAM;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAM;AAAA;AAAA,EAEpkBAAkB,cAAc;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEvI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G,kBAAkB,QAAQ;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEjkBAAkB,WAAW;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEpzG,UAAU,UAAU,KAAK;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEjzG,UAAU,WAAW,KAAK;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAElkBAAkB,WAAW;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA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AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAElkBAAkB,WAAW;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEpkBAAkB,UAAU;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEnzzG,UAAU,SAAS,KAAK;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEhzG,UAAU,UAAU,KAAK;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEjI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,GAEzG,UAAU,SAAS,KAAK;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAEhI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAE1G;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAM;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,GAEzG,UAAU,UAAU,KAAK;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,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",
  "names": ["version", "str", "map", "list", "pad", "normalizeStyle", "normalizeClass", "string", "match", "error", "tag", "isComponent", "newline", "node", "n", "a", "loc", "word", "next", "next2", "input", "errors", "ch", "range", "list2", "object", "computed", "estree", "plugin", "parser", "tokenTypes", "result", "config", "err", "_a", "match2", "root", "id", "swap", "randomIntInRange", "doQuickSort", "comparator", "sourceMap", "comma", "prefix", "postfix", "node2", "isReferenced", "last", "binding", "ec", "walk", "toDisplayString", "path", "from", "types", "hash", "seen", "state", "createBlock", "fill", "read", "i", "max", "e", "inspect", "x", "warned", "base", "resolve", "self", "sep", "relative", "isVoidTag", "isFragment", "processor", "Parser", "PreviousMap", "Processor", "rule", "selector", "merge", "result2", "toString", "isConst", "registerBinding", "isRoot", "warnOnce", "_b", "ref", "hoistStatic", "init", "Stringifier", "document", "tokenizer", "MapGenerator", "NoWorkResult", "CssSyntaxError", "Declaration", "LazyResult", "Container", "Document", "Warning", "Comment", "AtRule", "Result", "Input", "Rule", "Root", "Node", "equals", "btoa", "unexpected", "declaration", "comment", "at", "ScopeHandler", "bodyNode", "parse", "jsx", "arrowExpression", "parseElement", "startLoc", "nextToken", "isIdentifier", "isString", "left", "expr", "startsExpr", "type", "tokenIsKeyword", "isDeclaration", "isContextual", "isPrivate", "expect", "isImportReflection", "plus", "slash", "urlParse", "normalize", "isAbsolute", "join", "sourceFile", "SourceMapConsumer_parseMappings", "needle", "section", "compare", "write", "byteLength", "inherits", "getOwnPropertyDescriptors", "escape", "semicolon", "stringifier", "stringify", "warning", "colon", "filter", "unesc", "getProp", "ensureObject", "stripComments", "cloneNode", "clone", "_interopRequireDefault", "types$1", "_getRequireWildcardCache", "_setPrototypeOf", "o", "p", "split", "_types", "Selector", "cssesc", "ClassName", "ID", "Namespace", "namespace", "Tag", "String", "Pseudo", "_unesc", "deprecate", "Attribute", "concat", "Universal", "Combinator", "Nesting", "sortAscending", "tokenize", "_root", "_selector", "_className", "_comment", "_id", "_tag", "_string", "_pseudo", "_attribute", "_universal", "_combinator", "_nesting", "getSource", "attribute", "space", "combinator", "nesting", "pseudo", "universal", "current", "noop", "transform", "process", "className", "base64VLQ_encode", "base64VLQ_decode", "ArraySet_fromArray", "ArraySet_size", "ArraySet_add", "ArraySet_has", "ArraySet_indexOf", "ArraySet_at", "ArraySet_toArray", "MappingList_forEach", "MappingList_add", "MappingList_toArray", "SourceMapGenerator_fromSourceMap", "SourceMapGenerator_addMapping", "SourceMapGenerator_setSourceContent", "SourceMapGenerator_applySourceMap", "SourceMapGenerator_validateMapping", "SourceMapGenerator_serializeMappings", "SourceMapGenerator_generateSourcesContent", "SourceMapGenerator_toJSON", "SourceMapGenerator_toString", "SourceMapConsumer_charIsMappingSeparator", "SourceMapConsumer_eachMapping", "SourceMapConsumer_allGeneratedPositionsFor", "SourceMapConsumer_fromSourceMap", "SourceMapConsumer_findMapping", "SourceMapConsumer_computeColumnSpans", "SourceMapConsumer_originalPositionFor", "BasicSourceMapConsumer_hasContentsOfAllSources", "SourceMapConsumer_sourceContentFor", "SourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_originalPositionFor", "IndexedSourceMapConsumer_hasContentsOfAllSources", "IndexedSourceMapConsumer_sourceContentFor", "IndexedSourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_parseMappings", "SourceNode_fromStringWithSourceMap", "SourceNode_add", "SourceNode_prepend", "SourceNode_walk", "SourceNode_join", "SourceNode_replaceRight", "SourceNode_setSourceContent", "SourceNode_walkSourceContents", "SourceNode_toString", "SourceNode_toStringWithSourceMap", "replacer", "version", "getDefaultExportFromCjs", "_a", "_b", "n", "l", "i", "fl", "td", "str", "base64", "container", "state", "err", "resolve", "id", "seen", "node", "binding", "container", "error", "log", "_a", "_b", "_a", "ContextualKeyword", "TokenType", "string", "comma", "colon", "at", "hash", "bang", "tilde", "greaterThan", "plus", "slash", "Scope", "error", "State", "charCodes", "tab", "space", "ampersand", "asterisk", "semicolon", "backslash", "caret", "input", "err", "skipWhiteSpace", "next", "IdentifierRole", "JSXRole", "Token", "readInt", "base", "prefix", "path", "result", "str", "global", "exports", "last", "chars", "intToChar", "charToInt", "td", "state", "indexOf", "encode", "encodeInteger", "UrlType", "match", "parseUrl", "url", "normalizePath", "resolve", "binarySearch", "map", "isString", "version", "from", "_a", "clone", "max", "sourceMap", "dist", "types", "util", "d", "b", "VError", "NoopContext", "DetailContext", "_b", "DetailUnionResolver", "__extends", "TType", "name", "TName", "TLiteral", "TArray", "_i", "TTuple", "TUnion", "n", "TIntersection", "TEnumType", "TEnumLiteral", "TIface", "TOptional", "TProp", "TFunc", "TParam", "TParamList", "param", "BasicType", "tag", "array_1", "Checker", "FunctionType", "parseExpression", "isMaybeDefaultImport", "declaration", "parseFile", "parse", "isJSXEnabled", "isTypeScriptEnabled", "isFlowEnabled", "className", "token", "nextToken", "isIdentifier", "CR", "LinesAndColumns", "transform", "pad", "fold", "foldObject", "seen", "foldValue", "toString", "sum", "hashSum", "getDefaultExportFromCjs", "id", "errors", "doCompileTemplate", "File", "config", "version2", "n", "_a"]
}
