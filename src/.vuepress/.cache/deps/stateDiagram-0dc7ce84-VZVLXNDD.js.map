{
  "version": 3,
  "sources": ["../../../../node_modules/mermaid/dist/stateDiagram-0dc7ce84.js"],
  "sourcesContent": ["import { d as db, p as parser, s as styles } from \"./styles-b820c189.js\";\r\nimport { line, curveBasis, select } from \"d3\";\r\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\r\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\r\nimport { c as getConfig, u as utils, e as common, l as log, i as configureSvgSize } from \"./mermaid-aad43469.js\";\r\nimport \"ts-dedent\";\r\nimport \"dayjs\";\r\nimport \"@braintree/sanitize-url\";\r\nimport \"dompurify\";\r\nimport \"khroma\";\r\nimport \"lodash-es/memoize.js\";\r\nimport \"stylis\";\r\nimport \"lodash-es/isEmpty.js\";\r\nconst idCache = {};\r\nconst set = (key, val) => {\r\n  idCache[key] = val;\r\n};\r\nconst get = (k) => idCache[k];\r\nconst keys = () => Object.keys(idCache);\r\nconst size = () => keys().length;\r\nconst idCache$1 = {\r\n  get,\r\n  set,\r\n  keys,\r\n  size\r\n};\r\nconst drawStartState = (g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit);\r\nconst drawDivider = (g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0);\r\nconst drawSimpleState = (g, stateDef) => {\r\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\r\n  const classBox = state.node().getBBox();\r\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\r\n  return state;\r\n};\r\nconst drawDescrState = (g, stateDef) => {\r\n  const addTspan = function(textEl, txt, isFirst2) {\r\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\r\n    if (!isFirst2) {\r\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\r\n    }\r\n  };\r\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\r\n  const titleBox = title.node().getBBox();\r\n  const titleHeight = titleBox.height;\r\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\r\n    \"y\",\r\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\r\n  ).attr(\"class\", \"state-description\");\r\n  let isFirst = true;\r\n  let isSecond = true;\r\n  stateDef.descriptions.forEach(function(descr) {\r\n    if (!isFirst) {\r\n      addTspan(description, descr, isSecond);\r\n      isSecond = false;\r\n    }\r\n    isFirst = false;\r\n  });\r\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\r\n  const descrBox = description.node().getBBox();\r\n  const width = Math.max(descrBox.width, titleBox.width);\r\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\r\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\r\n  return g;\r\n};\r\nconst addTitleAndBox = (g, stateDef, altBkg) => {\r\n  const pad = getConfig().state.padding;\r\n  const dblPad = 2 * getConfig().state.padding;\r\n  const orgBox = g.node().getBBox();\r\n  const orgWidth = orgBox.width;\r\n  const orgX = orgBox.x;\r\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\r\n  const titleBox = title.node().getBBox();\r\n  const titleWidth = titleBox.width + dblPad;\r\n  let width = Math.max(titleWidth, orgWidth);\r\n  if (width === orgWidth) {\r\n    width = width + dblPad;\r\n  }\r\n  let startX;\r\n  const graphBox = g.node().getBBox();\r\n  if (stateDef.doc)\r\n    ;\r\n  startX = orgX - pad;\r\n  if (titleWidth > orgWidth) {\r\n    startX = (orgWidth - width) / 2 + pad;\r\n  }\r\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\r\n    startX = orgX - (titleWidth - orgWidth) / 2;\r\n  }\r\n  const lineY = 1 - getConfig().state.textHeight;\r\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\r\n    \"height\",\r\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\r\n  ).attr(\"rx\", \"0\");\r\n  title.attr(\"x\", startX + pad);\r\n  if (titleWidth <= orgWidth) {\r\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\r\n  }\r\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\r\n    \"y\",\r\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\r\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\r\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\r\n    \"y\",\r\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\r\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\r\n  return g;\r\n};\r\nconst drawEndState = (g) => {\r\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\r\n    \"cx\",\r\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\r\n  ).attr(\r\n    \"cy\",\r\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\r\n  );\r\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\r\n};\r\nconst drawForkJoinState = (g, stateDef) => {\r\n  let width = getConfig().state.forkWidth;\r\n  let height = getConfig().state.forkHeight;\r\n  if (stateDef.parentId) {\r\n    let tmp = width;\r\n    width = height;\r\n    height = tmp;\r\n  }\r\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\r\n};\r\nconst _drawLongText = (_text, x, y, g) => {\r\n  let textHeight = 0;\r\n  const textElem = g.append(\"text\");\r\n  textElem.style(\"text-anchor\", \"start\");\r\n  textElem.attr(\"class\", \"noteText\");\r\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\r\n  text = text.replace(/\\n/g, \"<br/>\");\r\n  const lines = text.split(common.lineBreakRegex);\r\n  let tHeight = 1.25 * getConfig().state.noteMargin;\r\n  for (const line2 of lines) {\r\n    const txt = line2.trim();\r\n    if (txt.length > 0) {\r\n      const span = textElem.append(\"tspan\");\r\n      span.text(txt);\r\n      if (tHeight === 0) {\r\n        const textBounds = span.node().getBBox();\r\n        tHeight += textBounds.height;\r\n      }\r\n      textHeight += tHeight;\r\n      span.attr(\"x\", x + getConfig().state.noteMargin);\r\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\r\n    }\r\n  }\r\n  return { textWidth: textElem.node().getBBox().width, textHeight };\r\n};\r\nconst drawNote = (text, g) => {\r\n  g.attr(\"class\", \"state-note\");\r\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\r\n  const rectElem = g.append(\"g\");\r\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\r\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\r\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\r\n  return note;\r\n};\r\nconst drawState = function(elem, stateDef) {\r\n  const id = stateDef.id;\r\n  const stateInfo = {\r\n    id,\r\n    label: stateDef.id,\r\n    width: 0,\r\n    height: 0\r\n  };\r\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\r\n  if (stateDef.type === \"start\") {\r\n    drawStartState(g);\r\n  }\r\n  if (stateDef.type === \"end\") {\r\n    drawEndState(g);\r\n  }\r\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\r\n    drawForkJoinState(g, stateDef);\r\n  }\r\n  if (stateDef.type === \"note\") {\r\n    drawNote(stateDef.note.text, g);\r\n  }\r\n  if (stateDef.type === \"divider\") {\r\n    drawDivider(g);\r\n  }\r\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\r\n    drawSimpleState(g, stateDef);\r\n  }\r\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\r\n    drawDescrState(g, stateDef);\r\n  }\r\n  const stateBox = g.node().getBBox();\r\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\r\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\r\n  idCache$1.set(id, stateInfo);\r\n  return stateInfo;\r\n};\r\nlet edgeCount = 0;\r\nconst drawEdge = function(elem, path, relation) {\r\n  const getRelationType = function(type) {\r\n    switch (type) {\r\n      case db.relationType.AGGREGATION:\r\n        return \"aggregation\";\r\n      case db.relationType.EXTENSION:\r\n        return \"extension\";\r\n      case db.relationType.COMPOSITION:\r\n        return \"composition\";\r\n      case db.relationType.DEPENDENCY:\r\n        return \"dependency\";\r\n    }\r\n  };\r\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\r\n  const lineData = path.points;\r\n  const lineFunction = line().x(function(d) {\r\n    return d.x;\r\n  }).y(function(d) {\r\n    return d.y;\r\n  }).curve(curveBasis);\r\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\r\n  let url = \"\";\r\n  if (getConfig().state.arrowMarkerAbsolute) {\r\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\r\n    url = url.replace(/\\(/g, \"\\\\(\");\r\n    url = url.replace(/\\)/g, \"\\\\)\");\r\n  }\r\n  svgPath.attr(\r\n    \"marker-end\",\r\n    \"url(\" + url + \"#\" + getRelationType(db.relationType.DEPENDENCY) + \"End)\"\r\n  );\r\n  if (relation.title !== void 0) {\r\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\r\n    const { x, y } = utils.calcLabelPosition(path.points);\r\n    const rows = common.getRows(relation.title);\r\n    let titleHeight = 0;\r\n    const titleRows = [];\r\n    let maxWidth = 0;\r\n    let minX = 0;\r\n    for (let i = 0; i <= rows.length; i++) {\r\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\r\n      const boundstmp = title.node().getBBox();\r\n      maxWidth = Math.max(maxWidth, boundstmp.width);\r\n      minX = Math.min(minX, boundstmp.x);\r\n      log.info(boundstmp.x, x, y + titleHeight);\r\n      if (titleHeight === 0) {\r\n        const titleBox = title.node().getBBox();\r\n        titleHeight = titleBox.height;\r\n        log.info(\"Title height\", titleHeight, y);\r\n      }\r\n      titleRows.push(title);\r\n    }\r\n    let boxHeight = titleHeight * rows.length;\r\n    if (rows.length > 1) {\r\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\r\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\r\n      boxHeight = titleHeight * rows.length;\r\n    }\r\n    const bounds = label.node().getBBox();\r\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\r\n    log.info(bounds);\r\n  }\r\n  edgeCount++;\r\n};\r\nlet conf;\r\nconst transformationLog = {};\r\nconst setConf = function() {\r\n};\r\nconst insertMarkers = function(elem) {\r\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\r\n};\r\nconst draw = function(text, id, _version, diagObj) {\r\n  conf = getConfig().state;\r\n  const securityLevel = getConfig().securityLevel;\r\n  let sandboxElement;\r\n  if (securityLevel === \"sandbox\") {\r\n    sandboxElement = select(\"#i\" + id);\r\n  }\r\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\r\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\r\n  log.debug(\"Rendering diagram \" + text);\r\n  const diagram2 = root.select(`[id='${id}']`);\r\n  insertMarkers(diagram2);\r\n  const graph = new graphlib.Graph({\r\n    multigraph: true,\r\n    compound: true,\r\n    // acyclicer: 'greedy',\r\n    rankdir: \"RL\"\r\n    // ranksep: '20'\r\n  });\r\n  graph.setDefaultEdgeLabel(function() {\r\n    return {};\r\n  });\r\n  const rootDoc = diagObj.db.getRootDoc();\r\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\r\n  const padding = conf.padding;\r\n  const bounds = diagram2.node().getBBox();\r\n  const width = bounds.width + padding * 2;\r\n  const height = bounds.height + padding * 2;\r\n  const svgWidth = width * 1.75;\r\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\r\n  diagram2.attr(\r\n    \"viewBox\",\r\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\r\n  );\r\n};\r\nconst getLabelWidth = (text) => {\r\n  return text ? text.length * conf.fontSizeFactor : 1;\r\n};\r\nconst renderDoc = (doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\r\n  const graph = new graphlib.Graph({\r\n    compound: true,\r\n    multigraph: true\r\n  });\r\n  let i;\r\n  let edgeFreeDoc = true;\r\n  for (i = 0; i < doc.length; i++) {\r\n    if (doc[i].stmt === \"relation\") {\r\n      edgeFreeDoc = false;\r\n      break;\r\n    }\r\n  }\r\n  if (parentId) {\r\n    graph.setGraph({\r\n      rankdir: \"LR\",\r\n      multigraph: true,\r\n      compound: true,\r\n      // acyclicer: 'greedy',\r\n      ranker: \"tight-tree\",\r\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\r\n      nodeSep: edgeFreeDoc ? 1 : 50,\r\n      isMultiGraph: true\r\n      // ranksep: 5,\r\n      // nodesep: 1\r\n    });\r\n  } else {\r\n    graph.setGraph({\r\n      rankdir: \"TB\",\r\n      multigraph: true,\r\n      compound: true,\r\n      // isCompound: true,\r\n      // acyclicer: 'greedy',\r\n      // ranker: 'longest-path'\r\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\r\n      nodeSep: edgeFreeDoc ? 1 : 50,\r\n      ranker: \"tight-tree\",\r\n      // ranker: 'network-simplex'\r\n      isMultiGraph: true\r\n    });\r\n  }\r\n  graph.setDefaultEdgeLabel(function() {\r\n    return {};\r\n  });\r\n  diagObj.db.extract(doc);\r\n  const states = diagObj.db.getStates();\r\n  const relations = diagObj.db.getRelations();\r\n  const keys2 = Object.keys(states);\r\n  for (const key of keys2) {\r\n    const stateDef = states[key];\r\n    if (parentId) {\r\n      stateDef.parentId = parentId;\r\n    }\r\n    let node;\r\n    if (stateDef.doc) {\r\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\r\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\r\n      {\r\n        sub = addTitleAndBox(sub, stateDef, altBkg);\r\n        let boxBounds = sub.node().getBBox();\r\n        node.width = boxBounds.width;\r\n        node.height = boxBounds.height + conf.padding / 2;\r\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\r\n      }\r\n    } else {\r\n      node = drawState(diagram2, stateDef);\r\n    }\r\n    if (stateDef.note) {\r\n      const noteDef = {\r\n        descriptions: [],\r\n        id: stateDef.id + \"-note\",\r\n        note: stateDef.note,\r\n        type: \"note\"\r\n      };\r\n      const note = drawState(diagram2, noteDef);\r\n      if (stateDef.note.position === \"left of\") {\r\n        graph.setNode(node.id + \"-note\", note);\r\n        graph.setNode(node.id, node);\r\n      } else {\r\n        graph.setNode(node.id, node);\r\n        graph.setNode(node.id + \"-note\", note);\r\n      }\r\n      graph.setParent(node.id, node.id + \"-group\");\r\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\r\n    } else {\r\n      graph.setNode(node.id, node);\r\n    }\r\n  }\r\n  log.debug(\"Count=\", graph.nodeCount(), graph);\r\n  let cnt = 0;\r\n  relations.forEach(function(relation) {\r\n    cnt++;\r\n    log.debug(\"Setting edge\", relation);\r\n    graph.setEdge(\r\n      relation.id1,\r\n      relation.id2,\r\n      {\r\n        relation,\r\n        width: getLabelWidth(relation.title),\r\n        height: conf.labelHeight * common.getRows(relation.title).length,\r\n        labelpos: \"c\"\r\n      },\r\n      \"id\" + cnt\r\n    );\r\n  });\r\n  layout(graph);\r\n  log.debug(\"Graph after layout\", graph.nodes());\r\n  const svgElem = diagram2.node();\r\n  graph.nodes().forEach(function(v) {\r\n    if (v !== void 0 && graph.node(v) !== void 0) {\r\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\r\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\r\n        \"transform\",\r\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\r\n      );\r\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\r\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\r\n      dividers.forEach((divider) => {\r\n        const parent = divider.parentElement;\r\n        let pWidth = 0;\r\n        let pShift = 0;\r\n        if (parent) {\r\n          if (parent.parentElement) {\r\n            pWidth = parent.parentElement.getBBox().width;\r\n          }\r\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\r\n          if (Number.isNaN(pShift)) {\r\n            pShift = 0;\r\n          }\r\n        }\r\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\r\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\r\n      });\r\n    } else {\r\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\r\n    }\r\n  });\r\n  let stateBox = svgElem.getBBox();\r\n  graph.edges().forEach(function(e) {\r\n    if (e !== void 0 && graph.edge(e) !== void 0) {\r\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\r\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\r\n    }\r\n  });\r\n  stateBox = svgElem.getBBox();\r\n  const stateInfo = {\r\n    id: parentId ? parentId : \"root\",\r\n    label: parentId ? parentId : \"root\",\r\n    width: 0,\r\n    height: 0\r\n  };\r\n  stateInfo.width = stateBox.width + 2 * conf.padding;\r\n  stateInfo.height = stateBox.height + 2 * conf.padding;\r\n  log.debug(\"Doc rendered\", stateInfo, graph);\r\n  return stateInfo;\r\n};\r\nconst renderer = {\r\n  setConf,\r\n  draw\r\n};\r\nconst diagram = {\r\n  parser,\r\n  db,\r\n  renderer,\r\n  styles,\r\n  init: (cnf) => {\r\n    if (!cnf.state) {\r\n      cnf.state = {};\r\n    }\r\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\r\n    db.clear();\r\n  }\r\n};\r\nexport {\r\n  diagram\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
